Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CALL
    CORCHDER
    CORCHIZQ
    DOSPUNTOS
    LLAVDER
    LLAVIZQ
    NIGUALQUE
    PRECISION
    REGEX
    WITH
    WITHOUT
    ZONE

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instruccion
Rule 3     instruccion -> createDB_instr
Rule 4     instruccion -> replaceDB_instr
Rule 5     instruccion -> alterDB_instr
Rule 6     instruccion -> dropDB_instr
Rule 7     instruccion -> create_table
Rule 8     instruccion -> showDB_instr
Rule 9     instruccion -> insert_instr
Rule 10    instruccion -> update_instr
Rule 11    instruccion -> alter_instr PTCOMA
Rule 12    instruccion -> create_enum
Rule 13    instruccion -> drop_table
Rule 14    instruccion -> delete_instr
Rule 15    instruccion -> truncate_instr
Rule 16    instruccion -> select_instr
Rule 17    instruccion -> use_instr
Rule 18    instruccion -> indexinstr
Rule 19    instruccion -> alterindex
Rule 20    instruccion -> dropindex
Rule 21    instruccion -> plsql_instr
Rule 22    instruccion -> llamadafunciones
Rule 23    instruccion -> llamadaprocedimiento
Rule 24    createDB_instr -> CREATE DATABASE existencia
Rule 25    createDB_instr -> CREATE DATABASE ID state_owner
Rule 26    replaceDB_instr -> REPLACE DATABASE existencia
Rule 27    replaceDB_instr -> REPLACE DATABASE ID state_owner
Rule 28    existencia -> IF NOT EXISTS ID state_owner
Rule 29    state_owner -> OWNER IGUAL ID state_mode
Rule 30    state_owner -> OWNER IGUAL CADENASIMPLE state_mode
Rule 31    state_owner -> OWNER ID state_mode
Rule 32    state_owner -> OWNER CADENASIMPLE state_mode
Rule 33    state_owner -> state_mode
Rule 34    state_mode -> MODE IGUAL ENTERO PTCOMA
Rule 35    state_mode -> MODE ENTERO PTCOMA
Rule 36    state_mode -> PTCOMA
Rule 37    alterDB_instr -> ALTER DATABASE ID renameto PTCOMA
Rule 38    renameto -> RENAME TO ID
Rule 39    alterDB_instr -> ALTER DATABASE ID OWNER TO owner_users PTCOMA
Rule 40    owner_users -> ID
Rule 41    owner_users -> CURRENT_USER
Rule 42    owner_users -> SESSION_USER
Rule 43    dropDB_instr -> DROP DATABASE ID PTCOMA
Rule 44    dropDB_instr -> DROP DATABASE IF EXISTS ID PTCOMA
Rule 45    showDB_instr -> SHOW DATABASES PTCOMA
Rule 46    showDB_instr -> SHOW DATABASES LIKE CADENASIMPLE PTCOMA
Rule 47    use_instr -> USE ID PTCOMA
Rule 48    insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA
Rule 49    insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA
Rule 50    parametros -> parametros COMA parametroinsert
Rule 51    parametros -> parametroinsert
Rule 52    parametroinsert -> DEFAULT
Rule 53    parametroinsert -> NOW PARIZQ PARDER
Rule 54    parametroinsert -> MD5 PARIZQ cualquiercadena PARDER
Rule 55    parametroinsert -> expresion
Rule 56    columnas -> columnas COMA ID
Rule 57    columnas -> ID
Rule 58    update_instr -> UPDATE ID SET asignaciones PTCOMA
Rule 59    update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA
Rule 60    asignaciones -> asignaciones COMA asignacion
Rule 61    asignaciones -> asignacion
Rule 62    asignacion -> ID IGUAL expresion
Rule 63    delete_instr -> DELETE FROM ID PTCOMA
Rule 64    delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA
Rule 65    truncate_instr -> TRUNCATE listtablas PTCOMA
Rule 66    truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA
Rule 67    truncate_instr -> TRUNCATE TABLE listtablas PTCOMA
Rule 68    truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA
Rule 69    listtablas -> listtablas COMA ID
Rule 70    listtablas -> ID
Rule 71    select_instr -> select_instr1 second_query PTCOMA
Rule 72    second_query -> UNION ALL select_instr1
Rule 73    second_query -> INTERSECT ALL select_instr1
Rule 74    second_query -> EXCEPT ALL select_instr1
Rule 75    second_query -> UNION select_instr1
Rule 76    second_query -> INTERSECT select_instr1
Rule 77    second_query -> EXCEPT select_instr1
Rule 78    second_query -> empty
Rule 79    select_instr1 -> SELECT termdistinct selectlist selectfrom
Rule 80    selectfrom -> FROM listatablasselect whereselect groupby orderby
Rule 81    selectfrom -> empty
Rule 82    termdistinct -> DISTINCT
Rule 83    termdistinct -> empty
Rule 84    selectlist -> ASTERISCO
Rule 85    selectlist -> listaselect
Rule 86    case_state -> list_case
Rule 87    list_case -> list_case s_case_state
Rule 88    list_case -> s_case_state case_else
Rule 89    list_case -> s_case_state
Rule 90    list_case -> list_case case_else
Rule 91    s_case_state -> WHEN condiciones THEN valores
Rule 92    case_else -> ELSE valores
Rule 93    listaselect -> listaselect COMA valselect
Rule 94    listaselect -> valselect
Rule 95    valselect -> ID alias
Rule 96    valselect -> ID PUNTO ASTERISCO
Rule 97    valselect -> ID PUNTO ID alias
Rule 98    valselect -> funcion_matematica_ws alias
Rule 99    valselect -> funcion_matematica_s alias
Rule 100   valselect -> funcion_trigonometrica alias
Rule 101   valselect -> PARIZQ select_instr1 PARDER alias
Rule 102   valselect -> agregacion PARIZQ cualquieridentificador PARDER alias
Rule 103   valselect -> COUNT PARIZQ ASTERISCO PARDER alias
Rule 104   valselect -> COUNT PARIZQ cualquieridentificador PARDER alias
Rule 105   valselect -> func_bin_strings_1 alias
Rule 106   valselect -> func_bin_strings_2 alias
Rule 107   valselect -> func_bin_strings_4 alias
Rule 108   valselect -> nowinstr
Rule 109   valselect -> extract_instr alias
Rule 110   valselect -> datepart_instr alias
Rule 111   valselect -> current alias
Rule 112   valselect -> timestampnow alias
Rule 113   agregacion -> SUM
Rule 114   agregacion -> AVG
Rule 115   agregacion -> MAX
Rule 116   agregacion -> MIN
Rule 117   listatablasselect -> listatablasselect COMA tablaselect
Rule 118   listatablasselect -> tablaselect
Rule 119   tablaselect -> ID alias
Rule 120   tablaselect -> PARIZQ select_instr1 PARDER alias
Rule 121   alias -> ID
Rule 122   alias -> CADENASIMPLE
Rule 123   alias -> CADENADOBLE
Rule 124   alias -> AS ID
Rule 125   alias -> AS CADENASIMPLE
Rule 126   alias -> AS CADENADOBLE
Rule 127   alias -> empty
Rule 128   whereselect -> WHERE condicioneswhere
Rule 129   whereselect -> empty
Rule 130   condicioneswhere -> condicioneswhere OR condicionwhere
Rule 131   condicioneswhere -> condicioneswhere AND condicionwhere
Rule 132   condicioneswhere -> condicionwhere
Rule 133   condicioneswhere -> NOT PARIZQ condicioneswhere PARDER
Rule 134   condicionwhere -> whereexists
Rule 135   condicionwhere -> notwhereexists
Rule 136   condicionwhere -> wherenotin
Rule 137   condicionwhere -> wherein
Rule 138   condicionwhere -> wherenotlike
Rule 139   condicionwhere -> wherelike
Rule 140   condicionwhere -> wheresubstring
Rule 141   condicionwhere -> between_state
Rule 142   condicionwhere -> not_between_state
Rule 143   condicionwhere -> predicates_state
Rule 144   condicionwhere -> is_distinct_state
Rule 145   condicionwhere -> condicion
Rule 146   whereexists -> EXISTS PARIZQ select_instr1 PARDER
Rule 147   notwhereexists -> NOT EXISTS PARIZQ select_instr1 PARDER
Rule 148   wherein -> cualquiernumero IN PARIZQ select_instr1 PARDER
Rule 149   wherein -> cadenastodas IN PARIZQ select_instr1 PARDER
Rule 150   wherenotin -> cualquiernumero NOT IN PARIZQ select_instr1 PARDER
Rule 151   wherenotin -> cadenastodas NOT IN PARIZQ select_instr1 PARDER
Rule 152   wherenotlike -> cadenastodas NOT LIKE CADENALIKE
Rule 153   wherelike -> cadenastodas LIKE CADENALIKE
Rule 154   wheresubstring -> SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE
Rule 155   cadenastodas -> cualquiercadena
Rule 156   cadenastodas -> cualquieridentificador
Rule 157   groupby -> GROUP BY listagroupby
Rule 158   groupby -> GROUP BY listagroupby HAVING condicioneshaving
Rule 159   groupby -> empty
Rule 160   listagroupby -> listagroupby COMA valgroupby
Rule 161   listagroupby -> valgroupby
Rule 162   valgroupby -> cualquieridentificador
Rule 163   valgroupby -> cualquiernumero
Rule 164   condicioneshaving -> condicioneshaving OR condicionhaving
Rule 165   condicioneshaving -> condicioneshaving AND condicionhaving
Rule 166   condicioneshaving -> condicionhaving
Rule 167   condicionhaving -> expresionhaving MENQUE expresionhaving
Rule 168   condicionhaving -> expresionhaving MAYQUE expresionhaving
Rule 169   condicionhaving -> expresionhaving MENIGUAL expresionhaving
Rule 170   condicionhaving -> expresionhaving MAYIGUAL expresionhaving
Rule 171   condicionhaving -> expresionhaving IGUAL expresionhaving
Rule 172   condicionhaving -> expresionhaving DIFERENTE expresionhaving
Rule 173   expresionhaving -> cualquiercadena
Rule 174   expresionhaving -> expresionaritmetica
Rule 175   expresionhaving -> condicionhavingagregacion
Rule 176   expresionhaving -> funcion_matematica_ws
Rule 177   condicionhavingagregacion -> agregacion PARIZQ cualquieridentificador PARDER
Rule 178   orderby -> ORDER BY listaorderby
Rule 179   orderby -> ORDER BY listaorderby instrlimit
Rule 180   orderby -> empty
Rule 181   listaorderby -> listaorderby COMA valororderby
Rule 182   listaorderby -> valororderby
Rule 183   valororderby -> cualquieridentificador ascdesc anular
Rule 184   valororderby -> cualquiernumero ascdesc anular
Rule 185   ascdesc -> DESC
Rule 186   ascdesc -> ASC
Rule 187   ascdesc -> empty
Rule 188   anular -> NULLS LAST
Rule 189   anular -> NULLS FIRST
Rule 190   anular -> empty
Rule 191   instrlimit -> LIMIT ENTERO instroffset
Rule 192   instrlimit -> LIMIT ALL instroffset
Rule 193   instroffset -> OFFSET ENTERO
Rule 194   instroffset -> empty
Rule 195   condiciones -> condiciones AND condicion
Rule 196   condiciones -> condiciones OR condicion
Rule 197   condiciones -> NOT PARIZQ condiciones PARDER
Rule 198   condiciones -> NOT condiciones
Rule 199   condiciones -> condicion
Rule 200   condicion -> expresion MENQUE expresion
Rule 201   condicion -> expresion MAYQUE expresion
Rule 202   condicion -> expresion MENIGUAL expresion
Rule 203   condicion -> expresion MAYIGUAL expresion
Rule 204   condicion -> expresion IGUAL expresion
Rule 205   condicion -> expresion DIFERENTE expresion
Rule 206   condicion -> expresion
Rule 207   expresion -> cualquiercadena
Rule 208   expresion -> funcion_matematica_ws
Rule 209   expresion -> expresionaritmetica
Rule 210   expresion -> func_bin_strings_1
Rule 211   expresion -> func_bin_strings_2
Rule 212   expresion -> vallogico
Rule 213   expresion -> PARIZQ select_instr1 PARDER
Rule 214   expresionaritmetica -> expresionaritmetica MAS expresionaritmetica
Rule 215   expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica
Rule 216   expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica
Rule 217   expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica
Rule 218   expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica
Rule 219   expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica
Rule 220   expresionaritmetica -> MENOS expresionaritmetica
Rule 221   expresionaritmetica -> cualquiernumero
Rule 222   expresionaritmetica -> cualquieridentificador
Rule 223   expresionaritmetica -> PARIZQ expresionaritmetica PARDER
Rule 224   cualquiernumero -> ENTERO
Rule 225   cualquiernumero -> DECIMAL
Rule 226   cualquiercadena -> CADENASIMPLE
Rule 227   cualquiercadena -> CADENADOBLE
Rule 228   cualquieridentificador -> ID
Rule 229   cualquieridentificador -> ID PUNTO ID
Rule 230   vallogico -> FALSE
Rule 231   vallogico -> TRUE
Rule 232   funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER
Rule 233   funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER
Rule 234   funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER
Rule 235   funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER
Rule 236   funcion_matematica_s -> DEGREES PARIZQ expresionaritmetica PARDER
Rule 237   funcion_matematica_s -> DIV PARIZQ expresionaritmetica COMA expresionaritmetica PARDER
Rule 238   funcion_matematica_s -> EXP PARIZQ expresionaritmetica PARDER
Rule 239   funcion_matematica_s -> FACTORIAL PARIZQ expresionaritmetica PARDER
Rule 240   funcion_matematica_s -> FLOOR PARIZQ expresionaritmetica PARDER
Rule 241   funcion_matematica_s -> GCD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER
Rule 242   funcion_matematica_s -> LN PARIZQ expresionaritmetica PARDER
Rule 243   funcion_matematica_s -> LOG PARIZQ expresionaritmetica PARDER
Rule 244   funcion_matematica_s -> MOD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER
Rule 245   funcion_matematica_s -> PI PARIZQ PARDER
Rule 246   funcion_matematica_s -> POWER PARIZQ expresionaritmetica COMA expresionaritmetica PARDER
Rule 247   funcion_matematica_s -> RADIANS PARIZQ expresionaritmetica PARDER
Rule 248   funcion_matematica_s -> ROUND PARIZQ expresionaritmetica PARDER
Rule 249   funcion_matematica_s -> SIGN PARIZQ expresionaritmetica PARDER
Rule 250   funcion_matematica_s -> SQRT PARIZQ expresionaritmetica PARDER
Rule 251   funcion_matematica_s -> WBUCKET PARIZQ explist PARDER
Rule 252   funcion_matematica_s -> TRUNC PARIZQ expresionaritmetica PARDER
Rule 253   funcion_matematica_s -> RANDOM PARIZQ PARDER
Rule 254   explist -> expresionaritmetica COMA expresionaritmetica COMA expresionaritmetica COMA expresionaritmetica
Rule 255   funcion_trigonometrica -> ACOS PARIZQ expresionaritmetica PARDER
Rule 256   funcion_trigonometrica -> ACOSD PARIZQ expresionaritmetica PARDER
Rule 257   funcion_trigonometrica -> ASIN PARIZQ expresionaritmetica PARDER
Rule 258   funcion_trigonometrica -> ASIND PARIZQ expresionaritmetica PARDER
Rule 259   funcion_trigonometrica -> ATAN PARIZQ expresionaritmetica PARDER
Rule 260   funcion_trigonometrica -> ATAND PARIZQ expresionaritmetica PARDER
Rule 261   funcion_trigonometrica -> ATAN2 PARIZQ expresionaritmetica PARDER
Rule 262   funcion_trigonometrica -> ATAN2D PARIZQ expresionaritmetica PARDER
Rule 263   funcion_trigonometrica -> COS PARIZQ expresionaritmetica PARDER
Rule 264   funcion_trigonometrica -> COSD PARIZQ expresionaritmetica PARDER
Rule 265   funcion_trigonometrica -> COT PARIZQ expresionaritmetica PARDER
Rule 266   funcion_trigonometrica -> COTD PARIZQ expresionaritmetica PARDER
Rule 267   funcion_trigonometrica -> SIN PARIZQ expresionaritmetica PARDER
Rule 268   funcion_trigonometrica -> SIND PARIZQ expresionaritmetica PARDER
Rule 269   funcion_trigonometrica -> TAN PARIZQ expresionaritmetica PARDER
Rule 270   funcion_trigonometrica -> TAND PARIZQ expresionaritmetica PARDER
Rule 271   funcion_trigonometrica -> SINH PARIZQ expresionaritmetica PARDER
Rule 272   funcion_trigonometrica -> COSH PARIZQ expresionaritmetica PARDER
Rule 273   funcion_trigonometrica -> TANH PARIZQ expresionaritmetica PARDER
Rule 274   funcion_trigonometrica -> ASINH PARIZQ expresionaritmetica PARDER
Rule 275   funcion_trigonometrica -> ACOSH PARIZQ expresionaritmetica PARDER
Rule 276   funcion_trigonometrica -> ATANH PARIZQ expresionaritmetica PARDER
Rule 277   func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER
Rule 278   func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
Rule 279   func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
Rule 280   func_bin_strings_2 -> TRIM PARIZQ cadena PARDER
Rule 281   func_bin_strings_3 -> MD5 PARIZQ cadena PARDER
Rule 282   func_bin_strings_4 -> GET_BYTE PARIZQ cadena COMA ENTERO PARDER
Rule 283   func_bin_strings_4 -> SET_BYTE PARIZQ cadena COMA ENTERO COMA ENTERO PARDER
Rule 284   func_bin_strings_4 -> ENCODE PARIZQ cadena COMA cadena PARDER
Rule 285   func_bin_strings_4 -> DECODE PARIZQ cadena COMA cadena PARDER
Rule 286   func_bin_strings_4 -> SHA256 PARIZQ cadena PARDER
Rule 287   func_bin_strings_4 -> CONVERT PARIZQ alias PARDER
Rule 288   op_bin_strings -> op_bin_strings CONCAT op_bin_strings
Rule 289   op_bin_strings -> op_bin_strings BITWAND op_bin_strings
Rule 290   op_bin_strings -> op_bin_strings BITWOR op_bin_strings
Rule 291   op_bin_strings -> op_bin_strings BITWXOR op_bin_strings
Rule 292   op_bin_strings -> op_bin_strings BITWNOT op_bin_strings
Rule 293   op_bin_strings -> op_bin_strings BITWSHIFTL op_bin_strings
Rule 294   op_bin_strings -> op_bin_strings BITWSHIFTR op_bin_strings
Rule 295   op_bin_strings -> cadena
Rule 296   cadena -> cualquiercadena
Rule 297   cadena -> cualquieridentificador
Rule 298   alter_instr -> ALTER TABLE ID ADD COLUMN list_columns
Rule 299   alter_instr -> ALTER TABLE ID ADD CHECK PARIZQ condicion PARDER
Rule 300   alter_instr -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER
Rule 301   alter_instr -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID
Rule 302   alter_instr -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL
Rule 303   alter_instr -> ALTER TABLE ID DROP CONSTRAINT ID
Rule 304   alter_instr -> ALTER TABLE ID RENAME COLUMN ID TO ID
Rule 305   alter_instr -> ALTER TABLE ID DROP COLUMN listtablas
Rule 306   alter_instr -> ALTER TABLE ID list_alter_column
Rule 307   list_alter_column -> list_alter_column COMA ALTER COLUMN ID TYPE type_column
Rule 308   list_alter_column -> ALTER COLUMN ID TYPE type_column
Rule 309   list_columns -> list_columns COMA ID type_column
Rule 310   list_columns -> ID type_column
Rule 311   type_column -> SMALLINT
Rule 312   type_column -> INTEGER
Rule 313   type_column -> BIGINT
Rule 314   type_column -> RDECIMAL
Rule 315   type_column -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER
Rule 316   type_column -> NUMERIC
Rule 317   type_column -> REAL
Rule 318   type_column -> FLOAT
Rule 319   type_column -> INT
Rule 320   type_column -> DOUBLE
Rule 321   type_column -> MONEY
Rule 322   type_column -> VARCHAR PARIZQ ENTERO PARDER
Rule 323   type_column -> CHARACTER VARYING PARIZQ ENTERO PARDER
Rule 324   type_column -> CHARACTER PARIZQ ENTERO PARDER
Rule 325   type_column -> CHAR PARIZQ ENTERO PARDER
Rule 326   type_column -> TEXT
Rule 327   type_column -> TIMESTAMP
Rule 328   type_column -> TIMESTAMP PARIZQ ENTERO PARDER
Rule 329   type_column -> DATE
Rule 330   type_column -> TIME
Rule 331   type_column -> BOOLEAN
Rule 332   type_column -> ID
Rule 333   type_column -> TIME PARIZQ ENTERO PARDER
Rule 334   type_column -> INTERVAL field
Rule 335   field -> YEAR
Rule 336   field -> MONTH
Rule 337   field -> DAY
Rule 338   field -> HOUR
Rule 339   field -> MINUTE
Rule 340   field -> SECOND
Rule 341   create_table -> CREATE TABLE ID PARIZQ list_columns_x PARDER end_create_table
Rule 342   end_create_table -> PTCOMA
Rule 343   end_create_table -> INHERITS PARIZQ ID PARDER PTCOMA
Rule 344   list_columns_x -> list_columns_x COMA key_column
Rule 345   list_columns_x -> key_column
Rule 346   key_column -> PRIMARY KEY PARIZQ listtablas PARDER
Rule 347   key_column -> ID type_column attributes
Rule 348   attributes -> default_value null_field constraint_field null_field primary_key
Rule 349   default_value -> DEFAULT x_value
Rule 350   default_value -> empty
Rule 351   x_value -> cualquiercadena
Rule 352   x_value -> cualquiernumero
Rule 353   primary_key -> PRIMARY KEY
Rule 354   primary_key -> empty
Rule 355   null_field -> NULL
Rule 356   null_field -> NOT NULL
Rule 357   null_field -> empty
Rule 358   constraint_field -> UNIQUE
Rule 359   constraint_field -> CONSTRAINT ID check_unique
Rule 360   constraint_field -> CHECK PARIZQ condiciones PARDER
Rule 361   constraint_field -> empty
Rule 362   check_unique -> UNIQUE
Rule 363   check_unique -> CHECK PARIZQ condiciones PARDER
Rule 364   check_unique -> empty
Rule 365   create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA
Rule 366   list_string -> list_string COMA cualquiercadena
Rule 367   list_string -> cualquiercadena
Rule 368   drop_table -> DROP TABLE ID PTCOMA
Rule 369   between_state -> cualquiernumero BETWEEN valores AND valores
Rule 370   between_state -> cadenastodas BETWEEN valores AND valores
Rule 371   not_between_state -> cualquiernumero NOT BETWEEN valores AND valores
Rule 372   not_between_state -> cadenastodas NOT BETWEEN valores AND valores
Rule 373   predicates_state -> valores IS NULL
Rule 374   predicates_state -> valores IS NOT NULL
Rule 375   predicates_state -> valores ISNULL
Rule 376   predicates_state -> valores NOTNULL
Rule 377   is_distinct_state -> valores IS DISTINCT FROM valores
Rule 378   is_distinct_state -> valores IS NOT DISTINCT FROM valores
Rule 379   valores -> cualquiernumero
Rule 380   valores -> cualquiercadena
Rule 381   valores -> cualquieridentificador
Rule 382   extract_instr -> EXTRACT PARIZQ valdate FROM TIMESTAMP CADENASIMPLE PARDER
Rule 383   valdate -> YEAR
Rule 384   valdate -> HOUR
Rule 385   valdate -> MINUTE
Rule 386   valdate -> SECOND
Rule 387   valdate -> MONTH
Rule 388   valdate -> DAY
Rule 389   datepart_instr -> DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER
Rule 390   current -> CURRENT_DATE
Rule 391   current -> CURRENT_TIME
Rule 392   timestampnow -> TIMESTAMP CADENASIMPLE
Rule 393   nowinstr -> NOW PARIZQ PARDER
Rule 394   indexinstr -> CREATE INDEX ID ON ID PARIZQ ID PARDER PTCOMA
Rule 395   indexinstr -> CREATE INDEX ID ON ID USING HASH PARIZQ ID PARDER PTCOMA
Rule 396   indexinstr -> CREATE INDEX ID ON ID PARIZQ ID COMA ID PARDER PTCOMA
Rule 397   indexinstr -> CREATE INDEX ID ON ID PARIZQ valororderby PARDER PTCOMA
Rule 398   indexinstr -> CREATE UNIQUE INDEX ID ON ID PARIZQ columnas PARDER PTCOMA
Rule 399   indexinstr -> CREATE INDEX ID ON ID PARIZQ LOWER PARIZQ ID PARDER PARDER PTCOMA
Rule 400   indexinstr -> CREATE INDEX ID ON ID PARIZQ ID PARDER whereselect PTCOMA
Rule 401   indexinstr -> CREATE INDEX ID ON ID PARIZQ ID ID PARDER PTCOMA
Rule 402   alterindex -> ALTER INDEX IF EXISTS ID ID eoi PTCOMA
Rule 403   alterindex -> ALTER INDEX ID ID eoi PTCOMA
Rule 404   eoi -> ENTERO
Rule 405   eoi -> ID
Rule 406   dropindex -> DROP INDEX ID PTCOMA
Rule 407   llamadaprocedimiento -> EXECUTE ID PARIZQ PARDER PTCOMA
Rule 408   llamadaprocedimiento -> EXECUTE ID PARIZQ listaexpresiones PARDER PTCOMA
Rule 409   llamadafunciones -> SELECT ID PARIZQ PARDER PTCOMA
Rule 410   llamadafunciones -> SELECT ID PARIZQ listaexpresiones PARDER PTCOMA
Rule 411   plsql_instr -> CREATE procedfunct ID PARIZQ parametrosfunc PARDER tiporetorno cuerpofuncion
Rule 412   procedfunct -> PROCEDURE
Rule 413   procedfunct -> FUNCTION
Rule 414   tiporetorno -> RETURNS type_column1 AS
Rule 415   tiporetorno -> LANGUAGE PLPGSQL AS
Rule 416   tiporetorno -> AS
Rule 417   tiporetorno -> empty
Rule 418   parametrosfunc -> listaparametrosfunc
Rule 419   parametrosfunc -> empty
Rule 420   listaparametrosfunc -> listaparametrosfunc COMA parfunc
Rule 421   listaparametrosfunc -> parfunc
Rule 422   parfunc -> OUT ID type_column1
Rule 423   parfunc -> INOUT ID type_column1
Rule 424   parfunc -> ID type_column1
Rule 425   parfunc -> type_column1
Rule 426   cuerpofuncion -> CADDOLAR declaraciones cuerpo CADDOLAR LANGUAGE PLPGSQL PTCOMA
Rule 427   cuerpofuncion -> CADDOLAR declaraciones cuerpo CADDOLAR PTCOMA
Rule 428   declaraciones -> DECLARE listadeclaraciones
Rule 429   declaraciones -> empty
Rule 430   listadeclaraciones -> listadeclaraciones declaracion
Rule 431   listadeclaraciones -> declaracion
Rule 432   declaracion -> ID constantintr type_column1 notnullinst asignavalor PTCOMA
Rule 433   declaracion -> ID ALIAS1 FOR DOLAR ENTERO PTCOMA
Rule 434   declaracion -> ID ALIAS1 FOR ID PTCOMA
Rule 435   declaracion -> ID cualquieridentificador MODULO TYPE PTCOMA
Rule 436   declaracion -> ID cualquieridentificador MODULO ROWTYPE PTCOMA
Rule 437   constantintr -> CONSTANT
Rule 438   constantintr -> empty
Rule 439   notnullinst -> NOT NULL
Rule 440   notnullinst -> empty
Rule 441   asignavalor -> DEFAULT expresion
Rule 442   asignavalor -> PTIGUAL expresion
Rule 443   asignavalor -> IGUAL expresion
Rule 444   asignavalor -> empty
Rule 445   cuerpo -> BEGIN instrlistabloque END PTCOMA
Rule 446   instrlistabloque -> listabloque
Rule 447   instrlistabloque -> empty
Rule 448   listabloque -> listabloque bloque
Rule 449   listabloque -> bloque
Rule 450   bloque -> raisenotice
Rule 451   bloque -> asignacionbloque
Rule 452   bloque -> subbloque
Rule 453   bloque -> returnbloque
Rule 454   bloque -> instrexecute
Rule 455   bloque -> getdiagnostic
Rule 456   bloque -> instrnull
Rule 457   bloque -> instrif
Rule 458   bloque -> instrcase
Rule 459   bloque -> commitinstr
Rule 460   bloque -> rollbackinstr
Rule 461   bloque -> insert_instr
Rule 462   bloque -> update_instr
Rule 463   bloque -> alter_instr PTCOMA
Rule 464   bloque -> create_enum
Rule 465   bloque -> drop_table
Rule 466   bloque -> delete_instr
Rule 467   bloque -> truncate_instr
Rule 468   bloque -> select_instr
Rule 469   commitinstr -> COMMIT PTCOMA
Rule 470   rollbackinstr -> ROLLBACK PTCOMA
Rule 471   raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA
Rule 472   raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA
Rule 473   asignacionbloque -> ID IGUAL expresion PTCOMA
Rule 474   asignacionbloque -> ID PTIGUAL expresion PTCOMA
Rule 475   returnbloque -> RETURN condicion PTCOMA
Rule 476   returnbloque -> RETURN QUERY select_instr1 PTCOMA
Rule 477   returnbloque -> RETURN QUERY instrexecute PTCOMA
Rule 478   returnbloque -> RETURN PTCOMA
Rule 479   subbloque -> declaraciones cuerposub
Rule 480   cuerposub -> BEGIN listasubbloque END PTCOMA
Rule 481   cuerposub -> BEGIN empty END PTCOMA
Rule 482   listasubbloque -> listasubbloque subbloque1
Rule 483   listasubbloque -> subbloque1
Rule 484   subbloque1 -> raisenotice1
Rule 485   subbloque1 -> asignacionbloque
Rule 486   raisenotice1 -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA
Rule 487   raisenotice1 -> RAISE NOTICE CADENASIMPLE COMA OUTERBLOCK PUNTO ID PTCOMA
Rule 488   raisenotice1 -> RAISE NOTICE CADENASIMPLE PTCOMA
Rule 489   type_column1 -> SMALLINT
Rule 490   type_column1 -> INTEGER
Rule 491   type_column1 -> BIGINT
Rule 492   type_column1 -> RDECIMAL
Rule 493   type_column1 -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER
Rule 494   type_column1 -> NUMERIC
Rule 495   type_column1 -> NUMERIC PARIZQ ENTERO PARDER
Rule 496   type_column1 -> REAL
Rule 497   type_column1 -> FLOAT
Rule 498   type_column1 -> INT
Rule 499   type_column1 -> DOUBLE
Rule 500   type_column1 -> MONEY
Rule 501   type_column1 -> VARCHAR
Rule 502   type_column1 -> VARCHAR PARIZQ ENTERO PARDER
Rule 503   type_column1 -> CHARACTER VARYING PARIZQ ENTERO PARDER
Rule 504   type_column1 -> CHARACTER PARIZQ ENTERO PARDER
Rule 505   type_column1 -> CHAR
Rule 506   type_column1 -> CHAR PARIZQ ENTERO PARDER
Rule 507   type_column1 -> TEXT
Rule 508   type_column1 -> TIMESTAMP
Rule 509   type_column1 -> TIMESTAMP PARIZQ ENTERO PARDER
Rule 510   type_column1 -> DATE
Rule 511   type_column1 -> TIME
Rule 512   type_column1 -> BOOLEAN
Rule 513   type_column1 -> ID
Rule 514   type_column1 -> TIME PARIZQ ENTERO PARDER
Rule 515   type_column1 -> RECORD
Rule 516   type_column1 -> TABLE PARIZQ parametrosfunc PARDER
Rule 517   instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion
Rule 518   instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion
Rule 519   intotarget -> INTO ID
Rule 520   intotarget -> empty
Rule 521   usingexpresion -> USING listaexpresiones
Rule 522   usingexpresion -> empty
Rule 523   listaexpresiones -> listaexpresiones COMA expresion
Rule 524   listaexpresiones -> expresion
Rule 525   getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID
Rule 526   getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID
Rule 527   instrnull -> NULL PTCOMA
Rule 528   instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA
Rule 529   instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA
Rule 530   instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA
Rule 531   instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA
Rule 532   instrelseif -> instrelseif in_elseif
Rule 533   instrelseif -> in_elseif
Rule 534   in_elseif -> ELSIF condiciones THEN instrlistabloque
Rule 535   instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA
Rule 536   elsecase -> ELSE instrlistabloque
Rule 537   elsecase -> empty
Rule 538   listawhen1 -> listawhen1 when1
Rule 539   listawhen1 -> when1
Rule 540   when1 -> WHEN listaexpresiones THEN instrlistabloque
Rule 541   instrcase -> CASE listawhen2 elsecase END CASE PTCOMA
Rule 542   listawhen2 -> listawhen2 when2
Rule 543   listawhen2 -> when2
Rule 544   when2 -> WHEN ID BETWEEN ENTERO AND ENTERO THEN instrlistabloque
Rule 545   when2 -> WHEN condiciones THEN instrlistabloque
Rule 546   empty -> <empty>

Terminals, with rules where they appear

ABS                  : 232
ACOS                 : 255
ACOSD                : 256
ACOSH                : 275
ADD                  : 298 299 300 301
ALIAS1               : 433 434
ALL                  : 72 73 74 192
ALTER                : 37 39 298 299 300 301 302 302 303 304 305 306 307 308 402 403
AND                  : 131 165 195 369 370 371 372 544
AS                   : 124 125 126 365 414 415 416
ASC                  : 186
ASIN                 : 257
ASIND                : 258
ASINH                : 274
ASTERISCO            : 84 96 103 216
ATAN                 : 259
ATAN2                : 261
ATAN2D               : 262
ATAND                : 260
ATANH                : 276
AVG                  : 114
BEGIN                : 445 480 481
BETWEEN              : 369 370 371 372 544
BIGINT               : 313 491
BITWAND              : 289
BITWNOT              : 292
BITWOR               : 290
BITWSHIFTL           : 293
BITWSHIFTR           : 294
BITWXOR              : 291
BOOLEAN              : 331 512
BY                   : 157 158 178 179
CADDOLAR             : 426 426 427 427
CADENADOBLE          : 123 126 227
CADENALIKE           : 152 153
CADENASIMPLE         : 30 32 46 122 125 154 226 382 389 389 392 471 472 486 487 488
CALL                 : 
CASCADE              : 66 68
CASE                 : 535 535 541 541
CBRT                 : 233
CEIL                 : 234
CEILING              : 235
CHAR                 : 325 505 506
CHARACTER            : 323 324 503 504
CHECK                : 299 360 363
COLUMN               : 298 302 304 305 307 308
COMA                 : 50 56 60 69 93 117 154 154 160 181 237 241 244 246 254 254 254 278 278 279 279 282 283 283 284 285 307 309 315 344 366 389 396 420 471 486 487 493 523
COMMIT               : 469
CONCAT               : 288
CONSTANT             : 437
CONSTRAINT           : 300 303 359
CONVERT              : 287
CORCHDER             : 
CORCHIZQ             : 
COS                  : 263
COSD                 : 264
COSH                 : 272
COT                  : 265
COTD                 : 266
COUNT                : 103 104
CREATE               : 24 25 341 365 394 395 396 397 398 399 400 401 411
CSIMPLE              : 517 517 518 518
CURRENT_DATE         : 390
CURRENT_TIME         : 391
CURRENT_USER         : 41
DATABASE             : 24 25 26 27 37 39 43 44
DATABASES            : 45 46
DATE                 : 329 510
DATE_PART            : 389
DAY                  : 337 388
DECIMAL              : 225
DECLARE              : 428
DECODE               : 285
DEFAULT              : 52 349 441
DEGREES              : 236
DELETE               : 63 64
DESC                 : 185
DIAGNOSTICS          : 525 526
DIFERENTE            : 172 205
DISTINCT             : 82 377 378
DIV                  : 237
DIVIDIDO             : 217
DOLAR                : 433
DOSPUNTOS            : 
DOUBLE               : 320 499
DROP                 : 43 44 303 305 368 406
ELSE                 : 92 529 531 536
ELSIF                : 534
ENCODE               : 284
END                  : 445 480 481 528 529 530 531 535 541
ENTERO               : 34 35 154 154 191 193 224 282 283 283 315 315 322 323 324 325 328 333 404 433 493 493 495 502 503 504 506 509 514 544 544
ENUM                 : 365
EXCEPT               : 74 77
EXECUTE              : 407 408 517 518
EXISTS               : 28 44 146 147 402
EXP                  : 238
EXPONENTE            : 219
EXTRACT              : 382
FACTORIAL            : 239
FALSE                : 230
FIRST                : 189
FLOAT                : 318 497
FLOOR                : 240
FOR                  : 433 434
FOREIGN              : 301
FORMAT               : 518
FROM                 : 63 64 80 377 378 382
FUNCTION             : 413
GCD                  : 241
GET                  : 525 526
GET_BYTE             : 282
GROUP                : 157 158
HASH                 : 395
HAVING               : 158
HOUR                 : 338 384
ID                   : 25 27 28 29 31 37 38 39 40 43 44 47 48 49 56 57 58 59 62 63 64 69 70 95 96 97 97 119 121 124 228 229 229 298 299 300 300 300 301 301 301 302 302 303 303 304 304 304 305 306 307 308 309 310 332 341 343 347 359 365 368 394 394 394 395 395 395 396 396 396 396 397 397 398 398 399 399 399 400 400 400 401 401 401 401 402 402 403 403 405 406 407 408 409 410 411 422 423 424 432 433 434 434 435 436 471 473 474 486 487 513 519 525 525 526 526 544
IF                   : 28 44 402 528 528 529 529 530 530 531 531
IGUAL                : 29 30 34 62 154 171 204 443 473 525
IN                   : 148 149 150 151
INDEX                : 394 395 396 397 398 399 400 401 402 403 406
INHERITS             : 343
INOUT                : 423
INSERT               : 48 49
INT                  : 319 498
INTEGER              : 312 490
INTERSECT            : 73 76
INTERVAL             : 334 389
INTO                 : 48 49 519
IS                   : 373 374 377 378
ISNULL               : 375
KEY                  : 301 346 353
LANGUAGE             : 415 426
LAST                 : 188
LENGTH               : 277
LIKE                 : 46 152 153
LIMIT                : 191 192
LLAVDER              : 
LLAVIZQ              : 
LN                   : 242
LOG                  : 243
LOWER                : 399
MAS                  : 214
MAX                  : 115
MAYIGUAL             : 170 203
MAYQUE               : 168 201
MD5                  : 54 281
MENIGUAL             : 169 202
MENOS                : 215 220
MENQUE               : 167 200
MIN                  : 116
MINUTE               : 339 385
MOD                  : 244
MODE                 : 34 35
MODULO               : 218 435 436
MONEY                : 321 500
MONTH                : 336 387
NIGUALQUE            : 
NOT                  : 28 133 147 150 151 152 197 198 302 356 371 372 374 378 439
NOTICE               : 471 472 486 487 488
NOTNULL              : 376
NOW                  : 53 393
NULL                 : 302 355 356 373 374 439 527
NULLS                : 188 189
NUMERIC              : 316 494 495
OFFSET               : 193
ON                   : 394 395 396 397 398 399 400 401
OR                   : 130 164 196
ORDER                : 178 179
OUT                  : 422
OUTERBLOCK           : 487
OWNER                : 29 30 31 32 39
PARDER               : 48 49 49 53 54 101 102 103 104 120 133 146 147 148 149 150 151 154 177 197 213 223 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 299 300 301 315 322 323 324 325 328 333 341 343 346 360 363 365 382 389 393 394 395 396 397 398 399 399 400 401 407 408 409 410 411 493 495 502 503 504 506 509 514 516 518
PARIZQ               : 48 49 49 53 54 101 102 103 104 120 133 146 147 148 149 150 151 154 177 197 213 223 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 299 300 301 315 322 323 324 325 328 333 341 343 346 360 363 365 382 389 393 394 395 396 397 398 399 399 400 401 407 408 409 410 411 493 495 502 503 504 506 509 514 516 518
PI                   : 245
PLPGSQL              : 415 426
POWER                : 246
PRECISION            : 
PRIMARY              : 346 353
PROCEDURE            : 412
PTCOMA               : 11 34 35 36 37 39 43 44 45 46 47 48 49 58 59 63 64 65 66 67 68 71 342 343 365 368 394 395 396 397 398 399 400 401 402 403 406 407 408 409 410 426 427 432 433 434 435 436 445 463 469 470 471 472 473 474 475 476 477 478 480 481 486 487 488 527 528 529 530 531 535 541
PTIGUAL              : 442 474 526
PUNTO                : 96 97 229 487
QUERY                : 476 477
RADIANS              : 247
RAISE                : 471 472 486 487 488
RANDOM               : 253
RDECIMAL             : 314 315 492 493
REAL                 : 317 496
RECORD               : 515
REFERENCES           : 301
REGEX                : 
RENAME               : 38 304
REPLACE              : 26 27
RETURN               : 475 476 477 478
RETURNS              : 414
ROLLBACK             : 470
ROUND                : 248
ROWTYPE              : 436
SECOND               : 340 386
SELECT               : 79 409 410
SESSION_USER         : 42
SET                  : 58 59 302
SET_BYTE             : 283
SHA256               : 286
SHOW                 : 45 46
SIGN                 : 249
SIN                  : 267
SIND                 : 268
SINH                 : 271
SMALLINT             : 311 489
SQRT                 : 250
SUBSTR               : 279
SUBSTRING            : 154 278
SUM                  : 113
TABLE                : 67 68 298 299 300 301 302 303 304 305 306 341 368 516
TAN                  : 269
TAND                 : 270
TANH                 : 273
TEXT                 : 326 507
THEN                 : 91 528 529 530 531 534 540 544 545
TIME                 : 330 333 511 514
TIMESTAMP            : 327 328 382 392 508 509
TO                   : 38 39 304
TRIM                 : 280
TRUE                 : 231
TRUNC                : 252
TRUNCATE             : 65 66 67 68
TYPE                 : 307 308 365 435
UNION                : 72 75
UNIQUE               : 300 358 362 398
UPDATE               : 58 59
USE                  : 47
USING                : 395 521
VALUES               : 48 49
VARCHAR              : 322 501 502
VARYING              : 323 503
WBUCKET              : 251
WHEN                 : 91 540 544 545
WHERE                : 59 64 128
WITH                 : 
WITHOUT              : 
YEAR                 : 335 383
ZONE                 : 
error                : 

Nonterminals, with rules where they appear

agregacion           : 102 177
alias                : 95 97 98 99 100 101 102 103 104 105 106 107 109 110 111 112 119 120 287
alterDB_instr        : 5
alter_instr          : 11 463
alterindex           : 19
anular               : 183 184
ascdesc              : 183 184
asignacion           : 60 61
asignacionbloque     : 451 485
asignaciones         : 58 59 60
asignavalor          : 432
attributes           : 347
between_state        : 141
bloque               : 448 449
cadena               : 277 278 279 280 281 282 283 284 284 285 285 286 295
cadenastodas         : 149 151 152 153 154 370 372
case_else            : 88 90
case_state           : 
check_unique         : 359
columnas             : 49 56 398
commitinstr          : 459
condicion            : 145 195 196 199 299 475
condiciones          : 59 64 91 195 196 197 198 360 363 528 529 530 531 534 545
condicioneshaving    : 158 164 165
condicioneswhere     : 128 130 131 133
condicionhaving      : 164 165 166
condicionhavingagregacion : 175
condicionwhere       : 130 131 132
constantintr         : 432
constraint_field     : 348
createDB_instr       : 3
create_enum          : 12 464
create_table         : 7
cualquiercadena      : 54 155 173 207 296 351 366 367 380
cualquieridentificador : 102 104 156 162 177 183 222 297 381 435 436
cualquiernumero      : 148 150 163 184 221 278 278 279 279 352 369 371 379
cuerpo               : 426 427
cuerpofuncion        : 411
cuerposub            : 479
current              : 111
datepart_instr       : 110
declaracion          : 430 431
declaraciones        : 426 427 479
default_value        : 348
delete_instr         : 14 466
dropDB_instr         : 6
drop_table           : 13 465
dropindex            : 20
elsecase             : 535 541
empty                : 78 81 83 127 129 159 180 187 190 194 350 354 357 361 364 417 419 429 438 440 444 447 481 520 522 537
end_create_table     : 341
eoi                  : 402 403
existencia           : 24 26
explist              : 251
expresion            : 55 62 200 200 201 201 202 202 203 203 204 204 205 205 206 441 442 443 473 474 523 524 535
expresionaritmetica  : 174 209 214 214 215 215 216 216 217 217 218 218 219 219 220 223 232 233 234 235 236 237 237 238 239 240 241 241 242 243 244 244 246 246 247 248 249 250 252 254 254 254 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276
expresionhaving      : 167 167 168 168 169 169 170 170 171 171 172 172
extract_instr        : 109
field                : 334
func_bin_strings_1   : 105 210
func_bin_strings_2   : 106 211
func_bin_strings_3   : 
func_bin_strings_4   : 107
funcion_matematica_s : 99
funcion_matematica_ws : 98 176 208
funcion_trigonometrica : 100
getdiagnostic        : 455
groupby              : 80
in_elseif            : 532 533
indexinstr           : 18
init                 : 0
insert_instr         : 9 461
instrcase            : 458
instrelseif          : 530 531 532
instrexecute         : 454 477
instrif              : 457
instrlimit           : 179
instrlistabloque     : 445 528 529 529 530 531 531 534 536 540 544 545
instrnull            : 456
instroffset          : 191 192
instruccion          : 2
instrucciones        : 1
intotarget           : 517 518
is_distinct_state    : 144
key_column           : 344 345
list_alter_column    : 306 307
list_case            : 86 87 90
list_columns         : 298 309
list_columns_x       : 341 344
list_string          : 365 366
listabloque          : 446 448
listadeclaraciones   : 428 430
listaexpresiones     : 408 410 521 523 540
listagroupby         : 157 158 160
listaorderby         : 178 179 181
listaparametrosfunc  : 418 420
listaselect          : 85 93
listasubbloque       : 480 482
listatablasselect    : 80 117
listawhen1           : 535 538
listawhen2           : 541 542
listtablas           : 65 66 67 68 69 305 346
llamadafunciones     : 22
llamadaprocedimiento : 23
not_between_state    : 142
notnullinst          : 432
notwhereexists       : 135
nowinstr             : 108
null_field           : 348 348
op_bin_strings       : 288 288 289 289 290 290 291 291 292 292 293 293 294 294
orderby              : 80
owner_users          : 39
parametroinsert      : 50 51
parametros           : 48 49 50
parametrosfunc       : 411 516
parfunc              : 420 421
plsql_instr          : 21
predicates_state     : 143
primary_key          : 348
procedfunct          : 411
raisenotice          : 450
raisenotice1         : 484
renameto             : 37
replaceDB_instr      : 4
returnbloque         : 453
rollbackinstr        : 460
s_case_state         : 87 88 89
second_query         : 71
select_instr         : 16 468
select_instr1        : 71 72 73 74 75 76 77 101 120 146 147 148 149 150 151 213 476 517 518
selectfrom           : 79
selectlist           : 79
showDB_instr         : 8
state_mode           : 29 30 31 32 33
state_owner          : 25 27 28
subbloque            : 452
subbloque1           : 482 483
tablaselect          : 117 118
termdistinct         : 79
timestampnow         : 112
tiporetorno          : 411
truncate_instr       : 15 467
type_column          : 307 308 309 310 347
type_column1         : 414 422 423 424 425 432
update_instr         : 10 462
use_instr            : 17
usingexpresion       : 517 518
valdate              : 382
valgroupby           : 160 161
vallogico            : 212
valores              : 91 92 369 369 370 370 371 371 372 372 373 374 375 376 377 377 378 378
valororderby         : 181 182 397
valselect            : 93 94
when1                : 538 539
when2                : 542 543
whereexists          : 134
wherein              : 137
wherelike            : 139
wherenotin           : 136
wherenotlike         : 138
whereselect          : 80 400
wheresubstring       : 140
x_value              : 349

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instruccion
    (3) instruccion -> . createDB_instr
    (4) instruccion -> . replaceDB_instr
    (5) instruccion -> . alterDB_instr
    (6) instruccion -> . dropDB_instr
    (7) instruccion -> . create_table
    (8) instruccion -> . showDB_instr
    (9) instruccion -> . insert_instr
    (10) instruccion -> . update_instr
    (11) instruccion -> . alter_instr PTCOMA
    (12) instruccion -> . create_enum
    (13) instruccion -> . drop_table
    (14) instruccion -> . delete_instr
    (15) instruccion -> . truncate_instr
    (16) instruccion -> . select_instr
    (17) instruccion -> . use_instr
    (18) instruccion -> . indexinstr
    (19) instruccion -> . alterindex
    (20) instruccion -> . dropindex
    (21) instruccion -> . plsql_instr
    (22) instruccion -> . llamadafunciones
    (23) instruccion -> . llamadaprocedimiento
    (24) createDB_instr -> . CREATE DATABASE existencia
    (25) createDB_instr -> . CREATE DATABASE ID state_owner
    (26) replaceDB_instr -> . REPLACE DATABASE existencia
    (27) replaceDB_instr -> . REPLACE DATABASE ID state_owner
    (37) alterDB_instr -> . ALTER DATABASE ID renameto PTCOMA
    (39) alterDB_instr -> . ALTER DATABASE ID OWNER TO owner_users PTCOMA
    (43) dropDB_instr -> . DROP DATABASE ID PTCOMA
    (44) dropDB_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (341) create_table -> . CREATE TABLE ID PARIZQ list_columns_x PARDER end_create_table
    (45) showDB_instr -> . SHOW DATABASES PTCOMA
    (46) showDB_instr -> . SHOW DATABASES LIKE CADENASIMPLE PTCOMA
    (48) insert_instr -> . INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA
    (49) insert_instr -> . INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA
    (58) update_instr -> . UPDATE ID SET asignaciones PTCOMA
    (59) update_instr -> . UPDATE ID SET asignaciones WHERE condiciones PTCOMA
    (298) alter_instr -> . ALTER TABLE ID ADD COLUMN list_columns
    (299) alter_instr -> . ALTER TABLE ID ADD CHECK PARIZQ condicion PARDER
    (300) alter_instr -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER
    (301) alter_instr -> . ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID
    (302) alter_instr -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL
    (303) alter_instr -> . ALTER TABLE ID DROP CONSTRAINT ID
    (304) alter_instr -> . ALTER TABLE ID RENAME COLUMN ID TO ID
    (305) alter_instr -> . ALTER TABLE ID DROP COLUMN listtablas
    (306) alter_instr -> . ALTER TABLE ID list_alter_column
    (365) create_enum -> . CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA
    (368) drop_table -> . DROP TABLE ID PTCOMA
    (63) delete_instr -> . DELETE FROM ID PTCOMA
    (64) delete_instr -> . DELETE FROM ID WHERE condiciones PTCOMA
    (65) truncate_instr -> . TRUNCATE listtablas PTCOMA
    (66) truncate_instr -> . TRUNCATE listtablas CASCADE PTCOMA
    (67) truncate_instr -> . TRUNCATE TABLE listtablas PTCOMA
    (68) truncate_instr -> . TRUNCATE TABLE listtablas CASCADE PTCOMA
    (71) select_instr -> . select_instr1 second_query PTCOMA
    (47) use_instr -> . USE ID PTCOMA
    (394) indexinstr -> . CREATE INDEX ID ON ID PARIZQ ID PARDER PTCOMA
    (395) indexinstr -> . CREATE INDEX ID ON ID USING HASH PARIZQ ID PARDER PTCOMA
    (396) indexinstr -> . CREATE INDEX ID ON ID PARIZQ ID COMA ID PARDER PTCOMA
    (397) indexinstr -> . CREATE INDEX ID ON ID PARIZQ valororderby PARDER PTCOMA
    (398) indexinstr -> . CREATE UNIQUE INDEX ID ON ID PARIZQ columnas PARDER PTCOMA
    (399) indexinstr -> . CREATE INDEX ID ON ID PARIZQ LOWER PARIZQ ID PARDER PARDER PTCOMA
    (400) indexinstr -> . CREATE INDEX ID ON ID PARIZQ ID PARDER whereselect PTCOMA
    (401) indexinstr -> . CREATE INDEX ID ON ID PARIZQ ID ID PARDER PTCOMA
    (402) alterindex -> . ALTER INDEX IF EXISTS ID ID eoi PTCOMA
    (403) alterindex -> . ALTER INDEX ID ID eoi PTCOMA
    (406) dropindex -> . DROP INDEX ID PTCOMA
    (411) plsql_instr -> . CREATE procedfunct ID PARIZQ parametrosfunc PARDER tiporetorno cuerpofuncion
    (409) llamadafunciones -> . SELECT ID PARIZQ PARDER PTCOMA
    (410) llamadafunciones -> . SELECT ID PARIZQ listaexpresiones PARDER PTCOMA
    (407) llamadaprocedimiento -> . EXECUTE ID PARIZQ PARDER PTCOMA
    (408) llamadaprocedimiento -> . EXECUTE ID PARIZQ listaexpresiones PARDER PTCOMA
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    CREATE          shift and go to state 25
    REPLACE         shift and go to state 26
    ALTER           shift and go to state 27
    DROP            shift and go to state 28
    SHOW            shift and go to state 29
    INSERT          shift and go to state 30
    UPDATE          shift and go to state 31
    DELETE          shift and go to state 32
    TRUNCATE        shift and go to state 33
    USE             shift and go to state 35
    SELECT          shift and go to state 36
    EXECUTE         shift and go to state 37

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    createDB_instr                 shift and go to state 4
    replaceDB_instr                shift and go to state 5
    alterDB_instr                  shift and go to state 6
    dropDB_instr                   shift and go to state 7
    create_table                   shift and go to state 8
    showDB_instr                   shift and go to state 9
    insert_instr                   shift and go to state 10
    update_instr                   shift and go to state 11
    alter_instr                    shift and go to state 12
    create_enum                    shift and go to state 13
    drop_table                     shift and go to state 14
    delete_instr                   shift and go to state 15
    truncate_instr                 shift and go to state 16
    select_instr                   shift and go to state 17
    use_instr                      shift and go to state 18
    indexinstr                     shift and go to state 19
    alterindex                     shift and go to state 20
    dropindex                      shift and go to state 21
    plsql_instr                    shift and go to state 22
    llamadafunciones               shift and go to state 23
    llamadaprocedimiento           shift and go to state 24
    select_instr1                  shift and go to state 34

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .

    $end            reduce using rule 1 (init -> instrucciones .)


state 3

    (2) instrucciones -> instruccion .

    $end            reduce using rule 2 (instrucciones -> instruccion .)


state 4

    (3) instruccion -> createDB_instr .

    $end            reduce using rule 3 (instruccion -> createDB_instr .)


state 5

    (4) instruccion -> replaceDB_instr .

    $end            reduce using rule 4 (instruccion -> replaceDB_instr .)


state 6

    (5) instruccion -> alterDB_instr .

    $end            reduce using rule 5 (instruccion -> alterDB_instr .)


state 7

    (6) instruccion -> dropDB_instr .

    $end            reduce using rule 6 (instruccion -> dropDB_instr .)


state 8

    (7) instruccion -> create_table .

    $end            reduce using rule 7 (instruccion -> create_table .)


state 9

    (8) instruccion -> showDB_instr .

    $end            reduce using rule 8 (instruccion -> showDB_instr .)


state 10

    (9) instruccion -> insert_instr .

    $end            reduce using rule 9 (instruccion -> insert_instr .)


state 11

    (10) instruccion -> update_instr .

    $end            reduce using rule 10 (instruccion -> update_instr .)


state 12

    (11) instruccion -> alter_instr . PTCOMA

    PTCOMA          shift and go to state 38


state 13

    (12) instruccion -> create_enum .

    $end            reduce using rule 12 (instruccion -> create_enum .)


state 14

    (13) instruccion -> drop_table .

    $end            reduce using rule 13 (instruccion -> drop_table .)


state 15

    (14) instruccion -> delete_instr .

    $end            reduce using rule 14 (instruccion -> delete_instr .)


state 16

    (15) instruccion -> truncate_instr .

    $end            reduce using rule 15 (instruccion -> truncate_instr .)


state 17

    (16) instruccion -> select_instr .

    $end            reduce using rule 16 (instruccion -> select_instr .)


state 18

    (17) instruccion -> use_instr .

    $end            reduce using rule 17 (instruccion -> use_instr .)


state 19

    (18) instruccion -> indexinstr .

    $end            reduce using rule 18 (instruccion -> indexinstr .)


state 20

    (19) instruccion -> alterindex .

    $end            reduce using rule 19 (instruccion -> alterindex .)


state 21

    (20) instruccion -> dropindex .

    $end            reduce using rule 20 (instruccion -> dropindex .)


state 22

    (21) instruccion -> plsql_instr .

    $end            reduce using rule 21 (instruccion -> plsql_instr .)


state 23

    (22) instruccion -> llamadafunciones .

    $end            reduce using rule 22 (instruccion -> llamadafunciones .)


state 24

    (23) instruccion -> llamadaprocedimiento .

    $end            reduce using rule 23 (instruccion -> llamadaprocedimiento .)


state 25

    (24) createDB_instr -> CREATE . DATABASE existencia
    (25) createDB_instr -> CREATE . DATABASE ID state_owner
    (341) create_table -> CREATE . TABLE ID PARIZQ list_columns_x PARDER end_create_table
    (365) create_enum -> CREATE . TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA
    (394) indexinstr -> CREATE . INDEX ID ON ID PARIZQ ID PARDER PTCOMA
    (395) indexinstr -> CREATE . INDEX ID ON ID USING HASH PARIZQ ID PARDER PTCOMA
    (396) indexinstr -> CREATE . INDEX ID ON ID PARIZQ ID COMA ID PARDER PTCOMA
    (397) indexinstr -> CREATE . INDEX ID ON ID PARIZQ valororderby PARDER PTCOMA
    (398) indexinstr -> CREATE . UNIQUE INDEX ID ON ID PARIZQ columnas PARDER PTCOMA
    (399) indexinstr -> CREATE . INDEX ID ON ID PARIZQ LOWER PARIZQ ID PARDER PARDER PTCOMA
    (400) indexinstr -> CREATE . INDEX ID ON ID PARIZQ ID PARDER whereselect PTCOMA
    (401) indexinstr -> CREATE . INDEX ID ON ID PARIZQ ID ID PARDER PTCOMA
    (411) plsql_instr -> CREATE . procedfunct ID PARIZQ parametrosfunc PARDER tiporetorno cuerpofuncion
    (412) procedfunct -> . PROCEDURE
    (413) procedfunct -> . FUNCTION

    DATABASE        shift and go to state 39
    TABLE           shift and go to state 40
    TYPE            shift and go to state 41
    INDEX           shift and go to state 42
    UNIQUE          shift and go to state 43
    PROCEDURE       shift and go to state 45
    FUNCTION        shift and go to state 46

    procedfunct                    shift and go to state 44

state 26

    (26) replaceDB_instr -> REPLACE . DATABASE existencia
    (27) replaceDB_instr -> REPLACE . DATABASE ID state_owner

    DATABASE        shift and go to state 47


state 27

    (37) alterDB_instr -> ALTER . DATABASE ID renameto PTCOMA
    (39) alterDB_instr -> ALTER . DATABASE ID OWNER TO owner_users PTCOMA
    (298) alter_instr -> ALTER . TABLE ID ADD COLUMN list_columns
    (299) alter_instr -> ALTER . TABLE ID ADD CHECK PARIZQ condicion PARDER
    (300) alter_instr -> ALTER . TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER
    (301) alter_instr -> ALTER . TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID
    (302) alter_instr -> ALTER . TABLE ID ALTER COLUMN ID SET NOT NULL
    (303) alter_instr -> ALTER . TABLE ID DROP CONSTRAINT ID
    (304) alter_instr -> ALTER . TABLE ID RENAME COLUMN ID TO ID
    (305) alter_instr -> ALTER . TABLE ID DROP COLUMN listtablas
    (306) alter_instr -> ALTER . TABLE ID list_alter_column
    (402) alterindex -> ALTER . INDEX IF EXISTS ID ID eoi PTCOMA
    (403) alterindex -> ALTER . INDEX ID ID eoi PTCOMA

    DATABASE        shift and go to state 48
    TABLE           shift and go to state 49
    INDEX           shift and go to state 50


state 28

    (43) dropDB_instr -> DROP . DATABASE ID PTCOMA
    (44) dropDB_instr -> DROP . DATABASE IF EXISTS ID PTCOMA
    (368) drop_table -> DROP . TABLE ID PTCOMA
    (406) dropindex -> DROP . INDEX ID PTCOMA

    DATABASE        shift and go to state 51
    TABLE           shift and go to state 52
    INDEX           shift and go to state 53


state 29

    (45) showDB_instr -> SHOW . DATABASES PTCOMA
    (46) showDB_instr -> SHOW . DATABASES LIKE CADENASIMPLE PTCOMA

    DATABASES       shift and go to state 54


state 30

    (48) insert_instr -> INSERT . INTO ID VALUES PARIZQ parametros PARDER PTCOMA
    (49) insert_instr -> INSERT . INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA

    INTO            shift and go to state 55


state 31

    (58) update_instr -> UPDATE . ID SET asignaciones PTCOMA
    (59) update_instr -> UPDATE . ID SET asignaciones WHERE condiciones PTCOMA

    ID              shift and go to state 56


state 32

    (63) delete_instr -> DELETE . FROM ID PTCOMA
    (64) delete_instr -> DELETE . FROM ID WHERE condiciones PTCOMA

    FROM            shift and go to state 57


state 33

    (65) truncate_instr -> TRUNCATE . listtablas PTCOMA
    (66) truncate_instr -> TRUNCATE . listtablas CASCADE PTCOMA
    (67) truncate_instr -> TRUNCATE . TABLE listtablas PTCOMA
    (68) truncate_instr -> TRUNCATE . TABLE listtablas CASCADE PTCOMA
    (69) listtablas -> . listtablas COMA ID
    (70) listtablas -> . ID

    TABLE           shift and go to state 59
    ID              shift and go to state 60

    listtablas                     shift and go to state 58

state 34

    (71) select_instr -> select_instr1 . second_query PTCOMA
    (72) second_query -> . UNION ALL select_instr1
    (73) second_query -> . INTERSECT ALL select_instr1
    (74) second_query -> . EXCEPT ALL select_instr1
    (75) second_query -> . UNION select_instr1
    (76) second_query -> . INTERSECT select_instr1
    (77) second_query -> . EXCEPT select_instr1
    (78) second_query -> . empty
    (546) empty -> .

    UNION           shift and go to state 62
    INTERSECT       shift and go to state 63
    EXCEPT          shift and go to state 64
    PTCOMA          reduce using rule 546 (empty -> .)

    second_query                   shift and go to state 61
    empty                          shift and go to state 65

state 35

    (47) use_instr -> USE . ID PTCOMA

    ID              shift and go to state 66


state 36

    (409) llamadafunciones -> SELECT . ID PARIZQ PARDER PTCOMA
    (410) llamadafunciones -> SELECT . ID PARIZQ listaexpresiones PARDER PTCOMA
    (79) select_instr1 -> SELECT . termdistinct selectlist selectfrom
    (82) termdistinct -> . DISTINCT
    (83) termdistinct -> . empty
    (546) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 67
    DISTINCT        shift and go to state 69
    ASTERISCO       reduce using rule 546 (empty -> .)
    PARIZQ          reduce using rule 546 (empty -> .)
    COUNT           reduce using rule 546 (empty -> .)
    ABS             reduce using rule 546 (empty -> .)
    CBRT            reduce using rule 546 (empty -> .)
    CEIL            reduce using rule 546 (empty -> .)
    CEILING         reduce using rule 546 (empty -> .)
    DEGREES         reduce using rule 546 (empty -> .)
    DIV             reduce using rule 546 (empty -> .)
    EXP             reduce using rule 546 (empty -> .)
    FACTORIAL       reduce using rule 546 (empty -> .)
    FLOOR           reduce using rule 546 (empty -> .)
    GCD             reduce using rule 546 (empty -> .)
    LN              reduce using rule 546 (empty -> .)
    LOG             reduce using rule 546 (empty -> .)
    MOD             reduce using rule 546 (empty -> .)
    PI              reduce using rule 546 (empty -> .)
    POWER           reduce using rule 546 (empty -> .)
    RADIANS         reduce using rule 546 (empty -> .)
    ROUND           reduce using rule 546 (empty -> .)
    SIGN            reduce using rule 546 (empty -> .)
    SQRT            reduce using rule 546 (empty -> .)
    WBUCKET         reduce using rule 546 (empty -> .)
    TRUNC           reduce using rule 546 (empty -> .)
    RANDOM          reduce using rule 546 (empty -> .)
    ACOS            reduce using rule 546 (empty -> .)
    ACOSD           reduce using rule 546 (empty -> .)
    ASIN            reduce using rule 546 (empty -> .)
    ASIND           reduce using rule 546 (empty -> .)
    ATAN            reduce using rule 546 (empty -> .)
    ATAND           reduce using rule 546 (empty -> .)
    ATAN2           reduce using rule 546 (empty -> .)
    ATAN2D          reduce using rule 546 (empty -> .)
    COS             reduce using rule 546 (empty -> .)
    COSD            reduce using rule 546 (empty -> .)
    COT             reduce using rule 546 (empty -> .)
    COTD            reduce using rule 546 (empty -> .)
    SIN             reduce using rule 546 (empty -> .)
    SIND            reduce using rule 546 (empty -> .)
    TAN             reduce using rule 546 (empty -> .)
    TAND            reduce using rule 546 (empty -> .)
    SINH            reduce using rule 546 (empty -> .)
    COSH            reduce using rule 546 (empty -> .)
    TANH            reduce using rule 546 (empty -> .)
    ASINH           reduce using rule 546 (empty -> .)
    ACOSH           reduce using rule 546 (empty -> .)
    ATANH           reduce using rule 546 (empty -> .)
    SUM             reduce using rule 546 (empty -> .)
    AVG             reduce using rule 546 (empty -> .)
    MAX             reduce using rule 546 (empty -> .)
    MIN             reduce using rule 546 (empty -> .)
    LENGTH          reduce using rule 546 (empty -> .)
    SUBSTRING       reduce using rule 546 (empty -> .)
    SUBSTR          reduce using rule 546 (empty -> .)
    TRIM            reduce using rule 546 (empty -> .)
    GET_BYTE        reduce using rule 546 (empty -> .)
    SET_BYTE        reduce using rule 546 (empty -> .)
    ENCODE          reduce using rule 546 (empty -> .)
    DECODE          reduce using rule 546 (empty -> .)
    SHA256          reduce using rule 546 (empty -> .)
    CONVERT         reduce using rule 546 (empty -> .)
    NOW             reduce using rule 546 (empty -> .)
    EXTRACT         reduce using rule 546 (empty -> .)
    DATE_PART       reduce using rule 546 (empty -> .)
    CURRENT_DATE    reduce using rule 546 (empty -> .)
    CURRENT_TIME    reduce using rule 546 (empty -> .)
    TIMESTAMP       reduce using rule 546 (empty -> .)

  ! ID              [ reduce using rule 546 (empty -> .) ]

    termdistinct                   shift and go to state 68
    empty                          shift and go to state 70

state 37

    (407) llamadaprocedimiento -> EXECUTE . ID PARIZQ PARDER PTCOMA
    (408) llamadaprocedimiento -> EXECUTE . ID PARIZQ listaexpresiones PARDER PTCOMA

    ID              shift and go to state 71


state 38

    (11) instruccion -> alter_instr PTCOMA .

    $end            reduce using rule 11 (instruccion -> alter_instr PTCOMA .)


state 39

    (24) createDB_instr -> CREATE DATABASE . existencia
    (25) createDB_instr -> CREATE DATABASE . ID state_owner
    (28) existencia -> . IF NOT EXISTS ID state_owner

    ID              shift and go to state 73
    IF              shift and go to state 74

    existencia                     shift and go to state 72

state 40

    (341) create_table -> CREATE TABLE . ID PARIZQ list_columns_x PARDER end_create_table

    ID              shift and go to state 75


state 41

    (365) create_enum -> CREATE TYPE . ID AS ENUM PARIZQ list_string PARDER PTCOMA

    ID              shift and go to state 76


state 42

    (394) indexinstr -> CREATE INDEX . ID ON ID PARIZQ ID PARDER PTCOMA
    (395) indexinstr -> CREATE INDEX . ID ON ID USING HASH PARIZQ ID PARDER PTCOMA
    (396) indexinstr -> CREATE INDEX . ID ON ID PARIZQ ID COMA ID PARDER PTCOMA
    (397) indexinstr -> CREATE INDEX . ID ON ID PARIZQ valororderby PARDER PTCOMA
    (399) indexinstr -> CREATE INDEX . ID ON ID PARIZQ LOWER PARIZQ ID PARDER PARDER PTCOMA
    (400) indexinstr -> CREATE INDEX . ID ON ID PARIZQ ID PARDER whereselect PTCOMA
    (401) indexinstr -> CREATE INDEX . ID ON ID PARIZQ ID ID PARDER PTCOMA

    ID              shift and go to state 77


state 43

    (398) indexinstr -> CREATE UNIQUE . INDEX ID ON ID PARIZQ columnas PARDER PTCOMA

    INDEX           shift and go to state 78


state 44

    (411) plsql_instr -> CREATE procedfunct . ID PARIZQ parametrosfunc PARDER tiporetorno cuerpofuncion

    ID              shift and go to state 79


state 45

    (412) procedfunct -> PROCEDURE .

    ID              reduce using rule 412 (procedfunct -> PROCEDURE .)


state 46

    (413) procedfunct -> FUNCTION .

    ID              reduce using rule 413 (procedfunct -> FUNCTION .)


state 47

    (26) replaceDB_instr -> REPLACE DATABASE . existencia
    (27) replaceDB_instr -> REPLACE DATABASE . ID state_owner
    (28) existencia -> . IF NOT EXISTS ID state_owner

    ID              shift and go to state 81
    IF              shift and go to state 74

    existencia                     shift and go to state 80

state 48

    (37) alterDB_instr -> ALTER DATABASE . ID renameto PTCOMA
    (39) alterDB_instr -> ALTER DATABASE . ID OWNER TO owner_users PTCOMA

    ID              shift and go to state 82


state 49

    (298) alter_instr -> ALTER TABLE . ID ADD COLUMN list_columns
    (299) alter_instr -> ALTER TABLE . ID ADD CHECK PARIZQ condicion PARDER
    (300) alter_instr -> ALTER TABLE . ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER
    (301) alter_instr -> ALTER TABLE . ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID
    (302) alter_instr -> ALTER TABLE . ID ALTER COLUMN ID SET NOT NULL
    (303) alter_instr -> ALTER TABLE . ID DROP CONSTRAINT ID
    (304) alter_instr -> ALTER TABLE . ID RENAME COLUMN ID TO ID
    (305) alter_instr -> ALTER TABLE . ID DROP COLUMN listtablas
    (306) alter_instr -> ALTER TABLE . ID list_alter_column

    ID              shift and go to state 83


state 50

    (402) alterindex -> ALTER INDEX . IF EXISTS ID ID eoi PTCOMA
    (403) alterindex -> ALTER INDEX . ID ID eoi PTCOMA

    IF              shift and go to state 84
    ID              shift and go to state 85


state 51

    (43) dropDB_instr -> DROP DATABASE . ID PTCOMA
    (44) dropDB_instr -> DROP DATABASE . IF EXISTS ID PTCOMA

    ID              shift and go to state 86
    IF              shift and go to state 87


state 52

    (368) drop_table -> DROP TABLE . ID PTCOMA

    ID              shift and go to state 88


state 53

    (406) dropindex -> DROP INDEX . ID PTCOMA

    ID              shift and go to state 89


state 54

    (45) showDB_instr -> SHOW DATABASES . PTCOMA
    (46) showDB_instr -> SHOW DATABASES . LIKE CADENASIMPLE PTCOMA

    PTCOMA          shift and go to state 90
    LIKE            shift and go to state 91


state 55

    (48) insert_instr -> INSERT INTO . ID VALUES PARIZQ parametros PARDER PTCOMA
    (49) insert_instr -> INSERT INTO . ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA

    ID              shift and go to state 92


state 56

    (58) update_instr -> UPDATE ID . SET asignaciones PTCOMA
    (59) update_instr -> UPDATE ID . SET asignaciones WHERE condiciones PTCOMA

    SET             shift and go to state 93


state 57

    (63) delete_instr -> DELETE FROM . ID PTCOMA
    (64) delete_instr -> DELETE FROM . ID WHERE condiciones PTCOMA

    ID              shift and go to state 94


state 58

    (65) truncate_instr -> TRUNCATE listtablas . PTCOMA
    (66) truncate_instr -> TRUNCATE listtablas . CASCADE PTCOMA
    (69) listtablas -> listtablas . COMA ID

    PTCOMA          shift and go to state 95
    CASCADE         shift and go to state 96
    COMA            shift and go to state 97


state 59

    (67) truncate_instr -> TRUNCATE TABLE . listtablas PTCOMA
    (68) truncate_instr -> TRUNCATE TABLE . listtablas CASCADE PTCOMA
    (69) listtablas -> . listtablas COMA ID
    (70) listtablas -> . ID

    ID              shift and go to state 60

    listtablas                     shift and go to state 98

state 60

    (70) listtablas -> ID .

    PTCOMA          reduce using rule 70 (listtablas -> ID .)
    CASCADE         reduce using rule 70 (listtablas -> ID .)
    COMA            reduce using rule 70 (listtablas -> ID .)
    PARDER          reduce using rule 70 (listtablas -> ID .)


state 61

    (71) select_instr -> select_instr1 second_query . PTCOMA

    PTCOMA          shift and go to state 99


state 62

    (72) second_query -> UNION . ALL select_instr1
    (75) second_query -> UNION . select_instr1
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    ALL             shift and go to state 100
    SELECT          shift and go to state 102

    select_instr1                  shift and go to state 101

state 63

    (73) second_query -> INTERSECT . ALL select_instr1
    (76) second_query -> INTERSECT . select_instr1
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    ALL             shift and go to state 103
    SELECT          shift and go to state 102

    select_instr1                  shift and go to state 104

state 64

    (74) second_query -> EXCEPT . ALL select_instr1
    (77) second_query -> EXCEPT . select_instr1
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    ALL             shift and go to state 105
    SELECT          shift and go to state 102

    select_instr1                  shift and go to state 106

state 65

    (78) second_query -> empty .

    PTCOMA          reduce using rule 78 (second_query -> empty .)


state 66

    (47) use_instr -> USE ID . PTCOMA

    PTCOMA          shift and go to state 107


state 67

    (409) llamadafunciones -> SELECT ID . PARIZQ PARDER PTCOMA
    (410) llamadafunciones -> SELECT ID . PARIZQ listaexpresiones PARDER PTCOMA

    PARIZQ          shift and go to state 108


state 68

    (79) select_instr1 -> SELECT termdistinct . selectlist selectfrom
    (84) selectlist -> . ASTERISCO
    (85) selectlist -> . listaselect
    (93) listaselect -> . listaselect COMA valselect
    (94) listaselect -> . valselect
    (95) valselect -> . ID alias
    (96) valselect -> . ID PUNTO ASTERISCO
    (97) valselect -> . ID PUNTO ID alias
    (98) valselect -> . funcion_matematica_ws alias
    (99) valselect -> . funcion_matematica_s alias
    (100) valselect -> . funcion_trigonometrica alias
    (101) valselect -> . PARIZQ select_instr1 PARDER alias
    (102) valselect -> . agregacion PARIZQ cualquieridentificador PARDER alias
    (103) valselect -> . COUNT PARIZQ ASTERISCO PARDER alias
    (104) valselect -> . COUNT PARIZQ cualquieridentificador PARDER alias
    (105) valselect -> . func_bin_strings_1 alias
    (106) valselect -> . func_bin_strings_2 alias
    (107) valselect -> . func_bin_strings_4 alias
    (108) valselect -> . nowinstr
    (109) valselect -> . extract_instr alias
    (110) valselect -> . datepart_instr alias
    (111) valselect -> . current alias
    (112) valselect -> . timestampnow alias
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (236) funcion_matematica_s -> . DEGREES PARIZQ expresionaritmetica PARDER
    (237) funcion_matematica_s -> . DIV PARIZQ expresionaritmetica COMA expresionaritmetica PARDER
    (238) funcion_matematica_s -> . EXP PARIZQ expresionaritmetica PARDER
    (239) funcion_matematica_s -> . FACTORIAL PARIZQ expresionaritmetica PARDER
    (240) funcion_matematica_s -> . FLOOR PARIZQ expresionaritmetica PARDER
    (241) funcion_matematica_s -> . GCD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER
    (242) funcion_matematica_s -> . LN PARIZQ expresionaritmetica PARDER
    (243) funcion_matematica_s -> . LOG PARIZQ expresionaritmetica PARDER
    (244) funcion_matematica_s -> . MOD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER
    (245) funcion_matematica_s -> . PI PARIZQ PARDER
    (246) funcion_matematica_s -> . POWER PARIZQ expresionaritmetica COMA expresionaritmetica PARDER
    (247) funcion_matematica_s -> . RADIANS PARIZQ expresionaritmetica PARDER
    (248) funcion_matematica_s -> . ROUND PARIZQ expresionaritmetica PARDER
    (249) funcion_matematica_s -> . SIGN PARIZQ expresionaritmetica PARDER
    (250) funcion_matematica_s -> . SQRT PARIZQ expresionaritmetica PARDER
    (251) funcion_matematica_s -> . WBUCKET PARIZQ explist PARDER
    (252) funcion_matematica_s -> . TRUNC PARIZQ expresionaritmetica PARDER
    (253) funcion_matematica_s -> . RANDOM PARIZQ PARDER
    (255) funcion_trigonometrica -> . ACOS PARIZQ expresionaritmetica PARDER
    (256) funcion_trigonometrica -> . ACOSD PARIZQ expresionaritmetica PARDER
    (257) funcion_trigonometrica -> . ASIN PARIZQ expresionaritmetica PARDER
    (258) funcion_trigonometrica -> . ASIND PARIZQ expresionaritmetica PARDER
    (259) funcion_trigonometrica -> . ATAN PARIZQ expresionaritmetica PARDER
    (260) funcion_trigonometrica -> . ATAND PARIZQ expresionaritmetica PARDER
    (261) funcion_trigonometrica -> . ATAN2 PARIZQ expresionaritmetica PARDER
    (262) funcion_trigonometrica -> . ATAN2D PARIZQ expresionaritmetica PARDER
    (263) funcion_trigonometrica -> . COS PARIZQ expresionaritmetica PARDER
    (264) funcion_trigonometrica -> . COSD PARIZQ expresionaritmetica PARDER
    (265) funcion_trigonometrica -> . COT PARIZQ expresionaritmetica PARDER
    (266) funcion_trigonometrica -> . COTD PARIZQ expresionaritmetica PARDER
    (267) funcion_trigonometrica -> . SIN PARIZQ expresionaritmetica PARDER
    (268) funcion_trigonometrica -> . SIND PARIZQ expresionaritmetica PARDER
    (269) funcion_trigonometrica -> . TAN PARIZQ expresionaritmetica PARDER
    (270) funcion_trigonometrica -> . TAND PARIZQ expresionaritmetica PARDER
    (271) funcion_trigonometrica -> . SINH PARIZQ expresionaritmetica PARDER
    (272) funcion_trigonometrica -> . COSH PARIZQ expresionaritmetica PARDER
    (273) funcion_trigonometrica -> . TANH PARIZQ expresionaritmetica PARDER
    (274) funcion_trigonometrica -> . ASINH PARIZQ expresionaritmetica PARDER
    (275) funcion_trigonometrica -> . ACOSH PARIZQ expresionaritmetica PARDER
    (276) funcion_trigonometrica -> . ATANH PARIZQ expresionaritmetica PARDER
    (113) agregacion -> . SUM
    (114) agregacion -> . AVG
    (115) agregacion -> . MAX
    (116) agregacion -> . MIN
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (282) func_bin_strings_4 -> . GET_BYTE PARIZQ cadena COMA ENTERO PARDER
    (283) func_bin_strings_4 -> . SET_BYTE PARIZQ cadena COMA ENTERO COMA ENTERO PARDER
    (284) func_bin_strings_4 -> . ENCODE PARIZQ cadena COMA cadena PARDER
    (285) func_bin_strings_4 -> . DECODE PARIZQ cadena COMA cadena PARDER
    (286) func_bin_strings_4 -> . SHA256 PARIZQ cadena PARDER
    (287) func_bin_strings_4 -> . CONVERT PARIZQ alias PARDER
    (393) nowinstr -> . NOW PARIZQ PARDER
    (382) extract_instr -> . EXTRACT PARIZQ valdate FROM TIMESTAMP CADENASIMPLE PARDER
    (389) datepart_instr -> . DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER
    (390) current -> . CURRENT_DATE
    (391) current -> . CURRENT_TIME
    (392) timestampnow -> . TIMESTAMP CADENASIMPLE

    ASTERISCO       shift and go to state 110
    ID              shift and go to state 113
    PARIZQ          shift and go to state 117
    COUNT           shift and go to state 119
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    DEGREES         shift and go to state 132
    DIV             shift and go to state 133
    EXP             shift and go to state 134
    FACTORIAL       shift and go to state 135
    FLOOR           shift and go to state 136
    GCD             shift and go to state 137
    LN              shift and go to state 138
    LOG             shift and go to state 139
    MOD             shift and go to state 140
    PI              shift and go to state 141
    POWER           shift and go to state 142
    RADIANS         shift and go to state 143
    ROUND           shift and go to state 144
    SIGN            shift and go to state 145
    SQRT            shift and go to state 146
    WBUCKET         shift and go to state 147
    TRUNC           shift and go to state 148
    RANDOM          shift and go to state 149
    ACOS            shift and go to state 150
    ACOSD           shift and go to state 151
    ASIN            shift and go to state 152
    ASIND           shift and go to state 153
    ATAN            shift and go to state 154
    ATAND           shift and go to state 155
    ATAN2           shift and go to state 156
    ATAN2D          shift and go to state 157
    COS             shift and go to state 158
    COSD            shift and go to state 159
    COT             shift and go to state 160
    COTD            shift and go to state 161
    SIN             shift and go to state 162
    SIND            shift and go to state 163
    TAN             shift and go to state 164
    TAND            shift and go to state 165
    SINH            shift and go to state 166
    COSH            shift and go to state 167
    TANH            shift and go to state 168
    ASINH           shift and go to state 169
    ACOSH           shift and go to state 170
    ATANH           shift and go to state 171
    SUM             shift and go to state 172
    AVG             shift and go to state 173
    MAX             shift and go to state 174
    MIN             shift and go to state 175
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    GET_BYTE        shift and go to state 180
    SET_BYTE        shift and go to state 181
    ENCODE          shift and go to state 182
    DECODE          shift and go to state 183
    SHA256          shift and go to state 184
    CONVERT         shift and go to state 185
    NOW             shift and go to state 186
    EXTRACT         shift and go to state 187
    DATE_PART       shift and go to state 189
    CURRENT_DATE    shift and go to state 190
    CURRENT_TIME    shift and go to state 191
    TIMESTAMP       shift and go to state 188

    selectlist                     shift and go to state 109
    listaselect                    shift and go to state 111
    valselect                      shift and go to state 112
    funcion_matematica_ws          shift and go to state 114
    funcion_matematica_s           shift and go to state 115
    funcion_trigonometrica         shift and go to state 116
    agregacion                     shift and go to state 118
    func_bin_strings_1             shift and go to state 120
    func_bin_strings_2             shift and go to state 121
    func_bin_strings_4             shift and go to state 122
    nowinstr                       shift and go to state 123
    extract_instr                  shift and go to state 124
    datepart_instr                 shift and go to state 125
    current                        shift and go to state 126
    timestampnow                   shift and go to state 127

state 69

    (82) termdistinct -> DISTINCT .

    ASTERISCO       reduce using rule 82 (termdistinct -> DISTINCT .)
    ID              reduce using rule 82 (termdistinct -> DISTINCT .)
    PARIZQ          reduce using rule 82 (termdistinct -> DISTINCT .)
    COUNT           reduce using rule 82 (termdistinct -> DISTINCT .)
    ABS             reduce using rule 82 (termdistinct -> DISTINCT .)
    CBRT            reduce using rule 82 (termdistinct -> DISTINCT .)
    CEIL            reduce using rule 82 (termdistinct -> DISTINCT .)
    CEILING         reduce using rule 82 (termdistinct -> DISTINCT .)
    DEGREES         reduce using rule 82 (termdistinct -> DISTINCT .)
    DIV             reduce using rule 82 (termdistinct -> DISTINCT .)
    EXP             reduce using rule 82 (termdistinct -> DISTINCT .)
    FACTORIAL       reduce using rule 82 (termdistinct -> DISTINCT .)
    FLOOR           reduce using rule 82 (termdistinct -> DISTINCT .)
    GCD             reduce using rule 82 (termdistinct -> DISTINCT .)
    LN              reduce using rule 82 (termdistinct -> DISTINCT .)
    LOG             reduce using rule 82 (termdistinct -> DISTINCT .)
    MOD             reduce using rule 82 (termdistinct -> DISTINCT .)
    PI              reduce using rule 82 (termdistinct -> DISTINCT .)
    POWER           reduce using rule 82 (termdistinct -> DISTINCT .)
    RADIANS         reduce using rule 82 (termdistinct -> DISTINCT .)
    ROUND           reduce using rule 82 (termdistinct -> DISTINCT .)
    SIGN            reduce using rule 82 (termdistinct -> DISTINCT .)
    SQRT            reduce using rule 82 (termdistinct -> DISTINCT .)
    WBUCKET         reduce using rule 82 (termdistinct -> DISTINCT .)
    TRUNC           reduce using rule 82 (termdistinct -> DISTINCT .)
    RANDOM          reduce using rule 82 (termdistinct -> DISTINCT .)
    ACOS            reduce using rule 82 (termdistinct -> DISTINCT .)
    ACOSD           reduce using rule 82 (termdistinct -> DISTINCT .)
    ASIN            reduce using rule 82 (termdistinct -> DISTINCT .)
    ASIND           reduce using rule 82 (termdistinct -> DISTINCT .)
    ATAN            reduce using rule 82 (termdistinct -> DISTINCT .)
    ATAND           reduce using rule 82 (termdistinct -> DISTINCT .)
    ATAN2           reduce using rule 82 (termdistinct -> DISTINCT .)
    ATAN2D          reduce using rule 82 (termdistinct -> DISTINCT .)
    COS             reduce using rule 82 (termdistinct -> DISTINCT .)
    COSD            reduce using rule 82 (termdistinct -> DISTINCT .)
    COT             reduce using rule 82 (termdistinct -> DISTINCT .)
    COTD            reduce using rule 82 (termdistinct -> DISTINCT .)
    SIN             reduce using rule 82 (termdistinct -> DISTINCT .)
    SIND            reduce using rule 82 (termdistinct -> DISTINCT .)
    TAN             reduce using rule 82 (termdistinct -> DISTINCT .)
    TAND            reduce using rule 82 (termdistinct -> DISTINCT .)
    SINH            reduce using rule 82 (termdistinct -> DISTINCT .)
    COSH            reduce using rule 82 (termdistinct -> DISTINCT .)
    TANH            reduce using rule 82 (termdistinct -> DISTINCT .)
    ASINH           reduce using rule 82 (termdistinct -> DISTINCT .)
    ACOSH           reduce using rule 82 (termdistinct -> DISTINCT .)
    ATANH           reduce using rule 82 (termdistinct -> DISTINCT .)
    SUM             reduce using rule 82 (termdistinct -> DISTINCT .)
    AVG             reduce using rule 82 (termdistinct -> DISTINCT .)
    MAX             reduce using rule 82 (termdistinct -> DISTINCT .)
    MIN             reduce using rule 82 (termdistinct -> DISTINCT .)
    LENGTH          reduce using rule 82 (termdistinct -> DISTINCT .)
    SUBSTRING       reduce using rule 82 (termdistinct -> DISTINCT .)
    SUBSTR          reduce using rule 82 (termdistinct -> DISTINCT .)
    TRIM            reduce using rule 82 (termdistinct -> DISTINCT .)
    GET_BYTE        reduce using rule 82 (termdistinct -> DISTINCT .)
    SET_BYTE        reduce using rule 82 (termdistinct -> DISTINCT .)
    ENCODE          reduce using rule 82 (termdistinct -> DISTINCT .)
    DECODE          reduce using rule 82 (termdistinct -> DISTINCT .)
    SHA256          reduce using rule 82 (termdistinct -> DISTINCT .)
    CONVERT         reduce using rule 82 (termdistinct -> DISTINCT .)
    NOW             reduce using rule 82 (termdistinct -> DISTINCT .)
    EXTRACT         reduce using rule 82 (termdistinct -> DISTINCT .)
    DATE_PART       reduce using rule 82 (termdistinct -> DISTINCT .)
    CURRENT_DATE    reduce using rule 82 (termdistinct -> DISTINCT .)
    CURRENT_TIME    reduce using rule 82 (termdistinct -> DISTINCT .)
    TIMESTAMP       reduce using rule 82 (termdistinct -> DISTINCT .)


state 70

    (83) termdistinct -> empty .

    ASTERISCO       reduce using rule 83 (termdistinct -> empty .)
    ID              reduce using rule 83 (termdistinct -> empty .)
    PARIZQ          reduce using rule 83 (termdistinct -> empty .)
    COUNT           reduce using rule 83 (termdistinct -> empty .)
    ABS             reduce using rule 83 (termdistinct -> empty .)
    CBRT            reduce using rule 83 (termdistinct -> empty .)
    CEIL            reduce using rule 83 (termdistinct -> empty .)
    CEILING         reduce using rule 83 (termdistinct -> empty .)
    DEGREES         reduce using rule 83 (termdistinct -> empty .)
    DIV             reduce using rule 83 (termdistinct -> empty .)
    EXP             reduce using rule 83 (termdistinct -> empty .)
    FACTORIAL       reduce using rule 83 (termdistinct -> empty .)
    FLOOR           reduce using rule 83 (termdistinct -> empty .)
    GCD             reduce using rule 83 (termdistinct -> empty .)
    LN              reduce using rule 83 (termdistinct -> empty .)
    LOG             reduce using rule 83 (termdistinct -> empty .)
    MOD             reduce using rule 83 (termdistinct -> empty .)
    PI              reduce using rule 83 (termdistinct -> empty .)
    POWER           reduce using rule 83 (termdistinct -> empty .)
    RADIANS         reduce using rule 83 (termdistinct -> empty .)
    ROUND           reduce using rule 83 (termdistinct -> empty .)
    SIGN            reduce using rule 83 (termdistinct -> empty .)
    SQRT            reduce using rule 83 (termdistinct -> empty .)
    WBUCKET         reduce using rule 83 (termdistinct -> empty .)
    TRUNC           reduce using rule 83 (termdistinct -> empty .)
    RANDOM          reduce using rule 83 (termdistinct -> empty .)
    ACOS            reduce using rule 83 (termdistinct -> empty .)
    ACOSD           reduce using rule 83 (termdistinct -> empty .)
    ASIN            reduce using rule 83 (termdistinct -> empty .)
    ASIND           reduce using rule 83 (termdistinct -> empty .)
    ATAN            reduce using rule 83 (termdistinct -> empty .)
    ATAND           reduce using rule 83 (termdistinct -> empty .)
    ATAN2           reduce using rule 83 (termdistinct -> empty .)
    ATAN2D          reduce using rule 83 (termdistinct -> empty .)
    COS             reduce using rule 83 (termdistinct -> empty .)
    COSD            reduce using rule 83 (termdistinct -> empty .)
    COT             reduce using rule 83 (termdistinct -> empty .)
    COTD            reduce using rule 83 (termdistinct -> empty .)
    SIN             reduce using rule 83 (termdistinct -> empty .)
    SIND            reduce using rule 83 (termdistinct -> empty .)
    TAN             reduce using rule 83 (termdistinct -> empty .)
    TAND            reduce using rule 83 (termdistinct -> empty .)
    SINH            reduce using rule 83 (termdistinct -> empty .)
    COSH            reduce using rule 83 (termdistinct -> empty .)
    TANH            reduce using rule 83 (termdistinct -> empty .)
    ASINH           reduce using rule 83 (termdistinct -> empty .)
    ACOSH           reduce using rule 83 (termdistinct -> empty .)
    ATANH           reduce using rule 83 (termdistinct -> empty .)
    SUM             reduce using rule 83 (termdistinct -> empty .)
    AVG             reduce using rule 83 (termdistinct -> empty .)
    MAX             reduce using rule 83 (termdistinct -> empty .)
    MIN             reduce using rule 83 (termdistinct -> empty .)
    LENGTH          reduce using rule 83 (termdistinct -> empty .)
    SUBSTRING       reduce using rule 83 (termdistinct -> empty .)
    SUBSTR          reduce using rule 83 (termdistinct -> empty .)
    TRIM            reduce using rule 83 (termdistinct -> empty .)
    GET_BYTE        reduce using rule 83 (termdistinct -> empty .)
    SET_BYTE        reduce using rule 83 (termdistinct -> empty .)
    ENCODE          reduce using rule 83 (termdistinct -> empty .)
    DECODE          reduce using rule 83 (termdistinct -> empty .)
    SHA256          reduce using rule 83 (termdistinct -> empty .)
    CONVERT         reduce using rule 83 (termdistinct -> empty .)
    NOW             reduce using rule 83 (termdistinct -> empty .)
    EXTRACT         reduce using rule 83 (termdistinct -> empty .)
    DATE_PART       reduce using rule 83 (termdistinct -> empty .)
    CURRENT_DATE    reduce using rule 83 (termdistinct -> empty .)
    CURRENT_TIME    reduce using rule 83 (termdistinct -> empty .)
    TIMESTAMP       reduce using rule 83 (termdistinct -> empty .)


state 71

    (407) llamadaprocedimiento -> EXECUTE ID . PARIZQ PARDER PTCOMA
    (408) llamadaprocedimiento -> EXECUTE ID . PARIZQ listaexpresiones PARDER PTCOMA

    PARIZQ          shift and go to state 192


state 72

    (24) createDB_instr -> CREATE DATABASE existencia .

    $end            reduce using rule 24 (createDB_instr -> CREATE DATABASE existencia .)


state 73

    (25) createDB_instr -> CREATE DATABASE ID . state_owner
    (29) state_owner -> . OWNER IGUAL ID state_mode
    (30) state_owner -> . OWNER IGUAL CADENASIMPLE state_mode
    (31) state_owner -> . OWNER ID state_mode
    (32) state_owner -> . OWNER CADENASIMPLE state_mode
    (33) state_owner -> . state_mode
    (34) state_mode -> . MODE IGUAL ENTERO PTCOMA
    (35) state_mode -> . MODE ENTERO PTCOMA
    (36) state_mode -> . PTCOMA

    OWNER           shift and go to state 194
    MODE            shift and go to state 196
    PTCOMA          shift and go to state 197

    state_owner                    shift and go to state 193
    state_mode                     shift and go to state 195

state 74

    (28) existencia -> IF . NOT EXISTS ID state_owner

    NOT             shift and go to state 198


state 75

    (341) create_table -> CREATE TABLE ID . PARIZQ list_columns_x PARDER end_create_table

    PARIZQ          shift and go to state 199


state 76

    (365) create_enum -> CREATE TYPE ID . AS ENUM PARIZQ list_string PARDER PTCOMA

    AS              shift and go to state 200


state 77

    (394) indexinstr -> CREATE INDEX ID . ON ID PARIZQ ID PARDER PTCOMA
    (395) indexinstr -> CREATE INDEX ID . ON ID USING HASH PARIZQ ID PARDER PTCOMA
    (396) indexinstr -> CREATE INDEX ID . ON ID PARIZQ ID COMA ID PARDER PTCOMA
    (397) indexinstr -> CREATE INDEX ID . ON ID PARIZQ valororderby PARDER PTCOMA
    (399) indexinstr -> CREATE INDEX ID . ON ID PARIZQ LOWER PARIZQ ID PARDER PARDER PTCOMA
    (400) indexinstr -> CREATE INDEX ID . ON ID PARIZQ ID PARDER whereselect PTCOMA
    (401) indexinstr -> CREATE INDEX ID . ON ID PARIZQ ID ID PARDER PTCOMA

    ON              shift and go to state 201


state 78

    (398) indexinstr -> CREATE UNIQUE INDEX . ID ON ID PARIZQ columnas PARDER PTCOMA

    ID              shift and go to state 202


state 79

    (411) plsql_instr -> CREATE procedfunct ID . PARIZQ parametrosfunc PARDER tiporetorno cuerpofuncion

    PARIZQ          shift and go to state 203


state 80

    (26) replaceDB_instr -> REPLACE DATABASE existencia .

    $end            reduce using rule 26 (replaceDB_instr -> REPLACE DATABASE existencia .)


state 81

    (27) replaceDB_instr -> REPLACE DATABASE ID . state_owner
    (29) state_owner -> . OWNER IGUAL ID state_mode
    (30) state_owner -> . OWNER IGUAL CADENASIMPLE state_mode
    (31) state_owner -> . OWNER ID state_mode
    (32) state_owner -> . OWNER CADENASIMPLE state_mode
    (33) state_owner -> . state_mode
    (34) state_mode -> . MODE IGUAL ENTERO PTCOMA
    (35) state_mode -> . MODE ENTERO PTCOMA
    (36) state_mode -> . PTCOMA

    OWNER           shift and go to state 194
    MODE            shift and go to state 196
    PTCOMA          shift and go to state 197

    state_owner                    shift and go to state 204
    state_mode                     shift and go to state 195

state 82

    (37) alterDB_instr -> ALTER DATABASE ID . renameto PTCOMA
    (39) alterDB_instr -> ALTER DATABASE ID . OWNER TO owner_users PTCOMA
    (38) renameto -> . RENAME TO ID

    OWNER           shift and go to state 206
    RENAME          shift and go to state 207

    renameto                       shift and go to state 205

state 83

    (298) alter_instr -> ALTER TABLE ID . ADD COLUMN list_columns
    (299) alter_instr -> ALTER TABLE ID . ADD CHECK PARIZQ condicion PARDER
    (300) alter_instr -> ALTER TABLE ID . ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER
    (301) alter_instr -> ALTER TABLE ID . ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID
    (302) alter_instr -> ALTER TABLE ID . ALTER COLUMN ID SET NOT NULL
    (303) alter_instr -> ALTER TABLE ID . DROP CONSTRAINT ID
    (304) alter_instr -> ALTER TABLE ID . RENAME COLUMN ID TO ID
    (305) alter_instr -> ALTER TABLE ID . DROP COLUMN listtablas
    (306) alter_instr -> ALTER TABLE ID . list_alter_column
    (307) list_alter_column -> . list_alter_column COMA ALTER COLUMN ID TYPE type_column
    (308) list_alter_column -> . ALTER COLUMN ID TYPE type_column

    ADD             shift and go to state 209
    ALTER           shift and go to state 208
    DROP            shift and go to state 210
    RENAME          shift and go to state 211

    list_alter_column              shift and go to state 212

state 84

    (402) alterindex -> ALTER INDEX IF . EXISTS ID ID eoi PTCOMA

    EXISTS          shift and go to state 213


state 85

    (403) alterindex -> ALTER INDEX ID . ID eoi PTCOMA

    ID              shift and go to state 214


state 86

    (43) dropDB_instr -> DROP DATABASE ID . PTCOMA

    PTCOMA          shift and go to state 215


state 87

    (44) dropDB_instr -> DROP DATABASE IF . EXISTS ID PTCOMA

    EXISTS          shift and go to state 216


state 88

    (368) drop_table -> DROP TABLE ID . PTCOMA

    PTCOMA          shift and go to state 217


state 89

    (406) dropindex -> DROP INDEX ID . PTCOMA

    PTCOMA          shift and go to state 218


state 90

    (45) showDB_instr -> SHOW DATABASES PTCOMA .

    $end            reduce using rule 45 (showDB_instr -> SHOW DATABASES PTCOMA .)


state 91

    (46) showDB_instr -> SHOW DATABASES LIKE . CADENASIMPLE PTCOMA

    CADENASIMPLE    shift and go to state 219


state 92

    (48) insert_instr -> INSERT INTO ID . VALUES PARIZQ parametros PARDER PTCOMA
    (49) insert_instr -> INSERT INTO ID . PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA

    VALUES          shift and go to state 220
    PARIZQ          shift and go to state 221


state 93

    (58) update_instr -> UPDATE ID SET . asignaciones PTCOMA
    (59) update_instr -> UPDATE ID SET . asignaciones WHERE condiciones PTCOMA
    (60) asignaciones -> . asignaciones COMA asignacion
    (61) asignaciones -> . asignacion
    (62) asignacion -> . ID IGUAL expresion

    ID              shift and go to state 222

    asignaciones                   shift and go to state 223
    asignacion                     shift and go to state 224

state 94

    (63) delete_instr -> DELETE FROM ID . PTCOMA
    (64) delete_instr -> DELETE FROM ID . WHERE condiciones PTCOMA

    PTCOMA          shift and go to state 225
    WHERE           shift and go to state 226


state 95

    (65) truncate_instr -> TRUNCATE listtablas PTCOMA .

    $end            reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    RAISE           reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    ID              reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    RETURN          reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    EXECUTE         reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    GET             reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    NULL            reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    IF              reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    CASE            reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    COMMIT          reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    ROLLBACK        reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    INSERT          reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    UPDATE          reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    ALTER           reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    CREATE          reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    DROP            reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    DELETE          reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    TRUNCATE        reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    DECLARE         reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    SELECT          reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    BEGIN           reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    END             reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    ELSE            reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    ELSIF           reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)
    WHEN            reduce using rule 65 (truncate_instr -> TRUNCATE listtablas PTCOMA .)


state 96

    (66) truncate_instr -> TRUNCATE listtablas CASCADE . PTCOMA

    PTCOMA          shift and go to state 227


state 97

    (69) listtablas -> listtablas COMA . ID

    ID              shift and go to state 228


state 98

    (67) truncate_instr -> TRUNCATE TABLE listtablas . PTCOMA
    (68) truncate_instr -> TRUNCATE TABLE listtablas . CASCADE PTCOMA
    (69) listtablas -> listtablas . COMA ID

    PTCOMA          shift and go to state 229
    CASCADE         shift and go to state 230
    COMA            shift and go to state 97


state 99

    (71) select_instr -> select_instr1 second_query PTCOMA .

    $end            reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    RAISE           reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    ID              reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    RETURN          reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    EXECUTE         reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    GET             reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    NULL            reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    IF              reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    CASE            reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    COMMIT          reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    ROLLBACK        reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    INSERT          reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    UPDATE          reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    ALTER           reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    CREATE          reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    DROP            reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    DELETE          reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    TRUNCATE        reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    DECLARE         reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    SELECT          reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    BEGIN           reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    END             reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    ELSE            reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    ELSIF           reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)
    WHEN            reduce using rule 71 (select_instr -> select_instr1 second_query PTCOMA .)


state 100

    (72) second_query -> UNION ALL . select_instr1
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    SELECT          shift and go to state 102

    select_instr1                  shift and go to state 231

state 101

    (75) second_query -> UNION select_instr1 .

    PTCOMA          reduce using rule 75 (second_query -> UNION select_instr1 .)


state 102

    (79) select_instr1 -> SELECT . termdistinct selectlist selectfrom
    (82) termdistinct -> . DISTINCT
    (83) termdistinct -> . empty
    (546) empty -> .

    DISTINCT        shift and go to state 69
    ASTERISCO       reduce using rule 546 (empty -> .)
    ID              reduce using rule 546 (empty -> .)
    PARIZQ          reduce using rule 546 (empty -> .)
    COUNT           reduce using rule 546 (empty -> .)
    ABS             reduce using rule 546 (empty -> .)
    CBRT            reduce using rule 546 (empty -> .)
    CEIL            reduce using rule 546 (empty -> .)
    CEILING         reduce using rule 546 (empty -> .)
    DEGREES         reduce using rule 546 (empty -> .)
    DIV             reduce using rule 546 (empty -> .)
    EXP             reduce using rule 546 (empty -> .)
    FACTORIAL       reduce using rule 546 (empty -> .)
    FLOOR           reduce using rule 546 (empty -> .)
    GCD             reduce using rule 546 (empty -> .)
    LN              reduce using rule 546 (empty -> .)
    LOG             reduce using rule 546 (empty -> .)
    MOD             reduce using rule 546 (empty -> .)
    PI              reduce using rule 546 (empty -> .)
    POWER           reduce using rule 546 (empty -> .)
    RADIANS         reduce using rule 546 (empty -> .)
    ROUND           reduce using rule 546 (empty -> .)
    SIGN            reduce using rule 546 (empty -> .)
    SQRT            reduce using rule 546 (empty -> .)
    WBUCKET         reduce using rule 546 (empty -> .)
    TRUNC           reduce using rule 546 (empty -> .)
    RANDOM          reduce using rule 546 (empty -> .)
    ACOS            reduce using rule 546 (empty -> .)
    ACOSD           reduce using rule 546 (empty -> .)
    ASIN            reduce using rule 546 (empty -> .)
    ASIND           reduce using rule 546 (empty -> .)
    ATAN            reduce using rule 546 (empty -> .)
    ATAND           reduce using rule 546 (empty -> .)
    ATAN2           reduce using rule 546 (empty -> .)
    ATAN2D          reduce using rule 546 (empty -> .)
    COS             reduce using rule 546 (empty -> .)
    COSD            reduce using rule 546 (empty -> .)
    COT             reduce using rule 546 (empty -> .)
    COTD            reduce using rule 546 (empty -> .)
    SIN             reduce using rule 546 (empty -> .)
    SIND            reduce using rule 546 (empty -> .)
    TAN             reduce using rule 546 (empty -> .)
    TAND            reduce using rule 546 (empty -> .)
    SINH            reduce using rule 546 (empty -> .)
    COSH            reduce using rule 546 (empty -> .)
    TANH            reduce using rule 546 (empty -> .)
    ASINH           reduce using rule 546 (empty -> .)
    ACOSH           reduce using rule 546 (empty -> .)
    ATANH           reduce using rule 546 (empty -> .)
    SUM             reduce using rule 546 (empty -> .)
    AVG             reduce using rule 546 (empty -> .)
    MAX             reduce using rule 546 (empty -> .)
    MIN             reduce using rule 546 (empty -> .)
    LENGTH          reduce using rule 546 (empty -> .)
    SUBSTRING       reduce using rule 546 (empty -> .)
    SUBSTR          reduce using rule 546 (empty -> .)
    TRIM            reduce using rule 546 (empty -> .)
    GET_BYTE        reduce using rule 546 (empty -> .)
    SET_BYTE        reduce using rule 546 (empty -> .)
    ENCODE          reduce using rule 546 (empty -> .)
    DECODE          reduce using rule 546 (empty -> .)
    SHA256          reduce using rule 546 (empty -> .)
    CONVERT         reduce using rule 546 (empty -> .)
    NOW             reduce using rule 546 (empty -> .)
    EXTRACT         reduce using rule 546 (empty -> .)
    DATE_PART       reduce using rule 546 (empty -> .)
    CURRENT_DATE    reduce using rule 546 (empty -> .)
    CURRENT_TIME    reduce using rule 546 (empty -> .)
    TIMESTAMP       reduce using rule 546 (empty -> .)

    termdistinct                   shift and go to state 68
    empty                          shift and go to state 70

state 103

    (73) second_query -> INTERSECT ALL . select_instr1
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    SELECT          shift and go to state 102

    select_instr1                  shift and go to state 232

state 104

    (76) second_query -> INTERSECT select_instr1 .

    PTCOMA          reduce using rule 76 (second_query -> INTERSECT select_instr1 .)


state 105

    (74) second_query -> EXCEPT ALL . select_instr1
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    SELECT          shift and go to state 102

    select_instr1                  shift and go to state 233

state 106

    (77) second_query -> EXCEPT select_instr1 .

    PTCOMA          reduce using rule 77 (second_query -> EXCEPT select_instr1 .)


state 107

    (47) use_instr -> USE ID PTCOMA .

    $end            reduce using rule 47 (use_instr -> USE ID PTCOMA .)


state 108

    (409) llamadafunciones -> SELECT ID PARIZQ . PARDER PTCOMA
    (410) llamadafunciones -> SELECT ID PARIZQ . listaexpresiones PARDER PTCOMA
    (523) listaexpresiones -> . listaexpresiones COMA expresion
    (524) listaexpresiones -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARDER          shift and go to state 236
    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    listaexpresiones               shift and go to state 237
    expresion                      shift and go to state 238
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 109

    (79) select_instr1 -> SELECT termdistinct selectlist . selectfrom
    (80) selectfrom -> . FROM listatablasselect whereselect groupby orderby
    (81) selectfrom -> . empty
    (546) empty -> .

    FROM            shift and go to state 255
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    selectfrom                     shift and go to state 254
    empty                          shift and go to state 256

state 110

    (84) selectlist -> ASTERISCO .

    FROM            reduce using rule 84 (selectlist -> ASTERISCO .)
    UNION           reduce using rule 84 (selectlist -> ASTERISCO .)
    INTERSECT       reduce using rule 84 (selectlist -> ASTERISCO .)
    EXCEPT          reduce using rule 84 (selectlist -> ASTERISCO .)
    PTCOMA          reduce using rule 84 (selectlist -> ASTERISCO .)
    PARDER          reduce using rule 84 (selectlist -> ASTERISCO .)
    CSIMPLE         reduce using rule 84 (selectlist -> ASTERISCO .)


state 111

    (85) selectlist -> listaselect .
    (93) listaselect -> listaselect . COMA valselect

    FROM            reduce using rule 85 (selectlist -> listaselect .)
    UNION           reduce using rule 85 (selectlist -> listaselect .)
    INTERSECT       reduce using rule 85 (selectlist -> listaselect .)
    EXCEPT          reduce using rule 85 (selectlist -> listaselect .)
    PTCOMA          reduce using rule 85 (selectlist -> listaselect .)
    PARDER          reduce using rule 85 (selectlist -> listaselect .)
    CSIMPLE         reduce using rule 85 (selectlist -> listaselect .)
    COMA            shift and go to state 257


state 112

    (94) listaselect -> valselect .

    COMA            reduce using rule 94 (listaselect -> valselect .)
    FROM            reduce using rule 94 (listaselect -> valselect .)
    UNION           reduce using rule 94 (listaselect -> valselect .)
    INTERSECT       reduce using rule 94 (listaselect -> valselect .)
    EXCEPT          reduce using rule 94 (listaselect -> valselect .)
    PTCOMA          reduce using rule 94 (listaselect -> valselect .)
    PARDER          reduce using rule 94 (listaselect -> valselect .)
    CSIMPLE         reduce using rule 94 (listaselect -> valselect .)


state 113

    (95) valselect -> ID . alias
    (96) valselect -> ID . PUNTO ASTERISCO
    (97) valselect -> ID . PUNTO ID alias
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    PUNTO           shift and go to state 260
    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    COMA            reduce using rule 546 (empty -> .)
    FROM            reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    alias                          shift and go to state 259
    empty                          shift and go to state 264

state 114

    (98) valselect -> funcion_matematica_ws . alias
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    COMA            reduce using rule 546 (empty -> .)
    FROM            reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    alias                          shift and go to state 265
    empty                          shift and go to state 264

state 115

    (99) valselect -> funcion_matematica_s . alias
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    COMA            reduce using rule 546 (empty -> .)
    FROM            reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    alias                          shift and go to state 266
    empty                          shift and go to state 264

state 116

    (100) valselect -> funcion_trigonometrica . alias
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    COMA            reduce using rule 546 (empty -> .)
    FROM            reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    alias                          shift and go to state 267
    empty                          shift and go to state 264

state 117

    (101) valselect -> PARIZQ . select_instr1 PARDER alias
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    SELECT          shift and go to state 102

    select_instr1                  shift and go to state 268

state 118

    (102) valselect -> agregacion . PARIZQ cualquieridentificador PARDER alias

    PARIZQ          shift and go to state 269


state 119

    (103) valselect -> COUNT . PARIZQ ASTERISCO PARDER alias
    (104) valselect -> COUNT . PARIZQ cualquieridentificador PARDER alias

    PARIZQ          shift and go to state 270


state 120

    (105) valselect -> func_bin_strings_1 . alias
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    COMA            reduce using rule 546 (empty -> .)
    FROM            reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    alias                          shift and go to state 271
    empty                          shift and go to state 264

state 121

    (106) valselect -> func_bin_strings_2 . alias
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    COMA            reduce using rule 546 (empty -> .)
    FROM            reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    alias                          shift and go to state 272
    empty                          shift and go to state 264

state 122

    (107) valselect -> func_bin_strings_4 . alias
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    COMA            reduce using rule 546 (empty -> .)
    FROM            reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    alias                          shift and go to state 273
    empty                          shift and go to state 264

state 123

    (108) valselect -> nowinstr .

    COMA            reduce using rule 108 (valselect -> nowinstr .)
    FROM            reduce using rule 108 (valselect -> nowinstr .)
    UNION           reduce using rule 108 (valselect -> nowinstr .)
    INTERSECT       reduce using rule 108 (valselect -> nowinstr .)
    EXCEPT          reduce using rule 108 (valselect -> nowinstr .)
    PTCOMA          reduce using rule 108 (valselect -> nowinstr .)
    PARDER          reduce using rule 108 (valselect -> nowinstr .)
    CSIMPLE         reduce using rule 108 (valselect -> nowinstr .)


state 124

    (109) valselect -> extract_instr . alias
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    COMA            reduce using rule 546 (empty -> .)
    FROM            reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    alias                          shift and go to state 274
    empty                          shift and go to state 264

state 125

    (110) valselect -> datepart_instr . alias
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    COMA            reduce using rule 546 (empty -> .)
    FROM            reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    alias                          shift and go to state 275
    empty                          shift and go to state 264

state 126

    (111) valselect -> current . alias
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    COMA            reduce using rule 546 (empty -> .)
    FROM            reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    alias                          shift and go to state 276
    empty                          shift and go to state 264

state 127

    (112) valselect -> timestampnow . alias
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    COMA            reduce using rule 546 (empty -> .)
    FROM            reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    alias                          shift and go to state 277
    empty                          shift and go to state 264

state 128

    (232) funcion_matematica_ws -> ABS . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 278


state 129

    (233) funcion_matematica_ws -> CBRT . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 279


state 130

    (234) funcion_matematica_ws -> CEIL . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 280


state 131

    (235) funcion_matematica_ws -> CEILING . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 281


state 132

    (236) funcion_matematica_s -> DEGREES . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 282


state 133

    (237) funcion_matematica_s -> DIV . PARIZQ expresionaritmetica COMA expresionaritmetica PARDER

    PARIZQ          shift and go to state 283


state 134

    (238) funcion_matematica_s -> EXP . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 284


state 135

    (239) funcion_matematica_s -> FACTORIAL . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 285


state 136

    (240) funcion_matematica_s -> FLOOR . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 286


state 137

    (241) funcion_matematica_s -> GCD . PARIZQ expresionaritmetica COMA expresionaritmetica PARDER

    PARIZQ          shift and go to state 287


state 138

    (242) funcion_matematica_s -> LN . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 288


state 139

    (243) funcion_matematica_s -> LOG . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 289


state 140

    (244) funcion_matematica_s -> MOD . PARIZQ expresionaritmetica COMA expresionaritmetica PARDER

    PARIZQ          shift and go to state 290


state 141

    (245) funcion_matematica_s -> PI . PARIZQ PARDER

    PARIZQ          shift and go to state 291


state 142

    (246) funcion_matematica_s -> POWER . PARIZQ expresionaritmetica COMA expresionaritmetica PARDER

    PARIZQ          shift and go to state 292


state 143

    (247) funcion_matematica_s -> RADIANS . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 293


state 144

    (248) funcion_matematica_s -> ROUND . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 294


state 145

    (249) funcion_matematica_s -> SIGN . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 295


state 146

    (250) funcion_matematica_s -> SQRT . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 296


state 147

    (251) funcion_matematica_s -> WBUCKET . PARIZQ explist PARDER

    PARIZQ          shift and go to state 297


state 148

    (252) funcion_matematica_s -> TRUNC . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 298


state 149

    (253) funcion_matematica_s -> RANDOM . PARIZQ PARDER

    PARIZQ          shift and go to state 299


state 150

    (255) funcion_trigonometrica -> ACOS . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 300


state 151

    (256) funcion_trigonometrica -> ACOSD . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 301


state 152

    (257) funcion_trigonometrica -> ASIN . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 302


state 153

    (258) funcion_trigonometrica -> ASIND . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 303


state 154

    (259) funcion_trigonometrica -> ATAN . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 304


state 155

    (260) funcion_trigonometrica -> ATAND . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 305


state 156

    (261) funcion_trigonometrica -> ATAN2 . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 306


state 157

    (262) funcion_trigonometrica -> ATAN2D . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 307


state 158

    (263) funcion_trigonometrica -> COS . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 308


state 159

    (264) funcion_trigonometrica -> COSD . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 309


state 160

    (265) funcion_trigonometrica -> COT . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 310


state 161

    (266) funcion_trigonometrica -> COTD . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 311


state 162

    (267) funcion_trigonometrica -> SIN . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 312


state 163

    (268) funcion_trigonometrica -> SIND . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 313


state 164

    (269) funcion_trigonometrica -> TAN . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 314


state 165

    (270) funcion_trigonometrica -> TAND . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 315


state 166

    (271) funcion_trigonometrica -> SINH . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 316


state 167

    (272) funcion_trigonometrica -> COSH . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 317


state 168

    (273) funcion_trigonometrica -> TANH . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 318


state 169

    (274) funcion_trigonometrica -> ASINH . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 319


state 170

    (275) funcion_trigonometrica -> ACOSH . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 320


state 171

    (276) funcion_trigonometrica -> ATANH . PARIZQ expresionaritmetica PARDER

    PARIZQ          shift and go to state 321


state 172

    (113) agregacion -> SUM .

    PARIZQ          reduce using rule 113 (agregacion -> SUM .)


state 173

    (114) agregacion -> AVG .

    PARIZQ          reduce using rule 114 (agregacion -> AVG .)


state 174

    (115) agregacion -> MAX .

    PARIZQ          reduce using rule 115 (agregacion -> MAX .)


state 175

    (116) agregacion -> MIN .

    PARIZQ          reduce using rule 116 (agregacion -> MIN .)


state 176

    (277) func_bin_strings_1 -> LENGTH . PARIZQ cadena PARDER

    PARIZQ          shift and go to state 322


state 177

    (278) func_bin_strings_2 -> SUBSTRING . PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER

    PARIZQ          shift and go to state 323


state 178

    (279) func_bin_strings_2 -> SUBSTR . PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER

    PARIZQ          shift and go to state 324


state 179

    (280) func_bin_strings_2 -> TRIM . PARIZQ cadena PARDER

    PARIZQ          shift and go to state 325


state 180

    (282) func_bin_strings_4 -> GET_BYTE . PARIZQ cadena COMA ENTERO PARDER

    PARIZQ          shift and go to state 326


state 181

    (283) func_bin_strings_4 -> SET_BYTE . PARIZQ cadena COMA ENTERO COMA ENTERO PARDER

    PARIZQ          shift and go to state 327


state 182

    (284) func_bin_strings_4 -> ENCODE . PARIZQ cadena COMA cadena PARDER

    PARIZQ          shift and go to state 328


state 183

    (285) func_bin_strings_4 -> DECODE . PARIZQ cadena COMA cadena PARDER

    PARIZQ          shift and go to state 329


state 184

    (286) func_bin_strings_4 -> SHA256 . PARIZQ cadena PARDER

    PARIZQ          shift and go to state 330


state 185

    (287) func_bin_strings_4 -> CONVERT . PARIZQ alias PARDER

    PARIZQ          shift and go to state 331


state 186

    (393) nowinstr -> NOW . PARIZQ PARDER

    PARIZQ          shift and go to state 332


state 187

    (382) extract_instr -> EXTRACT . PARIZQ valdate FROM TIMESTAMP CADENASIMPLE PARDER

    PARIZQ          shift and go to state 333


state 188

    (392) timestampnow -> TIMESTAMP . CADENASIMPLE

    CADENASIMPLE    shift and go to state 334


state 189

    (389) datepart_instr -> DATE_PART . PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER

    PARIZQ          shift and go to state 335


state 190

    (390) current -> CURRENT_DATE .

    ID              reduce using rule 390 (current -> CURRENT_DATE .)
    CADENASIMPLE    reduce using rule 390 (current -> CURRENT_DATE .)
    CADENADOBLE     reduce using rule 390 (current -> CURRENT_DATE .)
    AS              reduce using rule 390 (current -> CURRENT_DATE .)
    COMA            reduce using rule 390 (current -> CURRENT_DATE .)
    FROM            reduce using rule 390 (current -> CURRENT_DATE .)
    UNION           reduce using rule 390 (current -> CURRENT_DATE .)
    INTERSECT       reduce using rule 390 (current -> CURRENT_DATE .)
    EXCEPT          reduce using rule 390 (current -> CURRENT_DATE .)
    PTCOMA          reduce using rule 390 (current -> CURRENT_DATE .)
    PARDER          reduce using rule 390 (current -> CURRENT_DATE .)
    CSIMPLE         reduce using rule 390 (current -> CURRENT_DATE .)


state 191

    (391) current -> CURRENT_TIME .

    ID              reduce using rule 391 (current -> CURRENT_TIME .)
    CADENASIMPLE    reduce using rule 391 (current -> CURRENT_TIME .)
    CADENADOBLE     reduce using rule 391 (current -> CURRENT_TIME .)
    AS              reduce using rule 391 (current -> CURRENT_TIME .)
    COMA            reduce using rule 391 (current -> CURRENT_TIME .)
    FROM            reduce using rule 391 (current -> CURRENT_TIME .)
    UNION           reduce using rule 391 (current -> CURRENT_TIME .)
    INTERSECT       reduce using rule 391 (current -> CURRENT_TIME .)
    EXCEPT          reduce using rule 391 (current -> CURRENT_TIME .)
    PTCOMA          reduce using rule 391 (current -> CURRENT_TIME .)
    PARDER          reduce using rule 391 (current -> CURRENT_TIME .)
    CSIMPLE         reduce using rule 391 (current -> CURRENT_TIME .)


state 192

    (407) llamadaprocedimiento -> EXECUTE ID PARIZQ . PARDER PTCOMA
    (408) llamadaprocedimiento -> EXECUTE ID PARIZQ . listaexpresiones PARDER PTCOMA
    (523) listaexpresiones -> . listaexpresiones COMA expresion
    (524) listaexpresiones -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARDER          shift and go to state 336
    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    listaexpresiones               shift and go to state 337
    expresion                      shift and go to state 238
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 193

    (25) createDB_instr -> CREATE DATABASE ID state_owner .

    $end            reduce using rule 25 (createDB_instr -> CREATE DATABASE ID state_owner .)


state 194

    (29) state_owner -> OWNER . IGUAL ID state_mode
    (30) state_owner -> OWNER . IGUAL CADENASIMPLE state_mode
    (31) state_owner -> OWNER . ID state_mode
    (32) state_owner -> OWNER . CADENASIMPLE state_mode

    IGUAL           shift and go to state 338
    ID              shift and go to state 339
    CADENASIMPLE    shift and go to state 340


state 195

    (33) state_owner -> state_mode .

    $end            reduce using rule 33 (state_owner -> state_mode .)


state 196

    (34) state_mode -> MODE . IGUAL ENTERO PTCOMA
    (35) state_mode -> MODE . ENTERO PTCOMA

    IGUAL           shift and go to state 341
    ENTERO          shift and go to state 342


state 197

    (36) state_mode -> PTCOMA .

    $end            reduce using rule 36 (state_mode -> PTCOMA .)


state 198

    (28) existencia -> IF NOT . EXISTS ID state_owner

    EXISTS          shift and go to state 343


state 199

    (341) create_table -> CREATE TABLE ID PARIZQ . list_columns_x PARDER end_create_table
    (344) list_columns_x -> . list_columns_x COMA key_column
    (345) list_columns_x -> . key_column
    (346) key_column -> . PRIMARY KEY PARIZQ listtablas PARDER
    (347) key_column -> . ID type_column attributes

    PRIMARY         shift and go to state 347
    ID              shift and go to state 344

    list_columns_x                 shift and go to state 345
    key_column                     shift and go to state 346

state 200

    (365) create_enum -> CREATE TYPE ID AS . ENUM PARIZQ list_string PARDER PTCOMA

    ENUM            shift and go to state 348


state 201

    (394) indexinstr -> CREATE INDEX ID ON . ID PARIZQ ID PARDER PTCOMA
    (395) indexinstr -> CREATE INDEX ID ON . ID USING HASH PARIZQ ID PARDER PTCOMA
    (396) indexinstr -> CREATE INDEX ID ON . ID PARIZQ ID COMA ID PARDER PTCOMA
    (397) indexinstr -> CREATE INDEX ID ON . ID PARIZQ valororderby PARDER PTCOMA
    (399) indexinstr -> CREATE INDEX ID ON . ID PARIZQ LOWER PARIZQ ID PARDER PARDER PTCOMA
    (400) indexinstr -> CREATE INDEX ID ON . ID PARIZQ ID PARDER whereselect PTCOMA
    (401) indexinstr -> CREATE INDEX ID ON . ID PARIZQ ID ID PARDER PTCOMA

    ID              shift and go to state 349


state 202

    (398) indexinstr -> CREATE UNIQUE INDEX ID . ON ID PARIZQ columnas PARDER PTCOMA

    ON              shift and go to state 350


state 203

    (411) plsql_instr -> CREATE procedfunct ID PARIZQ . parametrosfunc PARDER tiporetorno cuerpofuncion
    (418) parametrosfunc -> . listaparametrosfunc
    (419) parametrosfunc -> . empty
    (420) listaparametrosfunc -> . listaparametrosfunc COMA parfunc
    (421) listaparametrosfunc -> . parfunc
    (546) empty -> .
    (422) parfunc -> . OUT ID type_column1
    (423) parfunc -> . INOUT ID type_column1
    (424) parfunc -> . ID type_column1
    (425) parfunc -> . type_column1
    (489) type_column1 -> . SMALLINT
    (490) type_column1 -> . INTEGER
    (491) type_column1 -> . BIGINT
    (492) type_column1 -> . RDECIMAL
    (493) type_column1 -> . RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER
    (494) type_column1 -> . NUMERIC
    (495) type_column1 -> . NUMERIC PARIZQ ENTERO PARDER
    (496) type_column1 -> . REAL
    (497) type_column1 -> . FLOAT
    (498) type_column1 -> . INT
    (499) type_column1 -> . DOUBLE
    (500) type_column1 -> . MONEY
    (501) type_column1 -> . VARCHAR
    (502) type_column1 -> . VARCHAR PARIZQ ENTERO PARDER
    (503) type_column1 -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (504) type_column1 -> . CHARACTER PARIZQ ENTERO PARDER
    (505) type_column1 -> . CHAR
    (506) type_column1 -> . CHAR PARIZQ ENTERO PARDER
    (507) type_column1 -> . TEXT
    (508) type_column1 -> . TIMESTAMP
    (509) type_column1 -> . TIMESTAMP PARIZQ ENTERO PARDER
    (510) type_column1 -> . DATE
    (511) type_column1 -> . TIME
    (512) type_column1 -> . BOOLEAN
    (513) type_column1 -> . ID
    (514) type_column1 -> . TIME PARIZQ ENTERO PARDER
    (515) type_column1 -> . RECORD
    (516) type_column1 -> . TABLE PARIZQ parametrosfunc PARDER

    PARDER          reduce using rule 546 (empty -> .)
    OUT             shift and go to state 356
    INOUT           shift and go to state 358
    ID              shift and go to state 351
    SMALLINT        shift and go to state 359
    INTEGER         shift and go to state 360
    BIGINT          shift and go to state 361
    RDECIMAL        shift and go to state 362
    NUMERIC         shift and go to state 363
    REAL            shift and go to state 364
    FLOAT           shift and go to state 365
    INT             shift and go to state 366
    DOUBLE          shift and go to state 367
    MONEY           shift and go to state 368
    VARCHAR         shift and go to state 369
    CHARACTER       shift and go to state 370
    CHAR            shift and go to state 371
    TEXT            shift and go to state 372
    TIMESTAMP       shift and go to state 373
    DATE            shift and go to state 374
    TIME            shift and go to state 375
    BOOLEAN         shift and go to state 376
    RECORD          shift and go to state 377
    TABLE           shift and go to state 378

    parametrosfunc                 shift and go to state 352
    listaparametrosfunc            shift and go to state 353
    empty                          shift and go to state 354
    parfunc                        shift and go to state 355
    type_column1                   shift and go to state 357

state 204

    (27) replaceDB_instr -> REPLACE DATABASE ID state_owner .

    $end            reduce using rule 27 (replaceDB_instr -> REPLACE DATABASE ID state_owner .)


state 205

    (37) alterDB_instr -> ALTER DATABASE ID renameto . PTCOMA

    PTCOMA          shift and go to state 379


state 206

    (39) alterDB_instr -> ALTER DATABASE ID OWNER . TO owner_users PTCOMA

    TO              shift and go to state 380


state 207

    (38) renameto -> RENAME . TO ID

    TO              shift and go to state 381


state 208

    (302) alter_instr -> ALTER TABLE ID ALTER . COLUMN ID SET NOT NULL
    (308) list_alter_column -> ALTER . COLUMN ID TYPE type_column

    COLUMN          shift and go to state 382


state 209

    (298) alter_instr -> ALTER TABLE ID ADD . COLUMN list_columns
    (299) alter_instr -> ALTER TABLE ID ADD . CHECK PARIZQ condicion PARDER
    (300) alter_instr -> ALTER TABLE ID ADD . CONSTRAINT ID UNIQUE PARIZQ ID PARDER
    (301) alter_instr -> ALTER TABLE ID ADD . FOREIGN KEY PARIZQ ID PARDER REFERENCES ID

    COLUMN          shift and go to state 383
    CHECK           shift and go to state 384
    CONSTRAINT      shift and go to state 385
    FOREIGN         shift and go to state 386


state 210

    (303) alter_instr -> ALTER TABLE ID DROP . CONSTRAINT ID
    (305) alter_instr -> ALTER TABLE ID DROP . COLUMN listtablas

    CONSTRAINT      shift and go to state 387
    COLUMN          shift and go to state 388


state 211

    (304) alter_instr -> ALTER TABLE ID RENAME . COLUMN ID TO ID

    COLUMN          shift and go to state 389


state 212

    (306) alter_instr -> ALTER TABLE ID list_alter_column .
    (307) list_alter_column -> list_alter_column . COMA ALTER COLUMN ID TYPE type_column

    PTCOMA          reduce using rule 306 (alter_instr -> ALTER TABLE ID list_alter_column .)
    COMA            shift and go to state 390


state 213

    (402) alterindex -> ALTER INDEX IF EXISTS . ID ID eoi PTCOMA

    ID              shift and go to state 391


state 214

    (403) alterindex -> ALTER INDEX ID ID . eoi PTCOMA
    (404) eoi -> . ENTERO
    (405) eoi -> . ID

    ENTERO          shift and go to state 394
    ID              shift and go to state 392

    eoi                            shift and go to state 393

state 215

    (43) dropDB_instr -> DROP DATABASE ID PTCOMA .

    $end            reduce using rule 43 (dropDB_instr -> DROP DATABASE ID PTCOMA .)


state 216

    (44) dropDB_instr -> DROP DATABASE IF EXISTS . ID PTCOMA

    ID              shift and go to state 395


state 217

    (368) drop_table -> DROP TABLE ID PTCOMA .

    $end            reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    RAISE           reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    ID              reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    RETURN          reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    EXECUTE         reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    GET             reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    NULL            reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    IF              reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    CASE            reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    COMMIT          reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    ROLLBACK        reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    INSERT          reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    UPDATE          reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    ALTER           reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    CREATE          reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    DROP            reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    DELETE          reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    TRUNCATE        reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    DECLARE         reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    SELECT          reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    BEGIN           reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    END             reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    ELSE            reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    ELSIF           reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)
    WHEN            reduce using rule 368 (drop_table -> DROP TABLE ID PTCOMA .)


state 218

    (406) dropindex -> DROP INDEX ID PTCOMA .

    $end            reduce using rule 406 (dropindex -> DROP INDEX ID PTCOMA .)


state 219

    (46) showDB_instr -> SHOW DATABASES LIKE CADENASIMPLE . PTCOMA

    PTCOMA          shift and go to state 396


state 220

    (48) insert_instr -> INSERT INTO ID VALUES . PARIZQ parametros PARDER PTCOMA

    PARIZQ          shift and go to state 397


state 221

    (49) insert_instr -> INSERT INTO ID PARIZQ . columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA
    (56) columnas -> . columnas COMA ID
    (57) columnas -> . ID

    ID              shift and go to state 398

    columnas                       shift and go to state 399

state 222

    (62) asignacion -> ID . IGUAL expresion

    IGUAL           shift and go to state 400


state 223

    (58) update_instr -> UPDATE ID SET asignaciones . PTCOMA
    (59) update_instr -> UPDATE ID SET asignaciones . WHERE condiciones PTCOMA
    (60) asignaciones -> asignaciones . COMA asignacion

    PTCOMA          shift and go to state 401
    WHERE           shift and go to state 402
    COMA            shift and go to state 403


state 224

    (61) asignaciones -> asignacion .

    PTCOMA          reduce using rule 61 (asignaciones -> asignacion .)
    WHERE           reduce using rule 61 (asignaciones -> asignacion .)
    COMA            reduce using rule 61 (asignaciones -> asignacion .)


state 225

    (63) delete_instr -> DELETE FROM ID PTCOMA .

    $end            reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    RAISE           reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    ID              reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    RETURN          reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    EXECUTE         reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    GET             reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    NULL            reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    IF              reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    CASE            reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    COMMIT          reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    ROLLBACK        reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    INSERT          reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    UPDATE          reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    ALTER           reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    CREATE          reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    DROP            reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    DELETE          reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    TRUNCATE        reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    DECLARE         reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    SELECT          reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    BEGIN           reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    END             reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    ELSE            reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    ELSIF           reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)
    WHEN            reduce using rule 63 (delete_instr -> DELETE FROM ID PTCOMA .)


state 226

    (64) delete_instr -> DELETE FROM ID WHERE . condiciones PTCOMA
    (195) condiciones -> . condiciones AND condicion
    (196) condiciones -> . condiciones OR condicion
    (197) condiciones -> . NOT PARIZQ condiciones PARDER
    (198) condiciones -> . NOT condiciones
    (199) condiciones -> . condicion
    (200) condicion -> . expresion MENQUE expresion
    (201) condicion -> . expresion MAYQUE expresion
    (202) condicion -> . expresion MENIGUAL expresion
    (203) condicion -> . expresion MAYIGUAL expresion
    (204) condicion -> . expresion IGUAL expresion
    (205) condicion -> . expresion DIFERENTE expresion
    (206) condicion -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    NOT             shift and go to state 406
    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    condiciones                    shift and go to state 404
    condicion                      shift and go to state 405
    expresion                      shift and go to state 407
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 227

    (66) truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .

    $end            reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    RAISE           reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    ID              reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    RETURN          reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    EXECUTE         reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    GET             reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    NULL            reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    IF              reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    CASE            reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    COMMIT          reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    ROLLBACK        reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    INSERT          reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    UPDATE          reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    ALTER           reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    CREATE          reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    DROP            reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    DELETE          reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    TRUNCATE        reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    DECLARE         reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    SELECT          reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    BEGIN           reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    END             reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    ELSE            reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    ELSIF           reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)
    WHEN            reduce using rule 66 (truncate_instr -> TRUNCATE listtablas CASCADE PTCOMA .)


state 228

    (69) listtablas -> listtablas COMA ID .

    PTCOMA          reduce using rule 69 (listtablas -> listtablas COMA ID .)
    CASCADE         reduce using rule 69 (listtablas -> listtablas COMA ID .)
    COMA            reduce using rule 69 (listtablas -> listtablas COMA ID .)
    PARDER          reduce using rule 69 (listtablas -> listtablas COMA ID .)


state 229

    (67) truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .

    $end            reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    RAISE           reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    ID              reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    RETURN          reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    EXECUTE         reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    GET             reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    NULL            reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    IF              reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    CASE            reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    COMMIT          reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    ROLLBACK        reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    INSERT          reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    UPDATE          reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    ALTER           reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    CREATE          reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    DROP            reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    DELETE          reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    TRUNCATE        reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    DECLARE         reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    SELECT          reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    BEGIN           reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    END             reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    ELSE            reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    ELSIF           reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)
    WHEN            reduce using rule 67 (truncate_instr -> TRUNCATE TABLE listtablas PTCOMA .)


state 230

    (68) truncate_instr -> TRUNCATE TABLE listtablas CASCADE . PTCOMA

    PTCOMA          shift and go to state 408


state 231

    (72) second_query -> UNION ALL select_instr1 .

    PTCOMA          reduce using rule 72 (second_query -> UNION ALL select_instr1 .)


state 232

    (73) second_query -> INTERSECT ALL select_instr1 .

    PTCOMA          reduce using rule 73 (second_query -> INTERSECT ALL select_instr1 .)


state 233

    (74) second_query -> EXCEPT ALL select_instr1 .

    PTCOMA          reduce using rule 74 (second_query -> EXCEPT ALL select_instr1 .)


state 234

    (228) cualquieridentificador -> ID .
    (229) cualquieridentificador -> ID . PUNTO ID

    MAS             reduce using rule 228 (cualquieridentificador -> ID .)
    MENOS           reduce using rule 228 (cualquieridentificador -> ID .)
    ASTERISCO       reduce using rule 228 (cualquieridentificador -> ID .)
    DIVIDIDO        reduce using rule 228 (cualquieridentificador -> ID .)
    MODULO          reduce using rule 228 (cualquieridentificador -> ID .)
    EXPONENTE       reduce using rule 228 (cualquieridentificador -> ID .)
    PARDER          reduce using rule 228 (cualquieridentificador -> ID .)
    COMA            reduce using rule 228 (cualquieridentificador -> ID .)
    MENQUE          reduce using rule 228 (cualquieridentificador -> ID .)
    MAYQUE          reduce using rule 228 (cualquieridentificador -> ID .)
    MENIGUAL        reduce using rule 228 (cualquieridentificador -> ID .)
    MAYIGUAL        reduce using rule 228 (cualquieridentificador -> ID .)
    IGUAL           reduce using rule 228 (cualquieridentificador -> ID .)
    DIFERENTE       reduce using rule 228 (cualquieridentificador -> ID .)
    PTCOMA          reduce using rule 228 (cualquieridentificador -> ID .)
    AND             reduce using rule 228 (cualquieridentificador -> ID .)
    OR              reduce using rule 228 (cualquieridentificador -> ID .)
    WHERE           reduce using rule 228 (cualquieridentificador -> ID .)
    THEN            reduce using rule 228 (cualquieridentificador -> ID .)
    RAISE           reduce using rule 228 (cualquieridentificador -> ID .)
    ID              reduce using rule 228 (cualquieridentificador -> ID .)
    RETURN          reduce using rule 228 (cualquieridentificador -> ID .)
    EXECUTE         reduce using rule 228 (cualquieridentificador -> ID .)
    GET             reduce using rule 228 (cualquieridentificador -> ID .)
    NULL            reduce using rule 228 (cualquieridentificador -> ID .)
    IF              reduce using rule 228 (cualquieridentificador -> ID .)
    CASE            reduce using rule 228 (cualquieridentificador -> ID .)
    COMMIT          reduce using rule 228 (cualquieridentificador -> ID .)
    ROLLBACK        reduce using rule 228 (cualquieridentificador -> ID .)
    INSERT          reduce using rule 228 (cualquieridentificador -> ID .)
    UPDATE          reduce using rule 228 (cualquieridentificador -> ID .)
    ALTER           reduce using rule 228 (cualquieridentificador -> ID .)
    CREATE          reduce using rule 228 (cualquieridentificador -> ID .)
    DROP            reduce using rule 228 (cualquieridentificador -> ID .)
    DELETE          reduce using rule 228 (cualquieridentificador -> ID .)
    TRUNCATE        reduce using rule 228 (cualquieridentificador -> ID .)
    DECLARE         reduce using rule 228 (cualquieridentificador -> ID .)
    SELECT          reduce using rule 228 (cualquieridentificador -> ID .)
    BEGIN           reduce using rule 228 (cualquieridentificador -> ID .)
    END             reduce using rule 228 (cualquieridentificador -> ID .)
    ELSE            reduce using rule 228 (cualquieridentificador -> ID .)
    ELSIF           reduce using rule 228 (cualquieridentificador -> ID .)
    WHEN            reduce using rule 228 (cualquieridentificador -> ID .)
    GROUP           reduce using rule 228 (cualquieridentificador -> ID .)
    ORDER           reduce using rule 228 (cualquieridentificador -> ID .)
    UNION           reduce using rule 228 (cualquieridentificador -> ID .)
    INTERSECT       reduce using rule 228 (cualquieridentificador -> ID .)
    EXCEPT          reduce using rule 228 (cualquieridentificador -> ID .)
    CSIMPLE         reduce using rule 228 (cualquieridentificador -> ID .)
    NOT             reduce using rule 228 (cualquieridentificador -> ID .)
    IN              reduce using rule 228 (cualquieridentificador -> ID .)
    LIKE            reduce using rule 228 (cualquieridentificador -> ID .)
    BETWEEN         reduce using rule 228 (cualquieridentificador -> ID .)
    IS              reduce using rule 228 (cualquieridentificador -> ID .)
    ISNULL          reduce using rule 228 (cualquieridentificador -> ID .)
    NOTNULL         reduce using rule 228 (cualquieridentificador -> ID .)
    HAVING          reduce using rule 228 (cualquieridentificador -> ID .)
    DESC            reduce using rule 228 (cualquieridentificador -> ID .)
    ASC             reduce using rule 228 (cualquieridentificador -> ID .)
    NULLS           reduce using rule 228 (cualquieridentificador -> ID .)
    LIMIT           reduce using rule 228 (cualquieridentificador -> ID .)
    PUNTO           shift and go to state 409


state 235

    (213) expresion -> PARIZQ . select_instr1 PARDER
    (223) expresionaritmetica -> PARIZQ . expresionaritmetica PARDER
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    SELECT          shift and go to state 102
    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    select_instr1                  shift and go to state 411
    expresionaritmetica            shift and go to state 412
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 236

    (409) llamadafunciones -> SELECT ID PARIZQ PARDER . PTCOMA

    PTCOMA          shift and go to state 413


state 237

    (410) llamadafunciones -> SELECT ID PARIZQ listaexpresiones . PARDER PTCOMA
    (523) listaexpresiones -> listaexpresiones . COMA expresion

    PARDER          shift and go to state 414
    COMA            shift and go to state 415


state 238

    (524) listaexpresiones -> expresion .

    PARDER          reduce using rule 524 (listaexpresiones -> expresion .)
    COMA            reduce using rule 524 (listaexpresiones -> expresion .)
    THEN            reduce using rule 524 (listaexpresiones -> expresion .)
    RAISE           reduce using rule 524 (listaexpresiones -> expresion .)
    ID              reduce using rule 524 (listaexpresiones -> expresion .)
    RETURN          reduce using rule 524 (listaexpresiones -> expresion .)
    EXECUTE         reduce using rule 524 (listaexpresiones -> expresion .)
    GET             reduce using rule 524 (listaexpresiones -> expresion .)
    NULL            reduce using rule 524 (listaexpresiones -> expresion .)
    IF              reduce using rule 524 (listaexpresiones -> expresion .)
    CASE            reduce using rule 524 (listaexpresiones -> expresion .)
    COMMIT          reduce using rule 524 (listaexpresiones -> expresion .)
    ROLLBACK        reduce using rule 524 (listaexpresiones -> expresion .)
    INSERT          reduce using rule 524 (listaexpresiones -> expresion .)
    UPDATE          reduce using rule 524 (listaexpresiones -> expresion .)
    ALTER           reduce using rule 524 (listaexpresiones -> expresion .)
    CREATE          reduce using rule 524 (listaexpresiones -> expresion .)
    DROP            reduce using rule 524 (listaexpresiones -> expresion .)
    DELETE          reduce using rule 524 (listaexpresiones -> expresion .)
    TRUNCATE        reduce using rule 524 (listaexpresiones -> expresion .)
    DECLARE         reduce using rule 524 (listaexpresiones -> expresion .)
    SELECT          reduce using rule 524 (listaexpresiones -> expresion .)
    BEGIN           reduce using rule 524 (listaexpresiones -> expresion .)
    END             reduce using rule 524 (listaexpresiones -> expresion .)
    ELSE            reduce using rule 524 (listaexpresiones -> expresion .)
    ELSIF           reduce using rule 524 (listaexpresiones -> expresion .)
    WHEN            reduce using rule 524 (listaexpresiones -> expresion .)
    PTCOMA          reduce using rule 524 (listaexpresiones -> expresion .)


state 239

    (207) expresion -> cualquiercadena .

    PARDER          reduce using rule 207 (expresion -> cualquiercadena .)
    COMA            reduce using rule 207 (expresion -> cualquiercadena .)
    MENQUE          reduce using rule 207 (expresion -> cualquiercadena .)
    MAYQUE          reduce using rule 207 (expresion -> cualquiercadena .)
    MENIGUAL        reduce using rule 207 (expresion -> cualquiercadena .)
    MAYIGUAL        reduce using rule 207 (expresion -> cualquiercadena .)
    IGUAL           reduce using rule 207 (expresion -> cualquiercadena .)
    DIFERENTE       reduce using rule 207 (expresion -> cualquiercadena .)
    PTCOMA          reduce using rule 207 (expresion -> cualquiercadena .)
    AND             reduce using rule 207 (expresion -> cualquiercadena .)
    OR              reduce using rule 207 (expresion -> cualquiercadena .)
    WHERE           reduce using rule 207 (expresion -> cualquiercadena .)
    THEN            reduce using rule 207 (expresion -> cualquiercadena .)
    RAISE           reduce using rule 207 (expresion -> cualquiercadena .)
    ID              reduce using rule 207 (expresion -> cualquiercadena .)
    RETURN          reduce using rule 207 (expresion -> cualquiercadena .)
    EXECUTE         reduce using rule 207 (expresion -> cualquiercadena .)
    GET             reduce using rule 207 (expresion -> cualquiercadena .)
    NULL            reduce using rule 207 (expresion -> cualquiercadena .)
    IF              reduce using rule 207 (expresion -> cualquiercadena .)
    CASE            reduce using rule 207 (expresion -> cualquiercadena .)
    COMMIT          reduce using rule 207 (expresion -> cualquiercadena .)
    ROLLBACK        reduce using rule 207 (expresion -> cualquiercadena .)
    INSERT          reduce using rule 207 (expresion -> cualquiercadena .)
    UPDATE          reduce using rule 207 (expresion -> cualquiercadena .)
    ALTER           reduce using rule 207 (expresion -> cualquiercadena .)
    CREATE          reduce using rule 207 (expresion -> cualquiercadena .)
    DROP            reduce using rule 207 (expresion -> cualquiercadena .)
    DELETE          reduce using rule 207 (expresion -> cualquiercadena .)
    TRUNCATE        reduce using rule 207 (expresion -> cualquiercadena .)
    DECLARE         reduce using rule 207 (expresion -> cualquiercadena .)
    SELECT          reduce using rule 207 (expresion -> cualquiercadena .)
    BEGIN           reduce using rule 207 (expresion -> cualquiercadena .)
    END             reduce using rule 207 (expresion -> cualquiercadena .)
    ELSE            reduce using rule 207 (expresion -> cualquiercadena .)
    ELSIF           reduce using rule 207 (expresion -> cualquiercadena .)
    WHEN            reduce using rule 207 (expresion -> cualquiercadena .)
    GROUP           reduce using rule 207 (expresion -> cualquiercadena .)
    ORDER           reduce using rule 207 (expresion -> cualquiercadena .)
    UNION           reduce using rule 207 (expresion -> cualquiercadena .)
    INTERSECT       reduce using rule 207 (expresion -> cualquiercadena .)
    EXCEPT          reduce using rule 207 (expresion -> cualquiercadena .)
    CSIMPLE         reduce using rule 207 (expresion -> cualquiercadena .)


state 240

    (208) expresion -> funcion_matematica_ws .

    PARDER          reduce using rule 208 (expresion -> funcion_matematica_ws .)
    COMA            reduce using rule 208 (expresion -> funcion_matematica_ws .)
    MENQUE          reduce using rule 208 (expresion -> funcion_matematica_ws .)
    MAYQUE          reduce using rule 208 (expresion -> funcion_matematica_ws .)
    MENIGUAL        reduce using rule 208 (expresion -> funcion_matematica_ws .)
    MAYIGUAL        reduce using rule 208 (expresion -> funcion_matematica_ws .)
    IGUAL           reduce using rule 208 (expresion -> funcion_matematica_ws .)
    DIFERENTE       reduce using rule 208 (expresion -> funcion_matematica_ws .)
    PTCOMA          reduce using rule 208 (expresion -> funcion_matematica_ws .)
    AND             reduce using rule 208 (expresion -> funcion_matematica_ws .)
    OR              reduce using rule 208 (expresion -> funcion_matematica_ws .)
    WHERE           reduce using rule 208 (expresion -> funcion_matematica_ws .)
    THEN            reduce using rule 208 (expresion -> funcion_matematica_ws .)
    RAISE           reduce using rule 208 (expresion -> funcion_matematica_ws .)
    ID              reduce using rule 208 (expresion -> funcion_matematica_ws .)
    RETURN          reduce using rule 208 (expresion -> funcion_matematica_ws .)
    EXECUTE         reduce using rule 208 (expresion -> funcion_matematica_ws .)
    GET             reduce using rule 208 (expresion -> funcion_matematica_ws .)
    NULL            reduce using rule 208 (expresion -> funcion_matematica_ws .)
    IF              reduce using rule 208 (expresion -> funcion_matematica_ws .)
    CASE            reduce using rule 208 (expresion -> funcion_matematica_ws .)
    COMMIT          reduce using rule 208 (expresion -> funcion_matematica_ws .)
    ROLLBACK        reduce using rule 208 (expresion -> funcion_matematica_ws .)
    INSERT          reduce using rule 208 (expresion -> funcion_matematica_ws .)
    UPDATE          reduce using rule 208 (expresion -> funcion_matematica_ws .)
    ALTER           reduce using rule 208 (expresion -> funcion_matematica_ws .)
    CREATE          reduce using rule 208 (expresion -> funcion_matematica_ws .)
    DROP            reduce using rule 208 (expresion -> funcion_matematica_ws .)
    DELETE          reduce using rule 208 (expresion -> funcion_matematica_ws .)
    TRUNCATE        reduce using rule 208 (expresion -> funcion_matematica_ws .)
    DECLARE         reduce using rule 208 (expresion -> funcion_matematica_ws .)
    SELECT          reduce using rule 208 (expresion -> funcion_matematica_ws .)
    BEGIN           reduce using rule 208 (expresion -> funcion_matematica_ws .)
    END             reduce using rule 208 (expresion -> funcion_matematica_ws .)
    ELSE            reduce using rule 208 (expresion -> funcion_matematica_ws .)
    ELSIF           reduce using rule 208 (expresion -> funcion_matematica_ws .)
    WHEN            reduce using rule 208 (expresion -> funcion_matematica_ws .)
    GROUP           reduce using rule 208 (expresion -> funcion_matematica_ws .)
    ORDER           reduce using rule 208 (expresion -> funcion_matematica_ws .)
    UNION           reduce using rule 208 (expresion -> funcion_matematica_ws .)
    INTERSECT       reduce using rule 208 (expresion -> funcion_matematica_ws .)
    EXCEPT          reduce using rule 208 (expresion -> funcion_matematica_ws .)
    CSIMPLE         reduce using rule 208 (expresion -> funcion_matematica_ws .)


state 241

    (209) expresion -> expresionaritmetica .
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          reduce using rule 209 (expresion -> expresionaritmetica .)
    COMA            reduce using rule 209 (expresion -> expresionaritmetica .)
    MENQUE          reduce using rule 209 (expresion -> expresionaritmetica .)
    MAYQUE          reduce using rule 209 (expresion -> expresionaritmetica .)
    MENIGUAL        reduce using rule 209 (expresion -> expresionaritmetica .)
    MAYIGUAL        reduce using rule 209 (expresion -> expresionaritmetica .)
    IGUAL           reduce using rule 209 (expresion -> expresionaritmetica .)
    DIFERENTE       reduce using rule 209 (expresion -> expresionaritmetica .)
    PTCOMA          reduce using rule 209 (expresion -> expresionaritmetica .)
    AND             reduce using rule 209 (expresion -> expresionaritmetica .)
    OR              reduce using rule 209 (expresion -> expresionaritmetica .)
    WHERE           reduce using rule 209 (expresion -> expresionaritmetica .)
    THEN            reduce using rule 209 (expresion -> expresionaritmetica .)
    RAISE           reduce using rule 209 (expresion -> expresionaritmetica .)
    ID              reduce using rule 209 (expresion -> expresionaritmetica .)
    RETURN          reduce using rule 209 (expresion -> expresionaritmetica .)
    EXECUTE         reduce using rule 209 (expresion -> expresionaritmetica .)
    GET             reduce using rule 209 (expresion -> expresionaritmetica .)
    NULL            reduce using rule 209 (expresion -> expresionaritmetica .)
    IF              reduce using rule 209 (expresion -> expresionaritmetica .)
    CASE            reduce using rule 209 (expresion -> expresionaritmetica .)
    COMMIT          reduce using rule 209 (expresion -> expresionaritmetica .)
    ROLLBACK        reduce using rule 209 (expresion -> expresionaritmetica .)
    INSERT          reduce using rule 209 (expresion -> expresionaritmetica .)
    UPDATE          reduce using rule 209 (expresion -> expresionaritmetica .)
    ALTER           reduce using rule 209 (expresion -> expresionaritmetica .)
    CREATE          reduce using rule 209 (expresion -> expresionaritmetica .)
    DROP            reduce using rule 209 (expresion -> expresionaritmetica .)
    DELETE          reduce using rule 209 (expresion -> expresionaritmetica .)
    TRUNCATE        reduce using rule 209 (expresion -> expresionaritmetica .)
    DECLARE         reduce using rule 209 (expresion -> expresionaritmetica .)
    SELECT          reduce using rule 209 (expresion -> expresionaritmetica .)
    BEGIN           reduce using rule 209 (expresion -> expresionaritmetica .)
    END             reduce using rule 209 (expresion -> expresionaritmetica .)
    ELSE            reduce using rule 209 (expresion -> expresionaritmetica .)
    ELSIF           reduce using rule 209 (expresion -> expresionaritmetica .)
    WHEN            reduce using rule 209 (expresion -> expresionaritmetica .)
    GROUP           reduce using rule 209 (expresion -> expresionaritmetica .)
    ORDER           reduce using rule 209 (expresion -> expresionaritmetica .)
    UNION           reduce using rule 209 (expresion -> expresionaritmetica .)
    INTERSECT       reduce using rule 209 (expresion -> expresionaritmetica .)
    EXCEPT          reduce using rule 209 (expresion -> expresionaritmetica .)
    CSIMPLE         reduce using rule 209 (expresion -> expresionaritmetica .)
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 242

    (210) expresion -> func_bin_strings_1 .

    PARDER          reduce using rule 210 (expresion -> func_bin_strings_1 .)
    COMA            reduce using rule 210 (expresion -> func_bin_strings_1 .)
    MENQUE          reduce using rule 210 (expresion -> func_bin_strings_1 .)
    MAYQUE          reduce using rule 210 (expresion -> func_bin_strings_1 .)
    MENIGUAL        reduce using rule 210 (expresion -> func_bin_strings_1 .)
    MAYIGUAL        reduce using rule 210 (expresion -> func_bin_strings_1 .)
    IGUAL           reduce using rule 210 (expresion -> func_bin_strings_1 .)
    DIFERENTE       reduce using rule 210 (expresion -> func_bin_strings_1 .)
    PTCOMA          reduce using rule 210 (expresion -> func_bin_strings_1 .)
    AND             reduce using rule 210 (expresion -> func_bin_strings_1 .)
    OR              reduce using rule 210 (expresion -> func_bin_strings_1 .)
    WHERE           reduce using rule 210 (expresion -> func_bin_strings_1 .)
    THEN            reduce using rule 210 (expresion -> func_bin_strings_1 .)
    RAISE           reduce using rule 210 (expresion -> func_bin_strings_1 .)
    ID              reduce using rule 210 (expresion -> func_bin_strings_1 .)
    RETURN          reduce using rule 210 (expresion -> func_bin_strings_1 .)
    EXECUTE         reduce using rule 210 (expresion -> func_bin_strings_1 .)
    GET             reduce using rule 210 (expresion -> func_bin_strings_1 .)
    NULL            reduce using rule 210 (expresion -> func_bin_strings_1 .)
    IF              reduce using rule 210 (expresion -> func_bin_strings_1 .)
    CASE            reduce using rule 210 (expresion -> func_bin_strings_1 .)
    COMMIT          reduce using rule 210 (expresion -> func_bin_strings_1 .)
    ROLLBACK        reduce using rule 210 (expresion -> func_bin_strings_1 .)
    INSERT          reduce using rule 210 (expresion -> func_bin_strings_1 .)
    UPDATE          reduce using rule 210 (expresion -> func_bin_strings_1 .)
    ALTER           reduce using rule 210 (expresion -> func_bin_strings_1 .)
    CREATE          reduce using rule 210 (expresion -> func_bin_strings_1 .)
    DROP            reduce using rule 210 (expresion -> func_bin_strings_1 .)
    DELETE          reduce using rule 210 (expresion -> func_bin_strings_1 .)
    TRUNCATE        reduce using rule 210 (expresion -> func_bin_strings_1 .)
    DECLARE         reduce using rule 210 (expresion -> func_bin_strings_1 .)
    SELECT          reduce using rule 210 (expresion -> func_bin_strings_1 .)
    BEGIN           reduce using rule 210 (expresion -> func_bin_strings_1 .)
    END             reduce using rule 210 (expresion -> func_bin_strings_1 .)
    ELSE            reduce using rule 210 (expresion -> func_bin_strings_1 .)
    ELSIF           reduce using rule 210 (expresion -> func_bin_strings_1 .)
    WHEN            reduce using rule 210 (expresion -> func_bin_strings_1 .)
    GROUP           reduce using rule 210 (expresion -> func_bin_strings_1 .)
    ORDER           reduce using rule 210 (expresion -> func_bin_strings_1 .)
    UNION           reduce using rule 210 (expresion -> func_bin_strings_1 .)
    INTERSECT       reduce using rule 210 (expresion -> func_bin_strings_1 .)
    EXCEPT          reduce using rule 210 (expresion -> func_bin_strings_1 .)
    CSIMPLE         reduce using rule 210 (expresion -> func_bin_strings_1 .)


state 243

    (211) expresion -> func_bin_strings_2 .

    PARDER          reduce using rule 211 (expresion -> func_bin_strings_2 .)
    COMA            reduce using rule 211 (expresion -> func_bin_strings_2 .)
    MENQUE          reduce using rule 211 (expresion -> func_bin_strings_2 .)
    MAYQUE          reduce using rule 211 (expresion -> func_bin_strings_2 .)
    MENIGUAL        reduce using rule 211 (expresion -> func_bin_strings_2 .)
    MAYIGUAL        reduce using rule 211 (expresion -> func_bin_strings_2 .)
    IGUAL           reduce using rule 211 (expresion -> func_bin_strings_2 .)
    DIFERENTE       reduce using rule 211 (expresion -> func_bin_strings_2 .)
    PTCOMA          reduce using rule 211 (expresion -> func_bin_strings_2 .)
    AND             reduce using rule 211 (expresion -> func_bin_strings_2 .)
    OR              reduce using rule 211 (expresion -> func_bin_strings_2 .)
    WHERE           reduce using rule 211 (expresion -> func_bin_strings_2 .)
    THEN            reduce using rule 211 (expresion -> func_bin_strings_2 .)
    RAISE           reduce using rule 211 (expresion -> func_bin_strings_2 .)
    ID              reduce using rule 211 (expresion -> func_bin_strings_2 .)
    RETURN          reduce using rule 211 (expresion -> func_bin_strings_2 .)
    EXECUTE         reduce using rule 211 (expresion -> func_bin_strings_2 .)
    GET             reduce using rule 211 (expresion -> func_bin_strings_2 .)
    NULL            reduce using rule 211 (expresion -> func_bin_strings_2 .)
    IF              reduce using rule 211 (expresion -> func_bin_strings_2 .)
    CASE            reduce using rule 211 (expresion -> func_bin_strings_2 .)
    COMMIT          reduce using rule 211 (expresion -> func_bin_strings_2 .)
    ROLLBACK        reduce using rule 211 (expresion -> func_bin_strings_2 .)
    INSERT          reduce using rule 211 (expresion -> func_bin_strings_2 .)
    UPDATE          reduce using rule 211 (expresion -> func_bin_strings_2 .)
    ALTER           reduce using rule 211 (expresion -> func_bin_strings_2 .)
    CREATE          reduce using rule 211 (expresion -> func_bin_strings_2 .)
    DROP            reduce using rule 211 (expresion -> func_bin_strings_2 .)
    DELETE          reduce using rule 211 (expresion -> func_bin_strings_2 .)
    TRUNCATE        reduce using rule 211 (expresion -> func_bin_strings_2 .)
    DECLARE         reduce using rule 211 (expresion -> func_bin_strings_2 .)
    SELECT          reduce using rule 211 (expresion -> func_bin_strings_2 .)
    BEGIN           reduce using rule 211 (expresion -> func_bin_strings_2 .)
    END             reduce using rule 211 (expresion -> func_bin_strings_2 .)
    ELSE            reduce using rule 211 (expresion -> func_bin_strings_2 .)
    ELSIF           reduce using rule 211 (expresion -> func_bin_strings_2 .)
    WHEN            reduce using rule 211 (expresion -> func_bin_strings_2 .)
    GROUP           reduce using rule 211 (expresion -> func_bin_strings_2 .)
    ORDER           reduce using rule 211 (expresion -> func_bin_strings_2 .)
    UNION           reduce using rule 211 (expresion -> func_bin_strings_2 .)
    INTERSECT       reduce using rule 211 (expresion -> func_bin_strings_2 .)
    EXCEPT          reduce using rule 211 (expresion -> func_bin_strings_2 .)
    CSIMPLE         reduce using rule 211 (expresion -> func_bin_strings_2 .)


state 244

    (212) expresion -> vallogico .

    PARDER          reduce using rule 212 (expresion -> vallogico .)
    COMA            reduce using rule 212 (expresion -> vallogico .)
    MENQUE          reduce using rule 212 (expresion -> vallogico .)
    MAYQUE          reduce using rule 212 (expresion -> vallogico .)
    MENIGUAL        reduce using rule 212 (expresion -> vallogico .)
    MAYIGUAL        reduce using rule 212 (expresion -> vallogico .)
    IGUAL           reduce using rule 212 (expresion -> vallogico .)
    DIFERENTE       reduce using rule 212 (expresion -> vallogico .)
    PTCOMA          reduce using rule 212 (expresion -> vallogico .)
    AND             reduce using rule 212 (expresion -> vallogico .)
    OR              reduce using rule 212 (expresion -> vallogico .)
    WHERE           reduce using rule 212 (expresion -> vallogico .)
    THEN            reduce using rule 212 (expresion -> vallogico .)
    RAISE           reduce using rule 212 (expresion -> vallogico .)
    ID              reduce using rule 212 (expresion -> vallogico .)
    RETURN          reduce using rule 212 (expresion -> vallogico .)
    EXECUTE         reduce using rule 212 (expresion -> vallogico .)
    GET             reduce using rule 212 (expresion -> vallogico .)
    NULL            reduce using rule 212 (expresion -> vallogico .)
    IF              reduce using rule 212 (expresion -> vallogico .)
    CASE            reduce using rule 212 (expresion -> vallogico .)
    COMMIT          reduce using rule 212 (expresion -> vallogico .)
    ROLLBACK        reduce using rule 212 (expresion -> vallogico .)
    INSERT          reduce using rule 212 (expresion -> vallogico .)
    UPDATE          reduce using rule 212 (expresion -> vallogico .)
    ALTER           reduce using rule 212 (expresion -> vallogico .)
    CREATE          reduce using rule 212 (expresion -> vallogico .)
    DROP            reduce using rule 212 (expresion -> vallogico .)
    DELETE          reduce using rule 212 (expresion -> vallogico .)
    TRUNCATE        reduce using rule 212 (expresion -> vallogico .)
    DECLARE         reduce using rule 212 (expresion -> vallogico .)
    SELECT          reduce using rule 212 (expresion -> vallogico .)
    BEGIN           reduce using rule 212 (expresion -> vallogico .)
    END             reduce using rule 212 (expresion -> vallogico .)
    ELSE            reduce using rule 212 (expresion -> vallogico .)
    ELSIF           reduce using rule 212 (expresion -> vallogico .)
    WHEN            reduce using rule 212 (expresion -> vallogico .)
    GROUP           reduce using rule 212 (expresion -> vallogico .)
    ORDER           reduce using rule 212 (expresion -> vallogico .)
    UNION           reduce using rule 212 (expresion -> vallogico .)
    INTERSECT       reduce using rule 212 (expresion -> vallogico .)
    EXCEPT          reduce using rule 212 (expresion -> vallogico .)
    CSIMPLE         reduce using rule 212 (expresion -> vallogico .)


state 245

    (226) cualquiercadena -> CADENASIMPLE .

    PARDER          reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    COMA            reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    MENQUE          reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    MAYQUE          reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    MENIGUAL        reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    MAYIGUAL        reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    IGUAL           reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    DIFERENTE       reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    PTCOMA          reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    AND             reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    OR              reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    WHERE           reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    THEN            reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    RAISE           reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    ID              reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    RETURN          reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    EXECUTE         reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    GET             reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    NULL            reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    IF              reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    CASE            reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    COMMIT          reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    ROLLBACK        reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    INSERT          reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    UPDATE          reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    ALTER           reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    CREATE          reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    DROP            reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    DELETE          reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    TRUNCATE        reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    DECLARE         reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    SELECT          reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    BEGIN           reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    END             reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    ELSE            reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    ELSIF           reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    WHEN            reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    GROUP           reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    ORDER           reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    UNION           reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    INTERSECT       reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    EXCEPT          reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    CSIMPLE         reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    NOT             reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    IN              reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    LIKE            reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    BETWEEN         reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    IS              reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    ISNULL          reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    NOTNULL         reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    UNIQUE          reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    CONSTRAINT      reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    CHECK           reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)
    PRIMARY         reduce using rule 226 (cualquiercadena -> CADENASIMPLE .)


state 246

    (227) cualquiercadena -> CADENADOBLE .

    PARDER          reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    COMA            reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    MENQUE          reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    MAYQUE          reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    MENIGUAL        reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    MAYIGUAL        reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    IGUAL           reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    DIFERENTE       reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    PTCOMA          reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    AND             reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    OR              reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    WHERE           reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    THEN            reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    RAISE           reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    ID              reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    RETURN          reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    EXECUTE         reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    GET             reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    NULL            reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    IF              reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    CASE            reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    COMMIT          reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    ROLLBACK        reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    INSERT          reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    UPDATE          reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    ALTER           reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    CREATE          reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    DROP            reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    DELETE          reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    TRUNCATE        reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    DECLARE         reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    SELECT          reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    BEGIN           reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    END             reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    ELSE            reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    ELSIF           reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    WHEN            reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    GROUP           reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    ORDER           reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    UNION           reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    INTERSECT       reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    EXCEPT          reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    CSIMPLE         reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    NOT             reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    IN              reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    LIKE            reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    BETWEEN         reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    IS              reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    ISNULL          reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    NOTNULL         reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    UNIQUE          reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    CONSTRAINT      reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    CHECK           reduce using rule 227 (cualquiercadena -> CADENADOBLE .)
    PRIMARY         reduce using rule 227 (cualquiercadena -> CADENADOBLE .)


state 247

    (220) expresionaritmetica -> MENOS . expresionaritmetica
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 422
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 248

    (221) expresionaritmetica -> cualquiernumero .

    MAS             reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    MENOS           reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    ASTERISCO       reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    DIVIDIDO        reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    MODULO          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    EXPONENTE       reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    PARDER          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    COMA            reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    MENQUE          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    MAYQUE          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    MENIGUAL        reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    MAYIGUAL        reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    IGUAL           reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    DIFERENTE       reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    PTCOMA          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    AND             reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    OR              reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    WHERE           reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    THEN            reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    RAISE           reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    ID              reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    RETURN          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    EXECUTE         reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    GET             reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    NULL            reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    IF              reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    CASE            reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    COMMIT          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    ROLLBACK        reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    INSERT          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    UPDATE          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    ALTER           reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    CREATE          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    DROP            reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    DELETE          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    TRUNCATE        reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    DECLARE         reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    SELECT          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    BEGIN           reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    END             reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    ELSE            reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    ELSIF           reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    WHEN            reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    GROUP           reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    ORDER           reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    UNION           reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    INTERSECT       reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    EXCEPT          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    CSIMPLE         reduce using rule 221 (expresionaritmetica -> cualquiernumero .)


state 249

    (222) expresionaritmetica -> cualquieridentificador .

    MAS             reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    MENOS           reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    ASTERISCO       reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    DIVIDIDO        reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    MODULO          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    EXPONENTE       reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    PARDER          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    COMA            reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    MENQUE          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    MAYQUE          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    MENIGUAL        reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    MAYIGUAL        reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    IGUAL           reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    DIFERENTE       reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    PTCOMA          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    AND             reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    OR              reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    WHERE           reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    THEN            reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    RAISE           reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    ID              reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    RETURN          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    EXECUTE         reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    GET             reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    NULL            reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    IF              reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    CASE            reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    COMMIT          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    ROLLBACK        reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    INSERT          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    UPDATE          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    ALTER           reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    CREATE          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    DROP            reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    DELETE          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    TRUNCATE        reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    DECLARE         reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    SELECT          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    BEGIN           reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    END             reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    ELSE            reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    ELSIF           reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    WHEN            reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    GROUP           reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    ORDER           reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    UNION           reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    INTERSECT       reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    EXCEPT          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    CSIMPLE         reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)


state 250

    (230) vallogico -> FALSE .

    PARDER          reduce using rule 230 (vallogico -> FALSE .)
    COMA            reduce using rule 230 (vallogico -> FALSE .)
    MENQUE          reduce using rule 230 (vallogico -> FALSE .)
    MAYQUE          reduce using rule 230 (vallogico -> FALSE .)
    MENIGUAL        reduce using rule 230 (vallogico -> FALSE .)
    MAYIGUAL        reduce using rule 230 (vallogico -> FALSE .)
    IGUAL           reduce using rule 230 (vallogico -> FALSE .)
    DIFERENTE       reduce using rule 230 (vallogico -> FALSE .)
    PTCOMA          reduce using rule 230 (vallogico -> FALSE .)
    AND             reduce using rule 230 (vallogico -> FALSE .)
    OR              reduce using rule 230 (vallogico -> FALSE .)
    WHERE           reduce using rule 230 (vallogico -> FALSE .)
    THEN            reduce using rule 230 (vallogico -> FALSE .)
    RAISE           reduce using rule 230 (vallogico -> FALSE .)
    ID              reduce using rule 230 (vallogico -> FALSE .)
    RETURN          reduce using rule 230 (vallogico -> FALSE .)
    EXECUTE         reduce using rule 230 (vallogico -> FALSE .)
    GET             reduce using rule 230 (vallogico -> FALSE .)
    NULL            reduce using rule 230 (vallogico -> FALSE .)
    IF              reduce using rule 230 (vallogico -> FALSE .)
    CASE            reduce using rule 230 (vallogico -> FALSE .)
    COMMIT          reduce using rule 230 (vallogico -> FALSE .)
    ROLLBACK        reduce using rule 230 (vallogico -> FALSE .)
    INSERT          reduce using rule 230 (vallogico -> FALSE .)
    UPDATE          reduce using rule 230 (vallogico -> FALSE .)
    ALTER           reduce using rule 230 (vallogico -> FALSE .)
    CREATE          reduce using rule 230 (vallogico -> FALSE .)
    DROP            reduce using rule 230 (vallogico -> FALSE .)
    DELETE          reduce using rule 230 (vallogico -> FALSE .)
    TRUNCATE        reduce using rule 230 (vallogico -> FALSE .)
    DECLARE         reduce using rule 230 (vallogico -> FALSE .)
    SELECT          reduce using rule 230 (vallogico -> FALSE .)
    BEGIN           reduce using rule 230 (vallogico -> FALSE .)
    END             reduce using rule 230 (vallogico -> FALSE .)
    ELSE            reduce using rule 230 (vallogico -> FALSE .)
    ELSIF           reduce using rule 230 (vallogico -> FALSE .)
    WHEN            reduce using rule 230 (vallogico -> FALSE .)
    GROUP           reduce using rule 230 (vallogico -> FALSE .)
    ORDER           reduce using rule 230 (vallogico -> FALSE .)
    UNION           reduce using rule 230 (vallogico -> FALSE .)
    INTERSECT       reduce using rule 230 (vallogico -> FALSE .)
    EXCEPT          reduce using rule 230 (vallogico -> FALSE .)
    CSIMPLE         reduce using rule 230 (vallogico -> FALSE .)


state 251

    (231) vallogico -> TRUE .

    PARDER          reduce using rule 231 (vallogico -> TRUE .)
    COMA            reduce using rule 231 (vallogico -> TRUE .)
    MENQUE          reduce using rule 231 (vallogico -> TRUE .)
    MAYQUE          reduce using rule 231 (vallogico -> TRUE .)
    MENIGUAL        reduce using rule 231 (vallogico -> TRUE .)
    MAYIGUAL        reduce using rule 231 (vallogico -> TRUE .)
    IGUAL           reduce using rule 231 (vallogico -> TRUE .)
    DIFERENTE       reduce using rule 231 (vallogico -> TRUE .)
    PTCOMA          reduce using rule 231 (vallogico -> TRUE .)
    AND             reduce using rule 231 (vallogico -> TRUE .)
    OR              reduce using rule 231 (vallogico -> TRUE .)
    WHERE           reduce using rule 231 (vallogico -> TRUE .)
    THEN            reduce using rule 231 (vallogico -> TRUE .)
    RAISE           reduce using rule 231 (vallogico -> TRUE .)
    ID              reduce using rule 231 (vallogico -> TRUE .)
    RETURN          reduce using rule 231 (vallogico -> TRUE .)
    EXECUTE         reduce using rule 231 (vallogico -> TRUE .)
    GET             reduce using rule 231 (vallogico -> TRUE .)
    NULL            reduce using rule 231 (vallogico -> TRUE .)
    IF              reduce using rule 231 (vallogico -> TRUE .)
    CASE            reduce using rule 231 (vallogico -> TRUE .)
    COMMIT          reduce using rule 231 (vallogico -> TRUE .)
    ROLLBACK        reduce using rule 231 (vallogico -> TRUE .)
    INSERT          reduce using rule 231 (vallogico -> TRUE .)
    UPDATE          reduce using rule 231 (vallogico -> TRUE .)
    ALTER           reduce using rule 231 (vallogico -> TRUE .)
    CREATE          reduce using rule 231 (vallogico -> TRUE .)
    DROP            reduce using rule 231 (vallogico -> TRUE .)
    DELETE          reduce using rule 231 (vallogico -> TRUE .)
    TRUNCATE        reduce using rule 231 (vallogico -> TRUE .)
    DECLARE         reduce using rule 231 (vallogico -> TRUE .)
    SELECT          reduce using rule 231 (vallogico -> TRUE .)
    BEGIN           reduce using rule 231 (vallogico -> TRUE .)
    END             reduce using rule 231 (vallogico -> TRUE .)
    ELSE            reduce using rule 231 (vallogico -> TRUE .)
    ELSIF           reduce using rule 231 (vallogico -> TRUE .)
    WHEN            reduce using rule 231 (vallogico -> TRUE .)
    GROUP           reduce using rule 231 (vallogico -> TRUE .)
    ORDER           reduce using rule 231 (vallogico -> TRUE .)
    UNION           reduce using rule 231 (vallogico -> TRUE .)
    INTERSECT       reduce using rule 231 (vallogico -> TRUE .)
    EXCEPT          reduce using rule 231 (vallogico -> TRUE .)
    CSIMPLE         reduce using rule 231 (vallogico -> TRUE .)


state 252

    (224) cualquiernumero -> ENTERO .

    MAS             reduce using rule 224 (cualquiernumero -> ENTERO .)
    MENOS           reduce using rule 224 (cualquiernumero -> ENTERO .)
    ASTERISCO       reduce using rule 224 (cualquiernumero -> ENTERO .)
    DIVIDIDO        reduce using rule 224 (cualquiernumero -> ENTERO .)
    MODULO          reduce using rule 224 (cualquiernumero -> ENTERO .)
    EXPONENTE       reduce using rule 224 (cualquiernumero -> ENTERO .)
    PARDER          reduce using rule 224 (cualquiernumero -> ENTERO .)
    COMA            reduce using rule 224 (cualquiernumero -> ENTERO .)
    MENQUE          reduce using rule 224 (cualquiernumero -> ENTERO .)
    MAYQUE          reduce using rule 224 (cualquiernumero -> ENTERO .)
    MENIGUAL        reduce using rule 224 (cualquiernumero -> ENTERO .)
    MAYIGUAL        reduce using rule 224 (cualquiernumero -> ENTERO .)
    IGUAL           reduce using rule 224 (cualquiernumero -> ENTERO .)
    DIFERENTE       reduce using rule 224 (cualquiernumero -> ENTERO .)
    PTCOMA          reduce using rule 224 (cualquiernumero -> ENTERO .)
    AND             reduce using rule 224 (cualquiernumero -> ENTERO .)
    OR              reduce using rule 224 (cualquiernumero -> ENTERO .)
    WHERE           reduce using rule 224 (cualquiernumero -> ENTERO .)
    THEN            reduce using rule 224 (cualquiernumero -> ENTERO .)
    RAISE           reduce using rule 224 (cualquiernumero -> ENTERO .)
    ID              reduce using rule 224 (cualquiernumero -> ENTERO .)
    RETURN          reduce using rule 224 (cualquiernumero -> ENTERO .)
    EXECUTE         reduce using rule 224 (cualquiernumero -> ENTERO .)
    GET             reduce using rule 224 (cualquiernumero -> ENTERO .)
    NULL            reduce using rule 224 (cualquiernumero -> ENTERO .)
    IF              reduce using rule 224 (cualquiernumero -> ENTERO .)
    CASE            reduce using rule 224 (cualquiernumero -> ENTERO .)
    COMMIT          reduce using rule 224 (cualquiernumero -> ENTERO .)
    ROLLBACK        reduce using rule 224 (cualquiernumero -> ENTERO .)
    INSERT          reduce using rule 224 (cualquiernumero -> ENTERO .)
    UPDATE          reduce using rule 224 (cualquiernumero -> ENTERO .)
    ALTER           reduce using rule 224 (cualquiernumero -> ENTERO .)
    CREATE          reduce using rule 224 (cualquiernumero -> ENTERO .)
    DROP            reduce using rule 224 (cualquiernumero -> ENTERO .)
    DELETE          reduce using rule 224 (cualquiernumero -> ENTERO .)
    TRUNCATE        reduce using rule 224 (cualquiernumero -> ENTERO .)
    DECLARE         reduce using rule 224 (cualquiernumero -> ENTERO .)
    SELECT          reduce using rule 224 (cualquiernumero -> ENTERO .)
    BEGIN           reduce using rule 224 (cualquiernumero -> ENTERO .)
    END             reduce using rule 224 (cualquiernumero -> ENTERO .)
    ELSE            reduce using rule 224 (cualquiernumero -> ENTERO .)
    ELSIF           reduce using rule 224 (cualquiernumero -> ENTERO .)
    WHEN            reduce using rule 224 (cualquiernumero -> ENTERO .)
    GROUP           reduce using rule 224 (cualquiernumero -> ENTERO .)
    ORDER           reduce using rule 224 (cualquiernumero -> ENTERO .)
    UNION           reduce using rule 224 (cualquiernumero -> ENTERO .)
    INTERSECT       reduce using rule 224 (cualquiernumero -> ENTERO .)
    EXCEPT          reduce using rule 224 (cualquiernumero -> ENTERO .)
    CSIMPLE         reduce using rule 224 (cualquiernumero -> ENTERO .)
    DESC            reduce using rule 224 (cualquiernumero -> ENTERO .)
    ASC             reduce using rule 224 (cualquiernumero -> ENTERO .)
    NULLS           reduce using rule 224 (cualquiernumero -> ENTERO .)
    NOT             reduce using rule 224 (cualquiernumero -> ENTERO .)
    IN              reduce using rule 224 (cualquiernumero -> ENTERO .)
    BETWEEN         reduce using rule 224 (cualquiernumero -> ENTERO .)
    IS              reduce using rule 224 (cualquiernumero -> ENTERO .)
    ISNULL          reduce using rule 224 (cualquiernumero -> ENTERO .)
    NOTNULL         reduce using rule 224 (cualquiernumero -> ENTERO .)
    UNIQUE          reduce using rule 224 (cualquiernumero -> ENTERO .)
    CONSTRAINT      reduce using rule 224 (cualquiernumero -> ENTERO .)
    CHECK           reduce using rule 224 (cualquiernumero -> ENTERO .)
    PRIMARY         reduce using rule 224 (cualquiernumero -> ENTERO .)
    HAVING          reduce using rule 224 (cualquiernumero -> ENTERO .)
    LIMIT           reduce using rule 224 (cualquiernumero -> ENTERO .)


state 253

    (225) cualquiernumero -> DECIMAL .

    MAS             reduce using rule 225 (cualquiernumero -> DECIMAL .)
    MENOS           reduce using rule 225 (cualquiernumero -> DECIMAL .)
    ASTERISCO       reduce using rule 225 (cualquiernumero -> DECIMAL .)
    DIVIDIDO        reduce using rule 225 (cualquiernumero -> DECIMAL .)
    MODULO          reduce using rule 225 (cualquiernumero -> DECIMAL .)
    EXPONENTE       reduce using rule 225 (cualquiernumero -> DECIMAL .)
    PARDER          reduce using rule 225 (cualquiernumero -> DECIMAL .)
    COMA            reduce using rule 225 (cualquiernumero -> DECIMAL .)
    MENQUE          reduce using rule 225 (cualquiernumero -> DECIMAL .)
    MAYQUE          reduce using rule 225 (cualquiernumero -> DECIMAL .)
    MENIGUAL        reduce using rule 225 (cualquiernumero -> DECIMAL .)
    MAYIGUAL        reduce using rule 225 (cualquiernumero -> DECIMAL .)
    IGUAL           reduce using rule 225 (cualquiernumero -> DECIMAL .)
    DIFERENTE       reduce using rule 225 (cualquiernumero -> DECIMAL .)
    PTCOMA          reduce using rule 225 (cualquiernumero -> DECIMAL .)
    AND             reduce using rule 225 (cualquiernumero -> DECIMAL .)
    OR              reduce using rule 225 (cualquiernumero -> DECIMAL .)
    WHERE           reduce using rule 225 (cualquiernumero -> DECIMAL .)
    THEN            reduce using rule 225 (cualquiernumero -> DECIMAL .)
    RAISE           reduce using rule 225 (cualquiernumero -> DECIMAL .)
    ID              reduce using rule 225 (cualquiernumero -> DECIMAL .)
    RETURN          reduce using rule 225 (cualquiernumero -> DECIMAL .)
    EXECUTE         reduce using rule 225 (cualquiernumero -> DECIMAL .)
    GET             reduce using rule 225 (cualquiernumero -> DECIMAL .)
    NULL            reduce using rule 225 (cualquiernumero -> DECIMAL .)
    IF              reduce using rule 225 (cualquiernumero -> DECIMAL .)
    CASE            reduce using rule 225 (cualquiernumero -> DECIMAL .)
    COMMIT          reduce using rule 225 (cualquiernumero -> DECIMAL .)
    ROLLBACK        reduce using rule 225 (cualquiernumero -> DECIMAL .)
    INSERT          reduce using rule 225 (cualquiernumero -> DECIMAL .)
    UPDATE          reduce using rule 225 (cualquiernumero -> DECIMAL .)
    ALTER           reduce using rule 225 (cualquiernumero -> DECIMAL .)
    CREATE          reduce using rule 225 (cualquiernumero -> DECIMAL .)
    DROP            reduce using rule 225 (cualquiernumero -> DECIMAL .)
    DELETE          reduce using rule 225 (cualquiernumero -> DECIMAL .)
    TRUNCATE        reduce using rule 225 (cualquiernumero -> DECIMAL .)
    DECLARE         reduce using rule 225 (cualquiernumero -> DECIMAL .)
    SELECT          reduce using rule 225 (cualquiernumero -> DECIMAL .)
    BEGIN           reduce using rule 225 (cualquiernumero -> DECIMAL .)
    END             reduce using rule 225 (cualquiernumero -> DECIMAL .)
    ELSE            reduce using rule 225 (cualquiernumero -> DECIMAL .)
    ELSIF           reduce using rule 225 (cualquiernumero -> DECIMAL .)
    WHEN            reduce using rule 225 (cualquiernumero -> DECIMAL .)
    GROUP           reduce using rule 225 (cualquiernumero -> DECIMAL .)
    ORDER           reduce using rule 225 (cualquiernumero -> DECIMAL .)
    UNION           reduce using rule 225 (cualquiernumero -> DECIMAL .)
    INTERSECT       reduce using rule 225 (cualquiernumero -> DECIMAL .)
    EXCEPT          reduce using rule 225 (cualquiernumero -> DECIMAL .)
    CSIMPLE         reduce using rule 225 (cualquiernumero -> DECIMAL .)
    DESC            reduce using rule 225 (cualquiernumero -> DECIMAL .)
    ASC             reduce using rule 225 (cualquiernumero -> DECIMAL .)
    NULLS           reduce using rule 225 (cualquiernumero -> DECIMAL .)
    NOT             reduce using rule 225 (cualquiernumero -> DECIMAL .)
    IN              reduce using rule 225 (cualquiernumero -> DECIMAL .)
    BETWEEN         reduce using rule 225 (cualquiernumero -> DECIMAL .)
    IS              reduce using rule 225 (cualquiernumero -> DECIMAL .)
    ISNULL          reduce using rule 225 (cualquiernumero -> DECIMAL .)
    NOTNULL         reduce using rule 225 (cualquiernumero -> DECIMAL .)
    UNIQUE          reduce using rule 225 (cualquiernumero -> DECIMAL .)
    CONSTRAINT      reduce using rule 225 (cualquiernumero -> DECIMAL .)
    CHECK           reduce using rule 225 (cualquiernumero -> DECIMAL .)
    PRIMARY         reduce using rule 225 (cualquiernumero -> DECIMAL .)
    HAVING          reduce using rule 225 (cualquiernumero -> DECIMAL .)
    LIMIT           reduce using rule 225 (cualquiernumero -> DECIMAL .)


state 254

    (79) select_instr1 -> SELECT termdistinct selectlist selectfrom .

    UNION           reduce using rule 79 (select_instr1 -> SELECT termdistinct selectlist selectfrom .)
    INTERSECT       reduce using rule 79 (select_instr1 -> SELECT termdistinct selectlist selectfrom .)
    EXCEPT          reduce using rule 79 (select_instr1 -> SELECT termdistinct selectlist selectfrom .)
    PTCOMA          reduce using rule 79 (select_instr1 -> SELECT termdistinct selectlist selectfrom .)
    PARDER          reduce using rule 79 (select_instr1 -> SELECT termdistinct selectlist selectfrom .)
    CSIMPLE         reduce using rule 79 (select_instr1 -> SELECT termdistinct selectlist selectfrom .)


state 255

    (80) selectfrom -> FROM . listatablasselect whereselect groupby orderby
    (117) listatablasselect -> . listatablasselect COMA tablaselect
    (118) listatablasselect -> . tablaselect
    (119) tablaselect -> . ID alias
    (120) tablaselect -> . PARIZQ select_instr1 PARDER alias

    ID              shift and go to state 425
    PARIZQ          shift and go to state 426

    listatablasselect              shift and go to state 423
    tablaselect                    shift and go to state 424

state 256

    (81) selectfrom -> empty .

    UNION           reduce using rule 81 (selectfrom -> empty .)
    INTERSECT       reduce using rule 81 (selectfrom -> empty .)
    EXCEPT          reduce using rule 81 (selectfrom -> empty .)
    PTCOMA          reduce using rule 81 (selectfrom -> empty .)
    PARDER          reduce using rule 81 (selectfrom -> empty .)
    CSIMPLE         reduce using rule 81 (selectfrom -> empty .)


state 257

    (93) listaselect -> listaselect COMA . valselect
    (95) valselect -> . ID alias
    (96) valselect -> . ID PUNTO ASTERISCO
    (97) valselect -> . ID PUNTO ID alias
    (98) valselect -> . funcion_matematica_ws alias
    (99) valselect -> . funcion_matematica_s alias
    (100) valselect -> . funcion_trigonometrica alias
    (101) valselect -> . PARIZQ select_instr1 PARDER alias
    (102) valselect -> . agregacion PARIZQ cualquieridentificador PARDER alias
    (103) valselect -> . COUNT PARIZQ ASTERISCO PARDER alias
    (104) valselect -> . COUNT PARIZQ cualquieridentificador PARDER alias
    (105) valselect -> . func_bin_strings_1 alias
    (106) valselect -> . func_bin_strings_2 alias
    (107) valselect -> . func_bin_strings_4 alias
    (108) valselect -> . nowinstr
    (109) valselect -> . extract_instr alias
    (110) valselect -> . datepart_instr alias
    (111) valselect -> . current alias
    (112) valselect -> . timestampnow alias
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (236) funcion_matematica_s -> . DEGREES PARIZQ expresionaritmetica PARDER
    (237) funcion_matematica_s -> . DIV PARIZQ expresionaritmetica COMA expresionaritmetica PARDER
    (238) funcion_matematica_s -> . EXP PARIZQ expresionaritmetica PARDER
    (239) funcion_matematica_s -> . FACTORIAL PARIZQ expresionaritmetica PARDER
    (240) funcion_matematica_s -> . FLOOR PARIZQ expresionaritmetica PARDER
    (241) funcion_matematica_s -> . GCD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER
    (242) funcion_matematica_s -> . LN PARIZQ expresionaritmetica PARDER
    (243) funcion_matematica_s -> . LOG PARIZQ expresionaritmetica PARDER
    (244) funcion_matematica_s -> . MOD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER
    (245) funcion_matematica_s -> . PI PARIZQ PARDER
    (246) funcion_matematica_s -> . POWER PARIZQ expresionaritmetica COMA expresionaritmetica PARDER
    (247) funcion_matematica_s -> . RADIANS PARIZQ expresionaritmetica PARDER
    (248) funcion_matematica_s -> . ROUND PARIZQ expresionaritmetica PARDER
    (249) funcion_matematica_s -> . SIGN PARIZQ expresionaritmetica PARDER
    (250) funcion_matematica_s -> . SQRT PARIZQ expresionaritmetica PARDER
    (251) funcion_matematica_s -> . WBUCKET PARIZQ explist PARDER
    (252) funcion_matematica_s -> . TRUNC PARIZQ expresionaritmetica PARDER
    (253) funcion_matematica_s -> . RANDOM PARIZQ PARDER
    (255) funcion_trigonometrica -> . ACOS PARIZQ expresionaritmetica PARDER
    (256) funcion_trigonometrica -> . ACOSD PARIZQ expresionaritmetica PARDER
    (257) funcion_trigonometrica -> . ASIN PARIZQ expresionaritmetica PARDER
    (258) funcion_trigonometrica -> . ASIND PARIZQ expresionaritmetica PARDER
    (259) funcion_trigonometrica -> . ATAN PARIZQ expresionaritmetica PARDER
    (260) funcion_trigonometrica -> . ATAND PARIZQ expresionaritmetica PARDER
    (261) funcion_trigonometrica -> . ATAN2 PARIZQ expresionaritmetica PARDER
    (262) funcion_trigonometrica -> . ATAN2D PARIZQ expresionaritmetica PARDER
    (263) funcion_trigonometrica -> . COS PARIZQ expresionaritmetica PARDER
    (264) funcion_trigonometrica -> . COSD PARIZQ expresionaritmetica PARDER
    (265) funcion_trigonometrica -> . COT PARIZQ expresionaritmetica PARDER
    (266) funcion_trigonometrica -> . COTD PARIZQ expresionaritmetica PARDER
    (267) funcion_trigonometrica -> . SIN PARIZQ expresionaritmetica PARDER
    (268) funcion_trigonometrica -> . SIND PARIZQ expresionaritmetica PARDER
    (269) funcion_trigonometrica -> . TAN PARIZQ expresionaritmetica PARDER
    (270) funcion_trigonometrica -> . TAND PARIZQ expresionaritmetica PARDER
    (271) funcion_trigonometrica -> . SINH PARIZQ expresionaritmetica PARDER
    (272) funcion_trigonometrica -> . COSH PARIZQ expresionaritmetica PARDER
    (273) funcion_trigonometrica -> . TANH PARIZQ expresionaritmetica PARDER
    (274) funcion_trigonometrica -> . ASINH PARIZQ expresionaritmetica PARDER
    (275) funcion_trigonometrica -> . ACOSH PARIZQ expresionaritmetica PARDER
    (276) funcion_trigonometrica -> . ATANH PARIZQ expresionaritmetica PARDER
    (113) agregacion -> . SUM
    (114) agregacion -> . AVG
    (115) agregacion -> . MAX
    (116) agregacion -> . MIN
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (282) func_bin_strings_4 -> . GET_BYTE PARIZQ cadena COMA ENTERO PARDER
    (283) func_bin_strings_4 -> . SET_BYTE PARIZQ cadena COMA ENTERO COMA ENTERO PARDER
    (284) func_bin_strings_4 -> . ENCODE PARIZQ cadena COMA cadena PARDER
    (285) func_bin_strings_4 -> . DECODE PARIZQ cadena COMA cadena PARDER
    (286) func_bin_strings_4 -> . SHA256 PARIZQ cadena PARDER
    (287) func_bin_strings_4 -> . CONVERT PARIZQ alias PARDER
    (393) nowinstr -> . NOW PARIZQ PARDER
    (382) extract_instr -> . EXTRACT PARIZQ valdate FROM TIMESTAMP CADENASIMPLE PARDER
    (389) datepart_instr -> . DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER
    (390) current -> . CURRENT_DATE
    (391) current -> . CURRENT_TIME
    (392) timestampnow -> . TIMESTAMP CADENASIMPLE

    ID              shift and go to state 113
    PARIZQ          shift and go to state 117
    COUNT           shift and go to state 119
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    DEGREES         shift and go to state 132
    DIV             shift and go to state 133
    EXP             shift and go to state 134
    FACTORIAL       shift and go to state 135
    FLOOR           shift and go to state 136
    GCD             shift and go to state 137
    LN              shift and go to state 138
    LOG             shift and go to state 139
    MOD             shift and go to state 140
    PI              shift and go to state 141
    POWER           shift and go to state 142
    RADIANS         shift and go to state 143
    ROUND           shift and go to state 144
    SIGN            shift and go to state 145
    SQRT            shift and go to state 146
    WBUCKET         shift and go to state 147
    TRUNC           shift and go to state 148
    RANDOM          shift and go to state 149
    ACOS            shift and go to state 150
    ACOSD           shift and go to state 151
    ASIN            shift and go to state 152
    ASIND           shift and go to state 153
    ATAN            shift and go to state 154
    ATAND           shift and go to state 155
    ATAN2           shift and go to state 156
    ATAN2D          shift and go to state 157
    COS             shift and go to state 158
    COSD            shift and go to state 159
    COT             shift and go to state 160
    COTD            shift and go to state 161
    SIN             shift and go to state 162
    SIND            shift and go to state 163
    TAN             shift and go to state 164
    TAND            shift and go to state 165
    SINH            shift and go to state 166
    COSH            shift and go to state 167
    TANH            shift and go to state 168
    ASINH           shift and go to state 169
    ACOSH           shift and go to state 170
    ATANH           shift and go to state 171
    SUM             shift and go to state 172
    AVG             shift and go to state 173
    MAX             shift and go to state 174
    MIN             shift and go to state 175
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    GET_BYTE        shift and go to state 180
    SET_BYTE        shift and go to state 181
    ENCODE          shift and go to state 182
    DECODE          shift and go to state 183
    SHA256          shift and go to state 184
    CONVERT         shift and go to state 185
    NOW             shift and go to state 186
    EXTRACT         shift and go to state 187
    DATE_PART       shift and go to state 189
    CURRENT_DATE    shift and go to state 190
    CURRENT_TIME    shift and go to state 191
    TIMESTAMP       shift and go to state 188

    valselect                      shift and go to state 427
    funcion_matematica_ws          shift and go to state 114
    funcion_matematica_s           shift and go to state 115
    funcion_trigonometrica         shift and go to state 116
    agregacion                     shift and go to state 118
    func_bin_strings_1             shift and go to state 120
    func_bin_strings_2             shift and go to state 121
    func_bin_strings_4             shift and go to state 122
    nowinstr                       shift and go to state 123
    extract_instr                  shift and go to state 124
    datepart_instr                 shift and go to state 125
    current                        shift and go to state 126
    timestampnow                   shift and go to state 127

state 258

    (121) alias -> ID .

    COMA            reduce using rule 121 (alias -> ID .)
    FROM            reduce using rule 121 (alias -> ID .)
    UNION           reduce using rule 121 (alias -> ID .)
    INTERSECT       reduce using rule 121 (alias -> ID .)
    EXCEPT          reduce using rule 121 (alias -> ID .)
    PTCOMA          reduce using rule 121 (alias -> ID .)
    PARDER          reduce using rule 121 (alias -> ID .)
    CSIMPLE         reduce using rule 121 (alias -> ID .)
    WHERE           reduce using rule 121 (alias -> ID .)
    GROUP           reduce using rule 121 (alias -> ID .)
    ORDER           reduce using rule 121 (alias -> ID .)


state 259

    (95) valselect -> ID alias .

    COMA            reduce using rule 95 (valselect -> ID alias .)
    FROM            reduce using rule 95 (valselect -> ID alias .)
    UNION           reduce using rule 95 (valselect -> ID alias .)
    INTERSECT       reduce using rule 95 (valselect -> ID alias .)
    EXCEPT          reduce using rule 95 (valselect -> ID alias .)
    PTCOMA          reduce using rule 95 (valselect -> ID alias .)
    PARDER          reduce using rule 95 (valselect -> ID alias .)
    CSIMPLE         reduce using rule 95 (valselect -> ID alias .)


state 260

    (96) valselect -> ID PUNTO . ASTERISCO
    (97) valselect -> ID PUNTO . ID alias

    ASTERISCO       shift and go to state 429
    ID              shift and go to state 428


state 261

    (122) alias -> CADENASIMPLE .

    COMA            reduce using rule 122 (alias -> CADENASIMPLE .)
    FROM            reduce using rule 122 (alias -> CADENASIMPLE .)
    UNION           reduce using rule 122 (alias -> CADENASIMPLE .)
    INTERSECT       reduce using rule 122 (alias -> CADENASIMPLE .)
    EXCEPT          reduce using rule 122 (alias -> CADENASIMPLE .)
    PTCOMA          reduce using rule 122 (alias -> CADENASIMPLE .)
    PARDER          reduce using rule 122 (alias -> CADENASIMPLE .)
    CSIMPLE         reduce using rule 122 (alias -> CADENASIMPLE .)
    WHERE           reduce using rule 122 (alias -> CADENASIMPLE .)
    GROUP           reduce using rule 122 (alias -> CADENASIMPLE .)
    ORDER           reduce using rule 122 (alias -> CADENASIMPLE .)


state 262

    (123) alias -> CADENADOBLE .

    COMA            reduce using rule 123 (alias -> CADENADOBLE .)
    FROM            reduce using rule 123 (alias -> CADENADOBLE .)
    UNION           reduce using rule 123 (alias -> CADENADOBLE .)
    INTERSECT       reduce using rule 123 (alias -> CADENADOBLE .)
    EXCEPT          reduce using rule 123 (alias -> CADENADOBLE .)
    PTCOMA          reduce using rule 123 (alias -> CADENADOBLE .)
    PARDER          reduce using rule 123 (alias -> CADENADOBLE .)
    CSIMPLE         reduce using rule 123 (alias -> CADENADOBLE .)
    WHERE           reduce using rule 123 (alias -> CADENADOBLE .)
    GROUP           reduce using rule 123 (alias -> CADENADOBLE .)
    ORDER           reduce using rule 123 (alias -> CADENADOBLE .)


state 263

    (124) alias -> AS . ID
    (125) alias -> AS . CADENASIMPLE
    (126) alias -> AS . CADENADOBLE

    ID              shift and go to state 430
    CADENASIMPLE    shift and go to state 431
    CADENADOBLE     shift and go to state 432


state 264

    (127) alias -> empty .

    COMA            reduce using rule 127 (alias -> empty .)
    FROM            reduce using rule 127 (alias -> empty .)
    UNION           reduce using rule 127 (alias -> empty .)
    INTERSECT       reduce using rule 127 (alias -> empty .)
    EXCEPT          reduce using rule 127 (alias -> empty .)
    PTCOMA          reduce using rule 127 (alias -> empty .)
    PARDER          reduce using rule 127 (alias -> empty .)
    CSIMPLE         reduce using rule 127 (alias -> empty .)
    WHERE           reduce using rule 127 (alias -> empty .)
    GROUP           reduce using rule 127 (alias -> empty .)
    ORDER           reduce using rule 127 (alias -> empty .)


state 265

    (98) valselect -> funcion_matematica_ws alias .

    COMA            reduce using rule 98 (valselect -> funcion_matematica_ws alias .)
    FROM            reduce using rule 98 (valselect -> funcion_matematica_ws alias .)
    UNION           reduce using rule 98 (valselect -> funcion_matematica_ws alias .)
    INTERSECT       reduce using rule 98 (valselect -> funcion_matematica_ws alias .)
    EXCEPT          reduce using rule 98 (valselect -> funcion_matematica_ws alias .)
    PTCOMA          reduce using rule 98 (valselect -> funcion_matematica_ws alias .)
    PARDER          reduce using rule 98 (valselect -> funcion_matematica_ws alias .)
    CSIMPLE         reduce using rule 98 (valselect -> funcion_matematica_ws alias .)


state 266

    (99) valselect -> funcion_matematica_s alias .

    COMA            reduce using rule 99 (valselect -> funcion_matematica_s alias .)
    FROM            reduce using rule 99 (valselect -> funcion_matematica_s alias .)
    UNION           reduce using rule 99 (valselect -> funcion_matematica_s alias .)
    INTERSECT       reduce using rule 99 (valselect -> funcion_matematica_s alias .)
    EXCEPT          reduce using rule 99 (valselect -> funcion_matematica_s alias .)
    PTCOMA          reduce using rule 99 (valselect -> funcion_matematica_s alias .)
    PARDER          reduce using rule 99 (valselect -> funcion_matematica_s alias .)
    CSIMPLE         reduce using rule 99 (valselect -> funcion_matematica_s alias .)


state 267

    (100) valselect -> funcion_trigonometrica alias .

    COMA            reduce using rule 100 (valselect -> funcion_trigonometrica alias .)
    FROM            reduce using rule 100 (valselect -> funcion_trigonometrica alias .)
    UNION           reduce using rule 100 (valselect -> funcion_trigonometrica alias .)
    INTERSECT       reduce using rule 100 (valselect -> funcion_trigonometrica alias .)
    EXCEPT          reduce using rule 100 (valselect -> funcion_trigonometrica alias .)
    PTCOMA          reduce using rule 100 (valselect -> funcion_trigonometrica alias .)
    PARDER          reduce using rule 100 (valselect -> funcion_trigonometrica alias .)
    CSIMPLE         reduce using rule 100 (valselect -> funcion_trigonometrica alias .)


state 268

    (101) valselect -> PARIZQ select_instr1 . PARDER alias

    PARDER          shift and go to state 433


state 269

    (102) valselect -> agregacion PARIZQ . cualquieridentificador PARDER alias
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    ID              shift and go to state 234

    cualquieridentificador         shift and go to state 434

state 270

    (103) valselect -> COUNT PARIZQ . ASTERISCO PARDER alias
    (104) valselect -> COUNT PARIZQ . cualquieridentificador PARDER alias
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    ASTERISCO       shift and go to state 435
    ID              shift and go to state 234

    cualquieridentificador         shift and go to state 436

state 271

    (105) valselect -> func_bin_strings_1 alias .

    COMA            reduce using rule 105 (valselect -> func_bin_strings_1 alias .)
    FROM            reduce using rule 105 (valselect -> func_bin_strings_1 alias .)
    UNION           reduce using rule 105 (valselect -> func_bin_strings_1 alias .)
    INTERSECT       reduce using rule 105 (valselect -> func_bin_strings_1 alias .)
    EXCEPT          reduce using rule 105 (valselect -> func_bin_strings_1 alias .)
    PTCOMA          reduce using rule 105 (valselect -> func_bin_strings_1 alias .)
    PARDER          reduce using rule 105 (valselect -> func_bin_strings_1 alias .)
    CSIMPLE         reduce using rule 105 (valselect -> func_bin_strings_1 alias .)


state 272

    (106) valselect -> func_bin_strings_2 alias .

    COMA            reduce using rule 106 (valselect -> func_bin_strings_2 alias .)
    FROM            reduce using rule 106 (valselect -> func_bin_strings_2 alias .)
    UNION           reduce using rule 106 (valselect -> func_bin_strings_2 alias .)
    INTERSECT       reduce using rule 106 (valselect -> func_bin_strings_2 alias .)
    EXCEPT          reduce using rule 106 (valselect -> func_bin_strings_2 alias .)
    PTCOMA          reduce using rule 106 (valselect -> func_bin_strings_2 alias .)
    PARDER          reduce using rule 106 (valselect -> func_bin_strings_2 alias .)
    CSIMPLE         reduce using rule 106 (valselect -> func_bin_strings_2 alias .)


state 273

    (107) valselect -> func_bin_strings_4 alias .

    COMA            reduce using rule 107 (valselect -> func_bin_strings_4 alias .)
    FROM            reduce using rule 107 (valselect -> func_bin_strings_4 alias .)
    UNION           reduce using rule 107 (valselect -> func_bin_strings_4 alias .)
    INTERSECT       reduce using rule 107 (valselect -> func_bin_strings_4 alias .)
    EXCEPT          reduce using rule 107 (valselect -> func_bin_strings_4 alias .)
    PTCOMA          reduce using rule 107 (valselect -> func_bin_strings_4 alias .)
    PARDER          reduce using rule 107 (valselect -> func_bin_strings_4 alias .)
    CSIMPLE         reduce using rule 107 (valselect -> func_bin_strings_4 alias .)


state 274

    (109) valselect -> extract_instr alias .

    COMA            reduce using rule 109 (valselect -> extract_instr alias .)
    FROM            reduce using rule 109 (valselect -> extract_instr alias .)
    UNION           reduce using rule 109 (valselect -> extract_instr alias .)
    INTERSECT       reduce using rule 109 (valselect -> extract_instr alias .)
    EXCEPT          reduce using rule 109 (valselect -> extract_instr alias .)
    PTCOMA          reduce using rule 109 (valselect -> extract_instr alias .)
    PARDER          reduce using rule 109 (valselect -> extract_instr alias .)
    CSIMPLE         reduce using rule 109 (valselect -> extract_instr alias .)


state 275

    (110) valselect -> datepart_instr alias .

    COMA            reduce using rule 110 (valselect -> datepart_instr alias .)
    FROM            reduce using rule 110 (valselect -> datepart_instr alias .)
    UNION           reduce using rule 110 (valselect -> datepart_instr alias .)
    INTERSECT       reduce using rule 110 (valselect -> datepart_instr alias .)
    EXCEPT          reduce using rule 110 (valselect -> datepart_instr alias .)
    PTCOMA          reduce using rule 110 (valselect -> datepart_instr alias .)
    PARDER          reduce using rule 110 (valselect -> datepart_instr alias .)
    CSIMPLE         reduce using rule 110 (valselect -> datepart_instr alias .)


state 276

    (111) valselect -> current alias .

    COMA            reduce using rule 111 (valselect -> current alias .)
    FROM            reduce using rule 111 (valselect -> current alias .)
    UNION           reduce using rule 111 (valselect -> current alias .)
    INTERSECT       reduce using rule 111 (valselect -> current alias .)
    EXCEPT          reduce using rule 111 (valselect -> current alias .)
    PTCOMA          reduce using rule 111 (valselect -> current alias .)
    PARDER          reduce using rule 111 (valselect -> current alias .)
    CSIMPLE         reduce using rule 111 (valselect -> current alias .)


state 277

    (112) valselect -> timestampnow alias .

    COMA            reduce using rule 112 (valselect -> timestampnow alias .)
    FROM            reduce using rule 112 (valselect -> timestampnow alias .)
    UNION           reduce using rule 112 (valselect -> timestampnow alias .)
    INTERSECT       reduce using rule 112 (valselect -> timestampnow alias .)
    EXCEPT          reduce using rule 112 (valselect -> timestampnow alias .)
    PTCOMA          reduce using rule 112 (valselect -> timestampnow alias .)
    PARDER          reduce using rule 112 (valselect -> timestampnow alias .)
    CSIMPLE         reduce using rule 112 (valselect -> timestampnow alias .)


state 278

    (232) funcion_matematica_ws -> ABS PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 437
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 279

    (233) funcion_matematica_ws -> CBRT PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 438
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 280

    (234) funcion_matematica_ws -> CEIL PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 439
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 281

    (235) funcion_matematica_ws -> CEILING PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 440
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 282

    (236) funcion_matematica_s -> DEGREES PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 441
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 283

    (237) funcion_matematica_s -> DIV PARIZQ . expresionaritmetica COMA expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 442
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 284

    (238) funcion_matematica_s -> EXP PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 443
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 285

    (239) funcion_matematica_s -> FACTORIAL PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 444
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 286

    (240) funcion_matematica_s -> FLOOR PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 445
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 287

    (241) funcion_matematica_s -> GCD PARIZQ . expresionaritmetica COMA expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 446
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 288

    (242) funcion_matematica_s -> LN PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 447
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 289

    (243) funcion_matematica_s -> LOG PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 448
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 290

    (244) funcion_matematica_s -> MOD PARIZQ . expresionaritmetica COMA expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 449
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 291

    (245) funcion_matematica_s -> PI PARIZQ . PARDER

    PARDER          shift and go to state 450


state 292

    (246) funcion_matematica_s -> POWER PARIZQ . expresionaritmetica COMA expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 451
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 293

    (247) funcion_matematica_s -> RADIANS PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 452
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 294

    (248) funcion_matematica_s -> ROUND PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 453
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 295

    (249) funcion_matematica_s -> SIGN PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 454
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 296

    (250) funcion_matematica_s -> SQRT PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 455
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 297

    (251) funcion_matematica_s -> WBUCKET PARIZQ . explist PARDER
    (254) explist -> . expresionaritmetica COMA expresionaritmetica COMA expresionaritmetica COMA expresionaritmetica
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    explist                        shift and go to state 456
    expresionaritmetica            shift and go to state 457
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 298

    (252) funcion_matematica_s -> TRUNC PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 458
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 299

    (253) funcion_matematica_s -> RANDOM PARIZQ . PARDER

    PARDER          shift and go to state 459


state 300

    (255) funcion_trigonometrica -> ACOS PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 460
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 301

    (256) funcion_trigonometrica -> ACOSD PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 461
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 302

    (257) funcion_trigonometrica -> ASIN PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 462
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 303

    (258) funcion_trigonometrica -> ASIND PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 463
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 304

    (259) funcion_trigonometrica -> ATAN PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 464
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 305

    (260) funcion_trigonometrica -> ATAND PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 465
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 306

    (261) funcion_trigonometrica -> ATAN2 PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 466
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 307

    (262) funcion_trigonometrica -> ATAN2D PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 467
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 308

    (263) funcion_trigonometrica -> COS PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 468
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 309

    (264) funcion_trigonometrica -> COSD PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 469
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 310

    (265) funcion_trigonometrica -> COT PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 470
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 311

    (266) funcion_trigonometrica -> COTD PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 471
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 312

    (267) funcion_trigonometrica -> SIN PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 472
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 313

    (268) funcion_trigonometrica -> SIND PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 473
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 314

    (269) funcion_trigonometrica -> TAN PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 474
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 315

    (270) funcion_trigonometrica -> TAND PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 475
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 316

    (271) funcion_trigonometrica -> SINH PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 476
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 317

    (272) funcion_trigonometrica -> COSH PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 477
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 318

    (273) funcion_trigonometrica -> TANH PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 478
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 319

    (274) funcion_trigonometrica -> ASINH PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 479
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 320

    (275) funcion_trigonometrica -> ACOSH PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 480
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 321

    (276) funcion_trigonometrica -> ATANH PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 481
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 322

    (277) func_bin_strings_1 -> LENGTH PARIZQ . cadena PARDER
    (296) cadena -> . cualquiercadena
    (297) cadena -> . cualquieridentificador
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    cadena                         shift and go to state 482
    cualquiercadena                shift and go to state 483
    cualquieridentificador         shift and go to state 484

state 323

    (278) func_bin_strings_2 -> SUBSTRING PARIZQ . cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (296) cadena -> . cualquiercadena
    (297) cadena -> . cualquieridentificador
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    cadena                         shift and go to state 485
    cualquiercadena                shift and go to state 483
    cualquieridentificador         shift and go to state 484

state 324

    (279) func_bin_strings_2 -> SUBSTR PARIZQ . cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (296) cadena -> . cualquiercadena
    (297) cadena -> . cualquieridentificador
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    cadena                         shift and go to state 486
    cualquiercadena                shift and go to state 483
    cualquieridentificador         shift and go to state 484

state 325

    (280) func_bin_strings_2 -> TRIM PARIZQ . cadena PARDER
    (296) cadena -> . cualquiercadena
    (297) cadena -> . cualquieridentificador
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    cadena                         shift and go to state 487
    cualquiercadena                shift and go to state 483
    cualquieridentificador         shift and go to state 484

state 326

    (282) func_bin_strings_4 -> GET_BYTE PARIZQ . cadena COMA ENTERO PARDER
    (296) cadena -> . cualquiercadena
    (297) cadena -> . cualquieridentificador
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    cadena                         shift and go to state 488
    cualquiercadena                shift and go to state 483
    cualquieridentificador         shift and go to state 484

state 327

    (283) func_bin_strings_4 -> SET_BYTE PARIZQ . cadena COMA ENTERO COMA ENTERO PARDER
    (296) cadena -> . cualquiercadena
    (297) cadena -> . cualquieridentificador
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    cadena                         shift and go to state 489
    cualquiercadena                shift and go to state 483
    cualquieridentificador         shift and go to state 484

state 328

    (284) func_bin_strings_4 -> ENCODE PARIZQ . cadena COMA cadena PARDER
    (296) cadena -> . cualquiercadena
    (297) cadena -> . cualquieridentificador
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    cadena                         shift and go to state 490
    cualquiercadena                shift and go to state 483
    cualquieridentificador         shift and go to state 484

state 329

    (285) func_bin_strings_4 -> DECODE PARIZQ . cadena COMA cadena PARDER
    (296) cadena -> . cualquiercadena
    (297) cadena -> . cualquieridentificador
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    cadena                         shift and go to state 491
    cualquiercadena                shift and go to state 483
    cualquieridentificador         shift and go to state 484

state 330

    (286) func_bin_strings_4 -> SHA256 PARIZQ . cadena PARDER
    (296) cadena -> . cualquiercadena
    (297) cadena -> . cualquieridentificador
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    cadena                         shift and go to state 492
    cualquiercadena                shift and go to state 483
    cualquieridentificador         shift and go to state 484

state 331

    (287) func_bin_strings_4 -> CONVERT PARIZQ . alias PARDER
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    PARDER          reduce using rule 546 (empty -> .)

    alias                          shift and go to state 493
    empty                          shift and go to state 264

state 332

    (393) nowinstr -> NOW PARIZQ . PARDER

    PARDER          shift and go to state 494


state 333

    (382) extract_instr -> EXTRACT PARIZQ . valdate FROM TIMESTAMP CADENASIMPLE PARDER
    (383) valdate -> . YEAR
    (384) valdate -> . HOUR
    (385) valdate -> . MINUTE
    (386) valdate -> . SECOND
    (387) valdate -> . MONTH
    (388) valdate -> . DAY

    YEAR            shift and go to state 496
    HOUR            shift and go to state 497
    MINUTE          shift and go to state 498
    SECOND          shift and go to state 499
    MONTH           shift and go to state 500
    DAY             shift and go to state 501

    valdate                        shift and go to state 495

state 334

    (392) timestampnow -> TIMESTAMP CADENASIMPLE .

    ID              reduce using rule 392 (timestampnow -> TIMESTAMP CADENASIMPLE .)
    CADENASIMPLE    reduce using rule 392 (timestampnow -> TIMESTAMP CADENASIMPLE .)
    CADENADOBLE     reduce using rule 392 (timestampnow -> TIMESTAMP CADENASIMPLE .)
    AS              reduce using rule 392 (timestampnow -> TIMESTAMP CADENASIMPLE .)
    COMA            reduce using rule 392 (timestampnow -> TIMESTAMP CADENASIMPLE .)
    FROM            reduce using rule 392 (timestampnow -> TIMESTAMP CADENASIMPLE .)
    UNION           reduce using rule 392 (timestampnow -> TIMESTAMP CADENASIMPLE .)
    INTERSECT       reduce using rule 392 (timestampnow -> TIMESTAMP CADENASIMPLE .)
    EXCEPT          reduce using rule 392 (timestampnow -> TIMESTAMP CADENASIMPLE .)
    PTCOMA          reduce using rule 392 (timestampnow -> TIMESTAMP CADENASIMPLE .)
    PARDER          reduce using rule 392 (timestampnow -> TIMESTAMP CADENASIMPLE .)
    CSIMPLE         reduce using rule 392 (timestampnow -> TIMESTAMP CADENASIMPLE .)


state 335

    (389) datepart_instr -> DATE_PART PARIZQ . CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER

    CADENASIMPLE    shift and go to state 502


state 336

    (407) llamadaprocedimiento -> EXECUTE ID PARIZQ PARDER . PTCOMA

    PTCOMA          shift and go to state 503


state 337

    (408) llamadaprocedimiento -> EXECUTE ID PARIZQ listaexpresiones . PARDER PTCOMA
    (523) listaexpresiones -> listaexpresiones . COMA expresion

    PARDER          shift and go to state 504
    COMA            shift and go to state 415


state 338

    (29) state_owner -> OWNER IGUAL . ID state_mode
    (30) state_owner -> OWNER IGUAL . CADENASIMPLE state_mode

    ID              shift and go to state 505
    CADENASIMPLE    shift and go to state 506


state 339

    (31) state_owner -> OWNER ID . state_mode
    (34) state_mode -> . MODE IGUAL ENTERO PTCOMA
    (35) state_mode -> . MODE ENTERO PTCOMA
    (36) state_mode -> . PTCOMA

    MODE            shift and go to state 196
    PTCOMA          shift and go to state 197

    state_mode                     shift and go to state 507

state 340

    (32) state_owner -> OWNER CADENASIMPLE . state_mode
    (34) state_mode -> . MODE IGUAL ENTERO PTCOMA
    (35) state_mode -> . MODE ENTERO PTCOMA
    (36) state_mode -> . PTCOMA

    MODE            shift and go to state 196
    PTCOMA          shift and go to state 197

    state_mode                     shift and go to state 508

state 341

    (34) state_mode -> MODE IGUAL . ENTERO PTCOMA

    ENTERO          shift and go to state 509


state 342

    (35) state_mode -> MODE ENTERO . PTCOMA

    PTCOMA          shift and go to state 510


state 343

    (28) existencia -> IF NOT EXISTS . ID state_owner

    ID              shift and go to state 511


state 344

    (347) key_column -> ID . type_column attributes
    (311) type_column -> . SMALLINT
    (312) type_column -> . INTEGER
    (313) type_column -> . BIGINT
    (314) type_column -> . RDECIMAL
    (315) type_column -> . RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER
    (316) type_column -> . NUMERIC
    (317) type_column -> . REAL
    (318) type_column -> . FLOAT
    (319) type_column -> . INT
    (320) type_column -> . DOUBLE
    (321) type_column -> . MONEY
    (322) type_column -> . VARCHAR PARIZQ ENTERO PARDER
    (323) type_column -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (324) type_column -> . CHARACTER PARIZQ ENTERO PARDER
    (325) type_column -> . CHAR PARIZQ ENTERO PARDER
    (326) type_column -> . TEXT
    (327) type_column -> . TIMESTAMP
    (328) type_column -> . TIMESTAMP PARIZQ ENTERO PARDER
    (329) type_column -> . DATE
    (330) type_column -> . TIME
    (331) type_column -> . BOOLEAN
    (332) type_column -> . ID
    (333) type_column -> . TIME PARIZQ ENTERO PARDER
    (334) type_column -> . INTERVAL field

    SMALLINT        shift and go to state 514
    INTEGER         shift and go to state 515
    BIGINT          shift and go to state 516
    RDECIMAL        shift and go to state 517
    NUMERIC         shift and go to state 518
    REAL            shift and go to state 519
    FLOAT           shift and go to state 520
    INT             shift and go to state 521
    DOUBLE          shift and go to state 522
    MONEY           shift and go to state 523
    VARCHAR         shift and go to state 524
    CHARACTER       shift and go to state 525
    CHAR            shift and go to state 526
    TEXT            shift and go to state 527
    TIMESTAMP       shift and go to state 528
    DATE            shift and go to state 529
    TIME            shift and go to state 530
    BOOLEAN         shift and go to state 531
    ID              shift and go to state 512
    INTERVAL        shift and go to state 532

    type_column                    shift and go to state 513

state 345

    (341) create_table -> CREATE TABLE ID PARIZQ list_columns_x . PARDER end_create_table
    (344) list_columns_x -> list_columns_x . COMA key_column

    PARDER          shift and go to state 533
    COMA            shift and go to state 534


state 346

    (345) list_columns_x -> key_column .

    PARDER          reduce using rule 345 (list_columns_x -> key_column .)
    COMA            reduce using rule 345 (list_columns_x -> key_column .)


state 347

    (346) key_column -> PRIMARY . KEY PARIZQ listtablas PARDER

    KEY             shift and go to state 535


state 348

    (365) create_enum -> CREATE TYPE ID AS ENUM . PARIZQ list_string PARDER PTCOMA

    PARIZQ          shift and go to state 536


state 349

    (394) indexinstr -> CREATE INDEX ID ON ID . PARIZQ ID PARDER PTCOMA
    (395) indexinstr -> CREATE INDEX ID ON ID . USING HASH PARIZQ ID PARDER PTCOMA
    (396) indexinstr -> CREATE INDEX ID ON ID . PARIZQ ID COMA ID PARDER PTCOMA
    (397) indexinstr -> CREATE INDEX ID ON ID . PARIZQ valororderby PARDER PTCOMA
    (399) indexinstr -> CREATE INDEX ID ON ID . PARIZQ LOWER PARIZQ ID PARDER PARDER PTCOMA
    (400) indexinstr -> CREATE INDEX ID ON ID . PARIZQ ID PARDER whereselect PTCOMA
    (401) indexinstr -> CREATE INDEX ID ON ID . PARIZQ ID ID PARDER PTCOMA

    PARIZQ          shift and go to state 537
    USING           shift and go to state 538


state 350

    (398) indexinstr -> CREATE UNIQUE INDEX ID ON . ID PARIZQ columnas PARDER PTCOMA

    ID              shift and go to state 539


state 351

    (424) parfunc -> ID . type_column1
    (513) type_column1 -> ID .
    (489) type_column1 -> . SMALLINT
    (490) type_column1 -> . INTEGER
    (491) type_column1 -> . BIGINT
    (492) type_column1 -> . RDECIMAL
    (493) type_column1 -> . RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER
    (494) type_column1 -> . NUMERIC
    (495) type_column1 -> . NUMERIC PARIZQ ENTERO PARDER
    (496) type_column1 -> . REAL
    (497) type_column1 -> . FLOAT
    (498) type_column1 -> . INT
    (499) type_column1 -> . DOUBLE
    (500) type_column1 -> . MONEY
    (501) type_column1 -> . VARCHAR
    (502) type_column1 -> . VARCHAR PARIZQ ENTERO PARDER
    (503) type_column1 -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (504) type_column1 -> . CHARACTER PARIZQ ENTERO PARDER
    (505) type_column1 -> . CHAR
    (506) type_column1 -> . CHAR PARIZQ ENTERO PARDER
    (507) type_column1 -> . TEXT
    (508) type_column1 -> . TIMESTAMP
    (509) type_column1 -> . TIMESTAMP PARIZQ ENTERO PARDER
    (510) type_column1 -> . DATE
    (511) type_column1 -> . TIME
    (512) type_column1 -> . BOOLEAN
    (513) type_column1 -> . ID
    (514) type_column1 -> . TIME PARIZQ ENTERO PARDER
    (515) type_column1 -> . RECORD
    (516) type_column1 -> . TABLE PARIZQ parametrosfunc PARDER

    COMA            reduce using rule 513 (type_column1 -> ID .)
    PARDER          reduce using rule 513 (type_column1 -> ID .)
    SMALLINT        shift and go to state 359
    INTEGER         shift and go to state 360
    BIGINT          shift and go to state 361
    RDECIMAL        shift and go to state 362
    NUMERIC         shift and go to state 363
    REAL            shift and go to state 364
    FLOAT           shift and go to state 365
    INT             shift and go to state 366
    DOUBLE          shift and go to state 367
    MONEY           shift and go to state 368
    VARCHAR         shift and go to state 369
    CHARACTER       shift and go to state 370
    CHAR            shift and go to state 371
    TEXT            shift and go to state 372
    TIMESTAMP       shift and go to state 373
    DATE            shift and go to state 374
    TIME            shift and go to state 375
    BOOLEAN         shift and go to state 376
    ID              shift and go to state 540
    RECORD          shift and go to state 377
    TABLE           shift and go to state 378

    type_column1                   shift and go to state 541

state 352

    (411) plsql_instr -> CREATE procedfunct ID PARIZQ parametrosfunc . PARDER tiporetorno cuerpofuncion

    PARDER          shift and go to state 542


state 353

    (418) parametrosfunc -> listaparametrosfunc .
    (420) listaparametrosfunc -> listaparametrosfunc . COMA parfunc

    PARDER          reduce using rule 418 (parametrosfunc -> listaparametrosfunc .)
    COMA            shift and go to state 543


state 354

    (419) parametrosfunc -> empty .

    PARDER          reduce using rule 419 (parametrosfunc -> empty .)


state 355

    (421) listaparametrosfunc -> parfunc .

    COMA            reduce using rule 421 (listaparametrosfunc -> parfunc .)
    PARDER          reduce using rule 421 (listaparametrosfunc -> parfunc .)


state 356

    (422) parfunc -> OUT . ID type_column1

    ID              shift and go to state 544


state 357

    (425) parfunc -> type_column1 .

    COMA            reduce using rule 425 (parfunc -> type_column1 .)
    PARDER          reduce using rule 425 (parfunc -> type_column1 .)


state 358

    (423) parfunc -> INOUT . ID type_column1

    ID              shift and go to state 545


state 359

    (489) type_column1 -> SMALLINT .

    COMA            reduce using rule 489 (type_column1 -> SMALLINT .)
    PARDER          reduce using rule 489 (type_column1 -> SMALLINT .)
    AS              reduce using rule 489 (type_column1 -> SMALLINT .)
    NOT             reduce using rule 489 (type_column1 -> SMALLINT .)
    DEFAULT         reduce using rule 489 (type_column1 -> SMALLINT .)
    PTIGUAL         reduce using rule 489 (type_column1 -> SMALLINT .)
    IGUAL           reduce using rule 489 (type_column1 -> SMALLINT .)
    PTCOMA          reduce using rule 489 (type_column1 -> SMALLINT .)


state 360

    (490) type_column1 -> INTEGER .

    COMA            reduce using rule 490 (type_column1 -> INTEGER .)
    PARDER          reduce using rule 490 (type_column1 -> INTEGER .)
    AS              reduce using rule 490 (type_column1 -> INTEGER .)
    NOT             reduce using rule 490 (type_column1 -> INTEGER .)
    DEFAULT         reduce using rule 490 (type_column1 -> INTEGER .)
    PTIGUAL         reduce using rule 490 (type_column1 -> INTEGER .)
    IGUAL           reduce using rule 490 (type_column1 -> INTEGER .)
    PTCOMA          reduce using rule 490 (type_column1 -> INTEGER .)


state 361

    (491) type_column1 -> BIGINT .

    COMA            reduce using rule 491 (type_column1 -> BIGINT .)
    PARDER          reduce using rule 491 (type_column1 -> BIGINT .)
    AS              reduce using rule 491 (type_column1 -> BIGINT .)
    NOT             reduce using rule 491 (type_column1 -> BIGINT .)
    DEFAULT         reduce using rule 491 (type_column1 -> BIGINT .)
    PTIGUAL         reduce using rule 491 (type_column1 -> BIGINT .)
    IGUAL           reduce using rule 491 (type_column1 -> BIGINT .)
    PTCOMA          reduce using rule 491 (type_column1 -> BIGINT .)


state 362

    (492) type_column1 -> RDECIMAL .
    (493) type_column1 -> RDECIMAL . PARIZQ ENTERO COMA ENTERO PARDER

    COMA            reduce using rule 492 (type_column1 -> RDECIMAL .)
    PARDER          reduce using rule 492 (type_column1 -> RDECIMAL .)
    AS              reduce using rule 492 (type_column1 -> RDECIMAL .)
    NOT             reduce using rule 492 (type_column1 -> RDECIMAL .)
    DEFAULT         reduce using rule 492 (type_column1 -> RDECIMAL .)
    PTIGUAL         reduce using rule 492 (type_column1 -> RDECIMAL .)
    IGUAL           reduce using rule 492 (type_column1 -> RDECIMAL .)
    PTCOMA          reduce using rule 492 (type_column1 -> RDECIMAL .)
    PARIZQ          shift and go to state 546


state 363

    (494) type_column1 -> NUMERIC .
    (495) type_column1 -> NUMERIC . PARIZQ ENTERO PARDER

    COMA            reduce using rule 494 (type_column1 -> NUMERIC .)
    PARDER          reduce using rule 494 (type_column1 -> NUMERIC .)
    AS              reduce using rule 494 (type_column1 -> NUMERIC .)
    NOT             reduce using rule 494 (type_column1 -> NUMERIC .)
    DEFAULT         reduce using rule 494 (type_column1 -> NUMERIC .)
    PTIGUAL         reduce using rule 494 (type_column1 -> NUMERIC .)
    IGUAL           reduce using rule 494 (type_column1 -> NUMERIC .)
    PTCOMA          reduce using rule 494 (type_column1 -> NUMERIC .)
    PARIZQ          shift and go to state 547


state 364

    (496) type_column1 -> REAL .

    COMA            reduce using rule 496 (type_column1 -> REAL .)
    PARDER          reduce using rule 496 (type_column1 -> REAL .)
    AS              reduce using rule 496 (type_column1 -> REAL .)
    NOT             reduce using rule 496 (type_column1 -> REAL .)
    DEFAULT         reduce using rule 496 (type_column1 -> REAL .)
    PTIGUAL         reduce using rule 496 (type_column1 -> REAL .)
    IGUAL           reduce using rule 496 (type_column1 -> REAL .)
    PTCOMA          reduce using rule 496 (type_column1 -> REAL .)


state 365

    (497) type_column1 -> FLOAT .

    COMA            reduce using rule 497 (type_column1 -> FLOAT .)
    PARDER          reduce using rule 497 (type_column1 -> FLOAT .)
    AS              reduce using rule 497 (type_column1 -> FLOAT .)
    NOT             reduce using rule 497 (type_column1 -> FLOAT .)
    DEFAULT         reduce using rule 497 (type_column1 -> FLOAT .)
    PTIGUAL         reduce using rule 497 (type_column1 -> FLOAT .)
    IGUAL           reduce using rule 497 (type_column1 -> FLOAT .)
    PTCOMA          reduce using rule 497 (type_column1 -> FLOAT .)


state 366

    (498) type_column1 -> INT .

    COMA            reduce using rule 498 (type_column1 -> INT .)
    PARDER          reduce using rule 498 (type_column1 -> INT .)
    AS              reduce using rule 498 (type_column1 -> INT .)
    NOT             reduce using rule 498 (type_column1 -> INT .)
    DEFAULT         reduce using rule 498 (type_column1 -> INT .)
    PTIGUAL         reduce using rule 498 (type_column1 -> INT .)
    IGUAL           reduce using rule 498 (type_column1 -> INT .)
    PTCOMA          reduce using rule 498 (type_column1 -> INT .)


state 367

    (499) type_column1 -> DOUBLE .

    COMA            reduce using rule 499 (type_column1 -> DOUBLE .)
    PARDER          reduce using rule 499 (type_column1 -> DOUBLE .)
    AS              reduce using rule 499 (type_column1 -> DOUBLE .)
    NOT             reduce using rule 499 (type_column1 -> DOUBLE .)
    DEFAULT         reduce using rule 499 (type_column1 -> DOUBLE .)
    PTIGUAL         reduce using rule 499 (type_column1 -> DOUBLE .)
    IGUAL           reduce using rule 499 (type_column1 -> DOUBLE .)
    PTCOMA          reduce using rule 499 (type_column1 -> DOUBLE .)


state 368

    (500) type_column1 -> MONEY .

    COMA            reduce using rule 500 (type_column1 -> MONEY .)
    PARDER          reduce using rule 500 (type_column1 -> MONEY .)
    AS              reduce using rule 500 (type_column1 -> MONEY .)
    NOT             reduce using rule 500 (type_column1 -> MONEY .)
    DEFAULT         reduce using rule 500 (type_column1 -> MONEY .)
    PTIGUAL         reduce using rule 500 (type_column1 -> MONEY .)
    IGUAL           reduce using rule 500 (type_column1 -> MONEY .)
    PTCOMA          reduce using rule 500 (type_column1 -> MONEY .)


state 369

    (501) type_column1 -> VARCHAR .
    (502) type_column1 -> VARCHAR . PARIZQ ENTERO PARDER

    COMA            reduce using rule 501 (type_column1 -> VARCHAR .)
    PARDER          reduce using rule 501 (type_column1 -> VARCHAR .)
    AS              reduce using rule 501 (type_column1 -> VARCHAR .)
    NOT             reduce using rule 501 (type_column1 -> VARCHAR .)
    DEFAULT         reduce using rule 501 (type_column1 -> VARCHAR .)
    PTIGUAL         reduce using rule 501 (type_column1 -> VARCHAR .)
    IGUAL           reduce using rule 501 (type_column1 -> VARCHAR .)
    PTCOMA          reduce using rule 501 (type_column1 -> VARCHAR .)
    PARIZQ          shift and go to state 548


state 370

    (503) type_column1 -> CHARACTER . VARYING PARIZQ ENTERO PARDER
    (504) type_column1 -> CHARACTER . PARIZQ ENTERO PARDER

    VARYING         shift and go to state 549
    PARIZQ          shift and go to state 550


state 371

    (505) type_column1 -> CHAR .
    (506) type_column1 -> CHAR . PARIZQ ENTERO PARDER

    COMA            reduce using rule 505 (type_column1 -> CHAR .)
    PARDER          reduce using rule 505 (type_column1 -> CHAR .)
    AS              reduce using rule 505 (type_column1 -> CHAR .)
    NOT             reduce using rule 505 (type_column1 -> CHAR .)
    DEFAULT         reduce using rule 505 (type_column1 -> CHAR .)
    PTIGUAL         reduce using rule 505 (type_column1 -> CHAR .)
    IGUAL           reduce using rule 505 (type_column1 -> CHAR .)
    PTCOMA          reduce using rule 505 (type_column1 -> CHAR .)
    PARIZQ          shift and go to state 551


state 372

    (507) type_column1 -> TEXT .

    COMA            reduce using rule 507 (type_column1 -> TEXT .)
    PARDER          reduce using rule 507 (type_column1 -> TEXT .)
    AS              reduce using rule 507 (type_column1 -> TEXT .)
    NOT             reduce using rule 507 (type_column1 -> TEXT .)
    DEFAULT         reduce using rule 507 (type_column1 -> TEXT .)
    PTIGUAL         reduce using rule 507 (type_column1 -> TEXT .)
    IGUAL           reduce using rule 507 (type_column1 -> TEXT .)
    PTCOMA          reduce using rule 507 (type_column1 -> TEXT .)


state 373

    (508) type_column1 -> TIMESTAMP .
    (509) type_column1 -> TIMESTAMP . PARIZQ ENTERO PARDER

    COMA            reduce using rule 508 (type_column1 -> TIMESTAMP .)
    PARDER          reduce using rule 508 (type_column1 -> TIMESTAMP .)
    AS              reduce using rule 508 (type_column1 -> TIMESTAMP .)
    NOT             reduce using rule 508 (type_column1 -> TIMESTAMP .)
    DEFAULT         reduce using rule 508 (type_column1 -> TIMESTAMP .)
    PTIGUAL         reduce using rule 508 (type_column1 -> TIMESTAMP .)
    IGUAL           reduce using rule 508 (type_column1 -> TIMESTAMP .)
    PTCOMA          reduce using rule 508 (type_column1 -> TIMESTAMP .)
    PARIZQ          shift and go to state 552


state 374

    (510) type_column1 -> DATE .

    COMA            reduce using rule 510 (type_column1 -> DATE .)
    PARDER          reduce using rule 510 (type_column1 -> DATE .)
    AS              reduce using rule 510 (type_column1 -> DATE .)
    NOT             reduce using rule 510 (type_column1 -> DATE .)
    DEFAULT         reduce using rule 510 (type_column1 -> DATE .)
    PTIGUAL         reduce using rule 510 (type_column1 -> DATE .)
    IGUAL           reduce using rule 510 (type_column1 -> DATE .)
    PTCOMA          reduce using rule 510 (type_column1 -> DATE .)


state 375

    (511) type_column1 -> TIME .
    (514) type_column1 -> TIME . PARIZQ ENTERO PARDER

    COMA            reduce using rule 511 (type_column1 -> TIME .)
    PARDER          reduce using rule 511 (type_column1 -> TIME .)
    AS              reduce using rule 511 (type_column1 -> TIME .)
    NOT             reduce using rule 511 (type_column1 -> TIME .)
    DEFAULT         reduce using rule 511 (type_column1 -> TIME .)
    PTIGUAL         reduce using rule 511 (type_column1 -> TIME .)
    IGUAL           reduce using rule 511 (type_column1 -> TIME .)
    PTCOMA          reduce using rule 511 (type_column1 -> TIME .)
    PARIZQ          shift and go to state 553


state 376

    (512) type_column1 -> BOOLEAN .

    COMA            reduce using rule 512 (type_column1 -> BOOLEAN .)
    PARDER          reduce using rule 512 (type_column1 -> BOOLEAN .)
    AS              reduce using rule 512 (type_column1 -> BOOLEAN .)
    NOT             reduce using rule 512 (type_column1 -> BOOLEAN .)
    DEFAULT         reduce using rule 512 (type_column1 -> BOOLEAN .)
    PTIGUAL         reduce using rule 512 (type_column1 -> BOOLEAN .)
    IGUAL           reduce using rule 512 (type_column1 -> BOOLEAN .)
    PTCOMA          reduce using rule 512 (type_column1 -> BOOLEAN .)


state 377

    (515) type_column1 -> RECORD .

    COMA            reduce using rule 515 (type_column1 -> RECORD .)
    PARDER          reduce using rule 515 (type_column1 -> RECORD .)
    AS              reduce using rule 515 (type_column1 -> RECORD .)
    NOT             reduce using rule 515 (type_column1 -> RECORD .)
    DEFAULT         reduce using rule 515 (type_column1 -> RECORD .)
    PTIGUAL         reduce using rule 515 (type_column1 -> RECORD .)
    IGUAL           reduce using rule 515 (type_column1 -> RECORD .)
    PTCOMA          reduce using rule 515 (type_column1 -> RECORD .)


state 378

    (516) type_column1 -> TABLE . PARIZQ parametrosfunc PARDER

    PARIZQ          shift and go to state 554


state 379

    (37) alterDB_instr -> ALTER DATABASE ID renameto PTCOMA .

    $end            reduce using rule 37 (alterDB_instr -> ALTER DATABASE ID renameto PTCOMA .)


state 380

    (39) alterDB_instr -> ALTER DATABASE ID OWNER TO . owner_users PTCOMA
    (40) owner_users -> . ID
    (41) owner_users -> . CURRENT_USER
    (42) owner_users -> . SESSION_USER

    ID              shift and go to state 555
    CURRENT_USER    shift and go to state 557
    SESSION_USER    shift and go to state 558

    owner_users                    shift and go to state 556

state 381

    (38) renameto -> RENAME TO . ID

    ID              shift and go to state 559


state 382

    (302) alter_instr -> ALTER TABLE ID ALTER COLUMN . ID SET NOT NULL
    (308) list_alter_column -> ALTER COLUMN . ID TYPE type_column

    ID              shift and go to state 560


state 383

    (298) alter_instr -> ALTER TABLE ID ADD COLUMN . list_columns
    (309) list_columns -> . list_columns COMA ID type_column
    (310) list_columns -> . ID type_column

    ID              shift and go to state 561

    list_columns                   shift and go to state 562

state 384

    (299) alter_instr -> ALTER TABLE ID ADD CHECK . PARIZQ condicion PARDER

    PARIZQ          shift and go to state 563


state 385

    (300) alter_instr -> ALTER TABLE ID ADD CONSTRAINT . ID UNIQUE PARIZQ ID PARDER

    ID              shift and go to state 564


state 386

    (301) alter_instr -> ALTER TABLE ID ADD FOREIGN . KEY PARIZQ ID PARDER REFERENCES ID

    KEY             shift and go to state 565


state 387

    (303) alter_instr -> ALTER TABLE ID DROP CONSTRAINT . ID

    ID              shift and go to state 566


state 388

    (305) alter_instr -> ALTER TABLE ID DROP COLUMN . listtablas
    (69) listtablas -> . listtablas COMA ID
    (70) listtablas -> . ID

    ID              shift and go to state 60

    listtablas                     shift and go to state 567

state 389

    (304) alter_instr -> ALTER TABLE ID RENAME COLUMN . ID TO ID

    ID              shift and go to state 568


state 390

    (307) list_alter_column -> list_alter_column COMA . ALTER COLUMN ID TYPE type_column

    ALTER           shift and go to state 569


state 391

    (402) alterindex -> ALTER INDEX IF EXISTS ID . ID eoi PTCOMA

    ID              shift and go to state 570


state 392

    (405) eoi -> ID .

    PTCOMA          reduce using rule 405 (eoi -> ID .)


state 393

    (403) alterindex -> ALTER INDEX ID ID eoi . PTCOMA

    PTCOMA          shift and go to state 571


state 394

    (404) eoi -> ENTERO .

    PTCOMA          reduce using rule 404 (eoi -> ENTERO .)


state 395

    (44) dropDB_instr -> DROP DATABASE IF EXISTS ID . PTCOMA

    PTCOMA          shift and go to state 572


state 396

    (46) showDB_instr -> SHOW DATABASES LIKE CADENASIMPLE PTCOMA .

    $end            reduce using rule 46 (showDB_instr -> SHOW DATABASES LIKE CADENASIMPLE PTCOMA .)


state 397

    (48) insert_instr -> INSERT INTO ID VALUES PARIZQ . parametros PARDER PTCOMA
    (50) parametros -> . parametros COMA parametroinsert
    (51) parametros -> . parametroinsert
    (52) parametroinsert -> . DEFAULT
    (53) parametroinsert -> . NOW PARIZQ PARDER
    (54) parametroinsert -> . MD5 PARIZQ cualquiercadena PARDER
    (55) parametroinsert -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    DEFAULT         shift and go to state 575
    NOW             shift and go to state 576
    MD5             shift and go to state 577
    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    parametros                     shift and go to state 573
    parametroinsert                shift and go to state 574
    cualquiercadena                shift and go to state 239
    expresion                      shift and go to state 578
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 398

    (57) columnas -> ID .

    PARDER          reduce using rule 57 (columnas -> ID .)
    COMA            reduce using rule 57 (columnas -> ID .)


state 399

    (49) insert_instr -> INSERT INTO ID PARIZQ columnas . PARDER VALUES PARIZQ parametros PARDER PTCOMA
    (56) columnas -> columnas . COMA ID

    PARDER          shift and go to state 579
    COMA            shift and go to state 580


state 400

    (62) asignacion -> ID IGUAL . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresion                      shift and go to state 581
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 401

    (58) update_instr -> UPDATE ID SET asignaciones PTCOMA .

    $end            reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    RAISE           reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    ID              reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    RETURN          reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    EXECUTE         reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    GET             reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    NULL            reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    IF              reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    CASE            reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    COMMIT          reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    ROLLBACK        reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    INSERT          reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    UPDATE          reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    ALTER           reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    CREATE          reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    DROP            reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    DELETE          reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    TRUNCATE        reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    DECLARE         reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    SELECT          reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    BEGIN           reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    END             reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    ELSE            reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    ELSIF           reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)
    WHEN            reduce using rule 58 (update_instr -> UPDATE ID SET asignaciones PTCOMA .)


state 402

    (59) update_instr -> UPDATE ID SET asignaciones WHERE . condiciones PTCOMA
    (195) condiciones -> . condiciones AND condicion
    (196) condiciones -> . condiciones OR condicion
    (197) condiciones -> . NOT PARIZQ condiciones PARDER
    (198) condiciones -> . NOT condiciones
    (199) condiciones -> . condicion
    (200) condicion -> . expresion MENQUE expresion
    (201) condicion -> . expresion MAYQUE expresion
    (202) condicion -> . expresion MENIGUAL expresion
    (203) condicion -> . expresion MAYIGUAL expresion
    (204) condicion -> . expresion IGUAL expresion
    (205) condicion -> . expresion DIFERENTE expresion
    (206) condicion -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    NOT             shift and go to state 406
    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    condiciones                    shift and go to state 582
    condicion                      shift and go to state 405
    expresion                      shift and go to state 407
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 403

    (60) asignaciones -> asignaciones COMA . asignacion
    (62) asignacion -> . ID IGUAL expresion

    ID              shift and go to state 222

    asignacion                     shift and go to state 583

state 404

    (64) delete_instr -> DELETE FROM ID WHERE condiciones . PTCOMA
    (195) condiciones -> condiciones . AND condicion
    (196) condiciones -> condiciones . OR condicion

    PTCOMA          shift and go to state 584
    AND             shift and go to state 585
    OR              shift and go to state 586


state 405

    (199) condiciones -> condicion .

    PTCOMA          reduce using rule 199 (condiciones -> condicion .)
    AND             reduce using rule 199 (condiciones -> condicion .)
    OR              reduce using rule 199 (condiciones -> condicion .)
    PARDER          reduce using rule 199 (condiciones -> condicion .)
    THEN            reduce using rule 199 (condiciones -> condicion .)


state 406

    (197) condiciones -> NOT . PARIZQ condiciones PARDER
    (198) condiciones -> NOT . condiciones
    (195) condiciones -> . condiciones AND condicion
    (196) condiciones -> . condiciones OR condicion
    (197) condiciones -> . NOT PARIZQ condiciones PARDER
    (198) condiciones -> . NOT condiciones
    (199) condiciones -> . condicion
    (200) condicion -> . expresion MENQUE expresion
    (201) condicion -> . expresion MAYQUE expresion
    (202) condicion -> . expresion MENIGUAL expresion
    (203) condicion -> . expresion MAYIGUAL expresion
    (204) condicion -> . expresion IGUAL expresion
    (205) condicion -> . expresion DIFERENTE expresion
    (206) condicion -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 587
    NOT             shift and go to state 406
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    condiciones                    shift and go to state 588
    condicion                      shift and go to state 405
    expresion                      shift and go to state 407
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 407

    (200) condicion -> expresion . MENQUE expresion
    (201) condicion -> expresion . MAYQUE expresion
    (202) condicion -> expresion . MENIGUAL expresion
    (203) condicion -> expresion . MAYIGUAL expresion
    (204) condicion -> expresion . IGUAL expresion
    (205) condicion -> expresion . DIFERENTE expresion
    (206) condicion -> expresion .

    MENQUE          shift and go to state 589
    MAYQUE          shift and go to state 590
    MENIGUAL        shift and go to state 591
    MAYIGUAL        shift and go to state 592
    IGUAL           shift and go to state 593
    DIFERENTE       shift and go to state 594
    PTCOMA          reduce using rule 206 (condicion -> expresion .)
    AND             reduce using rule 206 (condicion -> expresion .)
    OR              reduce using rule 206 (condicion -> expresion .)
    PARDER          reduce using rule 206 (condicion -> expresion .)
    THEN            reduce using rule 206 (condicion -> expresion .)
    GROUP           reduce using rule 206 (condicion -> expresion .)
    ORDER           reduce using rule 206 (condicion -> expresion .)
    UNION           reduce using rule 206 (condicion -> expresion .)
    INTERSECT       reduce using rule 206 (condicion -> expresion .)
    EXCEPT          reduce using rule 206 (condicion -> expresion .)
    CSIMPLE         reduce using rule 206 (condicion -> expresion .)


state 408

    (68) truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .

    $end            reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    RAISE           reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    ID              reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    RETURN          reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    EXECUTE         reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    GET             reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    NULL            reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    IF              reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    CASE            reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    COMMIT          reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    ROLLBACK        reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    INSERT          reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    UPDATE          reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    ALTER           reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    CREATE          reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    DROP            reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    DELETE          reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    TRUNCATE        reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    DECLARE         reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    SELECT          reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    BEGIN           reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    END             reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    ELSE            reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    ELSIF           reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)
    WHEN            reduce using rule 68 (truncate_instr -> TRUNCATE TABLE listtablas CASCADE PTCOMA .)


state 409

    (229) cualquieridentificador -> ID PUNTO . ID

    ID              shift and go to state 595


state 410

    (223) expresionaritmetica -> PARIZQ . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 412
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 411

    (213) expresion -> PARIZQ select_instr1 . PARDER

    PARDER          shift and go to state 596


state 412

    (223) expresionaritmetica -> PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 597
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 413

    (409) llamadafunciones -> SELECT ID PARIZQ PARDER PTCOMA .

    $end            reduce using rule 409 (llamadafunciones -> SELECT ID PARIZQ PARDER PTCOMA .)


state 414

    (410) llamadafunciones -> SELECT ID PARIZQ listaexpresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 598


state 415

    (523) listaexpresiones -> listaexpresiones COMA . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresion                      shift and go to state 599
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 416

    (214) expresionaritmetica -> expresionaritmetica MAS . expresionaritmetica
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 600
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 417

    (215) expresionaritmetica -> expresionaritmetica MENOS . expresionaritmetica
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 601
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 418

    (216) expresionaritmetica -> expresionaritmetica ASTERISCO . expresionaritmetica
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 602
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 419

    (217) expresionaritmetica -> expresionaritmetica DIVIDIDO . expresionaritmetica
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 603
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 420

    (218) expresionaritmetica -> expresionaritmetica MODULO . expresionaritmetica
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 604
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 421

    (219) expresionaritmetica -> expresionaritmetica EXPONENTE . expresionaritmetica
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 605
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 422

    (220) expresionaritmetica -> MENOS expresionaritmetica .
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    MAS             reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    MENOS           reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    ASTERISCO       reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    DIVIDIDO        reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    MODULO          reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    EXPONENTE       reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    PARDER          reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    COMA            reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    MENQUE          reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    MAYQUE          reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    MENIGUAL        reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    MAYIGUAL        reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    IGUAL           reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    DIFERENTE       reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    PTCOMA          reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    AND             reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    OR              reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    WHERE           reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    THEN            reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    RAISE           reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    ID              reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    RETURN          reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    EXECUTE         reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    GET             reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    NULL            reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    IF              reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    CASE            reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    COMMIT          reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    ROLLBACK        reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    INSERT          reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    UPDATE          reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    ALTER           reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    CREATE          reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    DROP            reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    DELETE          reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    TRUNCATE        reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    DECLARE         reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    SELECT          reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    BEGIN           reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    END             reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    ELSE            reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    ELSIF           reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    WHEN            reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    GROUP           reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    ORDER           reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    UNION           reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    INTERSECT       reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    EXCEPT          reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)
    CSIMPLE         reduce using rule 220 (expresionaritmetica -> MENOS expresionaritmetica .)

  ! MAS             [ shift and go to state 416 ]
  ! MENOS           [ shift and go to state 417 ]
  ! ASTERISCO       [ shift and go to state 418 ]
  ! DIVIDIDO        [ shift and go to state 419 ]
  ! MODULO          [ shift and go to state 420 ]
  ! EXPONENTE       [ shift and go to state 421 ]


state 423

    (80) selectfrom -> FROM listatablasselect . whereselect groupby orderby
    (117) listatablasselect -> listatablasselect . COMA tablaselect
    (128) whereselect -> . WHERE condicioneswhere
    (129) whereselect -> . empty
    (546) empty -> .

    COMA            shift and go to state 607
    WHERE           shift and go to state 608
    GROUP           reduce using rule 546 (empty -> .)
    ORDER           reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    whereselect                    shift and go to state 606
    empty                          shift and go to state 609

state 424

    (118) listatablasselect -> tablaselect .

    COMA            reduce using rule 118 (listatablasselect -> tablaselect .)
    WHERE           reduce using rule 118 (listatablasselect -> tablaselect .)
    GROUP           reduce using rule 118 (listatablasselect -> tablaselect .)
    ORDER           reduce using rule 118 (listatablasselect -> tablaselect .)
    UNION           reduce using rule 118 (listatablasselect -> tablaselect .)
    INTERSECT       reduce using rule 118 (listatablasselect -> tablaselect .)
    EXCEPT          reduce using rule 118 (listatablasselect -> tablaselect .)
    PTCOMA          reduce using rule 118 (listatablasselect -> tablaselect .)
    PARDER          reduce using rule 118 (listatablasselect -> tablaselect .)
    CSIMPLE         reduce using rule 118 (listatablasselect -> tablaselect .)


state 425

    (119) tablaselect -> ID . alias
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    COMA            reduce using rule 546 (empty -> .)
    WHERE           reduce using rule 546 (empty -> .)
    GROUP           reduce using rule 546 (empty -> .)
    ORDER           reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    alias                          shift and go to state 610
    empty                          shift and go to state 264

state 426

    (120) tablaselect -> PARIZQ . select_instr1 PARDER alias
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    SELECT          shift and go to state 102

    select_instr1                  shift and go to state 611

state 427

    (93) listaselect -> listaselect COMA valselect .

    COMA            reduce using rule 93 (listaselect -> listaselect COMA valselect .)
    FROM            reduce using rule 93 (listaselect -> listaselect COMA valselect .)
    UNION           reduce using rule 93 (listaselect -> listaselect COMA valselect .)
    INTERSECT       reduce using rule 93 (listaselect -> listaselect COMA valselect .)
    EXCEPT          reduce using rule 93 (listaselect -> listaselect COMA valselect .)
    PTCOMA          reduce using rule 93 (listaselect -> listaselect COMA valselect .)
    PARDER          reduce using rule 93 (listaselect -> listaselect COMA valselect .)
    CSIMPLE         reduce using rule 93 (listaselect -> listaselect COMA valselect .)


state 428

    (97) valselect -> ID PUNTO ID . alias
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    COMA            reduce using rule 546 (empty -> .)
    FROM            reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    alias                          shift and go to state 612
    empty                          shift and go to state 264

state 429

    (96) valselect -> ID PUNTO ASTERISCO .

    COMA            reduce using rule 96 (valselect -> ID PUNTO ASTERISCO .)
    FROM            reduce using rule 96 (valselect -> ID PUNTO ASTERISCO .)
    UNION           reduce using rule 96 (valselect -> ID PUNTO ASTERISCO .)
    INTERSECT       reduce using rule 96 (valselect -> ID PUNTO ASTERISCO .)
    EXCEPT          reduce using rule 96 (valselect -> ID PUNTO ASTERISCO .)
    PTCOMA          reduce using rule 96 (valselect -> ID PUNTO ASTERISCO .)
    PARDER          reduce using rule 96 (valselect -> ID PUNTO ASTERISCO .)
    CSIMPLE         reduce using rule 96 (valselect -> ID PUNTO ASTERISCO .)


state 430

    (124) alias -> AS ID .

    COMA            reduce using rule 124 (alias -> AS ID .)
    FROM            reduce using rule 124 (alias -> AS ID .)
    UNION           reduce using rule 124 (alias -> AS ID .)
    INTERSECT       reduce using rule 124 (alias -> AS ID .)
    EXCEPT          reduce using rule 124 (alias -> AS ID .)
    PTCOMA          reduce using rule 124 (alias -> AS ID .)
    PARDER          reduce using rule 124 (alias -> AS ID .)
    CSIMPLE         reduce using rule 124 (alias -> AS ID .)
    WHERE           reduce using rule 124 (alias -> AS ID .)
    GROUP           reduce using rule 124 (alias -> AS ID .)
    ORDER           reduce using rule 124 (alias -> AS ID .)


state 431

    (125) alias -> AS CADENASIMPLE .

    COMA            reduce using rule 125 (alias -> AS CADENASIMPLE .)
    FROM            reduce using rule 125 (alias -> AS CADENASIMPLE .)
    UNION           reduce using rule 125 (alias -> AS CADENASIMPLE .)
    INTERSECT       reduce using rule 125 (alias -> AS CADENASIMPLE .)
    EXCEPT          reduce using rule 125 (alias -> AS CADENASIMPLE .)
    PTCOMA          reduce using rule 125 (alias -> AS CADENASIMPLE .)
    PARDER          reduce using rule 125 (alias -> AS CADENASIMPLE .)
    CSIMPLE         reduce using rule 125 (alias -> AS CADENASIMPLE .)
    WHERE           reduce using rule 125 (alias -> AS CADENASIMPLE .)
    GROUP           reduce using rule 125 (alias -> AS CADENASIMPLE .)
    ORDER           reduce using rule 125 (alias -> AS CADENASIMPLE .)


state 432

    (126) alias -> AS CADENADOBLE .

    COMA            reduce using rule 126 (alias -> AS CADENADOBLE .)
    FROM            reduce using rule 126 (alias -> AS CADENADOBLE .)
    UNION           reduce using rule 126 (alias -> AS CADENADOBLE .)
    INTERSECT       reduce using rule 126 (alias -> AS CADENADOBLE .)
    EXCEPT          reduce using rule 126 (alias -> AS CADENADOBLE .)
    PTCOMA          reduce using rule 126 (alias -> AS CADENADOBLE .)
    PARDER          reduce using rule 126 (alias -> AS CADENADOBLE .)
    CSIMPLE         reduce using rule 126 (alias -> AS CADENADOBLE .)
    WHERE           reduce using rule 126 (alias -> AS CADENADOBLE .)
    GROUP           reduce using rule 126 (alias -> AS CADENADOBLE .)
    ORDER           reduce using rule 126 (alias -> AS CADENADOBLE .)


state 433

    (101) valselect -> PARIZQ select_instr1 PARDER . alias
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    COMA            reduce using rule 546 (empty -> .)
    FROM            reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    alias                          shift and go to state 613
    empty                          shift and go to state 264

state 434

    (102) valselect -> agregacion PARIZQ cualquieridentificador . PARDER alias

    PARDER          shift and go to state 614


state 435

    (103) valselect -> COUNT PARIZQ ASTERISCO . PARDER alias

    PARDER          shift and go to state 615


state 436

    (104) valselect -> COUNT PARIZQ cualquieridentificador . PARDER alias

    PARDER          shift and go to state 616


state 437

    (232) funcion_matematica_ws -> ABS PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 617
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 438

    (233) funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 618
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 439

    (234) funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 619
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 440

    (235) funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 620
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 441

    (236) funcion_matematica_s -> DEGREES PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 621
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 442

    (237) funcion_matematica_s -> DIV PARIZQ expresionaritmetica . COMA expresionaritmetica PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    COMA            shift and go to state 622
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 443

    (238) funcion_matematica_s -> EXP PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 623
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 444

    (239) funcion_matematica_s -> FACTORIAL PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 624
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 445

    (240) funcion_matematica_s -> FLOOR PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 625
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 446

    (241) funcion_matematica_s -> GCD PARIZQ expresionaritmetica . COMA expresionaritmetica PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    COMA            shift and go to state 626
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 447

    (242) funcion_matematica_s -> LN PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 627
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 448

    (243) funcion_matematica_s -> LOG PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 628
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 449

    (244) funcion_matematica_s -> MOD PARIZQ expresionaritmetica . COMA expresionaritmetica PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    COMA            shift and go to state 629
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 450

    (245) funcion_matematica_s -> PI PARIZQ PARDER .

    ID              reduce using rule 245 (funcion_matematica_s -> PI PARIZQ PARDER .)
    CADENASIMPLE    reduce using rule 245 (funcion_matematica_s -> PI PARIZQ PARDER .)
    CADENADOBLE     reduce using rule 245 (funcion_matematica_s -> PI PARIZQ PARDER .)
    AS              reduce using rule 245 (funcion_matematica_s -> PI PARIZQ PARDER .)
    COMA            reduce using rule 245 (funcion_matematica_s -> PI PARIZQ PARDER .)
    FROM            reduce using rule 245 (funcion_matematica_s -> PI PARIZQ PARDER .)
    UNION           reduce using rule 245 (funcion_matematica_s -> PI PARIZQ PARDER .)
    INTERSECT       reduce using rule 245 (funcion_matematica_s -> PI PARIZQ PARDER .)
    EXCEPT          reduce using rule 245 (funcion_matematica_s -> PI PARIZQ PARDER .)
    PTCOMA          reduce using rule 245 (funcion_matematica_s -> PI PARIZQ PARDER .)
    PARDER          reduce using rule 245 (funcion_matematica_s -> PI PARIZQ PARDER .)
    CSIMPLE         reduce using rule 245 (funcion_matematica_s -> PI PARIZQ PARDER .)


state 451

    (246) funcion_matematica_s -> POWER PARIZQ expresionaritmetica . COMA expresionaritmetica PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    COMA            shift and go to state 630
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 452

    (247) funcion_matematica_s -> RADIANS PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 631
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 453

    (248) funcion_matematica_s -> ROUND PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 632
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 454

    (249) funcion_matematica_s -> SIGN PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 633
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 455

    (250) funcion_matematica_s -> SQRT PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 634
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 456

    (251) funcion_matematica_s -> WBUCKET PARIZQ explist . PARDER

    PARDER          shift and go to state 635


state 457

    (254) explist -> expresionaritmetica . COMA expresionaritmetica COMA expresionaritmetica COMA expresionaritmetica
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    COMA            shift and go to state 636
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 458

    (252) funcion_matematica_s -> TRUNC PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 637
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 459

    (253) funcion_matematica_s -> RANDOM PARIZQ PARDER .

    ID              reduce using rule 253 (funcion_matematica_s -> RANDOM PARIZQ PARDER .)
    CADENASIMPLE    reduce using rule 253 (funcion_matematica_s -> RANDOM PARIZQ PARDER .)
    CADENADOBLE     reduce using rule 253 (funcion_matematica_s -> RANDOM PARIZQ PARDER .)
    AS              reduce using rule 253 (funcion_matematica_s -> RANDOM PARIZQ PARDER .)
    COMA            reduce using rule 253 (funcion_matematica_s -> RANDOM PARIZQ PARDER .)
    FROM            reduce using rule 253 (funcion_matematica_s -> RANDOM PARIZQ PARDER .)
    UNION           reduce using rule 253 (funcion_matematica_s -> RANDOM PARIZQ PARDER .)
    INTERSECT       reduce using rule 253 (funcion_matematica_s -> RANDOM PARIZQ PARDER .)
    EXCEPT          reduce using rule 253 (funcion_matematica_s -> RANDOM PARIZQ PARDER .)
    PTCOMA          reduce using rule 253 (funcion_matematica_s -> RANDOM PARIZQ PARDER .)
    PARDER          reduce using rule 253 (funcion_matematica_s -> RANDOM PARIZQ PARDER .)
    CSIMPLE         reduce using rule 253 (funcion_matematica_s -> RANDOM PARIZQ PARDER .)


state 460

    (255) funcion_trigonometrica -> ACOS PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 638
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 461

    (256) funcion_trigonometrica -> ACOSD PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 639
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 462

    (257) funcion_trigonometrica -> ASIN PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 640
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 463

    (258) funcion_trigonometrica -> ASIND PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 641
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 464

    (259) funcion_trigonometrica -> ATAN PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 642
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 465

    (260) funcion_trigonometrica -> ATAND PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 643
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 466

    (261) funcion_trigonometrica -> ATAN2 PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 644
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 467

    (262) funcion_trigonometrica -> ATAN2D PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 645
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 468

    (263) funcion_trigonometrica -> COS PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 646
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 469

    (264) funcion_trigonometrica -> COSD PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 647
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 470

    (265) funcion_trigonometrica -> COT PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 648
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 471

    (266) funcion_trigonometrica -> COTD PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 649
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 472

    (267) funcion_trigonometrica -> SIN PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 650
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 473

    (268) funcion_trigonometrica -> SIND PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 651
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 474

    (269) funcion_trigonometrica -> TAN PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 652
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 475

    (270) funcion_trigonometrica -> TAND PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 653
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 476

    (271) funcion_trigonometrica -> SINH PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 654
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 477

    (272) funcion_trigonometrica -> COSH PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 655
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 478

    (273) funcion_trigonometrica -> TANH PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 656
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 479

    (274) funcion_trigonometrica -> ASINH PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 657
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 480

    (275) funcion_trigonometrica -> ACOSH PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 658
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 481

    (276) funcion_trigonometrica -> ATANH PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 659
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 482

    (277) func_bin_strings_1 -> LENGTH PARIZQ cadena . PARDER

    PARDER          shift and go to state 660


state 483

    (296) cadena -> cualquiercadena .

    PARDER          reduce using rule 296 (cadena -> cualquiercadena .)
    COMA            reduce using rule 296 (cadena -> cualquiercadena .)


state 484

    (297) cadena -> cualquieridentificador .

    PARDER          reduce using rule 297 (cadena -> cualquieridentificador .)
    COMA            reduce using rule 297 (cadena -> cualquieridentificador .)


state 485

    (278) func_bin_strings_2 -> SUBSTRING PARIZQ cadena . COMA cualquiernumero COMA cualquiernumero PARDER

    COMA            shift and go to state 661


state 486

    (279) func_bin_strings_2 -> SUBSTR PARIZQ cadena . COMA cualquiernumero COMA cualquiernumero PARDER

    COMA            shift and go to state 662


state 487

    (280) func_bin_strings_2 -> TRIM PARIZQ cadena . PARDER

    PARDER          shift and go to state 663


state 488

    (282) func_bin_strings_4 -> GET_BYTE PARIZQ cadena . COMA ENTERO PARDER

    COMA            shift and go to state 664


state 489

    (283) func_bin_strings_4 -> SET_BYTE PARIZQ cadena . COMA ENTERO COMA ENTERO PARDER

    COMA            shift and go to state 665


state 490

    (284) func_bin_strings_4 -> ENCODE PARIZQ cadena . COMA cadena PARDER

    COMA            shift and go to state 666


state 491

    (285) func_bin_strings_4 -> DECODE PARIZQ cadena . COMA cadena PARDER

    COMA            shift and go to state 667


state 492

    (286) func_bin_strings_4 -> SHA256 PARIZQ cadena . PARDER

    PARDER          shift and go to state 668


state 493

    (287) func_bin_strings_4 -> CONVERT PARIZQ alias . PARDER

    PARDER          shift and go to state 669


state 494

    (393) nowinstr -> NOW PARIZQ PARDER .

    COMA            reduce using rule 393 (nowinstr -> NOW PARIZQ PARDER .)
    FROM            reduce using rule 393 (nowinstr -> NOW PARIZQ PARDER .)
    UNION           reduce using rule 393 (nowinstr -> NOW PARIZQ PARDER .)
    INTERSECT       reduce using rule 393 (nowinstr -> NOW PARIZQ PARDER .)
    EXCEPT          reduce using rule 393 (nowinstr -> NOW PARIZQ PARDER .)
    PTCOMA          reduce using rule 393 (nowinstr -> NOW PARIZQ PARDER .)
    PARDER          reduce using rule 393 (nowinstr -> NOW PARIZQ PARDER .)
    CSIMPLE         reduce using rule 393 (nowinstr -> NOW PARIZQ PARDER .)


state 495

    (382) extract_instr -> EXTRACT PARIZQ valdate . FROM TIMESTAMP CADENASIMPLE PARDER

    FROM            shift and go to state 670


state 496

    (383) valdate -> YEAR .

    FROM            reduce using rule 383 (valdate -> YEAR .)


state 497

    (384) valdate -> HOUR .

    FROM            reduce using rule 384 (valdate -> HOUR .)


state 498

    (385) valdate -> MINUTE .

    FROM            reduce using rule 385 (valdate -> MINUTE .)


state 499

    (386) valdate -> SECOND .

    FROM            reduce using rule 386 (valdate -> SECOND .)


state 500

    (387) valdate -> MONTH .

    FROM            reduce using rule 387 (valdate -> MONTH .)


state 501

    (388) valdate -> DAY .

    FROM            reduce using rule 388 (valdate -> DAY .)


state 502

    (389) datepart_instr -> DATE_PART PARIZQ CADENASIMPLE . COMA INTERVAL CADENASIMPLE PARDER

    COMA            shift and go to state 671


state 503

    (407) llamadaprocedimiento -> EXECUTE ID PARIZQ PARDER PTCOMA .

    $end            reduce using rule 407 (llamadaprocedimiento -> EXECUTE ID PARIZQ PARDER PTCOMA .)


state 504

    (408) llamadaprocedimiento -> EXECUTE ID PARIZQ listaexpresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 672


state 505

    (29) state_owner -> OWNER IGUAL ID . state_mode
    (34) state_mode -> . MODE IGUAL ENTERO PTCOMA
    (35) state_mode -> . MODE ENTERO PTCOMA
    (36) state_mode -> . PTCOMA

    MODE            shift and go to state 196
    PTCOMA          shift and go to state 197

    state_mode                     shift and go to state 673

state 506

    (30) state_owner -> OWNER IGUAL CADENASIMPLE . state_mode
    (34) state_mode -> . MODE IGUAL ENTERO PTCOMA
    (35) state_mode -> . MODE ENTERO PTCOMA
    (36) state_mode -> . PTCOMA

    MODE            shift and go to state 196
    PTCOMA          shift and go to state 197

    state_mode                     shift and go to state 674

state 507

    (31) state_owner -> OWNER ID state_mode .

    $end            reduce using rule 31 (state_owner -> OWNER ID state_mode .)


state 508

    (32) state_owner -> OWNER CADENASIMPLE state_mode .

    $end            reduce using rule 32 (state_owner -> OWNER CADENASIMPLE state_mode .)


state 509

    (34) state_mode -> MODE IGUAL ENTERO . PTCOMA

    PTCOMA          shift and go to state 675


state 510

    (35) state_mode -> MODE ENTERO PTCOMA .

    $end            reduce using rule 35 (state_mode -> MODE ENTERO PTCOMA .)


state 511

    (28) existencia -> IF NOT EXISTS ID . state_owner
    (29) state_owner -> . OWNER IGUAL ID state_mode
    (30) state_owner -> . OWNER IGUAL CADENASIMPLE state_mode
    (31) state_owner -> . OWNER ID state_mode
    (32) state_owner -> . OWNER CADENASIMPLE state_mode
    (33) state_owner -> . state_mode
    (34) state_mode -> . MODE IGUAL ENTERO PTCOMA
    (35) state_mode -> . MODE ENTERO PTCOMA
    (36) state_mode -> . PTCOMA

    OWNER           shift and go to state 194
    MODE            shift and go to state 196
    PTCOMA          shift and go to state 197

    state_owner                    shift and go to state 676
    state_mode                     shift and go to state 195

state 512

    (332) type_column -> ID .

    DEFAULT         reduce using rule 332 (type_column -> ID .)
    NULL            reduce using rule 332 (type_column -> ID .)
    NOT             reduce using rule 332 (type_column -> ID .)
    UNIQUE          reduce using rule 332 (type_column -> ID .)
    CONSTRAINT      reduce using rule 332 (type_column -> ID .)
    CHECK           reduce using rule 332 (type_column -> ID .)
    PRIMARY         reduce using rule 332 (type_column -> ID .)
    PARDER          reduce using rule 332 (type_column -> ID .)
    COMA            reduce using rule 332 (type_column -> ID .)
    PTCOMA          reduce using rule 332 (type_column -> ID .)


state 513

    (347) key_column -> ID type_column . attributes
    (348) attributes -> . default_value null_field constraint_field null_field primary_key
    (349) default_value -> . DEFAULT x_value
    (350) default_value -> . empty
    (546) empty -> .

    DEFAULT         shift and go to state 679
    NULL            reduce using rule 546 (empty -> .)
    NOT             reduce using rule 546 (empty -> .)
    UNIQUE          reduce using rule 546 (empty -> .)
    CONSTRAINT      reduce using rule 546 (empty -> .)
    CHECK           reduce using rule 546 (empty -> .)
    PRIMARY         reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    COMA            reduce using rule 546 (empty -> .)

    attributes                     shift and go to state 677
    default_value                  shift and go to state 678
    empty                          shift and go to state 680

state 514

    (311) type_column -> SMALLINT .

    DEFAULT         reduce using rule 311 (type_column -> SMALLINT .)
    NULL            reduce using rule 311 (type_column -> SMALLINT .)
    NOT             reduce using rule 311 (type_column -> SMALLINT .)
    UNIQUE          reduce using rule 311 (type_column -> SMALLINT .)
    CONSTRAINT      reduce using rule 311 (type_column -> SMALLINT .)
    CHECK           reduce using rule 311 (type_column -> SMALLINT .)
    PRIMARY         reduce using rule 311 (type_column -> SMALLINT .)
    PARDER          reduce using rule 311 (type_column -> SMALLINT .)
    COMA            reduce using rule 311 (type_column -> SMALLINT .)
    PTCOMA          reduce using rule 311 (type_column -> SMALLINT .)


state 515

    (312) type_column -> INTEGER .

    DEFAULT         reduce using rule 312 (type_column -> INTEGER .)
    NULL            reduce using rule 312 (type_column -> INTEGER .)
    NOT             reduce using rule 312 (type_column -> INTEGER .)
    UNIQUE          reduce using rule 312 (type_column -> INTEGER .)
    CONSTRAINT      reduce using rule 312 (type_column -> INTEGER .)
    CHECK           reduce using rule 312 (type_column -> INTEGER .)
    PRIMARY         reduce using rule 312 (type_column -> INTEGER .)
    PARDER          reduce using rule 312 (type_column -> INTEGER .)
    COMA            reduce using rule 312 (type_column -> INTEGER .)
    PTCOMA          reduce using rule 312 (type_column -> INTEGER .)


state 516

    (313) type_column -> BIGINT .

    DEFAULT         reduce using rule 313 (type_column -> BIGINT .)
    NULL            reduce using rule 313 (type_column -> BIGINT .)
    NOT             reduce using rule 313 (type_column -> BIGINT .)
    UNIQUE          reduce using rule 313 (type_column -> BIGINT .)
    CONSTRAINT      reduce using rule 313 (type_column -> BIGINT .)
    CHECK           reduce using rule 313 (type_column -> BIGINT .)
    PRIMARY         reduce using rule 313 (type_column -> BIGINT .)
    PARDER          reduce using rule 313 (type_column -> BIGINT .)
    COMA            reduce using rule 313 (type_column -> BIGINT .)
    PTCOMA          reduce using rule 313 (type_column -> BIGINT .)


state 517

    (314) type_column -> RDECIMAL .
    (315) type_column -> RDECIMAL . PARIZQ ENTERO COMA ENTERO PARDER

    DEFAULT         reduce using rule 314 (type_column -> RDECIMAL .)
    NULL            reduce using rule 314 (type_column -> RDECIMAL .)
    NOT             reduce using rule 314 (type_column -> RDECIMAL .)
    UNIQUE          reduce using rule 314 (type_column -> RDECIMAL .)
    CONSTRAINT      reduce using rule 314 (type_column -> RDECIMAL .)
    CHECK           reduce using rule 314 (type_column -> RDECIMAL .)
    PRIMARY         reduce using rule 314 (type_column -> RDECIMAL .)
    PARDER          reduce using rule 314 (type_column -> RDECIMAL .)
    COMA            reduce using rule 314 (type_column -> RDECIMAL .)
    PTCOMA          reduce using rule 314 (type_column -> RDECIMAL .)
    PARIZQ          shift and go to state 681


state 518

    (316) type_column -> NUMERIC .

    DEFAULT         reduce using rule 316 (type_column -> NUMERIC .)
    NULL            reduce using rule 316 (type_column -> NUMERIC .)
    NOT             reduce using rule 316 (type_column -> NUMERIC .)
    UNIQUE          reduce using rule 316 (type_column -> NUMERIC .)
    CONSTRAINT      reduce using rule 316 (type_column -> NUMERIC .)
    CHECK           reduce using rule 316 (type_column -> NUMERIC .)
    PRIMARY         reduce using rule 316 (type_column -> NUMERIC .)
    PARDER          reduce using rule 316 (type_column -> NUMERIC .)
    COMA            reduce using rule 316 (type_column -> NUMERIC .)
    PTCOMA          reduce using rule 316 (type_column -> NUMERIC .)


state 519

    (317) type_column -> REAL .

    DEFAULT         reduce using rule 317 (type_column -> REAL .)
    NULL            reduce using rule 317 (type_column -> REAL .)
    NOT             reduce using rule 317 (type_column -> REAL .)
    UNIQUE          reduce using rule 317 (type_column -> REAL .)
    CONSTRAINT      reduce using rule 317 (type_column -> REAL .)
    CHECK           reduce using rule 317 (type_column -> REAL .)
    PRIMARY         reduce using rule 317 (type_column -> REAL .)
    PARDER          reduce using rule 317 (type_column -> REAL .)
    COMA            reduce using rule 317 (type_column -> REAL .)
    PTCOMA          reduce using rule 317 (type_column -> REAL .)


state 520

    (318) type_column -> FLOAT .

    DEFAULT         reduce using rule 318 (type_column -> FLOAT .)
    NULL            reduce using rule 318 (type_column -> FLOAT .)
    NOT             reduce using rule 318 (type_column -> FLOAT .)
    UNIQUE          reduce using rule 318 (type_column -> FLOAT .)
    CONSTRAINT      reduce using rule 318 (type_column -> FLOAT .)
    CHECK           reduce using rule 318 (type_column -> FLOAT .)
    PRIMARY         reduce using rule 318 (type_column -> FLOAT .)
    PARDER          reduce using rule 318 (type_column -> FLOAT .)
    COMA            reduce using rule 318 (type_column -> FLOAT .)
    PTCOMA          reduce using rule 318 (type_column -> FLOAT .)


state 521

    (319) type_column -> INT .

    DEFAULT         reduce using rule 319 (type_column -> INT .)
    NULL            reduce using rule 319 (type_column -> INT .)
    NOT             reduce using rule 319 (type_column -> INT .)
    UNIQUE          reduce using rule 319 (type_column -> INT .)
    CONSTRAINT      reduce using rule 319 (type_column -> INT .)
    CHECK           reduce using rule 319 (type_column -> INT .)
    PRIMARY         reduce using rule 319 (type_column -> INT .)
    PARDER          reduce using rule 319 (type_column -> INT .)
    COMA            reduce using rule 319 (type_column -> INT .)
    PTCOMA          reduce using rule 319 (type_column -> INT .)


state 522

    (320) type_column -> DOUBLE .

    DEFAULT         reduce using rule 320 (type_column -> DOUBLE .)
    NULL            reduce using rule 320 (type_column -> DOUBLE .)
    NOT             reduce using rule 320 (type_column -> DOUBLE .)
    UNIQUE          reduce using rule 320 (type_column -> DOUBLE .)
    CONSTRAINT      reduce using rule 320 (type_column -> DOUBLE .)
    CHECK           reduce using rule 320 (type_column -> DOUBLE .)
    PRIMARY         reduce using rule 320 (type_column -> DOUBLE .)
    PARDER          reduce using rule 320 (type_column -> DOUBLE .)
    COMA            reduce using rule 320 (type_column -> DOUBLE .)
    PTCOMA          reduce using rule 320 (type_column -> DOUBLE .)


state 523

    (321) type_column -> MONEY .

    DEFAULT         reduce using rule 321 (type_column -> MONEY .)
    NULL            reduce using rule 321 (type_column -> MONEY .)
    NOT             reduce using rule 321 (type_column -> MONEY .)
    UNIQUE          reduce using rule 321 (type_column -> MONEY .)
    CONSTRAINT      reduce using rule 321 (type_column -> MONEY .)
    CHECK           reduce using rule 321 (type_column -> MONEY .)
    PRIMARY         reduce using rule 321 (type_column -> MONEY .)
    PARDER          reduce using rule 321 (type_column -> MONEY .)
    COMA            reduce using rule 321 (type_column -> MONEY .)
    PTCOMA          reduce using rule 321 (type_column -> MONEY .)


state 524

    (322) type_column -> VARCHAR . PARIZQ ENTERO PARDER

    PARIZQ          shift and go to state 682


state 525

    (323) type_column -> CHARACTER . VARYING PARIZQ ENTERO PARDER
    (324) type_column -> CHARACTER . PARIZQ ENTERO PARDER

    VARYING         shift and go to state 683
    PARIZQ          shift and go to state 684


state 526

    (325) type_column -> CHAR . PARIZQ ENTERO PARDER

    PARIZQ          shift and go to state 685


state 527

    (326) type_column -> TEXT .

    DEFAULT         reduce using rule 326 (type_column -> TEXT .)
    NULL            reduce using rule 326 (type_column -> TEXT .)
    NOT             reduce using rule 326 (type_column -> TEXT .)
    UNIQUE          reduce using rule 326 (type_column -> TEXT .)
    CONSTRAINT      reduce using rule 326 (type_column -> TEXT .)
    CHECK           reduce using rule 326 (type_column -> TEXT .)
    PRIMARY         reduce using rule 326 (type_column -> TEXT .)
    PARDER          reduce using rule 326 (type_column -> TEXT .)
    COMA            reduce using rule 326 (type_column -> TEXT .)
    PTCOMA          reduce using rule 326 (type_column -> TEXT .)


state 528

    (327) type_column -> TIMESTAMP .
    (328) type_column -> TIMESTAMP . PARIZQ ENTERO PARDER

    DEFAULT         reduce using rule 327 (type_column -> TIMESTAMP .)
    NULL            reduce using rule 327 (type_column -> TIMESTAMP .)
    NOT             reduce using rule 327 (type_column -> TIMESTAMP .)
    UNIQUE          reduce using rule 327 (type_column -> TIMESTAMP .)
    CONSTRAINT      reduce using rule 327 (type_column -> TIMESTAMP .)
    CHECK           reduce using rule 327 (type_column -> TIMESTAMP .)
    PRIMARY         reduce using rule 327 (type_column -> TIMESTAMP .)
    PARDER          reduce using rule 327 (type_column -> TIMESTAMP .)
    COMA            reduce using rule 327 (type_column -> TIMESTAMP .)
    PTCOMA          reduce using rule 327 (type_column -> TIMESTAMP .)
    PARIZQ          shift and go to state 686


state 529

    (329) type_column -> DATE .

    DEFAULT         reduce using rule 329 (type_column -> DATE .)
    NULL            reduce using rule 329 (type_column -> DATE .)
    NOT             reduce using rule 329 (type_column -> DATE .)
    UNIQUE          reduce using rule 329 (type_column -> DATE .)
    CONSTRAINT      reduce using rule 329 (type_column -> DATE .)
    CHECK           reduce using rule 329 (type_column -> DATE .)
    PRIMARY         reduce using rule 329 (type_column -> DATE .)
    PARDER          reduce using rule 329 (type_column -> DATE .)
    COMA            reduce using rule 329 (type_column -> DATE .)
    PTCOMA          reduce using rule 329 (type_column -> DATE .)


state 530

    (330) type_column -> TIME .
    (333) type_column -> TIME . PARIZQ ENTERO PARDER

    DEFAULT         reduce using rule 330 (type_column -> TIME .)
    NULL            reduce using rule 330 (type_column -> TIME .)
    NOT             reduce using rule 330 (type_column -> TIME .)
    UNIQUE          reduce using rule 330 (type_column -> TIME .)
    CONSTRAINT      reduce using rule 330 (type_column -> TIME .)
    CHECK           reduce using rule 330 (type_column -> TIME .)
    PRIMARY         reduce using rule 330 (type_column -> TIME .)
    PARDER          reduce using rule 330 (type_column -> TIME .)
    COMA            reduce using rule 330 (type_column -> TIME .)
    PTCOMA          reduce using rule 330 (type_column -> TIME .)
    PARIZQ          shift and go to state 687


state 531

    (331) type_column -> BOOLEAN .

    DEFAULT         reduce using rule 331 (type_column -> BOOLEAN .)
    NULL            reduce using rule 331 (type_column -> BOOLEAN .)
    NOT             reduce using rule 331 (type_column -> BOOLEAN .)
    UNIQUE          reduce using rule 331 (type_column -> BOOLEAN .)
    CONSTRAINT      reduce using rule 331 (type_column -> BOOLEAN .)
    CHECK           reduce using rule 331 (type_column -> BOOLEAN .)
    PRIMARY         reduce using rule 331 (type_column -> BOOLEAN .)
    PARDER          reduce using rule 331 (type_column -> BOOLEAN .)
    COMA            reduce using rule 331 (type_column -> BOOLEAN .)
    PTCOMA          reduce using rule 331 (type_column -> BOOLEAN .)


state 532

    (334) type_column -> INTERVAL . field
    (335) field -> . YEAR
    (336) field -> . MONTH
    (337) field -> . DAY
    (338) field -> . HOUR
    (339) field -> . MINUTE
    (340) field -> . SECOND

    YEAR            shift and go to state 689
    MONTH           shift and go to state 690
    DAY             shift and go to state 691
    HOUR            shift and go to state 692
    MINUTE          shift and go to state 693
    SECOND          shift and go to state 694

    field                          shift and go to state 688

state 533

    (341) create_table -> CREATE TABLE ID PARIZQ list_columns_x PARDER . end_create_table
    (342) end_create_table -> . PTCOMA
    (343) end_create_table -> . INHERITS PARIZQ ID PARDER PTCOMA

    PTCOMA          shift and go to state 696
    INHERITS        shift and go to state 697

    end_create_table               shift and go to state 695

state 534

    (344) list_columns_x -> list_columns_x COMA . key_column
    (346) key_column -> . PRIMARY KEY PARIZQ listtablas PARDER
    (347) key_column -> . ID type_column attributes

    PRIMARY         shift and go to state 347
    ID              shift and go to state 344

    key_column                     shift and go to state 698

state 535

    (346) key_column -> PRIMARY KEY . PARIZQ listtablas PARDER

    PARIZQ          shift and go to state 699


state 536

    (365) create_enum -> CREATE TYPE ID AS ENUM PARIZQ . list_string PARDER PTCOMA
    (366) list_string -> . list_string COMA cualquiercadena
    (367) list_string -> . cualquiercadena
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246

    list_string                    shift and go to state 700
    cualquiercadena                shift and go to state 701

state 537

    (394) indexinstr -> CREATE INDEX ID ON ID PARIZQ . ID PARDER PTCOMA
    (396) indexinstr -> CREATE INDEX ID ON ID PARIZQ . ID COMA ID PARDER PTCOMA
    (397) indexinstr -> CREATE INDEX ID ON ID PARIZQ . valororderby PARDER PTCOMA
    (399) indexinstr -> CREATE INDEX ID ON ID PARIZQ . LOWER PARIZQ ID PARDER PARDER PTCOMA
    (400) indexinstr -> CREATE INDEX ID ON ID PARIZQ . ID PARDER whereselect PTCOMA
    (401) indexinstr -> CREATE INDEX ID ON ID PARIZQ . ID ID PARDER PTCOMA
    (183) valororderby -> . cualquieridentificador ascdesc anular
    (184) valororderby -> . cualquiernumero ascdesc anular
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL

    ID              shift and go to state 702
    LOWER           shift and go to state 704
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253

    valororderby                   shift and go to state 703
    cualquieridentificador         shift and go to state 705
    cualquiernumero                shift and go to state 706

state 538

    (395) indexinstr -> CREATE INDEX ID ON ID USING . HASH PARIZQ ID PARDER PTCOMA

    HASH            shift and go to state 707


state 539

    (398) indexinstr -> CREATE UNIQUE INDEX ID ON ID . PARIZQ columnas PARDER PTCOMA

    PARIZQ          shift and go to state 708


state 540

    (513) type_column1 -> ID .

    COMA            reduce using rule 513 (type_column1 -> ID .)
    PARDER          reduce using rule 513 (type_column1 -> ID .)
    AS              reduce using rule 513 (type_column1 -> ID .)
    NOT             reduce using rule 513 (type_column1 -> ID .)
    DEFAULT         reduce using rule 513 (type_column1 -> ID .)
    PTIGUAL         reduce using rule 513 (type_column1 -> ID .)
    IGUAL           reduce using rule 513 (type_column1 -> ID .)
    PTCOMA          reduce using rule 513 (type_column1 -> ID .)


state 541

    (424) parfunc -> ID type_column1 .

    COMA            reduce using rule 424 (parfunc -> ID type_column1 .)
    PARDER          reduce using rule 424 (parfunc -> ID type_column1 .)


state 542

    (411) plsql_instr -> CREATE procedfunct ID PARIZQ parametrosfunc PARDER . tiporetorno cuerpofuncion
    (414) tiporetorno -> . RETURNS type_column1 AS
    (415) tiporetorno -> . LANGUAGE PLPGSQL AS
    (416) tiporetorno -> . AS
    (417) tiporetorno -> . empty
    (546) empty -> .

    RETURNS         shift and go to state 710
    LANGUAGE        shift and go to state 712
    AS              shift and go to state 711
    CADDOLAR        reduce using rule 546 (empty -> .)

    tiporetorno                    shift and go to state 709
    empty                          shift and go to state 713

state 543

    (420) listaparametrosfunc -> listaparametrosfunc COMA . parfunc
    (422) parfunc -> . OUT ID type_column1
    (423) parfunc -> . INOUT ID type_column1
    (424) parfunc -> . ID type_column1
    (425) parfunc -> . type_column1
    (489) type_column1 -> . SMALLINT
    (490) type_column1 -> . INTEGER
    (491) type_column1 -> . BIGINT
    (492) type_column1 -> . RDECIMAL
    (493) type_column1 -> . RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER
    (494) type_column1 -> . NUMERIC
    (495) type_column1 -> . NUMERIC PARIZQ ENTERO PARDER
    (496) type_column1 -> . REAL
    (497) type_column1 -> . FLOAT
    (498) type_column1 -> . INT
    (499) type_column1 -> . DOUBLE
    (500) type_column1 -> . MONEY
    (501) type_column1 -> . VARCHAR
    (502) type_column1 -> . VARCHAR PARIZQ ENTERO PARDER
    (503) type_column1 -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (504) type_column1 -> . CHARACTER PARIZQ ENTERO PARDER
    (505) type_column1 -> . CHAR
    (506) type_column1 -> . CHAR PARIZQ ENTERO PARDER
    (507) type_column1 -> . TEXT
    (508) type_column1 -> . TIMESTAMP
    (509) type_column1 -> . TIMESTAMP PARIZQ ENTERO PARDER
    (510) type_column1 -> . DATE
    (511) type_column1 -> . TIME
    (512) type_column1 -> . BOOLEAN
    (513) type_column1 -> . ID
    (514) type_column1 -> . TIME PARIZQ ENTERO PARDER
    (515) type_column1 -> . RECORD
    (516) type_column1 -> . TABLE PARIZQ parametrosfunc PARDER

    OUT             shift and go to state 356
    INOUT           shift and go to state 358
    ID              shift and go to state 351
    SMALLINT        shift and go to state 359
    INTEGER         shift and go to state 360
    BIGINT          shift and go to state 361
    RDECIMAL        shift and go to state 362
    NUMERIC         shift and go to state 363
    REAL            shift and go to state 364
    FLOAT           shift and go to state 365
    INT             shift and go to state 366
    DOUBLE          shift and go to state 367
    MONEY           shift and go to state 368
    VARCHAR         shift and go to state 369
    CHARACTER       shift and go to state 370
    CHAR            shift and go to state 371
    TEXT            shift and go to state 372
    TIMESTAMP       shift and go to state 373
    DATE            shift and go to state 374
    TIME            shift and go to state 375
    BOOLEAN         shift and go to state 376
    RECORD          shift and go to state 377
    TABLE           shift and go to state 378

    parfunc                        shift and go to state 714
    type_column1                   shift and go to state 357

state 544

    (422) parfunc -> OUT ID . type_column1
    (489) type_column1 -> . SMALLINT
    (490) type_column1 -> . INTEGER
    (491) type_column1 -> . BIGINT
    (492) type_column1 -> . RDECIMAL
    (493) type_column1 -> . RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER
    (494) type_column1 -> . NUMERIC
    (495) type_column1 -> . NUMERIC PARIZQ ENTERO PARDER
    (496) type_column1 -> . REAL
    (497) type_column1 -> . FLOAT
    (498) type_column1 -> . INT
    (499) type_column1 -> . DOUBLE
    (500) type_column1 -> . MONEY
    (501) type_column1 -> . VARCHAR
    (502) type_column1 -> . VARCHAR PARIZQ ENTERO PARDER
    (503) type_column1 -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (504) type_column1 -> . CHARACTER PARIZQ ENTERO PARDER
    (505) type_column1 -> . CHAR
    (506) type_column1 -> . CHAR PARIZQ ENTERO PARDER
    (507) type_column1 -> . TEXT
    (508) type_column1 -> . TIMESTAMP
    (509) type_column1 -> . TIMESTAMP PARIZQ ENTERO PARDER
    (510) type_column1 -> . DATE
    (511) type_column1 -> . TIME
    (512) type_column1 -> . BOOLEAN
    (513) type_column1 -> . ID
    (514) type_column1 -> . TIME PARIZQ ENTERO PARDER
    (515) type_column1 -> . RECORD
    (516) type_column1 -> . TABLE PARIZQ parametrosfunc PARDER

    SMALLINT        shift and go to state 359
    INTEGER         shift and go to state 360
    BIGINT          shift and go to state 361
    RDECIMAL        shift and go to state 362
    NUMERIC         shift and go to state 363
    REAL            shift and go to state 364
    FLOAT           shift and go to state 365
    INT             shift and go to state 366
    DOUBLE          shift and go to state 367
    MONEY           shift and go to state 368
    VARCHAR         shift and go to state 369
    CHARACTER       shift and go to state 370
    CHAR            shift and go to state 371
    TEXT            shift and go to state 372
    TIMESTAMP       shift and go to state 373
    DATE            shift and go to state 374
    TIME            shift and go to state 375
    BOOLEAN         shift and go to state 376
    ID              shift and go to state 540
    RECORD          shift and go to state 377
    TABLE           shift and go to state 378

    type_column1                   shift and go to state 715

state 545

    (423) parfunc -> INOUT ID . type_column1
    (489) type_column1 -> . SMALLINT
    (490) type_column1 -> . INTEGER
    (491) type_column1 -> . BIGINT
    (492) type_column1 -> . RDECIMAL
    (493) type_column1 -> . RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER
    (494) type_column1 -> . NUMERIC
    (495) type_column1 -> . NUMERIC PARIZQ ENTERO PARDER
    (496) type_column1 -> . REAL
    (497) type_column1 -> . FLOAT
    (498) type_column1 -> . INT
    (499) type_column1 -> . DOUBLE
    (500) type_column1 -> . MONEY
    (501) type_column1 -> . VARCHAR
    (502) type_column1 -> . VARCHAR PARIZQ ENTERO PARDER
    (503) type_column1 -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (504) type_column1 -> . CHARACTER PARIZQ ENTERO PARDER
    (505) type_column1 -> . CHAR
    (506) type_column1 -> . CHAR PARIZQ ENTERO PARDER
    (507) type_column1 -> . TEXT
    (508) type_column1 -> . TIMESTAMP
    (509) type_column1 -> . TIMESTAMP PARIZQ ENTERO PARDER
    (510) type_column1 -> . DATE
    (511) type_column1 -> . TIME
    (512) type_column1 -> . BOOLEAN
    (513) type_column1 -> . ID
    (514) type_column1 -> . TIME PARIZQ ENTERO PARDER
    (515) type_column1 -> . RECORD
    (516) type_column1 -> . TABLE PARIZQ parametrosfunc PARDER

    SMALLINT        shift and go to state 359
    INTEGER         shift and go to state 360
    BIGINT          shift and go to state 361
    RDECIMAL        shift and go to state 362
    NUMERIC         shift and go to state 363
    REAL            shift and go to state 364
    FLOAT           shift and go to state 365
    INT             shift and go to state 366
    DOUBLE          shift and go to state 367
    MONEY           shift and go to state 368
    VARCHAR         shift and go to state 369
    CHARACTER       shift and go to state 370
    CHAR            shift and go to state 371
    TEXT            shift and go to state 372
    TIMESTAMP       shift and go to state 373
    DATE            shift and go to state 374
    TIME            shift and go to state 375
    BOOLEAN         shift and go to state 376
    ID              shift and go to state 540
    RECORD          shift and go to state 377
    TABLE           shift and go to state 378

    type_column1                   shift and go to state 716

state 546

    (493) type_column1 -> RDECIMAL PARIZQ . ENTERO COMA ENTERO PARDER

    ENTERO          shift and go to state 717


state 547

    (495) type_column1 -> NUMERIC PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 718


state 548

    (502) type_column1 -> VARCHAR PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 719


state 549

    (503) type_column1 -> CHARACTER VARYING . PARIZQ ENTERO PARDER

    PARIZQ          shift and go to state 720


state 550

    (504) type_column1 -> CHARACTER PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 721


state 551

    (506) type_column1 -> CHAR PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 722


state 552

    (509) type_column1 -> TIMESTAMP PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 723


state 553

    (514) type_column1 -> TIME PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 724


state 554

    (516) type_column1 -> TABLE PARIZQ . parametrosfunc PARDER
    (418) parametrosfunc -> . listaparametrosfunc
    (419) parametrosfunc -> . empty
    (420) listaparametrosfunc -> . listaparametrosfunc COMA parfunc
    (421) listaparametrosfunc -> . parfunc
    (546) empty -> .
    (422) parfunc -> . OUT ID type_column1
    (423) parfunc -> . INOUT ID type_column1
    (424) parfunc -> . ID type_column1
    (425) parfunc -> . type_column1
    (489) type_column1 -> . SMALLINT
    (490) type_column1 -> . INTEGER
    (491) type_column1 -> . BIGINT
    (492) type_column1 -> . RDECIMAL
    (493) type_column1 -> . RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER
    (494) type_column1 -> . NUMERIC
    (495) type_column1 -> . NUMERIC PARIZQ ENTERO PARDER
    (496) type_column1 -> . REAL
    (497) type_column1 -> . FLOAT
    (498) type_column1 -> . INT
    (499) type_column1 -> . DOUBLE
    (500) type_column1 -> . MONEY
    (501) type_column1 -> . VARCHAR
    (502) type_column1 -> . VARCHAR PARIZQ ENTERO PARDER
    (503) type_column1 -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (504) type_column1 -> . CHARACTER PARIZQ ENTERO PARDER
    (505) type_column1 -> . CHAR
    (506) type_column1 -> . CHAR PARIZQ ENTERO PARDER
    (507) type_column1 -> . TEXT
    (508) type_column1 -> . TIMESTAMP
    (509) type_column1 -> . TIMESTAMP PARIZQ ENTERO PARDER
    (510) type_column1 -> . DATE
    (511) type_column1 -> . TIME
    (512) type_column1 -> . BOOLEAN
    (513) type_column1 -> . ID
    (514) type_column1 -> . TIME PARIZQ ENTERO PARDER
    (515) type_column1 -> . RECORD
    (516) type_column1 -> . TABLE PARIZQ parametrosfunc PARDER

    PARDER          reduce using rule 546 (empty -> .)
    OUT             shift and go to state 356
    INOUT           shift and go to state 358
    ID              shift and go to state 351
    SMALLINT        shift and go to state 359
    INTEGER         shift and go to state 360
    BIGINT          shift and go to state 361
    RDECIMAL        shift and go to state 362
    NUMERIC         shift and go to state 363
    REAL            shift and go to state 364
    FLOAT           shift and go to state 365
    INT             shift and go to state 366
    DOUBLE          shift and go to state 367
    MONEY           shift and go to state 368
    VARCHAR         shift and go to state 369
    CHARACTER       shift and go to state 370
    CHAR            shift and go to state 371
    TEXT            shift and go to state 372
    TIMESTAMP       shift and go to state 373
    DATE            shift and go to state 374
    TIME            shift and go to state 375
    BOOLEAN         shift and go to state 376
    RECORD          shift and go to state 377
    TABLE           shift and go to state 378

    parametrosfunc                 shift and go to state 725
    listaparametrosfunc            shift and go to state 353
    empty                          shift and go to state 354
    parfunc                        shift and go to state 355
    type_column1                   shift and go to state 357

state 555

    (40) owner_users -> ID .

    PTCOMA          reduce using rule 40 (owner_users -> ID .)


state 556

    (39) alterDB_instr -> ALTER DATABASE ID OWNER TO owner_users . PTCOMA

    PTCOMA          shift and go to state 726


state 557

    (41) owner_users -> CURRENT_USER .

    PTCOMA          reduce using rule 41 (owner_users -> CURRENT_USER .)


state 558

    (42) owner_users -> SESSION_USER .

    PTCOMA          reduce using rule 42 (owner_users -> SESSION_USER .)


state 559

    (38) renameto -> RENAME TO ID .

    PTCOMA          reduce using rule 38 (renameto -> RENAME TO ID .)


state 560

    (302) alter_instr -> ALTER TABLE ID ALTER COLUMN ID . SET NOT NULL
    (308) list_alter_column -> ALTER COLUMN ID . TYPE type_column

    SET             shift and go to state 727
    TYPE            shift and go to state 728


state 561

    (310) list_columns -> ID . type_column
    (311) type_column -> . SMALLINT
    (312) type_column -> . INTEGER
    (313) type_column -> . BIGINT
    (314) type_column -> . RDECIMAL
    (315) type_column -> . RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER
    (316) type_column -> . NUMERIC
    (317) type_column -> . REAL
    (318) type_column -> . FLOAT
    (319) type_column -> . INT
    (320) type_column -> . DOUBLE
    (321) type_column -> . MONEY
    (322) type_column -> . VARCHAR PARIZQ ENTERO PARDER
    (323) type_column -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (324) type_column -> . CHARACTER PARIZQ ENTERO PARDER
    (325) type_column -> . CHAR PARIZQ ENTERO PARDER
    (326) type_column -> . TEXT
    (327) type_column -> . TIMESTAMP
    (328) type_column -> . TIMESTAMP PARIZQ ENTERO PARDER
    (329) type_column -> . DATE
    (330) type_column -> . TIME
    (331) type_column -> . BOOLEAN
    (332) type_column -> . ID
    (333) type_column -> . TIME PARIZQ ENTERO PARDER
    (334) type_column -> . INTERVAL field

    SMALLINT        shift and go to state 514
    INTEGER         shift and go to state 515
    BIGINT          shift and go to state 516
    RDECIMAL        shift and go to state 517
    NUMERIC         shift and go to state 518
    REAL            shift and go to state 519
    FLOAT           shift and go to state 520
    INT             shift and go to state 521
    DOUBLE          shift and go to state 522
    MONEY           shift and go to state 523
    VARCHAR         shift and go to state 524
    CHARACTER       shift and go to state 525
    CHAR            shift and go to state 526
    TEXT            shift and go to state 527
    TIMESTAMP       shift and go to state 528
    DATE            shift and go to state 529
    TIME            shift and go to state 530
    BOOLEAN         shift and go to state 531
    ID              shift and go to state 512
    INTERVAL        shift and go to state 532

    type_column                    shift and go to state 729

state 562

    (298) alter_instr -> ALTER TABLE ID ADD COLUMN list_columns .
    (309) list_columns -> list_columns . COMA ID type_column

    PTCOMA          reduce using rule 298 (alter_instr -> ALTER TABLE ID ADD COLUMN list_columns .)
    COMA            shift and go to state 730


state 563

    (299) alter_instr -> ALTER TABLE ID ADD CHECK PARIZQ . condicion PARDER
    (200) condicion -> . expresion MENQUE expresion
    (201) condicion -> . expresion MAYQUE expresion
    (202) condicion -> . expresion MENIGUAL expresion
    (203) condicion -> . expresion MAYIGUAL expresion
    (204) condicion -> . expresion IGUAL expresion
    (205) condicion -> . expresion DIFERENTE expresion
    (206) condicion -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    condicion                      shift and go to state 731
    expresion                      shift and go to state 407
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 564

    (300) alter_instr -> ALTER TABLE ID ADD CONSTRAINT ID . UNIQUE PARIZQ ID PARDER

    UNIQUE          shift and go to state 732


state 565

    (301) alter_instr -> ALTER TABLE ID ADD FOREIGN KEY . PARIZQ ID PARDER REFERENCES ID

    PARIZQ          shift and go to state 733


state 566

    (303) alter_instr -> ALTER TABLE ID DROP CONSTRAINT ID .

    PTCOMA          reduce using rule 303 (alter_instr -> ALTER TABLE ID DROP CONSTRAINT ID .)


state 567

    (305) alter_instr -> ALTER TABLE ID DROP COLUMN listtablas .
    (69) listtablas -> listtablas . COMA ID

    PTCOMA          reduce using rule 305 (alter_instr -> ALTER TABLE ID DROP COLUMN listtablas .)
    COMA            shift and go to state 97


state 568

    (304) alter_instr -> ALTER TABLE ID RENAME COLUMN ID . TO ID

    TO              shift and go to state 734


state 569

    (307) list_alter_column -> list_alter_column COMA ALTER . COLUMN ID TYPE type_column

    COLUMN          shift and go to state 735


state 570

    (402) alterindex -> ALTER INDEX IF EXISTS ID ID . eoi PTCOMA
    (404) eoi -> . ENTERO
    (405) eoi -> . ID

    ENTERO          shift and go to state 394
    ID              shift and go to state 392

    eoi                            shift and go to state 736

state 571

    (403) alterindex -> ALTER INDEX ID ID eoi PTCOMA .

    $end            reduce using rule 403 (alterindex -> ALTER INDEX ID ID eoi PTCOMA .)


state 572

    (44) dropDB_instr -> DROP DATABASE IF EXISTS ID PTCOMA .

    $end            reduce using rule 44 (dropDB_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)


state 573

    (48) insert_instr -> INSERT INTO ID VALUES PARIZQ parametros . PARDER PTCOMA
    (50) parametros -> parametros . COMA parametroinsert

    PARDER          shift and go to state 737
    COMA            shift and go to state 738


state 574

    (51) parametros -> parametroinsert .

    PARDER          reduce using rule 51 (parametros -> parametroinsert .)
    COMA            reduce using rule 51 (parametros -> parametroinsert .)


state 575

    (52) parametroinsert -> DEFAULT .

    PARDER          reduce using rule 52 (parametroinsert -> DEFAULT .)
    COMA            reduce using rule 52 (parametroinsert -> DEFAULT .)


state 576

    (53) parametroinsert -> NOW . PARIZQ PARDER

    PARIZQ          shift and go to state 739


state 577

    (54) parametroinsert -> MD5 . PARIZQ cualquiercadena PARDER

    PARIZQ          shift and go to state 740


state 578

    (55) parametroinsert -> expresion .

    PARDER          reduce using rule 55 (parametroinsert -> expresion .)
    COMA            reduce using rule 55 (parametroinsert -> expresion .)


state 579

    (49) insert_instr -> INSERT INTO ID PARIZQ columnas PARDER . VALUES PARIZQ parametros PARDER PTCOMA

    VALUES          shift and go to state 741


state 580

    (56) columnas -> columnas COMA . ID

    ID              shift and go to state 742


state 581

    (62) asignacion -> ID IGUAL expresion .

    PTCOMA          reduce using rule 62 (asignacion -> ID IGUAL expresion .)
    WHERE           reduce using rule 62 (asignacion -> ID IGUAL expresion .)
    COMA            reduce using rule 62 (asignacion -> ID IGUAL expresion .)


state 582

    (59) update_instr -> UPDATE ID SET asignaciones WHERE condiciones . PTCOMA
    (195) condiciones -> condiciones . AND condicion
    (196) condiciones -> condiciones . OR condicion

    PTCOMA          shift and go to state 743
    AND             shift and go to state 585
    OR              shift and go to state 586


state 583

    (60) asignaciones -> asignaciones COMA asignacion .

    PTCOMA          reduce using rule 60 (asignaciones -> asignaciones COMA asignacion .)
    WHERE           reduce using rule 60 (asignaciones -> asignaciones COMA asignacion .)
    COMA            reduce using rule 60 (asignaciones -> asignaciones COMA asignacion .)


state 584

    (64) delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .

    $end            reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    RAISE           reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    ID              reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    RETURN          reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    EXECUTE         reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    GET             reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    NULL            reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    IF              reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    CASE            reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    COMMIT          reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    ROLLBACK        reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    INSERT          reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    UPDATE          reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    ALTER           reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    CREATE          reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    DROP            reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    DELETE          reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    TRUNCATE        reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    DECLARE         reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    SELECT          reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    BEGIN           reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    END             reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    ELSE            reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    ELSIF           reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)
    WHEN            reduce using rule 64 (delete_instr -> DELETE FROM ID WHERE condiciones PTCOMA .)


state 585

    (195) condiciones -> condiciones AND . condicion
    (200) condicion -> . expresion MENQUE expresion
    (201) condicion -> . expresion MAYQUE expresion
    (202) condicion -> . expresion MENIGUAL expresion
    (203) condicion -> . expresion MAYIGUAL expresion
    (204) condicion -> . expresion IGUAL expresion
    (205) condicion -> . expresion DIFERENTE expresion
    (206) condicion -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    condicion                      shift and go to state 744
    expresion                      shift and go to state 407
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 586

    (196) condiciones -> condiciones OR . condicion
    (200) condicion -> . expresion MENQUE expresion
    (201) condicion -> . expresion MAYQUE expresion
    (202) condicion -> . expresion MENIGUAL expresion
    (203) condicion -> . expresion MAYIGUAL expresion
    (204) condicion -> . expresion IGUAL expresion
    (205) condicion -> . expresion DIFERENTE expresion
    (206) condicion -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    condicion                      shift and go to state 745
    expresion                      shift and go to state 407
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 587

    (197) condiciones -> NOT PARIZQ . condiciones PARDER
    (213) expresion -> PARIZQ . select_instr1 PARDER
    (223) expresionaritmetica -> PARIZQ . expresionaritmetica PARDER
    (195) condiciones -> . condiciones AND condicion
    (196) condiciones -> . condiciones OR condicion
    (197) condiciones -> . NOT PARIZQ condiciones PARDER
    (198) condiciones -> . NOT condiciones
    (199) condiciones -> . condicion
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (200) condicion -> . expresion MENQUE expresion
    (201) condicion -> . expresion MAYQUE expresion
    (202) condicion -> . expresion MENIGUAL expresion
    (203) condicion -> . expresion MAYIGUAL expresion
    (204) condicion -> . expresion IGUAL expresion
    (205) condicion -> . expresion DIFERENTE expresion
    (206) condicion -> . expresion
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE

    NOT             shift and go to state 406
    SELECT          shift and go to state 102
    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 746
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251

    condiciones                    shift and go to state 747
    select_instr1                  shift and go to state 411
    expresionaritmetica            shift and go to state 748
    condicion                      shift and go to state 405
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249
    expresion                      shift and go to state 407
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244

state 588

    (198) condiciones -> NOT condiciones .
    (195) condiciones -> condiciones . AND condicion
    (196) condiciones -> condiciones . OR condicion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PTCOMA          reduce using rule 198 (condiciones -> NOT condiciones .)
    PARDER          reduce using rule 198 (condiciones -> NOT condiciones .)
    THEN            reduce using rule 198 (condiciones -> NOT condiciones .)
    AND             shift and go to state 585
    OR              shift and go to state 586

  ! AND             [ reduce using rule 198 (condiciones -> NOT condiciones .) ]
  ! OR              [ reduce using rule 198 (condiciones -> NOT condiciones .) ]


state 589

    (200) condicion -> expresion MENQUE . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresion                      shift and go to state 749
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 590

    (201) condicion -> expresion MAYQUE . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresion                      shift and go to state 750
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 591

    (202) condicion -> expresion MENIGUAL . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresion                      shift and go to state 751
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 592

    (203) condicion -> expresion MAYIGUAL . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresion                      shift and go to state 752
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 593

    (204) condicion -> expresion IGUAL . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresion                      shift and go to state 753
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 594

    (205) condicion -> expresion DIFERENTE . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresion                      shift and go to state 754
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 595

    (229) cualquieridentificador -> ID PUNTO ID .

    MAS             reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    MENOS           reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    ASTERISCO       reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    DIVIDIDO        reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    MODULO          reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    EXPONENTE       reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    PARDER          reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    COMA            reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    MENQUE          reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    MAYQUE          reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    MENIGUAL        reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    MAYIGUAL        reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    IGUAL           reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    DIFERENTE       reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    PTCOMA          reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    AND             reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    OR              reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    WHERE           reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    THEN            reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    RAISE           reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    ID              reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    RETURN          reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    EXECUTE         reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    GET             reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    NULL            reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    IF              reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    CASE            reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    COMMIT          reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    ROLLBACK        reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    INSERT          reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    UPDATE          reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    ALTER           reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    CREATE          reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    DROP            reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    DELETE          reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    TRUNCATE        reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    DECLARE         reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    SELECT          reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    BEGIN           reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    END             reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    ELSE            reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    ELSIF           reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    WHEN            reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    GROUP           reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    ORDER           reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    UNION           reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    INTERSECT       reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    EXCEPT          reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    CSIMPLE         reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    DESC            reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    ASC             reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    NULLS           reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    NOT             reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    IN              reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    LIKE            reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    BETWEEN         reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    IS              reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    ISNULL          reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    NOTNULL         reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    HAVING          reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)
    LIMIT           reduce using rule 229 (cualquieridentificador -> ID PUNTO ID .)


state 596

    (213) expresion -> PARIZQ select_instr1 PARDER .

    PARDER          reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    COMA            reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    MENQUE          reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    MAYQUE          reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    MENIGUAL        reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    MAYIGUAL        reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    IGUAL           reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    DIFERENTE       reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    PTCOMA          reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    AND             reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    OR              reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    WHERE           reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    THEN            reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    RAISE           reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    ID              reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    RETURN          reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    EXECUTE         reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    GET             reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    NULL            reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    IF              reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    CASE            reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    COMMIT          reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    ROLLBACK        reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    INSERT          reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    UPDATE          reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    ALTER           reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    CREATE          reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    DROP            reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    DELETE          reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    TRUNCATE        reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    DECLARE         reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    SELECT          reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    BEGIN           reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    END             reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    ELSE            reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    ELSIF           reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    WHEN            reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    GROUP           reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    ORDER           reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    UNION           reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    INTERSECT       reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    EXCEPT          reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)
    CSIMPLE         reduce using rule 213 (expresion -> PARIZQ select_instr1 PARDER .)


state 597

    (223) expresionaritmetica -> PARIZQ expresionaritmetica PARDER .

    MAS             reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    MENOS           reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    ASTERISCO       reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    DIVIDIDO        reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    MODULO          reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    EXPONENTE       reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    MENQUE          reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    MAYQUE          reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    MENIGUAL        reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    MAYIGUAL        reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    IGUAL           reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    DIFERENTE       reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    AND             reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    OR              reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    WHERE           reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    THEN            reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    RAISE           reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    ID              reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    RETURN          reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    EXECUTE         reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    GET             reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    NULL            reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    IF              reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    CASE            reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    COMMIT          reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    ROLLBACK        reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    INSERT          reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    UPDATE          reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    ALTER           reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    CREATE          reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    DROP            reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    DELETE          reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    TRUNCATE        reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    DECLARE         reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    SELECT          reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    BEGIN           reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    END             reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    ELSE            reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    ELSIF           reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    WHEN            reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    GROUP           reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    ORDER           reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 223 (expresionaritmetica -> PARIZQ expresionaritmetica PARDER .)


state 598

    (410) llamadafunciones -> SELECT ID PARIZQ listaexpresiones PARDER PTCOMA .

    $end            reduce using rule 410 (llamadafunciones -> SELECT ID PARIZQ listaexpresiones PARDER PTCOMA .)


state 599

    (523) listaexpresiones -> listaexpresiones COMA expresion .

    PARDER          reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    COMA            reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    THEN            reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    RAISE           reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    ID              reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    RETURN          reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    EXECUTE         reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    GET             reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    NULL            reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    IF              reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    CASE            reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    COMMIT          reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    ROLLBACK        reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    INSERT          reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    UPDATE          reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    ALTER           reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    CREATE          reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    DROP            reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    DELETE          reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    TRUNCATE        reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    DECLARE         reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    SELECT          reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    BEGIN           reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    END             reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    ELSE            reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    ELSIF           reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    WHEN            reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)
    PTCOMA          reduce using rule 523 (listaexpresiones -> listaexpresiones COMA expresion .)


state 600

    (214) expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    MAS             reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    MENOS           reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    PARDER          reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    COMA            reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    MENQUE          reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    MAYQUE          reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    MENIGUAL        reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    MAYIGUAL        reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    IGUAL           reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    DIFERENTE       reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    PTCOMA          reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    AND             reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    OR              reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    WHERE           reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    THEN            reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    RAISE           reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    ID              reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    RETURN          reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    EXECUTE         reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    GET             reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    NULL            reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    IF              reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    CASE            reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    COMMIT          reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    ROLLBACK        reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    INSERT          reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    UPDATE          reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    ALTER           reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    CREATE          reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    DROP            reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    DELETE          reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    TRUNCATE        reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    DECLARE         reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    SELECT          reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    BEGIN           reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    END             reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    ELSE            reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    ELSIF           reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    WHEN            reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    GROUP           reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    ORDER           reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    UNION           reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    INTERSECT       reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    EXCEPT          reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    CSIMPLE         reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .)
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421

  ! ASTERISCO       [ reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .) ]
  ! DIVIDIDO        [ reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .) ]
  ! MODULO          [ reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .) ]
  ! EXPONENTE       [ reduce using rule 214 (expresionaritmetica -> expresionaritmetica MAS expresionaritmetica .) ]
  ! MAS             [ shift and go to state 416 ]
  ! MENOS           [ shift and go to state 417 ]


state 601

    (215) expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    MAS             reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    MENOS           reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    PARDER          reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    COMA            reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    MENQUE          reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    MAYQUE          reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    MENIGUAL        reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    MAYIGUAL        reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    IGUAL           reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    DIFERENTE       reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    PTCOMA          reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    AND             reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    OR              reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    WHERE           reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    THEN            reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    RAISE           reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    ID              reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    RETURN          reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    EXECUTE         reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    GET             reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    NULL            reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    IF              reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    CASE            reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    COMMIT          reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    ROLLBACK        reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    INSERT          reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    UPDATE          reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    ALTER           reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    CREATE          reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    DROP            reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    DELETE          reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    TRUNCATE        reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    DECLARE         reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    SELECT          reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    BEGIN           reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    END             reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    ELSE            reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    ELSIF           reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    WHEN            reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    GROUP           reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    ORDER           reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    UNION           reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    INTERSECT       reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    EXCEPT          reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    CSIMPLE         reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .)
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421

  ! ASTERISCO       [ reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .) ]
  ! DIVIDIDO        [ reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .) ]
  ! MODULO          [ reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .) ]
  ! EXPONENTE       [ reduce using rule 215 (expresionaritmetica -> expresionaritmetica MENOS expresionaritmetica .) ]
  ! MAS             [ shift and go to state 416 ]
  ! MENOS           [ shift and go to state 417 ]


state 602

    (216) expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    MAS             reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    MENOS           reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    ASTERISCO       reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    DIVIDIDO        reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    MODULO          reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    PARDER          reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    COMA            reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    MENQUE          reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    MAYQUE          reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    MENIGUAL        reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    MAYIGUAL        reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    IGUAL           reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    DIFERENTE       reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    PTCOMA          reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    AND             reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    OR              reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    WHERE           reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    THEN            reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    RAISE           reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    ID              reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    RETURN          reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    EXECUTE         reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    GET             reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    NULL            reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    IF              reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    CASE            reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    COMMIT          reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    ROLLBACK        reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    INSERT          reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    UPDATE          reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    ALTER           reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    CREATE          reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    DROP            reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    DELETE          reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    TRUNCATE        reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    DECLARE         reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    SELECT          reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    BEGIN           reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    END             reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    ELSE            reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    ELSIF           reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    WHEN            reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    GROUP           reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    ORDER           reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    UNION           reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    INTERSECT       reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    EXCEPT          reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    CSIMPLE         reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .)
    EXPONENTE       shift and go to state 421

  ! EXPONENTE       [ reduce using rule 216 (expresionaritmetica -> expresionaritmetica ASTERISCO expresionaritmetica .) ]
  ! MAS             [ shift and go to state 416 ]
  ! MENOS           [ shift and go to state 417 ]
  ! ASTERISCO       [ shift and go to state 418 ]
  ! DIVIDIDO        [ shift and go to state 419 ]
  ! MODULO          [ shift and go to state 420 ]


state 603

    (217) expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    MAS             reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    MENOS           reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    ASTERISCO       reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    DIVIDIDO        reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    MODULO          reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    PARDER          reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    COMA            reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    MENQUE          reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    MAYQUE          reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    MENIGUAL        reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    MAYIGUAL        reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    IGUAL           reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    DIFERENTE       reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    PTCOMA          reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    AND             reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    OR              reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    WHERE           reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    THEN            reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    RAISE           reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    ID              reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    RETURN          reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    EXECUTE         reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    GET             reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    NULL            reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    IF              reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    CASE            reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    COMMIT          reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    ROLLBACK        reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    INSERT          reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    UPDATE          reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    ALTER           reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    CREATE          reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    DROP            reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    DELETE          reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    TRUNCATE        reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    DECLARE         reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    SELECT          reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    BEGIN           reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    END             reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    ELSE            reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    ELSIF           reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    WHEN            reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    GROUP           reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    ORDER           reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    UNION           reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    INTERSECT       reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    EXCEPT          reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    CSIMPLE         reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .)
    EXPONENTE       shift and go to state 421

  ! EXPONENTE       [ reduce using rule 217 (expresionaritmetica -> expresionaritmetica DIVIDIDO expresionaritmetica .) ]
  ! MAS             [ shift and go to state 416 ]
  ! MENOS           [ shift and go to state 417 ]
  ! ASTERISCO       [ shift and go to state 418 ]
  ! DIVIDIDO        [ shift and go to state 419 ]
  ! MODULO          [ shift and go to state 420 ]


state 604

    (218) expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    MAS             reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    MENOS           reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    ASTERISCO       reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    DIVIDIDO        reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    MODULO          reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    PARDER          reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    COMA            reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    MENQUE          reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    MAYQUE          reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    MENIGUAL        reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    MAYIGUAL        reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    IGUAL           reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    DIFERENTE       reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    PTCOMA          reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    AND             reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    OR              reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    WHERE           reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    THEN            reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    RAISE           reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    ID              reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    RETURN          reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    EXECUTE         reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    GET             reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    NULL            reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    IF              reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    CASE            reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    COMMIT          reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    ROLLBACK        reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    INSERT          reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    UPDATE          reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    ALTER           reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    CREATE          reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    DROP            reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    DELETE          reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    TRUNCATE        reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    DECLARE         reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    SELECT          reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    BEGIN           reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    END             reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    ELSE            reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    ELSIF           reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    WHEN            reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    GROUP           reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    ORDER           reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    UNION           reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    INTERSECT       reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    EXCEPT          reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    CSIMPLE         reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .)
    EXPONENTE       shift and go to state 421

  ! EXPONENTE       [ reduce using rule 218 (expresionaritmetica -> expresionaritmetica MODULO expresionaritmetica .) ]
  ! MAS             [ shift and go to state 416 ]
  ! MENOS           [ shift and go to state 417 ]
  ! ASTERISCO       [ shift and go to state 418 ]
  ! DIVIDIDO        [ shift and go to state 419 ]
  ! MODULO          [ shift and go to state 420 ]


state 605

    (219) expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    MAS             reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    MENOS           reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    ASTERISCO       reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    DIVIDIDO        reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    MODULO          reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    EXPONENTE       reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    PARDER          reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    COMA            reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    MENQUE          reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    MAYQUE          reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    MENIGUAL        reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    MAYIGUAL        reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    IGUAL           reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    DIFERENTE       reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    PTCOMA          reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    AND             reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    OR              reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    WHERE           reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    THEN            reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    RAISE           reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    ID              reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    RETURN          reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    EXECUTE         reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    GET             reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    NULL            reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    IF              reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    CASE            reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    COMMIT          reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    ROLLBACK        reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    INSERT          reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    UPDATE          reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    ALTER           reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    CREATE          reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    DROP            reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    DELETE          reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    TRUNCATE        reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    DECLARE         reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    SELECT          reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    BEGIN           reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    END             reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    ELSE            reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    ELSIF           reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    WHEN            reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    GROUP           reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    ORDER           reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    UNION           reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    INTERSECT       reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    EXCEPT          reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)
    CSIMPLE         reduce using rule 219 (expresionaritmetica -> expresionaritmetica EXPONENTE expresionaritmetica .)

  ! MAS             [ shift and go to state 416 ]
  ! MENOS           [ shift and go to state 417 ]
  ! ASTERISCO       [ shift and go to state 418 ]
  ! DIVIDIDO        [ shift and go to state 419 ]
  ! MODULO          [ shift and go to state 420 ]
  ! EXPONENTE       [ shift and go to state 421 ]


state 606

    (80) selectfrom -> FROM listatablasselect whereselect . groupby orderby
    (157) groupby -> . GROUP BY listagroupby
    (158) groupby -> . GROUP BY listagroupby HAVING condicioneshaving
    (159) groupby -> . empty
    (546) empty -> .

    GROUP           shift and go to state 756
    ORDER           reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    groupby                        shift and go to state 755
    empty                          shift and go to state 757

state 607

    (117) listatablasselect -> listatablasselect COMA . tablaselect
    (119) tablaselect -> . ID alias
    (120) tablaselect -> . PARIZQ select_instr1 PARDER alias

    ID              shift and go to state 425
    PARIZQ          shift and go to state 426

    tablaselect                    shift and go to state 758

state 608

    (128) whereselect -> WHERE . condicioneswhere
    (130) condicioneswhere -> . condicioneswhere OR condicionwhere
    (131) condicioneswhere -> . condicioneswhere AND condicionwhere
    (132) condicioneswhere -> . condicionwhere
    (133) condicioneswhere -> . NOT PARIZQ condicioneswhere PARDER
    (134) condicionwhere -> . whereexists
    (135) condicionwhere -> . notwhereexists
    (136) condicionwhere -> . wherenotin
    (137) condicionwhere -> . wherein
    (138) condicionwhere -> . wherenotlike
    (139) condicionwhere -> . wherelike
    (140) condicionwhere -> . wheresubstring
    (141) condicionwhere -> . between_state
    (142) condicionwhere -> . not_between_state
    (143) condicionwhere -> . predicates_state
    (144) condicionwhere -> . is_distinct_state
    (145) condicionwhere -> . condicion
    (146) whereexists -> . EXISTS PARIZQ select_instr1 PARDER
    (147) notwhereexists -> . NOT EXISTS PARIZQ select_instr1 PARDER
    (150) wherenotin -> . cualquiernumero NOT IN PARIZQ select_instr1 PARDER
    (151) wherenotin -> . cadenastodas NOT IN PARIZQ select_instr1 PARDER
    (148) wherein -> . cualquiernumero IN PARIZQ select_instr1 PARDER
    (149) wherein -> . cadenastodas IN PARIZQ select_instr1 PARDER
    (152) wherenotlike -> . cadenastodas NOT LIKE CADENALIKE
    (153) wherelike -> . cadenastodas LIKE CADENALIKE
    (154) wheresubstring -> . SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE
    (369) between_state -> . cualquiernumero BETWEEN valores AND valores
    (370) between_state -> . cadenastodas BETWEEN valores AND valores
    (371) not_between_state -> . cualquiernumero NOT BETWEEN valores AND valores
    (372) not_between_state -> . cadenastodas NOT BETWEEN valores AND valores
    (373) predicates_state -> . valores IS NULL
    (374) predicates_state -> . valores IS NOT NULL
    (375) predicates_state -> . valores ISNULL
    (376) predicates_state -> . valores NOTNULL
    (377) is_distinct_state -> . valores IS DISTINCT FROM valores
    (378) is_distinct_state -> . valores IS NOT DISTINCT FROM valores
    (200) condicion -> . expresion MENQUE expresion
    (201) condicion -> . expresion MAYQUE expresion
    (202) condicion -> . expresion MENIGUAL expresion
    (203) condicion -> . expresion MAYIGUAL expresion
    (204) condicion -> . expresion IGUAL expresion
    (205) condicion -> . expresion DIFERENTE expresion
    (206) condicion -> . expresion
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (155) cadenastodas -> . cualquiercadena
    (156) cadenastodas -> . cualquieridentificador
    (379) valores -> . cualquiernumero
    (380) valores -> . cualquiercadena
    (381) valores -> . cualquieridentificador
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE

    NOT             shift and go to state 761
    EXISTS          shift and go to state 774
    SUBSTRING       shift and go to state 777
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251

    condicioneswhere               shift and go to state 759
    condicionwhere                 shift and go to state 760
    whereexists                    shift and go to state 762
    notwhereexists                 shift and go to state 763
    wherenotin                     shift and go to state 764
    wherein                        shift and go to state 765
    wherenotlike                   shift and go to state 766
    wherelike                      shift and go to state 767
    wheresubstring                 shift and go to state 768
    between_state                  shift and go to state 769
    not_between_state              shift and go to state 770
    predicates_state               shift and go to state 771
    is_distinct_state              shift and go to state 772
    condicion                      shift and go to state 773
    cualquiernumero                shift and go to state 775
    cadenastodas                   shift and go to state 776
    valores                        shift and go to state 778
    expresion                      shift and go to state 407
    cualquiercadena                shift and go to state 779
    cualquieridentificador         shift and go to state 780
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244

state 609

    (129) whereselect -> empty .

    GROUP           reduce using rule 129 (whereselect -> empty .)
    ORDER           reduce using rule 129 (whereselect -> empty .)
    UNION           reduce using rule 129 (whereselect -> empty .)
    INTERSECT       reduce using rule 129 (whereselect -> empty .)
    EXCEPT          reduce using rule 129 (whereselect -> empty .)
    PTCOMA          reduce using rule 129 (whereselect -> empty .)
    PARDER          reduce using rule 129 (whereselect -> empty .)
    CSIMPLE         reduce using rule 129 (whereselect -> empty .)


state 610

    (119) tablaselect -> ID alias .

    COMA            reduce using rule 119 (tablaselect -> ID alias .)
    WHERE           reduce using rule 119 (tablaselect -> ID alias .)
    GROUP           reduce using rule 119 (tablaselect -> ID alias .)
    ORDER           reduce using rule 119 (tablaselect -> ID alias .)
    UNION           reduce using rule 119 (tablaselect -> ID alias .)
    INTERSECT       reduce using rule 119 (tablaselect -> ID alias .)
    EXCEPT          reduce using rule 119 (tablaselect -> ID alias .)
    PTCOMA          reduce using rule 119 (tablaselect -> ID alias .)
    PARDER          reduce using rule 119 (tablaselect -> ID alias .)
    CSIMPLE         reduce using rule 119 (tablaselect -> ID alias .)


state 611

    (120) tablaselect -> PARIZQ select_instr1 . PARDER alias

    PARDER          shift and go to state 781


state 612

    (97) valselect -> ID PUNTO ID alias .

    COMA            reduce using rule 97 (valselect -> ID PUNTO ID alias .)
    FROM            reduce using rule 97 (valselect -> ID PUNTO ID alias .)
    UNION           reduce using rule 97 (valselect -> ID PUNTO ID alias .)
    INTERSECT       reduce using rule 97 (valselect -> ID PUNTO ID alias .)
    EXCEPT          reduce using rule 97 (valselect -> ID PUNTO ID alias .)
    PTCOMA          reduce using rule 97 (valselect -> ID PUNTO ID alias .)
    PARDER          reduce using rule 97 (valselect -> ID PUNTO ID alias .)
    CSIMPLE         reduce using rule 97 (valselect -> ID PUNTO ID alias .)


state 613

    (101) valselect -> PARIZQ select_instr1 PARDER alias .

    COMA            reduce using rule 101 (valselect -> PARIZQ select_instr1 PARDER alias .)
    FROM            reduce using rule 101 (valselect -> PARIZQ select_instr1 PARDER alias .)
    UNION           reduce using rule 101 (valselect -> PARIZQ select_instr1 PARDER alias .)
    INTERSECT       reduce using rule 101 (valselect -> PARIZQ select_instr1 PARDER alias .)
    EXCEPT          reduce using rule 101 (valselect -> PARIZQ select_instr1 PARDER alias .)
    PTCOMA          reduce using rule 101 (valselect -> PARIZQ select_instr1 PARDER alias .)
    PARDER          reduce using rule 101 (valselect -> PARIZQ select_instr1 PARDER alias .)
    CSIMPLE         reduce using rule 101 (valselect -> PARIZQ select_instr1 PARDER alias .)


state 614

    (102) valselect -> agregacion PARIZQ cualquieridentificador PARDER . alias
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    COMA            reduce using rule 546 (empty -> .)
    FROM            reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    alias                          shift and go to state 782
    empty                          shift and go to state 264

state 615

    (103) valselect -> COUNT PARIZQ ASTERISCO PARDER . alias
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    COMA            reduce using rule 546 (empty -> .)
    FROM            reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    alias                          shift and go to state 783
    empty                          shift and go to state 264

state 616

    (104) valselect -> COUNT PARIZQ cualquieridentificador PARDER . alias
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    COMA            reduce using rule 546 (empty -> .)
    FROM            reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    alias                          shift and go to state 784
    empty                          shift and go to state 264

state 617

    (232) funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    MENQUE          reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    MAYQUE          reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    MENIGUAL        reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    MAYIGUAL        reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    IGUAL           reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    DIFERENTE       reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    AND             reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    OR              reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    WHERE           reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    THEN            reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    RAISE           reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    RETURN          reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    EXECUTE         reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    GET             reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    NULL            reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    IF              reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    CASE            reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    COMMIT          reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    ROLLBACK        reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    INSERT          reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    UPDATE          reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    ALTER           reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    CREATE          reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    DROP            reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    DELETE          reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    TRUNCATE        reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    DECLARE         reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    SELECT          reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    BEGIN           reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    END             reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    ELSE            reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    ELSIF           reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    WHEN            reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    GROUP           reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)
    ORDER           reduce using rule 232 (funcion_matematica_ws -> ABS PARIZQ expresionaritmetica PARDER .)


state 618

    (233) funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    MENQUE          reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    MAYQUE          reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    MENIGUAL        reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    MAYIGUAL        reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    IGUAL           reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    DIFERENTE       reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    AND             reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    OR              reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    WHERE           reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    THEN            reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    RAISE           reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    RETURN          reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    EXECUTE         reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    GET             reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    NULL            reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    IF              reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    CASE            reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    COMMIT          reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    ROLLBACK        reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    INSERT          reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    UPDATE          reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    ALTER           reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    CREATE          reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    DROP            reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    DELETE          reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    TRUNCATE        reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    DECLARE         reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    SELECT          reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    BEGIN           reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    END             reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    ELSE            reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    ELSIF           reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    WHEN            reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    GROUP           reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)
    ORDER           reduce using rule 233 (funcion_matematica_ws -> CBRT PARIZQ expresionaritmetica PARDER .)


state 619

    (234) funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    MENQUE          reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    MAYQUE          reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    MENIGUAL        reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    MAYIGUAL        reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    IGUAL           reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    DIFERENTE       reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    AND             reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    OR              reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    WHERE           reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    THEN            reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    RAISE           reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    RETURN          reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    EXECUTE         reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    GET             reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    NULL            reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    IF              reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    CASE            reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    COMMIT          reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    ROLLBACK        reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    INSERT          reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    UPDATE          reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    ALTER           reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    CREATE          reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    DROP            reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    DELETE          reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    TRUNCATE        reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    DECLARE         reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    SELECT          reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    BEGIN           reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    END             reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    ELSE            reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    ELSIF           reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    WHEN            reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    GROUP           reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)
    ORDER           reduce using rule 234 (funcion_matematica_ws -> CEIL PARIZQ expresionaritmetica PARDER .)


state 620

    (235) funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    MENQUE          reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    MAYQUE          reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    MENIGUAL        reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    MAYIGUAL        reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    IGUAL           reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    DIFERENTE       reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    AND             reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    OR              reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    WHERE           reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    THEN            reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    RAISE           reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    RETURN          reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    EXECUTE         reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    GET             reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    NULL            reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    IF              reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    CASE            reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    COMMIT          reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    ROLLBACK        reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    INSERT          reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    UPDATE          reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    ALTER           reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    CREATE          reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    DROP            reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    DELETE          reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    TRUNCATE        reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    DECLARE         reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    SELECT          reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    BEGIN           reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    END             reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    ELSE            reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    ELSIF           reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    WHEN            reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    GROUP           reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)
    ORDER           reduce using rule 235 (funcion_matematica_ws -> CEILING PARIZQ expresionaritmetica PARDER .)


state 621

    (236) funcion_matematica_s -> DEGREES PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 236 (funcion_matematica_s -> DEGREES PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 236 (funcion_matematica_s -> DEGREES PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 236 (funcion_matematica_s -> DEGREES PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 236 (funcion_matematica_s -> DEGREES PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 236 (funcion_matematica_s -> DEGREES PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 236 (funcion_matematica_s -> DEGREES PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 236 (funcion_matematica_s -> DEGREES PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 236 (funcion_matematica_s -> DEGREES PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 236 (funcion_matematica_s -> DEGREES PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 236 (funcion_matematica_s -> DEGREES PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 236 (funcion_matematica_s -> DEGREES PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 236 (funcion_matematica_s -> DEGREES PARIZQ expresionaritmetica PARDER .)


state 622

    (237) funcion_matematica_s -> DIV PARIZQ expresionaritmetica COMA . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 785
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 623

    (238) funcion_matematica_s -> EXP PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 238 (funcion_matematica_s -> EXP PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 238 (funcion_matematica_s -> EXP PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 238 (funcion_matematica_s -> EXP PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 238 (funcion_matematica_s -> EXP PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 238 (funcion_matematica_s -> EXP PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 238 (funcion_matematica_s -> EXP PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 238 (funcion_matematica_s -> EXP PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 238 (funcion_matematica_s -> EXP PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 238 (funcion_matematica_s -> EXP PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 238 (funcion_matematica_s -> EXP PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 238 (funcion_matematica_s -> EXP PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 238 (funcion_matematica_s -> EXP PARIZQ expresionaritmetica PARDER .)


state 624

    (239) funcion_matematica_s -> FACTORIAL PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 239 (funcion_matematica_s -> FACTORIAL PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 239 (funcion_matematica_s -> FACTORIAL PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 239 (funcion_matematica_s -> FACTORIAL PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 239 (funcion_matematica_s -> FACTORIAL PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 239 (funcion_matematica_s -> FACTORIAL PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 239 (funcion_matematica_s -> FACTORIAL PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 239 (funcion_matematica_s -> FACTORIAL PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 239 (funcion_matematica_s -> FACTORIAL PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 239 (funcion_matematica_s -> FACTORIAL PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 239 (funcion_matematica_s -> FACTORIAL PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 239 (funcion_matematica_s -> FACTORIAL PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 239 (funcion_matematica_s -> FACTORIAL PARIZQ expresionaritmetica PARDER .)


state 625

    (240) funcion_matematica_s -> FLOOR PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 240 (funcion_matematica_s -> FLOOR PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 240 (funcion_matematica_s -> FLOOR PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 240 (funcion_matematica_s -> FLOOR PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 240 (funcion_matematica_s -> FLOOR PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 240 (funcion_matematica_s -> FLOOR PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 240 (funcion_matematica_s -> FLOOR PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 240 (funcion_matematica_s -> FLOOR PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 240 (funcion_matematica_s -> FLOOR PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 240 (funcion_matematica_s -> FLOOR PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 240 (funcion_matematica_s -> FLOOR PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 240 (funcion_matematica_s -> FLOOR PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 240 (funcion_matematica_s -> FLOOR PARIZQ expresionaritmetica PARDER .)


state 626

    (241) funcion_matematica_s -> GCD PARIZQ expresionaritmetica COMA . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 786
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 627

    (242) funcion_matematica_s -> LN PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 242 (funcion_matematica_s -> LN PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 242 (funcion_matematica_s -> LN PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 242 (funcion_matematica_s -> LN PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 242 (funcion_matematica_s -> LN PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 242 (funcion_matematica_s -> LN PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 242 (funcion_matematica_s -> LN PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 242 (funcion_matematica_s -> LN PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 242 (funcion_matematica_s -> LN PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 242 (funcion_matematica_s -> LN PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 242 (funcion_matematica_s -> LN PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 242 (funcion_matematica_s -> LN PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 242 (funcion_matematica_s -> LN PARIZQ expresionaritmetica PARDER .)


state 628

    (243) funcion_matematica_s -> LOG PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 243 (funcion_matematica_s -> LOG PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 243 (funcion_matematica_s -> LOG PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 243 (funcion_matematica_s -> LOG PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 243 (funcion_matematica_s -> LOG PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 243 (funcion_matematica_s -> LOG PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 243 (funcion_matematica_s -> LOG PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 243 (funcion_matematica_s -> LOG PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 243 (funcion_matematica_s -> LOG PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 243 (funcion_matematica_s -> LOG PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 243 (funcion_matematica_s -> LOG PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 243 (funcion_matematica_s -> LOG PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 243 (funcion_matematica_s -> LOG PARIZQ expresionaritmetica PARDER .)


state 629

    (244) funcion_matematica_s -> MOD PARIZQ expresionaritmetica COMA . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 787
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 630

    (246) funcion_matematica_s -> POWER PARIZQ expresionaritmetica COMA . expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 788
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 631

    (247) funcion_matematica_s -> RADIANS PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 247 (funcion_matematica_s -> RADIANS PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 247 (funcion_matematica_s -> RADIANS PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 247 (funcion_matematica_s -> RADIANS PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 247 (funcion_matematica_s -> RADIANS PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 247 (funcion_matematica_s -> RADIANS PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 247 (funcion_matematica_s -> RADIANS PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 247 (funcion_matematica_s -> RADIANS PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 247 (funcion_matematica_s -> RADIANS PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 247 (funcion_matematica_s -> RADIANS PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 247 (funcion_matematica_s -> RADIANS PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 247 (funcion_matematica_s -> RADIANS PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 247 (funcion_matematica_s -> RADIANS PARIZQ expresionaritmetica PARDER .)


state 632

    (248) funcion_matematica_s -> ROUND PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 248 (funcion_matematica_s -> ROUND PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 248 (funcion_matematica_s -> ROUND PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 248 (funcion_matematica_s -> ROUND PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 248 (funcion_matematica_s -> ROUND PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 248 (funcion_matematica_s -> ROUND PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 248 (funcion_matematica_s -> ROUND PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 248 (funcion_matematica_s -> ROUND PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 248 (funcion_matematica_s -> ROUND PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 248 (funcion_matematica_s -> ROUND PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 248 (funcion_matematica_s -> ROUND PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 248 (funcion_matematica_s -> ROUND PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 248 (funcion_matematica_s -> ROUND PARIZQ expresionaritmetica PARDER .)


state 633

    (249) funcion_matematica_s -> SIGN PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 249 (funcion_matematica_s -> SIGN PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 249 (funcion_matematica_s -> SIGN PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 249 (funcion_matematica_s -> SIGN PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 249 (funcion_matematica_s -> SIGN PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 249 (funcion_matematica_s -> SIGN PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 249 (funcion_matematica_s -> SIGN PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 249 (funcion_matematica_s -> SIGN PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 249 (funcion_matematica_s -> SIGN PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 249 (funcion_matematica_s -> SIGN PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 249 (funcion_matematica_s -> SIGN PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 249 (funcion_matematica_s -> SIGN PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 249 (funcion_matematica_s -> SIGN PARIZQ expresionaritmetica PARDER .)


state 634

    (250) funcion_matematica_s -> SQRT PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 250 (funcion_matematica_s -> SQRT PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 250 (funcion_matematica_s -> SQRT PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 250 (funcion_matematica_s -> SQRT PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 250 (funcion_matematica_s -> SQRT PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 250 (funcion_matematica_s -> SQRT PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 250 (funcion_matematica_s -> SQRT PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 250 (funcion_matematica_s -> SQRT PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 250 (funcion_matematica_s -> SQRT PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 250 (funcion_matematica_s -> SQRT PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 250 (funcion_matematica_s -> SQRT PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 250 (funcion_matematica_s -> SQRT PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 250 (funcion_matematica_s -> SQRT PARIZQ expresionaritmetica PARDER .)


state 635

    (251) funcion_matematica_s -> WBUCKET PARIZQ explist PARDER .

    ID              reduce using rule 251 (funcion_matematica_s -> WBUCKET PARIZQ explist PARDER .)
    CADENASIMPLE    reduce using rule 251 (funcion_matematica_s -> WBUCKET PARIZQ explist PARDER .)
    CADENADOBLE     reduce using rule 251 (funcion_matematica_s -> WBUCKET PARIZQ explist PARDER .)
    AS              reduce using rule 251 (funcion_matematica_s -> WBUCKET PARIZQ explist PARDER .)
    COMA            reduce using rule 251 (funcion_matematica_s -> WBUCKET PARIZQ explist PARDER .)
    FROM            reduce using rule 251 (funcion_matematica_s -> WBUCKET PARIZQ explist PARDER .)
    UNION           reduce using rule 251 (funcion_matematica_s -> WBUCKET PARIZQ explist PARDER .)
    INTERSECT       reduce using rule 251 (funcion_matematica_s -> WBUCKET PARIZQ explist PARDER .)
    EXCEPT          reduce using rule 251 (funcion_matematica_s -> WBUCKET PARIZQ explist PARDER .)
    PTCOMA          reduce using rule 251 (funcion_matematica_s -> WBUCKET PARIZQ explist PARDER .)
    PARDER          reduce using rule 251 (funcion_matematica_s -> WBUCKET PARIZQ explist PARDER .)
    CSIMPLE         reduce using rule 251 (funcion_matematica_s -> WBUCKET PARIZQ explist PARDER .)


state 636

    (254) explist -> expresionaritmetica COMA . expresionaritmetica COMA expresionaritmetica COMA expresionaritmetica
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 789
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 637

    (252) funcion_matematica_s -> TRUNC PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 252 (funcion_matematica_s -> TRUNC PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 252 (funcion_matematica_s -> TRUNC PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 252 (funcion_matematica_s -> TRUNC PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 252 (funcion_matematica_s -> TRUNC PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 252 (funcion_matematica_s -> TRUNC PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 252 (funcion_matematica_s -> TRUNC PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 252 (funcion_matematica_s -> TRUNC PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 252 (funcion_matematica_s -> TRUNC PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 252 (funcion_matematica_s -> TRUNC PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 252 (funcion_matematica_s -> TRUNC PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 252 (funcion_matematica_s -> TRUNC PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 252 (funcion_matematica_s -> TRUNC PARIZQ expresionaritmetica PARDER .)


state 638

    (255) funcion_trigonometrica -> ACOS PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 255 (funcion_trigonometrica -> ACOS PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 255 (funcion_trigonometrica -> ACOS PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 255 (funcion_trigonometrica -> ACOS PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 255 (funcion_trigonometrica -> ACOS PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 255 (funcion_trigonometrica -> ACOS PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 255 (funcion_trigonometrica -> ACOS PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 255 (funcion_trigonometrica -> ACOS PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 255 (funcion_trigonometrica -> ACOS PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 255 (funcion_trigonometrica -> ACOS PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 255 (funcion_trigonometrica -> ACOS PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 255 (funcion_trigonometrica -> ACOS PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 255 (funcion_trigonometrica -> ACOS PARIZQ expresionaritmetica PARDER .)


state 639

    (256) funcion_trigonometrica -> ACOSD PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 256 (funcion_trigonometrica -> ACOSD PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 256 (funcion_trigonometrica -> ACOSD PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 256 (funcion_trigonometrica -> ACOSD PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 256 (funcion_trigonometrica -> ACOSD PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 256 (funcion_trigonometrica -> ACOSD PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 256 (funcion_trigonometrica -> ACOSD PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 256 (funcion_trigonometrica -> ACOSD PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 256 (funcion_trigonometrica -> ACOSD PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 256 (funcion_trigonometrica -> ACOSD PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 256 (funcion_trigonometrica -> ACOSD PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 256 (funcion_trigonometrica -> ACOSD PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 256 (funcion_trigonometrica -> ACOSD PARIZQ expresionaritmetica PARDER .)


state 640

    (257) funcion_trigonometrica -> ASIN PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 257 (funcion_trigonometrica -> ASIN PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 257 (funcion_trigonometrica -> ASIN PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 257 (funcion_trigonometrica -> ASIN PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 257 (funcion_trigonometrica -> ASIN PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 257 (funcion_trigonometrica -> ASIN PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 257 (funcion_trigonometrica -> ASIN PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 257 (funcion_trigonometrica -> ASIN PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 257 (funcion_trigonometrica -> ASIN PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 257 (funcion_trigonometrica -> ASIN PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 257 (funcion_trigonometrica -> ASIN PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 257 (funcion_trigonometrica -> ASIN PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 257 (funcion_trigonometrica -> ASIN PARIZQ expresionaritmetica PARDER .)


state 641

    (258) funcion_trigonometrica -> ASIND PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 258 (funcion_trigonometrica -> ASIND PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 258 (funcion_trigonometrica -> ASIND PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 258 (funcion_trigonometrica -> ASIND PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 258 (funcion_trigonometrica -> ASIND PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 258 (funcion_trigonometrica -> ASIND PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 258 (funcion_trigonometrica -> ASIND PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 258 (funcion_trigonometrica -> ASIND PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 258 (funcion_trigonometrica -> ASIND PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 258 (funcion_trigonometrica -> ASIND PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 258 (funcion_trigonometrica -> ASIND PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 258 (funcion_trigonometrica -> ASIND PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 258 (funcion_trigonometrica -> ASIND PARIZQ expresionaritmetica PARDER .)


state 642

    (259) funcion_trigonometrica -> ATAN PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 259 (funcion_trigonometrica -> ATAN PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 259 (funcion_trigonometrica -> ATAN PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 259 (funcion_trigonometrica -> ATAN PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 259 (funcion_trigonometrica -> ATAN PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 259 (funcion_trigonometrica -> ATAN PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 259 (funcion_trigonometrica -> ATAN PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 259 (funcion_trigonometrica -> ATAN PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 259 (funcion_trigonometrica -> ATAN PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 259 (funcion_trigonometrica -> ATAN PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 259 (funcion_trigonometrica -> ATAN PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 259 (funcion_trigonometrica -> ATAN PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 259 (funcion_trigonometrica -> ATAN PARIZQ expresionaritmetica PARDER .)


state 643

    (260) funcion_trigonometrica -> ATAND PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 260 (funcion_trigonometrica -> ATAND PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 260 (funcion_trigonometrica -> ATAND PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 260 (funcion_trigonometrica -> ATAND PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 260 (funcion_trigonometrica -> ATAND PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 260 (funcion_trigonometrica -> ATAND PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 260 (funcion_trigonometrica -> ATAND PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 260 (funcion_trigonometrica -> ATAND PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 260 (funcion_trigonometrica -> ATAND PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 260 (funcion_trigonometrica -> ATAND PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 260 (funcion_trigonometrica -> ATAND PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 260 (funcion_trigonometrica -> ATAND PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 260 (funcion_trigonometrica -> ATAND PARIZQ expresionaritmetica PARDER .)


state 644

    (261) funcion_trigonometrica -> ATAN2 PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 261 (funcion_trigonometrica -> ATAN2 PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 261 (funcion_trigonometrica -> ATAN2 PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 261 (funcion_trigonometrica -> ATAN2 PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 261 (funcion_trigonometrica -> ATAN2 PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 261 (funcion_trigonometrica -> ATAN2 PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 261 (funcion_trigonometrica -> ATAN2 PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 261 (funcion_trigonometrica -> ATAN2 PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 261 (funcion_trigonometrica -> ATAN2 PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 261 (funcion_trigonometrica -> ATAN2 PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 261 (funcion_trigonometrica -> ATAN2 PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 261 (funcion_trigonometrica -> ATAN2 PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 261 (funcion_trigonometrica -> ATAN2 PARIZQ expresionaritmetica PARDER .)


state 645

    (262) funcion_trigonometrica -> ATAN2D PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 262 (funcion_trigonometrica -> ATAN2D PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 262 (funcion_trigonometrica -> ATAN2D PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 262 (funcion_trigonometrica -> ATAN2D PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 262 (funcion_trigonometrica -> ATAN2D PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 262 (funcion_trigonometrica -> ATAN2D PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 262 (funcion_trigonometrica -> ATAN2D PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 262 (funcion_trigonometrica -> ATAN2D PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 262 (funcion_trigonometrica -> ATAN2D PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 262 (funcion_trigonometrica -> ATAN2D PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 262 (funcion_trigonometrica -> ATAN2D PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 262 (funcion_trigonometrica -> ATAN2D PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 262 (funcion_trigonometrica -> ATAN2D PARIZQ expresionaritmetica PARDER .)


state 646

    (263) funcion_trigonometrica -> COS PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 263 (funcion_trigonometrica -> COS PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 263 (funcion_trigonometrica -> COS PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 263 (funcion_trigonometrica -> COS PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 263 (funcion_trigonometrica -> COS PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 263 (funcion_trigonometrica -> COS PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 263 (funcion_trigonometrica -> COS PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 263 (funcion_trigonometrica -> COS PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 263 (funcion_trigonometrica -> COS PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 263 (funcion_trigonometrica -> COS PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 263 (funcion_trigonometrica -> COS PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 263 (funcion_trigonometrica -> COS PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 263 (funcion_trigonometrica -> COS PARIZQ expresionaritmetica PARDER .)


state 647

    (264) funcion_trigonometrica -> COSD PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 264 (funcion_trigonometrica -> COSD PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 264 (funcion_trigonometrica -> COSD PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 264 (funcion_trigonometrica -> COSD PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 264 (funcion_trigonometrica -> COSD PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 264 (funcion_trigonometrica -> COSD PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 264 (funcion_trigonometrica -> COSD PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 264 (funcion_trigonometrica -> COSD PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 264 (funcion_trigonometrica -> COSD PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 264 (funcion_trigonometrica -> COSD PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 264 (funcion_trigonometrica -> COSD PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 264 (funcion_trigonometrica -> COSD PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 264 (funcion_trigonometrica -> COSD PARIZQ expresionaritmetica PARDER .)


state 648

    (265) funcion_trigonometrica -> COT PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 265 (funcion_trigonometrica -> COT PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 265 (funcion_trigonometrica -> COT PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 265 (funcion_trigonometrica -> COT PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 265 (funcion_trigonometrica -> COT PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 265 (funcion_trigonometrica -> COT PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 265 (funcion_trigonometrica -> COT PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 265 (funcion_trigonometrica -> COT PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 265 (funcion_trigonometrica -> COT PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 265 (funcion_trigonometrica -> COT PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 265 (funcion_trigonometrica -> COT PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 265 (funcion_trigonometrica -> COT PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 265 (funcion_trigonometrica -> COT PARIZQ expresionaritmetica PARDER .)


state 649

    (266) funcion_trigonometrica -> COTD PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 266 (funcion_trigonometrica -> COTD PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 266 (funcion_trigonometrica -> COTD PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 266 (funcion_trigonometrica -> COTD PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 266 (funcion_trigonometrica -> COTD PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 266 (funcion_trigonometrica -> COTD PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 266 (funcion_trigonometrica -> COTD PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 266 (funcion_trigonometrica -> COTD PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 266 (funcion_trigonometrica -> COTD PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 266 (funcion_trigonometrica -> COTD PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 266 (funcion_trigonometrica -> COTD PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 266 (funcion_trigonometrica -> COTD PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 266 (funcion_trigonometrica -> COTD PARIZQ expresionaritmetica PARDER .)


state 650

    (267) funcion_trigonometrica -> SIN PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 267 (funcion_trigonometrica -> SIN PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 267 (funcion_trigonometrica -> SIN PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 267 (funcion_trigonometrica -> SIN PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 267 (funcion_trigonometrica -> SIN PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 267 (funcion_trigonometrica -> SIN PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 267 (funcion_trigonometrica -> SIN PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 267 (funcion_trigonometrica -> SIN PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 267 (funcion_trigonometrica -> SIN PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 267 (funcion_trigonometrica -> SIN PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 267 (funcion_trigonometrica -> SIN PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 267 (funcion_trigonometrica -> SIN PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 267 (funcion_trigonometrica -> SIN PARIZQ expresionaritmetica PARDER .)


state 651

    (268) funcion_trigonometrica -> SIND PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 268 (funcion_trigonometrica -> SIND PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 268 (funcion_trigonometrica -> SIND PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 268 (funcion_trigonometrica -> SIND PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 268 (funcion_trigonometrica -> SIND PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 268 (funcion_trigonometrica -> SIND PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 268 (funcion_trigonometrica -> SIND PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 268 (funcion_trigonometrica -> SIND PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 268 (funcion_trigonometrica -> SIND PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 268 (funcion_trigonometrica -> SIND PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 268 (funcion_trigonometrica -> SIND PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 268 (funcion_trigonometrica -> SIND PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 268 (funcion_trigonometrica -> SIND PARIZQ expresionaritmetica PARDER .)


state 652

    (269) funcion_trigonometrica -> TAN PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 269 (funcion_trigonometrica -> TAN PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 269 (funcion_trigonometrica -> TAN PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 269 (funcion_trigonometrica -> TAN PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 269 (funcion_trigonometrica -> TAN PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 269 (funcion_trigonometrica -> TAN PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 269 (funcion_trigonometrica -> TAN PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 269 (funcion_trigonometrica -> TAN PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 269 (funcion_trigonometrica -> TAN PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 269 (funcion_trigonometrica -> TAN PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 269 (funcion_trigonometrica -> TAN PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 269 (funcion_trigonometrica -> TAN PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 269 (funcion_trigonometrica -> TAN PARIZQ expresionaritmetica PARDER .)


state 653

    (270) funcion_trigonometrica -> TAND PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 270 (funcion_trigonometrica -> TAND PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 270 (funcion_trigonometrica -> TAND PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 270 (funcion_trigonometrica -> TAND PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 270 (funcion_trigonometrica -> TAND PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 270 (funcion_trigonometrica -> TAND PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 270 (funcion_trigonometrica -> TAND PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 270 (funcion_trigonometrica -> TAND PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 270 (funcion_trigonometrica -> TAND PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 270 (funcion_trigonometrica -> TAND PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 270 (funcion_trigonometrica -> TAND PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 270 (funcion_trigonometrica -> TAND PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 270 (funcion_trigonometrica -> TAND PARIZQ expresionaritmetica PARDER .)


state 654

    (271) funcion_trigonometrica -> SINH PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 271 (funcion_trigonometrica -> SINH PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 271 (funcion_trigonometrica -> SINH PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 271 (funcion_trigonometrica -> SINH PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 271 (funcion_trigonometrica -> SINH PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 271 (funcion_trigonometrica -> SINH PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 271 (funcion_trigonometrica -> SINH PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 271 (funcion_trigonometrica -> SINH PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 271 (funcion_trigonometrica -> SINH PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 271 (funcion_trigonometrica -> SINH PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 271 (funcion_trigonometrica -> SINH PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 271 (funcion_trigonometrica -> SINH PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 271 (funcion_trigonometrica -> SINH PARIZQ expresionaritmetica PARDER .)


state 655

    (272) funcion_trigonometrica -> COSH PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 272 (funcion_trigonometrica -> COSH PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 272 (funcion_trigonometrica -> COSH PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 272 (funcion_trigonometrica -> COSH PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 272 (funcion_trigonometrica -> COSH PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 272 (funcion_trigonometrica -> COSH PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 272 (funcion_trigonometrica -> COSH PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 272 (funcion_trigonometrica -> COSH PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 272 (funcion_trigonometrica -> COSH PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 272 (funcion_trigonometrica -> COSH PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 272 (funcion_trigonometrica -> COSH PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 272 (funcion_trigonometrica -> COSH PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 272 (funcion_trigonometrica -> COSH PARIZQ expresionaritmetica PARDER .)


state 656

    (273) funcion_trigonometrica -> TANH PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 273 (funcion_trigonometrica -> TANH PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 273 (funcion_trigonometrica -> TANH PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 273 (funcion_trigonometrica -> TANH PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 273 (funcion_trigonometrica -> TANH PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 273 (funcion_trigonometrica -> TANH PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 273 (funcion_trigonometrica -> TANH PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 273 (funcion_trigonometrica -> TANH PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 273 (funcion_trigonometrica -> TANH PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 273 (funcion_trigonometrica -> TANH PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 273 (funcion_trigonometrica -> TANH PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 273 (funcion_trigonometrica -> TANH PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 273 (funcion_trigonometrica -> TANH PARIZQ expresionaritmetica PARDER .)


state 657

    (274) funcion_trigonometrica -> ASINH PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 274 (funcion_trigonometrica -> ASINH PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 274 (funcion_trigonometrica -> ASINH PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 274 (funcion_trigonometrica -> ASINH PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 274 (funcion_trigonometrica -> ASINH PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 274 (funcion_trigonometrica -> ASINH PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 274 (funcion_trigonometrica -> ASINH PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 274 (funcion_trigonometrica -> ASINH PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 274 (funcion_trigonometrica -> ASINH PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 274 (funcion_trigonometrica -> ASINH PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 274 (funcion_trigonometrica -> ASINH PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 274 (funcion_trigonometrica -> ASINH PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 274 (funcion_trigonometrica -> ASINH PARIZQ expresionaritmetica PARDER .)


state 658

    (275) funcion_trigonometrica -> ACOSH PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 275 (funcion_trigonometrica -> ACOSH PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 275 (funcion_trigonometrica -> ACOSH PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 275 (funcion_trigonometrica -> ACOSH PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 275 (funcion_trigonometrica -> ACOSH PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 275 (funcion_trigonometrica -> ACOSH PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 275 (funcion_trigonometrica -> ACOSH PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 275 (funcion_trigonometrica -> ACOSH PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 275 (funcion_trigonometrica -> ACOSH PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 275 (funcion_trigonometrica -> ACOSH PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 275 (funcion_trigonometrica -> ACOSH PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 275 (funcion_trigonometrica -> ACOSH PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 275 (funcion_trigonometrica -> ACOSH PARIZQ expresionaritmetica PARDER .)


state 659

    (276) funcion_trigonometrica -> ATANH PARIZQ expresionaritmetica PARDER .

    ID              reduce using rule 276 (funcion_trigonometrica -> ATANH PARIZQ expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 276 (funcion_trigonometrica -> ATANH PARIZQ expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 276 (funcion_trigonometrica -> ATANH PARIZQ expresionaritmetica PARDER .)
    AS              reduce using rule 276 (funcion_trigonometrica -> ATANH PARIZQ expresionaritmetica PARDER .)
    COMA            reduce using rule 276 (funcion_trigonometrica -> ATANH PARIZQ expresionaritmetica PARDER .)
    FROM            reduce using rule 276 (funcion_trigonometrica -> ATANH PARIZQ expresionaritmetica PARDER .)
    UNION           reduce using rule 276 (funcion_trigonometrica -> ATANH PARIZQ expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 276 (funcion_trigonometrica -> ATANH PARIZQ expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 276 (funcion_trigonometrica -> ATANH PARIZQ expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 276 (funcion_trigonometrica -> ATANH PARIZQ expresionaritmetica PARDER .)
    PARDER          reduce using rule 276 (funcion_trigonometrica -> ATANH PARIZQ expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 276 (funcion_trigonometrica -> ATANH PARIZQ expresionaritmetica PARDER .)


state 660

    (277) func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .

    ID              reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    CADENASIMPLE    reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    CADENADOBLE     reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    AS              reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    COMA            reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    FROM            reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    UNION           reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    INTERSECT       reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    EXCEPT          reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    PTCOMA          reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    PARDER          reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    CSIMPLE         reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    MENQUE          reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    MAYQUE          reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    MENIGUAL        reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    MAYIGUAL        reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    IGUAL           reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    DIFERENTE       reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    AND             reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    OR              reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    WHERE           reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    THEN            reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    RAISE           reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    RETURN          reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    EXECUTE         reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    GET             reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    NULL            reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    IF              reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    CASE            reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    COMMIT          reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    ROLLBACK        reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    INSERT          reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    UPDATE          reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    ALTER           reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    CREATE          reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    DROP            reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    DELETE          reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    TRUNCATE        reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    DECLARE         reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    SELECT          reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    BEGIN           reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    END             reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    ELSE            reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    ELSIF           reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    WHEN            reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    GROUP           reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)
    ORDER           reduce using rule 277 (func_bin_strings_1 -> LENGTH PARIZQ cadena PARDER .)


state 661

    (278) func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA . cualquiernumero COMA cualquiernumero PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL

    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253

    cualquiernumero                shift and go to state 790

state 662

    (279) func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA . cualquiernumero COMA cualquiernumero PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL

    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253

    cualquiernumero                shift and go to state 791

state 663

    (280) func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .

    ID              reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    CADENASIMPLE    reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    CADENADOBLE     reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    AS              reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    COMA            reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    FROM            reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    UNION           reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    INTERSECT       reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    EXCEPT          reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    PTCOMA          reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    PARDER          reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    CSIMPLE         reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    MENQUE          reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    MAYQUE          reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    MENIGUAL        reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    MAYIGUAL        reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    IGUAL           reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    DIFERENTE       reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    AND             reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    OR              reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    WHERE           reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    THEN            reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    RAISE           reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    RETURN          reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    EXECUTE         reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    GET             reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    NULL            reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    IF              reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    CASE            reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    COMMIT          reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    ROLLBACK        reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    INSERT          reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    UPDATE          reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    ALTER           reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    CREATE          reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    DROP            reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    DELETE          reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    TRUNCATE        reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    DECLARE         reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    SELECT          reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    BEGIN           reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    END             reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    ELSE            reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    ELSIF           reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    WHEN            reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    GROUP           reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)
    ORDER           reduce using rule 280 (func_bin_strings_2 -> TRIM PARIZQ cadena PARDER .)


state 664

    (282) func_bin_strings_4 -> GET_BYTE PARIZQ cadena COMA . ENTERO PARDER

    ENTERO          shift and go to state 792


state 665

    (283) func_bin_strings_4 -> SET_BYTE PARIZQ cadena COMA . ENTERO COMA ENTERO PARDER

    ENTERO          shift and go to state 793


state 666

    (284) func_bin_strings_4 -> ENCODE PARIZQ cadena COMA . cadena PARDER
    (296) cadena -> . cualquiercadena
    (297) cadena -> . cualquieridentificador
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    cadena                         shift and go to state 794
    cualquiercadena                shift and go to state 483
    cualquieridentificador         shift and go to state 484

state 667

    (285) func_bin_strings_4 -> DECODE PARIZQ cadena COMA . cadena PARDER
    (296) cadena -> . cualquiercadena
    (297) cadena -> . cualquieridentificador
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    cadena                         shift and go to state 795
    cualquiercadena                shift and go to state 483
    cualquieridentificador         shift and go to state 484

state 668

    (286) func_bin_strings_4 -> SHA256 PARIZQ cadena PARDER .

    ID              reduce using rule 286 (func_bin_strings_4 -> SHA256 PARIZQ cadena PARDER .)
    CADENASIMPLE    reduce using rule 286 (func_bin_strings_4 -> SHA256 PARIZQ cadena PARDER .)
    CADENADOBLE     reduce using rule 286 (func_bin_strings_4 -> SHA256 PARIZQ cadena PARDER .)
    AS              reduce using rule 286 (func_bin_strings_4 -> SHA256 PARIZQ cadena PARDER .)
    COMA            reduce using rule 286 (func_bin_strings_4 -> SHA256 PARIZQ cadena PARDER .)
    FROM            reduce using rule 286 (func_bin_strings_4 -> SHA256 PARIZQ cadena PARDER .)
    UNION           reduce using rule 286 (func_bin_strings_4 -> SHA256 PARIZQ cadena PARDER .)
    INTERSECT       reduce using rule 286 (func_bin_strings_4 -> SHA256 PARIZQ cadena PARDER .)
    EXCEPT          reduce using rule 286 (func_bin_strings_4 -> SHA256 PARIZQ cadena PARDER .)
    PTCOMA          reduce using rule 286 (func_bin_strings_4 -> SHA256 PARIZQ cadena PARDER .)
    PARDER          reduce using rule 286 (func_bin_strings_4 -> SHA256 PARIZQ cadena PARDER .)
    CSIMPLE         reduce using rule 286 (func_bin_strings_4 -> SHA256 PARIZQ cadena PARDER .)


state 669

    (287) func_bin_strings_4 -> CONVERT PARIZQ alias PARDER .

    ID              reduce using rule 287 (func_bin_strings_4 -> CONVERT PARIZQ alias PARDER .)
    CADENASIMPLE    reduce using rule 287 (func_bin_strings_4 -> CONVERT PARIZQ alias PARDER .)
    CADENADOBLE     reduce using rule 287 (func_bin_strings_4 -> CONVERT PARIZQ alias PARDER .)
    AS              reduce using rule 287 (func_bin_strings_4 -> CONVERT PARIZQ alias PARDER .)
    COMA            reduce using rule 287 (func_bin_strings_4 -> CONVERT PARIZQ alias PARDER .)
    FROM            reduce using rule 287 (func_bin_strings_4 -> CONVERT PARIZQ alias PARDER .)
    UNION           reduce using rule 287 (func_bin_strings_4 -> CONVERT PARIZQ alias PARDER .)
    INTERSECT       reduce using rule 287 (func_bin_strings_4 -> CONVERT PARIZQ alias PARDER .)
    EXCEPT          reduce using rule 287 (func_bin_strings_4 -> CONVERT PARIZQ alias PARDER .)
    PTCOMA          reduce using rule 287 (func_bin_strings_4 -> CONVERT PARIZQ alias PARDER .)
    PARDER          reduce using rule 287 (func_bin_strings_4 -> CONVERT PARIZQ alias PARDER .)
    CSIMPLE         reduce using rule 287 (func_bin_strings_4 -> CONVERT PARIZQ alias PARDER .)


state 670

    (382) extract_instr -> EXTRACT PARIZQ valdate FROM . TIMESTAMP CADENASIMPLE PARDER

    TIMESTAMP       shift and go to state 796


state 671

    (389) datepart_instr -> DATE_PART PARIZQ CADENASIMPLE COMA . INTERVAL CADENASIMPLE PARDER

    INTERVAL        shift and go to state 797


state 672

    (408) llamadaprocedimiento -> EXECUTE ID PARIZQ listaexpresiones PARDER PTCOMA .

    $end            reduce using rule 408 (llamadaprocedimiento -> EXECUTE ID PARIZQ listaexpresiones PARDER PTCOMA .)


state 673

    (29) state_owner -> OWNER IGUAL ID state_mode .

    $end            reduce using rule 29 (state_owner -> OWNER IGUAL ID state_mode .)


state 674

    (30) state_owner -> OWNER IGUAL CADENASIMPLE state_mode .

    $end            reduce using rule 30 (state_owner -> OWNER IGUAL CADENASIMPLE state_mode .)


state 675

    (34) state_mode -> MODE IGUAL ENTERO PTCOMA .

    $end            reduce using rule 34 (state_mode -> MODE IGUAL ENTERO PTCOMA .)


state 676

    (28) existencia -> IF NOT EXISTS ID state_owner .

    $end            reduce using rule 28 (existencia -> IF NOT EXISTS ID state_owner .)


state 677

    (347) key_column -> ID type_column attributes .

    PARDER          reduce using rule 347 (key_column -> ID type_column attributes .)
    COMA            reduce using rule 347 (key_column -> ID type_column attributes .)


state 678

    (348) attributes -> default_value . null_field constraint_field null_field primary_key
    (355) null_field -> . NULL
    (356) null_field -> . NOT NULL
    (357) null_field -> . empty
    (546) empty -> .

  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    NULL            shift and go to state 799
    NOT             shift and go to state 800
    UNIQUE          reduce using rule 546 (empty -> .)
    CONSTRAINT      reduce using rule 546 (empty -> .)
    CHECK           reduce using rule 546 (empty -> .)
    PRIMARY         reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    COMA            reduce using rule 546 (empty -> .)

  ! NULL            [ reduce using rule 546 (empty -> .) ]
  ! NOT             [ reduce using rule 546 (empty -> .) ]

    null_field                     shift and go to state 798
    empty                          shift and go to state 801

state 679

    (349) default_value -> DEFAULT . x_value
    (351) x_value -> . cualquiercadena
    (352) x_value -> . cualquiernumero
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253

    x_value                        shift and go to state 802
    cualquiercadena                shift and go to state 803
    cualquiernumero                shift and go to state 804

state 680

    (350) default_value -> empty .

    NULL            reduce using rule 350 (default_value -> empty .)
    NOT             reduce using rule 350 (default_value -> empty .)
    UNIQUE          reduce using rule 350 (default_value -> empty .)
    CONSTRAINT      reduce using rule 350 (default_value -> empty .)
    CHECK           reduce using rule 350 (default_value -> empty .)
    PRIMARY         reduce using rule 350 (default_value -> empty .)
    PARDER          reduce using rule 350 (default_value -> empty .)
    COMA            reduce using rule 350 (default_value -> empty .)


state 681

    (315) type_column -> RDECIMAL PARIZQ . ENTERO COMA ENTERO PARDER

    ENTERO          shift and go to state 805


state 682

    (322) type_column -> VARCHAR PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 806


state 683

    (323) type_column -> CHARACTER VARYING . PARIZQ ENTERO PARDER

    PARIZQ          shift and go to state 807


state 684

    (324) type_column -> CHARACTER PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 808


state 685

    (325) type_column -> CHAR PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 809


state 686

    (328) type_column -> TIMESTAMP PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 810


state 687

    (333) type_column -> TIME PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 811


state 688

    (334) type_column -> INTERVAL field .

    DEFAULT         reduce using rule 334 (type_column -> INTERVAL field .)
    NULL            reduce using rule 334 (type_column -> INTERVAL field .)
    NOT             reduce using rule 334 (type_column -> INTERVAL field .)
    UNIQUE          reduce using rule 334 (type_column -> INTERVAL field .)
    CONSTRAINT      reduce using rule 334 (type_column -> INTERVAL field .)
    CHECK           reduce using rule 334 (type_column -> INTERVAL field .)
    PRIMARY         reduce using rule 334 (type_column -> INTERVAL field .)
    PARDER          reduce using rule 334 (type_column -> INTERVAL field .)
    COMA            reduce using rule 334 (type_column -> INTERVAL field .)
    PTCOMA          reduce using rule 334 (type_column -> INTERVAL field .)


state 689

    (335) field -> YEAR .

    DEFAULT         reduce using rule 335 (field -> YEAR .)
    NULL            reduce using rule 335 (field -> YEAR .)
    NOT             reduce using rule 335 (field -> YEAR .)
    UNIQUE          reduce using rule 335 (field -> YEAR .)
    CONSTRAINT      reduce using rule 335 (field -> YEAR .)
    CHECK           reduce using rule 335 (field -> YEAR .)
    PRIMARY         reduce using rule 335 (field -> YEAR .)
    PARDER          reduce using rule 335 (field -> YEAR .)
    COMA            reduce using rule 335 (field -> YEAR .)
    PTCOMA          reduce using rule 335 (field -> YEAR .)


state 690

    (336) field -> MONTH .

    DEFAULT         reduce using rule 336 (field -> MONTH .)
    NULL            reduce using rule 336 (field -> MONTH .)
    NOT             reduce using rule 336 (field -> MONTH .)
    UNIQUE          reduce using rule 336 (field -> MONTH .)
    CONSTRAINT      reduce using rule 336 (field -> MONTH .)
    CHECK           reduce using rule 336 (field -> MONTH .)
    PRIMARY         reduce using rule 336 (field -> MONTH .)
    PARDER          reduce using rule 336 (field -> MONTH .)
    COMA            reduce using rule 336 (field -> MONTH .)
    PTCOMA          reduce using rule 336 (field -> MONTH .)


state 691

    (337) field -> DAY .

    DEFAULT         reduce using rule 337 (field -> DAY .)
    NULL            reduce using rule 337 (field -> DAY .)
    NOT             reduce using rule 337 (field -> DAY .)
    UNIQUE          reduce using rule 337 (field -> DAY .)
    CONSTRAINT      reduce using rule 337 (field -> DAY .)
    CHECK           reduce using rule 337 (field -> DAY .)
    PRIMARY         reduce using rule 337 (field -> DAY .)
    PARDER          reduce using rule 337 (field -> DAY .)
    COMA            reduce using rule 337 (field -> DAY .)
    PTCOMA          reduce using rule 337 (field -> DAY .)


state 692

    (338) field -> HOUR .

    DEFAULT         reduce using rule 338 (field -> HOUR .)
    NULL            reduce using rule 338 (field -> HOUR .)
    NOT             reduce using rule 338 (field -> HOUR .)
    UNIQUE          reduce using rule 338 (field -> HOUR .)
    CONSTRAINT      reduce using rule 338 (field -> HOUR .)
    CHECK           reduce using rule 338 (field -> HOUR .)
    PRIMARY         reduce using rule 338 (field -> HOUR .)
    PARDER          reduce using rule 338 (field -> HOUR .)
    COMA            reduce using rule 338 (field -> HOUR .)
    PTCOMA          reduce using rule 338 (field -> HOUR .)


state 693

    (339) field -> MINUTE .

    DEFAULT         reduce using rule 339 (field -> MINUTE .)
    NULL            reduce using rule 339 (field -> MINUTE .)
    NOT             reduce using rule 339 (field -> MINUTE .)
    UNIQUE          reduce using rule 339 (field -> MINUTE .)
    CONSTRAINT      reduce using rule 339 (field -> MINUTE .)
    CHECK           reduce using rule 339 (field -> MINUTE .)
    PRIMARY         reduce using rule 339 (field -> MINUTE .)
    PARDER          reduce using rule 339 (field -> MINUTE .)
    COMA            reduce using rule 339 (field -> MINUTE .)
    PTCOMA          reduce using rule 339 (field -> MINUTE .)


state 694

    (340) field -> SECOND .

    DEFAULT         reduce using rule 340 (field -> SECOND .)
    NULL            reduce using rule 340 (field -> SECOND .)
    NOT             reduce using rule 340 (field -> SECOND .)
    UNIQUE          reduce using rule 340 (field -> SECOND .)
    CONSTRAINT      reduce using rule 340 (field -> SECOND .)
    CHECK           reduce using rule 340 (field -> SECOND .)
    PRIMARY         reduce using rule 340 (field -> SECOND .)
    PARDER          reduce using rule 340 (field -> SECOND .)
    COMA            reduce using rule 340 (field -> SECOND .)
    PTCOMA          reduce using rule 340 (field -> SECOND .)


state 695

    (341) create_table -> CREATE TABLE ID PARIZQ list_columns_x PARDER end_create_table .

    $end            reduce using rule 341 (create_table -> CREATE TABLE ID PARIZQ list_columns_x PARDER end_create_table .)


state 696

    (342) end_create_table -> PTCOMA .

    $end            reduce using rule 342 (end_create_table -> PTCOMA .)


state 697

    (343) end_create_table -> INHERITS . PARIZQ ID PARDER PTCOMA

    PARIZQ          shift and go to state 812


state 698

    (344) list_columns_x -> list_columns_x COMA key_column .

    PARDER          reduce using rule 344 (list_columns_x -> list_columns_x COMA key_column .)
    COMA            reduce using rule 344 (list_columns_x -> list_columns_x COMA key_column .)


state 699

    (346) key_column -> PRIMARY KEY PARIZQ . listtablas PARDER
    (69) listtablas -> . listtablas COMA ID
    (70) listtablas -> . ID

    ID              shift and go to state 60

    listtablas                     shift and go to state 813

state 700

    (365) create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string . PARDER PTCOMA
    (366) list_string -> list_string . COMA cualquiercadena

    PARDER          shift and go to state 814
    COMA            shift and go to state 815


state 701

    (367) list_string -> cualquiercadena .

    PARDER          reduce using rule 367 (list_string -> cualquiercadena .)
    COMA            reduce using rule 367 (list_string -> cualquiercadena .)


state 702

    (394) indexinstr -> CREATE INDEX ID ON ID PARIZQ ID . PARDER PTCOMA
    (396) indexinstr -> CREATE INDEX ID ON ID PARIZQ ID . COMA ID PARDER PTCOMA
    (400) indexinstr -> CREATE INDEX ID ON ID PARIZQ ID . PARDER whereselect PTCOMA
    (401) indexinstr -> CREATE INDEX ID ON ID PARIZQ ID . ID PARDER PTCOMA
    (228) cualquieridentificador -> ID .
    (229) cualquieridentificador -> ID . PUNTO ID

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 817
    COMA            shift and go to state 818
    ID              shift and go to state 816
    DESC            reduce using rule 228 (cualquieridentificador -> ID .)
    ASC             reduce using rule 228 (cualquieridentificador -> ID .)
    NULLS           reduce using rule 228 (cualquieridentificador -> ID .)
    PUNTO           shift and go to state 409

  ! PARDER          [ reduce using rule 228 (cualquieridentificador -> ID .) ]


state 703

    (397) indexinstr -> CREATE INDEX ID ON ID PARIZQ valororderby . PARDER PTCOMA

    PARDER          shift and go to state 819


state 704

    (399) indexinstr -> CREATE INDEX ID ON ID PARIZQ LOWER . PARIZQ ID PARDER PARDER PTCOMA

    PARIZQ          shift and go to state 820


state 705

    (183) valororderby -> cualquieridentificador . ascdesc anular
    (185) ascdesc -> . DESC
    (186) ascdesc -> . ASC
    (187) ascdesc -> . empty
    (546) empty -> .

    DESC            shift and go to state 822
    ASC             shift and go to state 823
    NULLS           reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    COMA            reduce using rule 546 (empty -> .)
    LIMIT           reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    ascdesc                        shift and go to state 821
    empty                          shift and go to state 824

state 706

    (184) valororderby -> cualquiernumero . ascdesc anular
    (185) ascdesc -> . DESC
    (186) ascdesc -> . ASC
    (187) ascdesc -> . empty
    (546) empty -> .

    DESC            shift and go to state 822
    ASC             shift and go to state 823
    NULLS           reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    COMA            reduce using rule 546 (empty -> .)
    LIMIT           reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    ascdesc                        shift and go to state 825
    empty                          shift and go to state 824

state 707

    (395) indexinstr -> CREATE INDEX ID ON ID USING HASH . PARIZQ ID PARDER PTCOMA

    PARIZQ          shift and go to state 826


state 708

    (398) indexinstr -> CREATE UNIQUE INDEX ID ON ID PARIZQ . columnas PARDER PTCOMA
    (56) columnas -> . columnas COMA ID
    (57) columnas -> . ID

    ID              shift and go to state 398

    columnas                       shift and go to state 827

state 709

    (411) plsql_instr -> CREATE procedfunct ID PARIZQ parametrosfunc PARDER tiporetorno . cuerpofuncion
    (426) cuerpofuncion -> . CADDOLAR declaraciones cuerpo CADDOLAR LANGUAGE PLPGSQL PTCOMA
    (427) cuerpofuncion -> . CADDOLAR declaraciones cuerpo CADDOLAR PTCOMA

    CADDOLAR        shift and go to state 829

    cuerpofuncion                  shift and go to state 828

state 710

    (414) tiporetorno -> RETURNS . type_column1 AS
    (489) type_column1 -> . SMALLINT
    (490) type_column1 -> . INTEGER
    (491) type_column1 -> . BIGINT
    (492) type_column1 -> . RDECIMAL
    (493) type_column1 -> . RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER
    (494) type_column1 -> . NUMERIC
    (495) type_column1 -> . NUMERIC PARIZQ ENTERO PARDER
    (496) type_column1 -> . REAL
    (497) type_column1 -> . FLOAT
    (498) type_column1 -> . INT
    (499) type_column1 -> . DOUBLE
    (500) type_column1 -> . MONEY
    (501) type_column1 -> . VARCHAR
    (502) type_column1 -> . VARCHAR PARIZQ ENTERO PARDER
    (503) type_column1 -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (504) type_column1 -> . CHARACTER PARIZQ ENTERO PARDER
    (505) type_column1 -> . CHAR
    (506) type_column1 -> . CHAR PARIZQ ENTERO PARDER
    (507) type_column1 -> . TEXT
    (508) type_column1 -> . TIMESTAMP
    (509) type_column1 -> . TIMESTAMP PARIZQ ENTERO PARDER
    (510) type_column1 -> . DATE
    (511) type_column1 -> . TIME
    (512) type_column1 -> . BOOLEAN
    (513) type_column1 -> . ID
    (514) type_column1 -> . TIME PARIZQ ENTERO PARDER
    (515) type_column1 -> . RECORD
    (516) type_column1 -> . TABLE PARIZQ parametrosfunc PARDER

    SMALLINT        shift and go to state 359
    INTEGER         shift and go to state 360
    BIGINT          shift and go to state 361
    RDECIMAL        shift and go to state 362
    NUMERIC         shift and go to state 363
    REAL            shift and go to state 364
    FLOAT           shift and go to state 365
    INT             shift and go to state 366
    DOUBLE          shift and go to state 367
    MONEY           shift and go to state 368
    VARCHAR         shift and go to state 369
    CHARACTER       shift and go to state 370
    CHAR            shift and go to state 371
    TEXT            shift and go to state 372
    TIMESTAMP       shift and go to state 373
    DATE            shift and go to state 374
    TIME            shift and go to state 375
    BOOLEAN         shift and go to state 376
    ID              shift and go to state 540
    RECORD          shift and go to state 377
    TABLE           shift and go to state 378

    type_column1                   shift and go to state 830

state 711

    (416) tiporetorno -> AS .

    CADDOLAR        reduce using rule 416 (tiporetorno -> AS .)


state 712

    (415) tiporetorno -> LANGUAGE . PLPGSQL AS

    PLPGSQL         shift and go to state 831


state 713

    (417) tiporetorno -> empty .

    CADDOLAR        reduce using rule 417 (tiporetorno -> empty .)


state 714

    (420) listaparametrosfunc -> listaparametrosfunc COMA parfunc .

    COMA            reduce using rule 420 (listaparametrosfunc -> listaparametrosfunc COMA parfunc .)
    PARDER          reduce using rule 420 (listaparametrosfunc -> listaparametrosfunc COMA parfunc .)


state 715

    (422) parfunc -> OUT ID type_column1 .

    COMA            reduce using rule 422 (parfunc -> OUT ID type_column1 .)
    PARDER          reduce using rule 422 (parfunc -> OUT ID type_column1 .)


state 716

    (423) parfunc -> INOUT ID type_column1 .

    COMA            reduce using rule 423 (parfunc -> INOUT ID type_column1 .)
    PARDER          reduce using rule 423 (parfunc -> INOUT ID type_column1 .)


state 717

    (493) type_column1 -> RDECIMAL PARIZQ ENTERO . COMA ENTERO PARDER

    COMA            shift and go to state 832


state 718

    (495) type_column1 -> NUMERIC PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 833


state 719

    (502) type_column1 -> VARCHAR PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 834


state 720

    (503) type_column1 -> CHARACTER VARYING PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 835


state 721

    (504) type_column1 -> CHARACTER PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 836


state 722

    (506) type_column1 -> CHAR PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 837


state 723

    (509) type_column1 -> TIMESTAMP PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 838


state 724

    (514) type_column1 -> TIME PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 839


state 725

    (516) type_column1 -> TABLE PARIZQ parametrosfunc . PARDER

    PARDER          shift and go to state 840


state 726

    (39) alterDB_instr -> ALTER DATABASE ID OWNER TO owner_users PTCOMA .

    $end            reduce using rule 39 (alterDB_instr -> ALTER DATABASE ID OWNER TO owner_users PTCOMA .)


state 727

    (302) alter_instr -> ALTER TABLE ID ALTER COLUMN ID SET . NOT NULL

    NOT             shift and go to state 841


state 728

    (308) list_alter_column -> ALTER COLUMN ID TYPE . type_column
    (311) type_column -> . SMALLINT
    (312) type_column -> . INTEGER
    (313) type_column -> . BIGINT
    (314) type_column -> . RDECIMAL
    (315) type_column -> . RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER
    (316) type_column -> . NUMERIC
    (317) type_column -> . REAL
    (318) type_column -> . FLOAT
    (319) type_column -> . INT
    (320) type_column -> . DOUBLE
    (321) type_column -> . MONEY
    (322) type_column -> . VARCHAR PARIZQ ENTERO PARDER
    (323) type_column -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (324) type_column -> . CHARACTER PARIZQ ENTERO PARDER
    (325) type_column -> . CHAR PARIZQ ENTERO PARDER
    (326) type_column -> . TEXT
    (327) type_column -> . TIMESTAMP
    (328) type_column -> . TIMESTAMP PARIZQ ENTERO PARDER
    (329) type_column -> . DATE
    (330) type_column -> . TIME
    (331) type_column -> . BOOLEAN
    (332) type_column -> . ID
    (333) type_column -> . TIME PARIZQ ENTERO PARDER
    (334) type_column -> . INTERVAL field

    SMALLINT        shift and go to state 514
    INTEGER         shift and go to state 515
    BIGINT          shift and go to state 516
    RDECIMAL        shift and go to state 517
    NUMERIC         shift and go to state 518
    REAL            shift and go to state 519
    FLOAT           shift and go to state 520
    INT             shift and go to state 521
    DOUBLE          shift and go to state 522
    MONEY           shift and go to state 523
    VARCHAR         shift and go to state 524
    CHARACTER       shift and go to state 525
    CHAR            shift and go to state 526
    TEXT            shift and go to state 527
    TIMESTAMP       shift and go to state 528
    DATE            shift and go to state 529
    TIME            shift and go to state 530
    BOOLEAN         shift and go to state 531
    ID              shift and go to state 512
    INTERVAL        shift and go to state 532

    type_column                    shift and go to state 842

state 729

    (310) list_columns -> ID type_column .

    COMA            reduce using rule 310 (list_columns -> ID type_column .)
    PTCOMA          reduce using rule 310 (list_columns -> ID type_column .)


state 730

    (309) list_columns -> list_columns COMA . ID type_column

    ID              shift and go to state 843


state 731

    (299) alter_instr -> ALTER TABLE ID ADD CHECK PARIZQ condicion . PARDER

    PARDER          shift and go to state 844


state 732

    (300) alter_instr -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE . PARIZQ ID PARDER

    PARIZQ          shift and go to state 845


state 733

    (301) alter_instr -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ . ID PARDER REFERENCES ID

    ID              shift and go to state 846


state 734

    (304) alter_instr -> ALTER TABLE ID RENAME COLUMN ID TO . ID

    ID              shift and go to state 847


state 735

    (307) list_alter_column -> list_alter_column COMA ALTER COLUMN . ID TYPE type_column

    ID              shift and go to state 848


state 736

    (402) alterindex -> ALTER INDEX IF EXISTS ID ID eoi . PTCOMA

    PTCOMA          shift and go to state 849


state 737

    (48) insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER . PTCOMA

    PTCOMA          shift and go to state 850


state 738

    (50) parametros -> parametros COMA . parametroinsert
    (52) parametroinsert -> . DEFAULT
    (53) parametroinsert -> . NOW PARIZQ PARDER
    (54) parametroinsert -> . MD5 PARIZQ cualquiercadena PARDER
    (55) parametroinsert -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    DEFAULT         shift and go to state 575
    NOW             shift and go to state 576
    MD5             shift and go to state 577
    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    parametroinsert                shift and go to state 851
    cualquiercadena                shift and go to state 239
    expresion                      shift and go to state 578
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 739

    (53) parametroinsert -> NOW PARIZQ . PARDER

    PARDER          shift and go to state 852


state 740

    (54) parametroinsert -> MD5 PARIZQ . cualquiercadena PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246

    cualquiercadena                shift and go to state 853

state 741

    (49) insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES . PARIZQ parametros PARDER PTCOMA

    PARIZQ          shift and go to state 854


state 742

    (56) columnas -> columnas COMA ID .

    PARDER          reduce using rule 56 (columnas -> columnas COMA ID .)
    COMA            reduce using rule 56 (columnas -> columnas COMA ID .)


state 743

    (59) update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .

    $end            reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    RAISE           reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    ID              reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    RETURN          reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    EXECUTE         reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    GET             reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    NULL            reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    IF              reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    CASE            reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    COMMIT          reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    ROLLBACK        reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    INSERT          reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    UPDATE          reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    ALTER           reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    CREATE          reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    DROP            reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    DELETE          reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    TRUNCATE        reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    DECLARE         reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    SELECT          reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    BEGIN           reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    END             reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    ELSE            reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    ELSIF           reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)
    WHEN            reduce using rule 59 (update_instr -> UPDATE ID SET asignaciones WHERE condiciones PTCOMA .)


state 744

    (195) condiciones -> condiciones AND condicion .

    PTCOMA          reduce using rule 195 (condiciones -> condiciones AND condicion .)
    AND             reduce using rule 195 (condiciones -> condiciones AND condicion .)
    OR              reduce using rule 195 (condiciones -> condiciones AND condicion .)
    PARDER          reduce using rule 195 (condiciones -> condiciones AND condicion .)
    THEN            reduce using rule 195 (condiciones -> condiciones AND condicion .)


state 745

    (196) condiciones -> condiciones OR condicion .

    PTCOMA          reduce using rule 196 (condiciones -> condiciones OR condicion .)
    AND             reduce using rule 196 (condiciones -> condiciones OR condicion .)
    OR              reduce using rule 196 (condiciones -> condiciones OR condicion .)
    PARDER          reduce using rule 196 (condiciones -> condiciones OR condicion .)
    THEN            reduce using rule 196 (condiciones -> condiciones OR condicion .)


state 746

    (223) expresionaritmetica -> PARIZQ . expresionaritmetica PARDER
    (213) expresion -> PARIZQ . select_instr1 PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    SELECT          shift and go to state 102
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 412
    select_instr1                  shift and go to state 411
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 747

    (197) condiciones -> NOT PARIZQ condiciones . PARDER
    (195) condiciones -> condiciones . AND condicion
    (196) condiciones -> condiciones . OR condicion

    PARDER          shift and go to state 855
    AND             shift and go to state 585
    OR              shift and go to state 586


state 748

    (223) expresionaritmetica -> PARIZQ expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica
    (209) expresion -> expresionaritmetica .

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 597
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421
    MENQUE          reduce using rule 209 (expresion -> expresionaritmetica .)
    MAYQUE          reduce using rule 209 (expresion -> expresionaritmetica .)
    MENIGUAL        reduce using rule 209 (expresion -> expresionaritmetica .)
    MAYIGUAL        reduce using rule 209 (expresion -> expresionaritmetica .)
    IGUAL           reduce using rule 209 (expresion -> expresionaritmetica .)
    DIFERENTE       reduce using rule 209 (expresion -> expresionaritmetica .)
    AND             reduce using rule 209 (expresion -> expresionaritmetica .)
    OR              reduce using rule 209 (expresion -> expresionaritmetica .)

  ! PARDER          [ reduce using rule 209 (expresion -> expresionaritmetica .) ]


state 749

    (200) condicion -> expresion MENQUE expresion .

    PTCOMA          reduce using rule 200 (condicion -> expresion MENQUE expresion .)
    AND             reduce using rule 200 (condicion -> expresion MENQUE expresion .)
    OR              reduce using rule 200 (condicion -> expresion MENQUE expresion .)
    PARDER          reduce using rule 200 (condicion -> expresion MENQUE expresion .)
    THEN            reduce using rule 200 (condicion -> expresion MENQUE expresion .)
    GROUP           reduce using rule 200 (condicion -> expresion MENQUE expresion .)
    ORDER           reduce using rule 200 (condicion -> expresion MENQUE expresion .)
    UNION           reduce using rule 200 (condicion -> expresion MENQUE expresion .)
    INTERSECT       reduce using rule 200 (condicion -> expresion MENQUE expresion .)
    EXCEPT          reduce using rule 200 (condicion -> expresion MENQUE expresion .)
    CSIMPLE         reduce using rule 200 (condicion -> expresion MENQUE expresion .)


state 750

    (201) condicion -> expresion MAYQUE expresion .

    PTCOMA          reduce using rule 201 (condicion -> expresion MAYQUE expresion .)
    AND             reduce using rule 201 (condicion -> expresion MAYQUE expresion .)
    OR              reduce using rule 201 (condicion -> expresion MAYQUE expresion .)
    PARDER          reduce using rule 201 (condicion -> expresion MAYQUE expresion .)
    THEN            reduce using rule 201 (condicion -> expresion MAYQUE expresion .)
    GROUP           reduce using rule 201 (condicion -> expresion MAYQUE expresion .)
    ORDER           reduce using rule 201 (condicion -> expresion MAYQUE expresion .)
    UNION           reduce using rule 201 (condicion -> expresion MAYQUE expresion .)
    INTERSECT       reduce using rule 201 (condicion -> expresion MAYQUE expresion .)
    EXCEPT          reduce using rule 201 (condicion -> expresion MAYQUE expresion .)
    CSIMPLE         reduce using rule 201 (condicion -> expresion MAYQUE expresion .)


state 751

    (202) condicion -> expresion MENIGUAL expresion .

    PTCOMA          reduce using rule 202 (condicion -> expresion MENIGUAL expresion .)
    AND             reduce using rule 202 (condicion -> expresion MENIGUAL expresion .)
    OR              reduce using rule 202 (condicion -> expresion MENIGUAL expresion .)
    PARDER          reduce using rule 202 (condicion -> expresion MENIGUAL expresion .)
    THEN            reduce using rule 202 (condicion -> expresion MENIGUAL expresion .)
    GROUP           reduce using rule 202 (condicion -> expresion MENIGUAL expresion .)
    ORDER           reduce using rule 202 (condicion -> expresion MENIGUAL expresion .)
    UNION           reduce using rule 202 (condicion -> expresion MENIGUAL expresion .)
    INTERSECT       reduce using rule 202 (condicion -> expresion MENIGUAL expresion .)
    EXCEPT          reduce using rule 202 (condicion -> expresion MENIGUAL expresion .)
    CSIMPLE         reduce using rule 202 (condicion -> expresion MENIGUAL expresion .)


state 752

    (203) condicion -> expresion MAYIGUAL expresion .

    PTCOMA          reduce using rule 203 (condicion -> expresion MAYIGUAL expresion .)
    AND             reduce using rule 203 (condicion -> expresion MAYIGUAL expresion .)
    OR              reduce using rule 203 (condicion -> expresion MAYIGUAL expresion .)
    PARDER          reduce using rule 203 (condicion -> expresion MAYIGUAL expresion .)
    THEN            reduce using rule 203 (condicion -> expresion MAYIGUAL expresion .)
    GROUP           reduce using rule 203 (condicion -> expresion MAYIGUAL expresion .)
    ORDER           reduce using rule 203 (condicion -> expresion MAYIGUAL expresion .)
    UNION           reduce using rule 203 (condicion -> expresion MAYIGUAL expresion .)
    INTERSECT       reduce using rule 203 (condicion -> expresion MAYIGUAL expresion .)
    EXCEPT          reduce using rule 203 (condicion -> expresion MAYIGUAL expresion .)
    CSIMPLE         reduce using rule 203 (condicion -> expresion MAYIGUAL expresion .)


state 753

    (204) condicion -> expresion IGUAL expresion .

    PTCOMA          reduce using rule 204 (condicion -> expresion IGUAL expresion .)
    AND             reduce using rule 204 (condicion -> expresion IGUAL expresion .)
    OR              reduce using rule 204 (condicion -> expresion IGUAL expresion .)
    PARDER          reduce using rule 204 (condicion -> expresion IGUAL expresion .)
    THEN            reduce using rule 204 (condicion -> expresion IGUAL expresion .)
    GROUP           reduce using rule 204 (condicion -> expresion IGUAL expresion .)
    ORDER           reduce using rule 204 (condicion -> expresion IGUAL expresion .)
    UNION           reduce using rule 204 (condicion -> expresion IGUAL expresion .)
    INTERSECT       reduce using rule 204 (condicion -> expresion IGUAL expresion .)
    EXCEPT          reduce using rule 204 (condicion -> expresion IGUAL expresion .)
    CSIMPLE         reduce using rule 204 (condicion -> expresion IGUAL expresion .)


state 754

    (205) condicion -> expresion DIFERENTE expresion .

    PTCOMA          reduce using rule 205 (condicion -> expresion DIFERENTE expresion .)
    AND             reduce using rule 205 (condicion -> expresion DIFERENTE expresion .)
    OR              reduce using rule 205 (condicion -> expresion DIFERENTE expresion .)
    PARDER          reduce using rule 205 (condicion -> expresion DIFERENTE expresion .)
    THEN            reduce using rule 205 (condicion -> expresion DIFERENTE expresion .)
    GROUP           reduce using rule 205 (condicion -> expresion DIFERENTE expresion .)
    ORDER           reduce using rule 205 (condicion -> expresion DIFERENTE expresion .)
    UNION           reduce using rule 205 (condicion -> expresion DIFERENTE expresion .)
    INTERSECT       reduce using rule 205 (condicion -> expresion DIFERENTE expresion .)
    EXCEPT          reduce using rule 205 (condicion -> expresion DIFERENTE expresion .)
    CSIMPLE         reduce using rule 205 (condicion -> expresion DIFERENTE expresion .)


state 755

    (80) selectfrom -> FROM listatablasselect whereselect groupby . orderby
    (178) orderby -> . ORDER BY listaorderby
    (179) orderby -> . ORDER BY listaorderby instrlimit
    (180) orderby -> . empty
    (546) empty -> .

    ORDER           shift and go to state 857
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    orderby                        shift and go to state 856
    empty                          shift and go to state 858

state 756

    (157) groupby -> GROUP . BY listagroupby
    (158) groupby -> GROUP . BY listagroupby HAVING condicioneshaving

    BY              shift and go to state 859


state 757

    (159) groupby -> empty .

    ORDER           reduce using rule 159 (groupby -> empty .)
    UNION           reduce using rule 159 (groupby -> empty .)
    INTERSECT       reduce using rule 159 (groupby -> empty .)
    EXCEPT          reduce using rule 159 (groupby -> empty .)
    PTCOMA          reduce using rule 159 (groupby -> empty .)
    PARDER          reduce using rule 159 (groupby -> empty .)
    CSIMPLE         reduce using rule 159 (groupby -> empty .)


state 758

    (117) listatablasselect -> listatablasselect COMA tablaselect .

    COMA            reduce using rule 117 (listatablasselect -> listatablasselect COMA tablaselect .)
    WHERE           reduce using rule 117 (listatablasselect -> listatablasselect COMA tablaselect .)
    GROUP           reduce using rule 117 (listatablasselect -> listatablasselect COMA tablaselect .)
    ORDER           reduce using rule 117 (listatablasselect -> listatablasselect COMA tablaselect .)
    UNION           reduce using rule 117 (listatablasselect -> listatablasselect COMA tablaselect .)
    INTERSECT       reduce using rule 117 (listatablasselect -> listatablasselect COMA tablaselect .)
    EXCEPT          reduce using rule 117 (listatablasselect -> listatablasselect COMA tablaselect .)
    PTCOMA          reduce using rule 117 (listatablasselect -> listatablasselect COMA tablaselect .)
    PARDER          reduce using rule 117 (listatablasselect -> listatablasselect COMA tablaselect .)
    CSIMPLE         reduce using rule 117 (listatablasselect -> listatablasselect COMA tablaselect .)


state 759

    (128) whereselect -> WHERE condicioneswhere .
    (130) condicioneswhere -> condicioneswhere . OR condicionwhere
    (131) condicioneswhere -> condicioneswhere . AND condicionwhere

    GROUP           reduce using rule 128 (whereselect -> WHERE condicioneswhere .)
    ORDER           reduce using rule 128 (whereselect -> WHERE condicioneswhere .)
    UNION           reduce using rule 128 (whereselect -> WHERE condicioneswhere .)
    INTERSECT       reduce using rule 128 (whereselect -> WHERE condicioneswhere .)
    EXCEPT          reduce using rule 128 (whereselect -> WHERE condicioneswhere .)
    PTCOMA          reduce using rule 128 (whereselect -> WHERE condicioneswhere .)
    PARDER          reduce using rule 128 (whereselect -> WHERE condicioneswhere .)
    CSIMPLE         reduce using rule 128 (whereselect -> WHERE condicioneswhere .)
    OR              shift and go to state 860
    AND             shift and go to state 861


state 760

    (132) condicioneswhere -> condicionwhere .

    OR              reduce using rule 132 (condicioneswhere -> condicionwhere .)
    AND             reduce using rule 132 (condicioneswhere -> condicionwhere .)
    GROUP           reduce using rule 132 (condicioneswhere -> condicionwhere .)
    ORDER           reduce using rule 132 (condicioneswhere -> condicionwhere .)
    UNION           reduce using rule 132 (condicioneswhere -> condicionwhere .)
    INTERSECT       reduce using rule 132 (condicioneswhere -> condicionwhere .)
    EXCEPT          reduce using rule 132 (condicioneswhere -> condicionwhere .)
    PTCOMA          reduce using rule 132 (condicioneswhere -> condicionwhere .)
    PARDER          reduce using rule 132 (condicioneswhere -> condicionwhere .)
    CSIMPLE         reduce using rule 132 (condicioneswhere -> condicionwhere .)


state 761

    (133) condicioneswhere -> NOT . PARIZQ condicioneswhere PARDER
    (147) notwhereexists -> NOT . EXISTS PARIZQ select_instr1 PARDER

    PARIZQ          shift and go to state 862
    EXISTS          shift and go to state 863


state 762

    (134) condicionwhere -> whereexists .

    OR              reduce using rule 134 (condicionwhere -> whereexists .)
    AND             reduce using rule 134 (condicionwhere -> whereexists .)
    GROUP           reduce using rule 134 (condicionwhere -> whereexists .)
    ORDER           reduce using rule 134 (condicionwhere -> whereexists .)
    UNION           reduce using rule 134 (condicionwhere -> whereexists .)
    INTERSECT       reduce using rule 134 (condicionwhere -> whereexists .)
    EXCEPT          reduce using rule 134 (condicionwhere -> whereexists .)
    PTCOMA          reduce using rule 134 (condicionwhere -> whereexists .)
    PARDER          reduce using rule 134 (condicionwhere -> whereexists .)
    CSIMPLE         reduce using rule 134 (condicionwhere -> whereexists .)


state 763

    (135) condicionwhere -> notwhereexists .

    OR              reduce using rule 135 (condicionwhere -> notwhereexists .)
    AND             reduce using rule 135 (condicionwhere -> notwhereexists .)
    GROUP           reduce using rule 135 (condicionwhere -> notwhereexists .)
    ORDER           reduce using rule 135 (condicionwhere -> notwhereexists .)
    UNION           reduce using rule 135 (condicionwhere -> notwhereexists .)
    INTERSECT       reduce using rule 135 (condicionwhere -> notwhereexists .)
    EXCEPT          reduce using rule 135 (condicionwhere -> notwhereexists .)
    PTCOMA          reduce using rule 135 (condicionwhere -> notwhereexists .)
    PARDER          reduce using rule 135 (condicionwhere -> notwhereexists .)
    CSIMPLE         reduce using rule 135 (condicionwhere -> notwhereexists .)


state 764

    (136) condicionwhere -> wherenotin .

    OR              reduce using rule 136 (condicionwhere -> wherenotin .)
    AND             reduce using rule 136 (condicionwhere -> wherenotin .)
    GROUP           reduce using rule 136 (condicionwhere -> wherenotin .)
    ORDER           reduce using rule 136 (condicionwhere -> wherenotin .)
    UNION           reduce using rule 136 (condicionwhere -> wherenotin .)
    INTERSECT       reduce using rule 136 (condicionwhere -> wherenotin .)
    EXCEPT          reduce using rule 136 (condicionwhere -> wherenotin .)
    PTCOMA          reduce using rule 136 (condicionwhere -> wherenotin .)
    PARDER          reduce using rule 136 (condicionwhere -> wherenotin .)
    CSIMPLE         reduce using rule 136 (condicionwhere -> wherenotin .)


state 765

    (137) condicionwhere -> wherein .

    OR              reduce using rule 137 (condicionwhere -> wherein .)
    AND             reduce using rule 137 (condicionwhere -> wherein .)
    GROUP           reduce using rule 137 (condicionwhere -> wherein .)
    ORDER           reduce using rule 137 (condicionwhere -> wherein .)
    UNION           reduce using rule 137 (condicionwhere -> wherein .)
    INTERSECT       reduce using rule 137 (condicionwhere -> wherein .)
    EXCEPT          reduce using rule 137 (condicionwhere -> wherein .)
    PTCOMA          reduce using rule 137 (condicionwhere -> wherein .)
    PARDER          reduce using rule 137 (condicionwhere -> wherein .)
    CSIMPLE         reduce using rule 137 (condicionwhere -> wherein .)


state 766

    (138) condicionwhere -> wherenotlike .

    OR              reduce using rule 138 (condicionwhere -> wherenotlike .)
    AND             reduce using rule 138 (condicionwhere -> wherenotlike .)
    GROUP           reduce using rule 138 (condicionwhere -> wherenotlike .)
    ORDER           reduce using rule 138 (condicionwhere -> wherenotlike .)
    UNION           reduce using rule 138 (condicionwhere -> wherenotlike .)
    INTERSECT       reduce using rule 138 (condicionwhere -> wherenotlike .)
    EXCEPT          reduce using rule 138 (condicionwhere -> wherenotlike .)
    PTCOMA          reduce using rule 138 (condicionwhere -> wherenotlike .)
    PARDER          reduce using rule 138 (condicionwhere -> wherenotlike .)
    CSIMPLE         reduce using rule 138 (condicionwhere -> wherenotlike .)


state 767

    (139) condicionwhere -> wherelike .

    OR              reduce using rule 139 (condicionwhere -> wherelike .)
    AND             reduce using rule 139 (condicionwhere -> wherelike .)
    GROUP           reduce using rule 139 (condicionwhere -> wherelike .)
    ORDER           reduce using rule 139 (condicionwhere -> wherelike .)
    UNION           reduce using rule 139 (condicionwhere -> wherelike .)
    INTERSECT       reduce using rule 139 (condicionwhere -> wherelike .)
    EXCEPT          reduce using rule 139 (condicionwhere -> wherelike .)
    PTCOMA          reduce using rule 139 (condicionwhere -> wherelike .)
    PARDER          reduce using rule 139 (condicionwhere -> wherelike .)
    CSIMPLE         reduce using rule 139 (condicionwhere -> wherelike .)


state 768

    (140) condicionwhere -> wheresubstring .

    OR              reduce using rule 140 (condicionwhere -> wheresubstring .)
    AND             reduce using rule 140 (condicionwhere -> wheresubstring .)
    GROUP           reduce using rule 140 (condicionwhere -> wheresubstring .)
    ORDER           reduce using rule 140 (condicionwhere -> wheresubstring .)
    UNION           reduce using rule 140 (condicionwhere -> wheresubstring .)
    INTERSECT       reduce using rule 140 (condicionwhere -> wheresubstring .)
    EXCEPT          reduce using rule 140 (condicionwhere -> wheresubstring .)
    PTCOMA          reduce using rule 140 (condicionwhere -> wheresubstring .)
    PARDER          reduce using rule 140 (condicionwhere -> wheresubstring .)
    CSIMPLE         reduce using rule 140 (condicionwhere -> wheresubstring .)


state 769

    (141) condicionwhere -> between_state .

    OR              reduce using rule 141 (condicionwhere -> between_state .)
    AND             reduce using rule 141 (condicionwhere -> between_state .)
    GROUP           reduce using rule 141 (condicionwhere -> between_state .)
    ORDER           reduce using rule 141 (condicionwhere -> between_state .)
    UNION           reduce using rule 141 (condicionwhere -> between_state .)
    INTERSECT       reduce using rule 141 (condicionwhere -> between_state .)
    EXCEPT          reduce using rule 141 (condicionwhere -> between_state .)
    PTCOMA          reduce using rule 141 (condicionwhere -> between_state .)
    PARDER          reduce using rule 141 (condicionwhere -> between_state .)
    CSIMPLE         reduce using rule 141 (condicionwhere -> between_state .)


state 770

    (142) condicionwhere -> not_between_state .

    OR              reduce using rule 142 (condicionwhere -> not_between_state .)
    AND             reduce using rule 142 (condicionwhere -> not_between_state .)
    GROUP           reduce using rule 142 (condicionwhere -> not_between_state .)
    ORDER           reduce using rule 142 (condicionwhere -> not_between_state .)
    UNION           reduce using rule 142 (condicionwhere -> not_between_state .)
    INTERSECT       reduce using rule 142 (condicionwhere -> not_between_state .)
    EXCEPT          reduce using rule 142 (condicionwhere -> not_between_state .)
    PTCOMA          reduce using rule 142 (condicionwhere -> not_between_state .)
    PARDER          reduce using rule 142 (condicionwhere -> not_between_state .)
    CSIMPLE         reduce using rule 142 (condicionwhere -> not_between_state .)


state 771

    (143) condicionwhere -> predicates_state .

    OR              reduce using rule 143 (condicionwhere -> predicates_state .)
    AND             reduce using rule 143 (condicionwhere -> predicates_state .)
    GROUP           reduce using rule 143 (condicionwhere -> predicates_state .)
    ORDER           reduce using rule 143 (condicionwhere -> predicates_state .)
    UNION           reduce using rule 143 (condicionwhere -> predicates_state .)
    INTERSECT       reduce using rule 143 (condicionwhere -> predicates_state .)
    EXCEPT          reduce using rule 143 (condicionwhere -> predicates_state .)
    PTCOMA          reduce using rule 143 (condicionwhere -> predicates_state .)
    PARDER          reduce using rule 143 (condicionwhere -> predicates_state .)
    CSIMPLE         reduce using rule 143 (condicionwhere -> predicates_state .)


state 772

    (144) condicionwhere -> is_distinct_state .

    OR              reduce using rule 144 (condicionwhere -> is_distinct_state .)
    AND             reduce using rule 144 (condicionwhere -> is_distinct_state .)
    GROUP           reduce using rule 144 (condicionwhere -> is_distinct_state .)
    ORDER           reduce using rule 144 (condicionwhere -> is_distinct_state .)
    UNION           reduce using rule 144 (condicionwhere -> is_distinct_state .)
    INTERSECT       reduce using rule 144 (condicionwhere -> is_distinct_state .)
    EXCEPT          reduce using rule 144 (condicionwhere -> is_distinct_state .)
    PTCOMA          reduce using rule 144 (condicionwhere -> is_distinct_state .)
    PARDER          reduce using rule 144 (condicionwhere -> is_distinct_state .)
    CSIMPLE         reduce using rule 144 (condicionwhere -> is_distinct_state .)


state 773

    (145) condicionwhere -> condicion .

    OR              reduce using rule 145 (condicionwhere -> condicion .)
    AND             reduce using rule 145 (condicionwhere -> condicion .)
    GROUP           reduce using rule 145 (condicionwhere -> condicion .)
    ORDER           reduce using rule 145 (condicionwhere -> condicion .)
    UNION           reduce using rule 145 (condicionwhere -> condicion .)
    INTERSECT       reduce using rule 145 (condicionwhere -> condicion .)
    EXCEPT          reduce using rule 145 (condicionwhere -> condicion .)
    PTCOMA          reduce using rule 145 (condicionwhere -> condicion .)
    PARDER          reduce using rule 145 (condicionwhere -> condicion .)
    CSIMPLE         reduce using rule 145 (condicionwhere -> condicion .)


state 774

    (146) whereexists -> EXISTS . PARIZQ select_instr1 PARDER

    PARIZQ          shift and go to state 864


state 775

    (150) wherenotin -> cualquiernumero . NOT IN PARIZQ select_instr1 PARDER
    (148) wherein -> cualquiernumero . IN PARIZQ select_instr1 PARDER
    (369) between_state -> cualquiernumero . BETWEEN valores AND valores
    (371) not_between_state -> cualquiernumero . NOT BETWEEN valores AND valores
    (379) valores -> cualquiernumero .
    (221) expresionaritmetica -> cualquiernumero .

    NOT             shift and go to state 865
    IN              shift and go to state 866
    BETWEEN         shift and go to state 867
    IS              reduce using rule 379 (valores -> cualquiernumero .)
    ISNULL          reduce using rule 379 (valores -> cualquiernumero .)
    NOTNULL         reduce using rule 379 (valores -> cualquiernumero .)
    MAS             reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    MENOS           reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    ASTERISCO       reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    DIVIDIDO        reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    MODULO          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    EXPONENTE       reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    MENQUE          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    MAYQUE          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    MENIGUAL        reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    MAYIGUAL        reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    IGUAL           reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    DIFERENTE       reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    OR              reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    AND             reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    GROUP           reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    ORDER           reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    UNION           reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    INTERSECT       reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    EXCEPT          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    PTCOMA          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    PARDER          reduce using rule 221 (expresionaritmetica -> cualquiernumero .)
    CSIMPLE         reduce using rule 221 (expresionaritmetica -> cualquiernumero .)


state 776

    (151) wherenotin -> cadenastodas . NOT IN PARIZQ select_instr1 PARDER
    (149) wherein -> cadenastodas . IN PARIZQ select_instr1 PARDER
    (152) wherenotlike -> cadenastodas . NOT LIKE CADENALIKE
    (153) wherelike -> cadenastodas . LIKE CADENALIKE
    (370) between_state -> cadenastodas . BETWEEN valores AND valores
    (372) not_between_state -> cadenastodas . NOT BETWEEN valores AND valores

    NOT             shift and go to state 868
    IN              shift and go to state 869
    LIKE            shift and go to state 870
    BETWEEN         shift and go to state 871


state 777

    (154) wheresubstring -> SUBSTRING . PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE
    (278) func_bin_strings_2 -> SUBSTRING . PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER

    PARIZQ          shift and go to state 872


state 778

    (373) predicates_state -> valores . IS NULL
    (374) predicates_state -> valores . IS NOT NULL
    (375) predicates_state -> valores . ISNULL
    (376) predicates_state -> valores . NOTNULL
    (377) is_distinct_state -> valores . IS DISTINCT FROM valores
    (378) is_distinct_state -> valores . IS NOT DISTINCT FROM valores

    IS              shift and go to state 873
    ISNULL          shift and go to state 874
    NOTNULL         shift and go to state 875


state 779

    (155) cadenastodas -> cualquiercadena .
    (380) valores -> cualquiercadena .
    (207) expresion -> cualquiercadena .

    NOT             reduce using rule 155 (cadenastodas -> cualquiercadena .)
    IN              reduce using rule 155 (cadenastodas -> cualquiercadena .)
    LIKE            reduce using rule 155 (cadenastodas -> cualquiercadena .)
    BETWEEN         reduce using rule 155 (cadenastodas -> cualquiercadena .)
    IS              reduce using rule 380 (valores -> cualquiercadena .)
    ISNULL          reduce using rule 380 (valores -> cualquiercadena .)
    NOTNULL         reduce using rule 380 (valores -> cualquiercadena .)
    MENQUE          reduce using rule 207 (expresion -> cualquiercadena .)
    MAYQUE          reduce using rule 207 (expresion -> cualquiercadena .)
    MENIGUAL        reduce using rule 207 (expresion -> cualquiercadena .)
    MAYIGUAL        reduce using rule 207 (expresion -> cualquiercadena .)
    IGUAL           reduce using rule 207 (expresion -> cualquiercadena .)
    DIFERENTE       reduce using rule 207 (expresion -> cualquiercadena .)
    OR              reduce using rule 207 (expresion -> cualquiercadena .)
    AND             reduce using rule 207 (expresion -> cualquiercadena .)
    GROUP           reduce using rule 207 (expresion -> cualquiercadena .)
    ORDER           reduce using rule 207 (expresion -> cualquiercadena .)
    UNION           reduce using rule 207 (expresion -> cualquiercadena .)
    INTERSECT       reduce using rule 207 (expresion -> cualquiercadena .)
    EXCEPT          reduce using rule 207 (expresion -> cualquiercadena .)
    PTCOMA          reduce using rule 207 (expresion -> cualquiercadena .)
    PARDER          reduce using rule 207 (expresion -> cualquiercadena .)
    CSIMPLE         reduce using rule 207 (expresion -> cualquiercadena .)


state 780

    (156) cadenastodas -> cualquieridentificador .
    (381) valores -> cualquieridentificador .
    (222) expresionaritmetica -> cualquieridentificador .

    NOT             reduce using rule 156 (cadenastodas -> cualquieridentificador .)
    IN              reduce using rule 156 (cadenastodas -> cualquieridentificador .)
    LIKE            reduce using rule 156 (cadenastodas -> cualquieridentificador .)
    BETWEEN         reduce using rule 156 (cadenastodas -> cualquieridentificador .)
    IS              reduce using rule 381 (valores -> cualquieridentificador .)
    ISNULL          reduce using rule 381 (valores -> cualquieridentificador .)
    NOTNULL         reduce using rule 381 (valores -> cualquieridentificador .)
    MAS             reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    MENOS           reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    ASTERISCO       reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    DIVIDIDO        reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    MODULO          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    EXPONENTE       reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    MENQUE          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    MAYQUE          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    MENIGUAL        reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    MAYIGUAL        reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    IGUAL           reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    DIFERENTE       reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    OR              reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    AND             reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    GROUP           reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    ORDER           reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    UNION           reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    INTERSECT       reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    EXCEPT          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    PTCOMA          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    PARDER          reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)
    CSIMPLE         reduce using rule 222 (expresionaritmetica -> cualquieridentificador .)


state 781

    (120) tablaselect -> PARIZQ select_instr1 PARDER . alias
    (121) alias -> . ID
    (122) alias -> . CADENASIMPLE
    (123) alias -> . CADENADOBLE
    (124) alias -> . AS ID
    (125) alias -> . AS CADENASIMPLE
    (126) alias -> . AS CADENADOBLE
    (127) alias -> . empty
    (546) empty -> .

    ID              shift and go to state 258
    CADENASIMPLE    shift and go to state 261
    CADENADOBLE     shift and go to state 262
    AS              shift and go to state 263
    COMA            reduce using rule 546 (empty -> .)
    WHERE           reduce using rule 546 (empty -> .)
    GROUP           reduce using rule 546 (empty -> .)
    ORDER           reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    alias                          shift and go to state 876
    empty                          shift and go to state 264

state 782

    (102) valselect -> agregacion PARIZQ cualquieridentificador PARDER alias .

    COMA            reduce using rule 102 (valselect -> agregacion PARIZQ cualquieridentificador PARDER alias .)
    FROM            reduce using rule 102 (valselect -> agregacion PARIZQ cualquieridentificador PARDER alias .)
    UNION           reduce using rule 102 (valselect -> agregacion PARIZQ cualquieridentificador PARDER alias .)
    INTERSECT       reduce using rule 102 (valselect -> agregacion PARIZQ cualquieridentificador PARDER alias .)
    EXCEPT          reduce using rule 102 (valselect -> agregacion PARIZQ cualquieridentificador PARDER alias .)
    PTCOMA          reduce using rule 102 (valselect -> agregacion PARIZQ cualquieridentificador PARDER alias .)
    PARDER          reduce using rule 102 (valselect -> agregacion PARIZQ cualquieridentificador PARDER alias .)
    CSIMPLE         reduce using rule 102 (valselect -> agregacion PARIZQ cualquieridentificador PARDER alias .)


state 783

    (103) valselect -> COUNT PARIZQ ASTERISCO PARDER alias .

    COMA            reduce using rule 103 (valselect -> COUNT PARIZQ ASTERISCO PARDER alias .)
    FROM            reduce using rule 103 (valselect -> COUNT PARIZQ ASTERISCO PARDER alias .)
    UNION           reduce using rule 103 (valselect -> COUNT PARIZQ ASTERISCO PARDER alias .)
    INTERSECT       reduce using rule 103 (valselect -> COUNT PARIZQ ASTERISCO PARDER alias .)
    EXCEPT          reduce using rule 103 (valselect -> COUNT PARIZQ ASTERISCO PARDER alias .)
    PTCOMA          reduce using rule 103 (valselect -> COUNT PARIZQ ASTERISCO PARDER alias .)
    PARDER          reduce using rule 103 (valselect -> COUNT PARIZQ ASTERISCO PARDER alias .)
    CSIMPLE         reduce using rule 103 (valselect -> COUNT PARIZQ ASTERISCO PARDER alias .)


state 784

    (104) valselect -> COUNT PARIZQ cualquieridentificador PARDER alias .

    COMA            reduce using rule 104 (valselect -> COUNT PARIZQ cualquieridentificador PARDER alias .)
    FROM            reduce using rule 104 (valselect -> COUNT PARIZQ cualquieridentificador PARDER alias .)
    UNION           reduce using rule 104 (valselect -> COUNT PARIZQ cualquieridentificador PARDER alias .)
    INTERSECT       reduce using rule 104 (valselect -> COUNT PARIZQ cualquieridentificador PARDER alias .)
    EXCEPT          reduce using rule 104 (valselect -> COUNT PARIZQ cualquieridentificador PARDER alias .)
    PTCOMA          reduce using rule 104 (valselect -> COUNT PARIZQ cualquieridentificador PARDER alias .)
    PARDER          reduce using rule 104 (valselect -> COUNT PARIZQ cualquieridentificador PARDER alias .)
    CSIMPLE         reduce using rule 104 (valselect -> COUNT PARIZQ cualquieridentificador PARDER alias .)


state 785

    (237) funcion_matematica_s -> DIV PARIZQ expresionaritmetica COMA expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 877
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 786

    (241) funcion_matematica_s -> GCD PARIZQ expresionaritmetica COMA expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 878
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 787

    (244) funcion_matematica_s -> MOD PARIZQ expresionaritmetica COMA expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 879
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 788

    (246) funcion_matematica_s -> POWER PARIZQ expresionaritmetica COMA expresionaritmetica . PARDER
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          shift and go to state 880
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 789

    (254) explist -> expresionaritmetica COMA expresionaritmetica . COMA expresionaritmetica COMA expresionaritmetica
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    COMA            shift and go to state 881
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 790

    (278) func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero . COMA cualquiernumero PARDER

    COMA            shift and go to state 882


state 791

    (279) func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero . COMA cualquiernumero PARDER

    COMA            shift and go to state 883


state 792

    (282) func_bin_strings_4 -> GET_BYTE PARIZQ cadena COMA ENTERO . PARDER

    PARDER          shift and go to state 884


state 793

    (283) func_bin_strings_4 -> SET_BYTE PARIZQ cadena COMA ENTERO . COMA ENTERO PARDER

    COMA            shift and go to state 885


state 794

    (284) func_bin_strings_4 -> ENCODE PARIZQ cadena COMA cadena . PARDER

    PARDER          shift and go to state 886


state 795

    (285) func_bin_strings_4 -> DECODE PARIZQ cadena COMA cadena . PARDER

    PARDER          shift and go to state 887


state 796

    (382) extract_instr -> EXTRACT PARIZQ valdate FROM TIMESTAMP . CADENASIMPLE PARDER

    CADENASIMPLE    shift and go to state 888


state 797

    (389) datepart_instr -> DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL . CADENASIMPLE PARDER

    CADENASIMPLE    shift and go to state 889


state 798

    (348) attributes -> default_value null_field . constraint_field null_field primary_key
    (358) constraint_field -> . UNIQUE
    (359) constraint_field -> . CONSTRAINT ID check_unique
    (360) constraint_field -> . CHECK PARIZQ condiciones PARDER
    (361) constraint_field -> . empty
    (546) empty -> .

    UNIQUE          shift and go to state 891
    CONSTRAINT      shift and go to state 892
    CHECK           shift and go to state 893
    NULL            reduce using rule 546 (empty -> .)
    NOT             reduce using rule 546 (empty -> .)
    PRIMARY         reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    COMA            reduce using rule 546 (empty -> .)

    constraint_field               shift and go to state 890
    empty                          shift and go to state 894

state 799

    (355) null_field -> NULL .

    UNIQUE          reduce using rule 355 (null_field -> NULL .)
    CONSTRAINT      reduce using rule 355 (null_field -> NULL .)
    CHECK           reduce using rule 355 (null_field -> NULL .)
    NULL            reduce using rule 355 (null_field -> NULL .)
    NOT             reduce using rule 355 (null_field -> NULL .)
    PRIMARY         reduce using rule 355 (null_field -> NULL .)
    PARDER          reduce using rule 355 (null_field -> NULL .)
    COMA            reduce using rule 355 (null_field -> NULL .)


state 800

    (356) null_field -> NOT . NULL

    NULL            shift and go to state 895


state 801

    (357) null_field -> empty .

    UNIQUE          reduce using rule 357 (null_field -> empty .)
    CONSTRAINT      reduce using rule 357 (null_field -> empty .)
    CHECK           reduce using rule 357 (null_field -> empty .)
    NULL            reduce using rule 357 (null_field -> empty .)
    NOT             reduce using rule 357 (null_field -> empty .)
    PRIMARY         reduce using rule 357 (null_field -> empty .)
    PARDER          reduce using rule 357 (null_field -> empty .)
    COMA            reduce using rule 357 (null_field -> empty .)


state 802

    (349) default_value -> DEFAULT x_value .

    NULL            reduce using rule 349 (default_value -> DEFAULT x_value .)
    NOT             reduce using rule 349 (default_value -> DEFAULT x_value .)
    UNIQUE          reduce using rule 349 (default_value -> DEFAULT x_value .)
    CONSTRAINT      reduce using rule 349 (default_value -> DEFAULT x_value .)
    CHECK           reduce using rule 349 (default_value -> DEFAULT x_value .)
    PRIMARY         reduce using rule 349 (default_value -> DEFAULT x_value .)
    PARDER          reduce using rule 349 (default_value -> DEFAULT x_value .)
    COMA            reduce using rule 349 (default_value -> DEFAULT x_value .)


state 803

    (351) x_value -> cualquiercadena .

    NULL            reduce using rule 351 (x_value -> cualquiercadena .)
    NOT             reduce using rule 351 (x_value -> cualquiercadena .)
    UNIQUE          reduce using rule 351 (x_value -> cualquiercadena .)
    CONSTRAINT      reduce using rule 351 (x_value -> cualquiercadena .)
    CHECK           reduce using rule 351 (x_value -> cualquiercadena .)
    PRIMARY         reduce using rule 351 (x_value -> cualquiercadena .)
    PARDER          reduce using rule 351 (x_value -> cualquiercadena .)
    COMA            reduce using rule 351 (x_value -> cualquiercadena .)


state 804

    (352) x_value -> cualquiernumero .

    NULL            reduce using rule 352 (x_value -> cualquiernumero .)
    NOT             reduce using rule 352 (x_value -> cualquiernumero .)
    UNIQUE          reduce using rule 352 (x_value -> cualquiernumero .)
    CONSTRAINT      reduce using rule 352 (x_value -> cualquiernumero .)
    CHECK           reduce using rule 352 (x_value -> cualquiernumero .)
    PRIMARY         reduce using rule 352 (x_value -> cualquiernumero .)
    PARDER          reduce using rule 352 (x_value -> cualquiernumero .)
    COMA            reduce using rule 352 (x_value -> cualquiernumero .)


state 805

    (315) type_column -> RDECIMAL PARIZQ ENTERO . COMA ENTERO PARDER

    COMA            shift and go to state 896


state 806

    (322) type_column -> VARCHAR PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 897


state 807

    (323) type_column -> CHARACTER VARYING PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 898


state 808

    (324) type_column -> CHARACTER PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 899


state 809

    (325) type_column -> CHAR PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 900


state 810

    (328) type_column -> TIMESTAMP PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 901


state 811

    (333) type_column -> TIME PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 902


state 812

    (343) end_create_table -> INHERITS PARIZQ . ID PARDER PTCOMA

    ID              shift and go to state 903


state 813

    (346) key_column -> PRIMARY KEY PARIZQ listtablas . PARDER
    (69) listtablas -> listtablas . COMA ID

    PARDER          shift and go to state 904
    COMA            shift and go to state 97


state 814

    (365) create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER . PTCOMA

    PTCOMA          shift and go to state 905


state 815

    (366) list_string -> list_string COMA . cualquiercadena
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246

    cualquiercadena                shift and go to state 906

state 816

    (401) indexinstr -> CREATE INDEX ID ON ID PARIZQ ID ID . PARDER PTCOMA

    PARDER          shift and go to state 907


state 817

    (394) indexinstr -> CREATE INDEX ID ON ID PARIZQ ID PARDER . PTCOMA
    (400) indexinstr -> CREATE INDEX ID ON ID PARIZQ ID PARDER . whereselect PTCOMA
    (128) whereselect -> . WHERE condicioneswhere
    (129) whereselect -> . empty
    (546) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
    PTCOMA          shift and go to state 908
    WHERE           shift and go to state 608

  ! PTCOMA          [ reduce using rule 546 (empty -> .) ]

    whereselect                    shift and go to state 909
    empty                          shift and go to state 609

state 818

    (396) indexinstr -> CREATE INDEX ID ON ID PARIZQ ID COMA . ID PARDER PTCOMA

    ID              shift and go to state 910


state 819

    (397) indexinstr -> CREATE INDEX ID ON ID PARIZQ valororderby PARDER . PTCOMA

    PTCOMA          shift and go to state 911


state 820

    (399) indexinstr -> CREATE INDEX ID ON ID PARIZQ LOWER PARIZQ . ID PARDER PARDER PTCOMA

    ID              shift and go to state 912


state 821

    (183) valororderby -> cualquieridentificador ascdesc . anular
    (188) anular -> . NULLS LAST
    (189) anular -> . NULLS FIRST
    (190) anular -> . empty
    (546) empty -> .

    NULLS           shift and go to state 914
    PARDER          reduce using rule 546 (empty -> .)
    COMA            reduce using rule 546 (empty -> .)
    LIMIT           reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    anular                         shift and go to state 913
    empty                          shift and go to state 915

state 822

    (185) ascdesc -> DESC .

    NULLS           reduce using rule 185 (ascdesc -> DESC .)
    PARDER          reduce using rule 185 (ascdesc -> DESC .)
    COMA            reduce using rule 185 (ascdesc -> DESC .)
    LIMIT           reduce using rule 185 (ascdesc -> DESC .)
    UNION           reduce using rule 185 (ascdesc -> DESC .)
    INTERSECT       reduce using rule 185 (ascdesc -> DESC .)
    EXCEPT          reduce using rule 185 (ascdesc -> DESC .)
    PTCOMA          reduce using rule 185 (ascdesc -> DESC .)
    CSIMPLE         reduce using rule 185 (ascdesc -> DESC .)


state 823

    (186) ascdesc -> ASC .

    NULLS           reduce using rule 186 (ascdesc -> ASC .)
    PARDER          reduce using rule 186 (ascdesc -> ASC .)
    COMA            reduce using rule 186 (ascdesc -> ASC .)
    LIMIT           reduce using rule 186 (ascdesc -> ASC .)
    UNION           reduce using rule 186 (ascdesc -> ASC .)
    INTERSECT       reduce using rule 186 (ascdesc -> ASC .)
    EXCEPT          reduce using rule 186 (ascdesc -> ASC .)
    PTCOMA          reduce using rule 186 (ascdesc -> ASC .)
    CSIMPLE         reduce using rule 186 (ascdesc -> ASC .)


state 824

    (187) ascdesc -> empty .

    NULLS           reduce using rule 187 (ascdesc -> empty .)
    PARDER          reduce using rule 187 (ascdesc -> empty .)
    COMA            reduce using rule 187 (ascdesc -> empty .)
    LIMIT           reduce using rule 187 (ascdesc -> empty .)
    UNION           reduce using rule 187 (ascdesc -> empty .)
    INTERSECT       reduce using rule 187 (ascdesc -> empty .)
    EXCEPT          reduce using rule 187 (ascdesc -> empty .)
    PTCOMA          reduce using rule 187 (ascdesc -> empty .)
    CSIMPLE         reduce using rule 187 (ascdesc -> empty .)


state 825

    (184) valororderby -> cualquiernumero ascdesc . anular
    (188) anular -> . NULLS LAST
    (189) anular -> . NULLS FIRST
    (190) anular -> . empty
    (546) empty -> .

    NULLS           shift and go to state 914
    PARDER          reduce using rule 546 (empty -> .)
    COMA            reduce using rule 546 (empty -> .)
    LIMIT           reduce using rule 546 (empty -> .)
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    anular                         shift and go to state 916
    empty                          shift and go to state 915

state 826

    (395) indexinstr -> CREATE INDEX ID ON ID USING HASH PARIZQ . ID PARDER PTCOMA

    ID              shift and go to state 917


state 827

    (398) indexinstr -> CREATE UNIQUE INDEX ID ON ID PARIZQ columnas . PARDER PTCOMA
    (56) columnas -> columnas . COMA ID

    PARDER          shift and go to state 918
    COMA            shift and go to state 580


state 828

    (411) plsql_instr -> CREATE procedfunct ID PARIZQ parametrosfunc PARDER tiporetorno cuerpofuncion .

    $end            reduce using rule 411 (plsql_instr -> CREATE procedfunct ID PARIZQ parametrosfunc PARDER tiporetorno cuerpofuncion .)


state 829

    (426) cuerpofuncion -> CADDOLAR . declaraciones cuerpo CADDOLAR LANGUAGE PLPGSQL PTCOMA
    (427) cuerpofuncion -> CADDOLAR . declaraciones cuerpo CADDOLAR PTCOMA
    (428) declaraciones -> . DECLARE listadeclaraciones
    (429) declaraciones -> . empty
    (546) empty -> .

    DECLARE         shift and go to state 920
    BEGIN           reduce using rule 546 (empty -> .)

    declaraciones                  shift and go to state 919
    empty                          shift and go to state 921

state 830

    (414) tiporetorno -> RETURNS type_column1 . AS

    AS              shift and go to state 922


state 831

    (415) tiporetorno -> LANGUAGE PLPGSQL . AS

    AS              shift and go to state 923


state 832

    (493) type_column1 -> RDECIMAL PARIZQ ENTERO COMA . ENTERO PARDER

    ENTERO          shift and go to state 924


state 833

    (495) type_column1 -> NUMERIC PARIZQ ENTERO PARDER .

    COMA            reduce using rule 495 (type_column1 -> NUMERIC PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 495 (type_column1 -> NUMERIC PARIZQ ENTERO PARDER .)
    AS              reduce using rule 495 (type_column1 -> NUMERIC PARIZQ ENTERO PARDER .)
    NOT             reduce using rule 495 (type_column1 -> NUMERIC PARIZQ ENTERO PARDER .)
    DEFAULT         reduce using rule 495 (type_column1 -> NUMERIC PARIZQ ENTERO PARDER .)
    PTIGUAL         reduce using rule 495 (type_column1 -> NUMERIC PARIZQ ENTERO PARDER .)
    IGUAL           reduce using rule 495 (type_column1 -> NUMERIC PARIZQ ENTERO PARDER .)
    PTCOMA          reduce using rule 495 (type_column1 -> NUMERIC PARIZQ ENTERO PARDER .)


state 834

    (502) type_column1 -> VARCHAR PARIZQ ENTERO PARDER .

    COMA            reduce using rule 502 (type_column1 -> VARCHAR PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 502 (type_column1 -> VARCHAR PARIZQ ENTERO PARDER .)
    AS              reduce using rule 502 (type_column1 -> VARCHAR PARIZQ ENTERO PARDER .)
    NOT             reduce using rule 502 (type_column1 -> VARCHAR PARIZQ ENTERO PARDER .)
    DEFAULT         reduce using rule 502 (type_column1 -> VARCHAR PARIZQ ENTERO PARDER .)
    PTIGUAL         reduce using rule 502 (type_column1 -> VARCHAR PARIZQ ENTERO PARDER .)
    IGUAL           reduce using rule 502 (type_column1 -> VARCHAR PARIZQ ENTERO PARDER .)
    PTCOMA          reduce using rule 502 (type_column1 -> VARCHAR PARIZQ ENTERO PARDER .)


state 835

    (503) type_column1 -> CHARACTER VARYING PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 925


state 836

    (504) type_column1 -> CHARACTER PARIZQ ENTERO PARDER .

    COMA            reduce using rule 504 (type_column1 -> CHARACTER PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 504 (type_column1 -> CHARACTER PARIZQ ENTERO PARDER .)
    AS              reduce using rule 504 (type_column1 -> CHARACTER PARIZQ ENTERO PARDER .)
    NOT             reduce using rule 504 (type_column1 -> CHARACTER PARIZQ ENTERO PARDER .)
    DEFAULT         reduce using rule 504 (type_column1 -> CHARACTER PARIZQ ENTERO PARDER .)
    PTIGUAL         reduce using rule 504 (type_column1 -> CHARACTER PARIZQ ENTERO PARDER .)
    IGUAL           reduce using rule 504 (type_column1 -> CHARACTER PARIZQ ENTERO PARDER .)
    PTCOMA          reduce using rule 504 (type_column1 -> CHARACTER PARIZQ ENTERO PARDER .)


state 837

    (506) type_column1 -> CHAR PARIZQ ENTERO PARDER .

    COMA            reduce using rule 506 (type_column1 -> CHAR PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 506 (type_column1 -> CHAR PARIZQ ENTERO PARDER .)
    AS              reduce using rule 506 (type_column1 -> CHAR PARIZQ ENTERO PARDER .)
    NOT             reduce using rule 506 (type_column1 -> CHAR PARIZQ ENTERO PARDER .)
    DEFAULT         reduce using rule 506 (type_column1 -> CHAR PARIZQ ENTERO PARDER .)
    PTIGUAL         reduce using rule 506 (type_column1 -> CHAR PARIZQ ENTERO PARDER .)
    IGUAL           reduce using rule 506 (type_column1 -> CHAR PARIZQ ENTERO PARDER .)
    PTCOMA          reduce using rule 506 (type_column1 -> CHAR PARIZQ ENTERO PARDER .)


state 838

    (509) type_column1 -> TIMESTAMP PARIZQ ENTERO PARDER .

    COMA            reduce using rule 509 (type_column1 -> TIMESTAMP PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 509 (type_column1 -> TIMESTAMP PARIZQ ENTERO PARDER .)
    AS              reduce using rule 509 (type_column1 -> TIMESTAMP PARIZQ ENTERO PARDER .)
    NOT             reduce using rule 509 (type_column1 -> TIMESTAMP PARIZQ ENTERO PARDER .)
    DEFAULT         reduce using rule 509 (type_column1 -> TIMESTAMP PARIZQ ENTERO PARDER .)
    PTIGUAL         reduce using rule 509 (type_column1 -> TIMESTAMP PARIZQ ENTERO PARDER .)
    IGUAL           reduce using rule 509 (type_column1 -> TIMESTAMP PARIZQ ENTERO PARDER .)
    PTCOMA          reduce using rule 509 (type_column1 -> TIMESTAMP PARIZQ ENTERO PARDER .)


state 839

    (514) type_column1 -> TIME PARIZQ ENTERO PARDER .

    COMA            reduce using rule 514 (type_column1 -> TIME PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 514 (type_column1 -> TIME PARIZQ ENTERO PARDER .)
    AS              reduce using rule 514 (type_column1 -> TIME PARIZQ ENTERO PARDER .)
    NOT             reduce using rule 514 (type_column1 -> TIME PARIZQ ENTERO PARDER .)
    DEFAULT         reduce using rule 514 (type_column1 -> TIME PARIZQ ENTERO PARDER .)
    PTIGUAL         reduce using rule 514 (type_column1 -> TIME PARIZQ ENTERO PARDER .)
    IGUAL           reduce using rule 514 (type_column1 -> TIME PARIZQ ENTERO PARDER .)
    PTCOMA          reduce using rule 514 (type_column1 -> TIME PARIZQ ENTERO PARDER .)


state 840

    (516) type_column1 -> TABLE PARIZQ parametrosfunc PARDER .

    COMA            reduce using rule 516 (type_column1 -> TABLE PARIZQ parametrosfunc PARDER .)
    PARDER          reduce using rule 516 (type_column1 -> TABLE PARIZQ parametrosfunc PARDER .)
    AS              reduce using rule 516 (type_column1 -> TABLE PARIZQ parametrosfunc PARDER .)
    NOT             reduce using rule 516 (type_column1 -> TABLE PARIZQ parametrosfunc PARDER .)
    DEFAULT         reduce using rule 516 (type_column1 -> TABLE PARIZQ parametrosfunc PARDER .)
    PTIGUAL         reduce using rule 516 (type_column1 -> TABLE PARIZQ parametrosfunc PARDER .)
    IGUAL           reduce using rule 516 (type_column1 -> TABLE PARIZQ parametrosfunc PARDER .)
    PTCOMA          reduce using rule 516 (type_column1 -> TABLE PARIZQ parametrosfunc PARDER .)


state 841

    (302) alter_instr -> ALTER TABLE ID ALTER COLUMN ID SET NOT . NULL

    NULL            shift and go to state 926


state 842

    (308) list_alter_column -> ALTER COLUMN ID TYPE type_column .

    COMA            reduce using rule 308 (list_alter_column -> ALTER COLUMN ID TYPE type_column .)
    PTCOMA          reduce using rule 308 (list_alter_column -> ALTER COLUMN ID TYPE type_column .)


state 843

    (309) list_columns -> list_columns COMA ID . type_column
    (311) type_column -> . SMALLINT
    (312) type_column -> . INTEGER
    (313) type_column -> . BIGINT
    (314) type_column -> . RDECIMAL
    (315) type_column -> . RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER
    (316) type_column -> . NUMERIC
    (317) type_column -> . REAL
    (318) type_column -> . FLOAT
    (319) type_column -> . INT
    (320) type_column -> . DOUBLE
    (321) type_column -> . MONEY
    (322) type_column -> . VARCHAR PARIZQ ENTERO PARDER
    (323) type_column -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (324) type_column -> . CHARACTER PARIZQ ENTERO PARDER
    (325) type_column -> . CHAR PARIZQ ENTERO PARDER
    (326) type_column -> . TEXT
    (327) type_column -> . TIMESTAMP
    (328) type_column -> . TIMESTAMP PARIZQ ENTERO PARDER
    (329) type_column -> . DATE
    (330) type_column -> . TIME
    (331) type_column -> . BOOLEAN
    (332) type_column -> . ID
    (333) type_column -> . TIME PARIZQ ENTERO PARDER
    (334) type_column -> . INTERVAL field

    SMALLINT        shift and go to state 514
    INTEGER         shift and go to state 515
    BIGINT          shift and go to state 516
    RDECIMAL        shift and go to state 517
    NUMERIC         shift and go to state 518
    REAL            shift and go to state 519
    FLOAT           shift and go to state 520
    INT             shift and go to state 521
    DOUBLE          shift and go to state 522
    MONEY           shift and go to state 523
    VARCHAR         shift and go to state 524
    CHARACTER       shift and go to state 525
    CHAR            shift and go to state 526
    TEXT            shift and go to state 527
    TIMESTAMP       shift and go to state 528
    DATE            shift and go to state 529
    TIME            shift and go to state 530
    BOOLEAN         shift and go to state 531
    ID              shift and go to state 512
    INTERVAL        shift and go to state 532

    type_column                    shift and go to state 927

state 844

    (299) alter_instr -> ALTER TABLE ID ADD CHECK PARIZQ condicion PARDER .

    PTCOMA          reduce using rule 299 (alter_instr -> ALTER TABLE ID ADD CHECK PARIZQ condicion PARDER .)


state 845

    (300) alter_instr -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ . ID PARDER

    ID              shift and go to state 928


state 846

    (301) alter_instr -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID . PARDER REFERENCES ID

    PARDER          shift and go to state 929


state 847

    (304) alter_instr -> ALTER TABLE ID RENAME COLUMN ID TO ID .

    PTCOMA          reduce using rule 304 (alter_instr -> ALTER TABLE ID RENAME COLUMN ID TO ID .)


state 848

    (307) list_alter_column -> list_alter_column COMA ALTER COLUMN ID . TYPE type_column

    TYPE            shift and go to state 930


state 849

    (402) alterindex -> ALTER INDEX IF EXISTS ID ID eoi PTCOMA .

    $end            reduce using rule 402 (alterindex -> ALTER INDEX IF EXISTS ID ID eoi PTCOMA .)


state 850

    (48) insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .

    $end            reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    RAISE           reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    ID              reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    RETURN          reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    EXECUTE         reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    GET             reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    NULL            reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    IF              reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    CASE            reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    COMMIT          reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    ROLLBACK        reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    INSERT          reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    UPDATE          reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    ALTER           reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    CREATE          reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    DROP            reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    DELETE          reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    TRUNCATE        reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    DECLARE         reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    SELECT          reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    BEGIN           reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    END             reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    ELSE            reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    ELSIF           reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)
    WHEN            reduce using rule 48 (insert_instr -> INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA .)


state 851

    (50) parametros -> parametros COMA parametroinsert .

    PARDER          reduce using rule 50 (parametros -> parametros COMA parametroinsert .)
    COMA            reduce using rule 50 (parametros -> parametros COMA parametroinsert .)


state 852

    (53) parametroinsert -> NOW PARIZQ PARDER .

    PARDER          reduce using rule 53 (parametroinsert -> NOW PARIZQ PARDER .)
    COMA            reduce using rule 53 (parametroinsert -> NOW PARIZQ PARDER .)


state 853

    (54) parametroinsert -> MD5 PARIZQ cualquiercadena . PARDER

    PARDER          shift and go to state 931


state 854

    (49) insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ . parametros PARDER PTCOMA
    (50) parametros -> . parametros COMA parametroinsert
    (51) parametros -> . parametroinsert
    (52) parametroinsert -> . DEFAULT
    (53) parametroinsert -> . NOW PARIZQ PARDER
    (54) parametroinsert -> . MD5 PARIZQ cualquiercadena PARDER
    (55) parametroinsert -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    DEFAULT         shift and go to state 575
    NOW             shift and go to state 576
    MD5             shift and go to state 577
    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    parametros                     shift and go to state 932
    parametroinsert                shift and go to state 574
    cualquiercadena                shift and go to state 239
    expresion                      shift and go to state 578
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 855

    (197) condiciones -> NOT PARIZQ condiciones PARDER .

    PTCOMA          reduce using rule 197 (condiciones -> NOT PARIZQ condiciones PARDER .)
    AND             reduce using rule 197 (condiciones -> NOT PARIZQ condiciones PARDER .)
    OR              reduce using rule 197 (condiciones -> NOT PARIZQ condiciones PARDER .)
    PARDER          reduce using rule 197 (condiciones -> NOT PARIZQ condiciones PARDER .)
    THEN            reduce using rule 197 (condiciones -> NOT PARIZQ condiciones PARDER .)


state 856

    (80) selectfrom -> FROM listatablasselect whereselect groupby orderby .

    UNION           reduce using rule 80 (selectfrom -> FROM listatablasselect whereselect groupby orderby .)
    INTERSECT       reduce using rule 80 (selectfrom -> FROM listatablasselect whereselect groupby orderby .)
    EXCEPT          reduce using rule 80 (selectfrom -> FROM listatablasselect whereselect groupby orderby .)
    PTCOMA          reduce using rule 80 (selectfrom -> FROM listatablasselect whereselect groupby orderby .)
    PARDER          reduce using rule 80 (selectfrom -> FROM listatablasselect whereselect groupby orderby .)
    CSIMPLE         reduce using rule 80 (selectfrom -> FROM listatablasselect whereselect groupby orderby .)


state 857

    (178) orderby -> ORDER . BY listaorderby
    (179) orderby -> ORDER . BY listaorderby instrlimit

    BY              shift and go to state 933


state 858

    (180) orderby -> empty .

    UNION           reduce using rule 180 (orderby -> empty .)
    INTERSECT       reduce using rule 180 (orderby -> empty .)
    EXCEPT          reduce using rule 180 (orderby -> empty .)
    PTCOMA          reduce using rule 180 (orderby -> empty .)
    PARDER          reduce using rule 180 (orderby -> empty .)
    CSIMPLE         reduce using rule 180 (orderby -> empty .)


state 859

    (157) groupby -> GROUP BY . listagroupby
    (158) groupby -> GROUP BY . listagroupby HAVING condicioneshaving
    (160) listagroupby -> . listagroupby COMA valgroupby
    (161) listagroupby -> . valgroupby
    (162) valgroupby -> . cualquieridentificador
    (163) valgroupby -> . cualquiernumero
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL

    ID              shift and go to state 234
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253

    listagroupby                   shift and go to state 934
    valgroupby                     shift and go to state 935
    cualquieridentificador         shift and go to state 936
    cualquiernumero                shift and go to state 937

state 860

    (130) condicioneswhere -> condicioneswhere OR . condicionwhere
    (134) condicionwhere -> . whereexists
    (135) condicionwhere -> . notwhereexists
    (136) condicionwhere -> . wherenotin
    (137) condicionwhere -> . wherein
    (138) condicionwhere -> . wherenotlike
    (139) condicionwhere -> . wherelike
    (140) condicionwhere -> . wheresubstring
    (141) condicionwhere -> . between_state
    (142) condicionwhere -> . not_between_state
    (143) condicionwhere -> . predicates_state
    (144) condicionwhere -> . is_distinct_state
    (145) condicionwhere -> . condicion
    (146) whereexists -> . EXISTS PARIZQ select_instr1 PARDER
    (147) notwhereexists -> . NOT EXISTS PARIZQ select_instr1 PARDER
    (150) wherenotin -> . cualquiernumero NOT IN PARIZQ select_instr1 PARDER
    (151) wherenotin -> . cadenastodas NOT IN PARIZQ select_instr1 PARDER
    (148) wherein -> . cualquiernumero IN PARIZQ select_instr1 PARDER
    (149) wherein -> . cadenastodas IN PARIZQ select_instr1 PARDER
    (152) wherenotlike -> . cadenastodas NOT LIKE CADENALIKE
    (153) wherelike -> . cadenastodas LIKE CADENALIKE
    (154) wheresubstring -> . SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE
    (369) between_state -> . cualquiernumero BETWEEN valores AND valores
    (370) between_state -> . cadenastodas BETWEEN valores AND valores
    (371) not_between_state -> . cualquiernumero NOT BETWEEN valores AND valores
    (372) not_between_state -> . cadenastodas NOT BETWEEN valores AND valores
    (373) predicates_state -> . valores IS NULL
    (374) predicates_state -> . valores IS NOT NULL
    (375) predicates_state -> . valores ISNULL
    (376) predicates_state -> . valores NOTNULL
    (377) is_distinct_state -> . valores IS DISTINCT FROM valores
    (378) is_distinct_state -> . valores IS NOT DISTINCT FROM valores
    (200) condicion -> . expresion MENQUE expresion
    (201) condicion -> . expresion MAYQUE expresion
    (202) condicion -> . expresion MENIGUAL expresion
    (203) condicion -> . expresion MAYIGUAL expresion
    (204) condicion -> . expresion IGUAL expresion
    (205) condicion -> . expresion DIFERENTE expresion
    (206) condicion -> . expresion
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (155) cadenastodas -> . cualquiercadena
    (156) cadenastodas -> . cualquieridentificador
    (379) valores -> . cualquiernumero
    (380) valores -> . cualquiercadena
    (381) valores -> . cualquieridentificador
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE

    EXISTS          shift and go to state 774
    NOT             shift and go to state 939
    SUBSTRING       shift and go to state 777
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251

    condicionwhere                 shift and go to state 938
    whereexists                    shift and go to state 762
    notwhereexists                 shift and go to state 763
    wherenotin                     shift and go to state 764
    wherein                        shift and go to state 765
    wherenotlike                   shift and go to state 766
    wherelike                      shift and go to state 767
    wheresubstring                 shift and go to state 768
    between_state                  shift and go to state 769
    not_between_state              shift and go to state 770
    predicates_state               shift and go to state 771
    is_distinct_state              shift and go to state 772
    condicion                      shift and go to state 773
    cualquiernumero                shift and go to state 775
    cadenastodas                   shift and go to state 776
    valores                        shift and go to state 778
    expresion                      shift and go to state 407
    cualquiercadena                shift and go to state 779
    cualquieridentificador         shift and go to state 780
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244

state 861

    (131) condicioneswhere -> condicioneswhere AND . condicionwhere
    (134) condicionwhere -> . whereexists
    (135) condicionwhere -> . notwhereexists
    (136) condicionwhere -> . wherenotin
    (137) condicionwhere -> . wherein
    (138) condicionwhere -> . wherenotlike
    (139) condicionwhere -> . wherelike
    (140) condicionwhere -> . wheresubstring
    (141) condicionwhere -> . between_state
    (142) condicionwhere -> . not_between_state
    (143) condicionwhere -> . predicates_state
    (144) condicionwhere -> . is_distinct_state
    (145) condicionwhere -> . condicion
    (146) whereexists -> . EXISTS PARIZQ select_instr1 PARDER
    (147) notwhereexists -> . NOT EXISTS PARIZQ select_instr1 PARDER
    (150) wherenotin -> . cualquiernumero NOT IN PARIZQ select_instr1 PARDER
    (151) wherenotin -> . cadenastodas NOT IN PARIZQ select_instr1 PARDER
    (148) wherein -> . cualquiernumero IN PARIZQ select_instr1 PARDER
    (149) wherein -> . cadenastodas IN PARIZQ select_instr1 PARDER
    (152) wherenotlike -> . cadenastodas NOT LIKE CADENALIKE
    (153) wherelike -> . cadenastodas LIKE CADENALIKE
    (154) wheresubstring -> . SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE
    (369) between_state -> . cualquiernumero BETWEEN valores AND valores
    (370) between_state -> . cadenastodas BETWEEN valores AND valores
    (371) not_between_state -> . cualquiernumero NOT BETWEEN valores AND valores
    (372) not_between_state -> . cadenastodas NOT BETWEEN valores AND valores
    (373) predicates_state -> . valores IS NULL
    (374) predicates_state -> . valores IS NOT NULL
    (375) predicates_state -> . valores ISNULL
    (376) predicates_state -> . valores NOTNULL
    (377) is_distinct_state -> . valores IS DISTINCT FROM valores
    (378) is_distinct_state -> . valores IS NOT DISTINCT FROM valores
    (200) condicion -> . expresion MENQUE expresion
    (201) condicion -> . expresion MAYQUE expresion
    (202) condicion -> . expresion MENIGUAL expresion
    (203) condicion -> . expresion MAYIGUAL expresion
    (204) condicion -> . expresion IGUAL expresion
    (205) condicion -> . expresion DIFERENTE expresion
    (206) condicion -> . expresion
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (155) cadenastodas -> . cualquiercadena
    (156) cadenastodas -> . cualquieridentificador
    (379) valores -> . cualquiernumero
    (380) valores -> . cualquiercadena
    (381) valores -> . cualquieridentificador
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE

    EXISTS          shift and go to state 774
    NOT             shift and go to state 939
    SUBSTRING       shift and go to state 777
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251

    condicionwhere                 shift and go to state 940
    whereexists                    shift and go to state 762
    notwhereexists                 shift and go to state 763
    wherenotin                     shift and go to state 764
    wherein                        shift and go to state 765
    wherenotlike                   shift and go to state 766
    wherelike                      shift and go to state 767
    wheresubstring                 shift and go to state 768
    between_state                  shift and go to state 769
    not_between_state              shift and go to state 770
    predicates_state               shift and go to state 771
    is_distinct_state              shift and go to state 772
    condicion                      shift and go to state 773
    cualquiernumero                shift and go to state 775
    cadenastodas                   shift and go to state 776
    valores                        shift and go to state 778
    expresion                      shift and go to state 407
    cualquiercadena                shift and go to state 779
    cualquieridentificador         shift and go to state 780
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244

state 862

    (133) condicioneswhere -> NOT PARIZQ . condicioneswhere PARDER
    (130) condicioneswhere -> . condicioneswhere OR condicionwhere
    (131) condicioneswhere -> . condicioneswhere AND condicionwhere
    (132) condicioneswhere -> . condicionwhere
    (133) condicioneswhere -> . NOT PARIZQ condicioneswhere PARDER
    (134) condicionwhere -> . whereexists
    (135) condicionwhere -> . notwhereexists
    (136) condicionwhere -> . wherenotin
    (137) condicionwhere -> . wherein
    (138) condicionwhere -> . wherenotlike
    (139) condicionwhere -> . wherelike
    (140) condicionwhere -> . wheresubstring
    (141) condicionwhere -> . between_state
    (142) condicionwhere -> . not_between_state
    (143) condicionwhere -> . predicates_state
    (144) condicionwhere -> . is_distinct_state
    (145) condicionwhere -> . condicion
    (146) whereexists -> . EXISTS PARIZQ select_instr1 PARDER
    (147) notwhereexists -> . NOT EXISTS PARIZQ select_instr1 PARDER
    (150) wherenotin -> . cualquiernumero NOT IN PARIZQ select_instr1 PARDER
    (151) wherenotin -> . cadenastodas NOT IN PARIZQ select_instr1 PARDER
    (148) wherein -> . cualquiernumero IN PARIZQ select_instr1 PARDER
    (149) wherein -> . cadenastodas IN PARIZQ select_instr1 PARDER
    (152) wherenotlike -> . cadenastodas NOT LIKE CADENALIKE
    (153) wherelike -> . cadenastodas LIKE CADENALIKE
    (154) wheresubstring -> . SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE
    (369) between_state -> . cualquiernumero BETWEEN valores AND valores
    (370) between_state -> . cadenastodas BETWEEN valores AND valores
    (371) not_between_state -> . cualquiernumero NOT BETWEEN valores AND valores
    (372) not_between_state -> . cadenastodas NOT BETWEEN valores AND valores
    (373) predicates_state -> . valores IS NULL
    (374) predicates_state -> . valores IS NOT NULL
    (375) predicates_state -> . valores ISNULL
    (376) predicates_state -> . valores NOTNULL
    (377) is_distinct_state -> . valores IS DISTINCT FROM valores
    (378) is_distinct_state -> . valores IS NOT DISTINCT FROM valores
    (200) condicion -> . expresion MENQUE expresion
    (201) condicion -> . expresion MAYQUE expresion
    (202) condicion -> . expresion MENIGUAL expresion
    (203) condicion -> . expresion MAYIGUAL expresion
    (204) condicion -> . expresion IGUAL expresion
    (205) condicion -> . expresion DIFERENTE expresion
    (206) condicion -> . expresion
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (155) cadenastodas -> . cualquiercadena
    (156) cadenastodas -> . cualquieridentificador
    (379) valores -> . cualquiernumero
    (380) valores -> . cualquiercadena
    (381) valores -> . cualquieridentificador
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE

    NOT             shift and go to state 761
    EXISTS          shift and go to state 774
    SUBSTRING       shift and go to state 777
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251

    condicioneswhere               shift and go to state 941
    condicionwhere                 shift and go to state 760
    whereexists                    shift and go to state 762
    notwhereexists                 shift and go to state 763
    wherenotin                     shift and go to state 764
    wherein                        shift and go to state 765
    wherenotlike                   shift and go to state 766
    wherelike                      shift and go to state 767
    wheresubstring                 shift and go to state 768
    between_state                  shift and go to state 769
    not_between_state              shift and go to state 770
    predicates_state               shift and go to state 771
    is_distinct_state              shift and go to state 772
    condicion                      shift and go to state 773
    cualquiernumero                shift and go to state 775
    cadenastodas                   shift and go to state 776
    valores                        shift and go to state 778
    expresion                      shift and go to state 407
    cualquiercadena                shift and go to state 779
    cualquieridentificador         shift and go to state 780
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244

state 863

    (147) notwhereexists -> NOT EXISTS . PARIZQ select_instr1 PARDER

    PARIZQ          shift and go to state 942


state 864

    (146) whereexists -> EXISTS PARIZQ . select_instr1 PARDER
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    SELECT          shift and go to state 102

    select_instr1                  shift and go to state 943

state 865

    (150) wherenotin -> cualquiernumero NOT . IN PARIZQ select_instr1 PARDER
    (371) not_between_state -> cualquiernumero NOT . BETWEEN valores AND valores

    IN              shift and go to state 944
    BETWEEN         shift and go to state 945


state 866

    (148) wherein -> cualquiernumero IN . PARIZQ select_instr1 PARDER

    PARIZQ          shift and go to state 946


state 867

    (369) between_state -> cualquiernumero BETWEEN . valores AND valores
    (379) valores -> . cualquiernumero
    (380) valores -> . cualquiercadena
    (381) valores -> . cualquieridentificador
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    cualquiernumero                shift and go to state 947
    valores                        shift and go to state 948
    cualquiercadena                shift and go to state 949
    cualquieridentificador         shift and go to state 950

state 868

    (151) wherenotin -> cadenastodas NOT . IN PARIZQ select_instr1 PARDER
    (152) wherenotlike -> cadenastodas NOT . LIKE CADENALIKE
    (372) not_between_state -> cadenastodas NOT . BETWEEN valores AND valores

    IN              shift and go to state 951
    LIKE            shift and go to state 952
    BETWEEN         shift and go to state 953


state 869

    (149) wherein -> cadenastodas IN . PARIZQ select_instr1 PARDER

    PARIZQ          shift and go to state 954


state 870

    (153) wherelike -> cadenastodas LIKE . CADENALIKE

    CADENALIKE      shift and go to state 955


state 871

    (370) between_state -> cadenastodas BETWEEN . valores AND valores
    (379) valores -> . cualquiernumero
    (380) valores -> . cualquiercadena
    (381) valores -> . cualquieridentificador
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    valores                        shift and go to state 956
    cualquiernumero                shift and go to state 947
    cualquiercadena                shift and go to state 949
    cualquieridentificador         shift and go to state 950

state 872

    (154) wheresubstring -> SUBSTRING PARIZQ . cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE
    (278) func_bin_strings_2 -> SUBSTRING PARIZQ . cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (155) cadenastodas -> . cualquiercadena
    (156) cadenastodas -> . cualquieridentificador
    (296) cadena -> . cualquiercadena
    (297) cadena -> . cualquieridentificador
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    cadenastodas                   shift and go to state 957
    cadena                         shift and go to state 485
    cualquiercadena                shift and go to state 958
    cualquieridentificador         shift and go to state 959

state 873

    (373) predicates_state -> valores IS . NULL
    (374) predicates_state -> valores IS . NOT NULL
    (377) is_distinct_state -> valores IS . DISTINCT FROM valores
    (378) is_distinct_state -> valores IS . NOT DISTINCT FROM valores

    NULL            shift and go to state 960
    NOT             shift and go to state 961
    DISTINCT        shift and go to state 962


state 874

    (375) predicates_state -> valores ISNULL .

    OR              reduce using rule 375 (predicates_state -> valores ISNULL .)
    AND             reduce using rule 375 (predicates_state -> valores ISNULL .)
    GROUP           reduce using rule 375 (predicates_state -> valores ISNULL .)
    ORDER           reduce using rule 375 (predicates_state -> valores ISNULL .)
    UNION           reduce using rule 375 (predicates_state -> valores ISNULL .)
    INTERSECT       reduce using rule 375 (predicates_state -> valores ISNULL .)
    EXCEPT          reduce using rule 375 (predicates_state -> valores ISNULL .)
    PTCOMA          reduce using rule 375 (predicates_state -> valores ISNULL .)
    PARDER          reduce using rule 375 (predicates_state -> valores ISNULL .)
    CSIMPLE         reduce using rule 375 (predicates_state -> valores ISNULL .)


state 875

    (376) predicates_state -> valores NOTNULL .

    OR              reduce using rule 376 (predicates_state -> valores NOTNULL .)
    AND             reduce using rule 376 (predicates_state -> valores NOTNULL .)
    GROUP           reduce using rule 376 (predicates_state -> valores NOTNULL .)
    ORDER           reduce using rule 376 (predicates_state -> valores NOTNULL .)
    UNION           reduce using rule 376 (predicates_state -> valores NOTNULL .)
    INTERSECT       reduce using rule 376 (predicates_state -> valores NOTNULL .)
    EXCEPT          reduce using rule 376 (predicates_state -> valores NOTNULL .)
    PTCOMA          reduce using rule 376 (predicates_state -> valores NOTNULL .)
    PARDER          reduce using rule 376 (predicates_state -> valores NOTNULL .)
    CSIMPLE         reduce using rule 376 (predicates_state -> valores NOTNULL .)


state 876

    (120) tablaselect -> PARIZQ select_instr1 PARDER alias .

    COMA            reduce using rule 120 (tablaselect -> PARIZQ select_instr1 PARDER alias .)
    WHERE           reduce using rule 120 (tablaselect -> PARIZQ select_instr1 PARDER alias .)
    GROUP           reduce using rule 120 (tablaselect -> PARIZQ select_instr1 PARDER alias .)
    ORDER           reduce using rule 120 (tablaselect -> PARIZQ select_instr1 PARDER alias .)
    UNION           reduce using rule 120 (tablaselect -> PARIZQ select_instr1 PARDER alias .)
    INTERSECT       reduce using rule 120 (tablaselect -> PARIZQ select_instr1 PARDER alias .)
    EXCEPT          reduce using rule 120 (tablaselect -> PARIZQ select_instr1 PARDER alias .)
    PTCOMA          reduce using rule 120 (tablaselect -> PARIZQ select_instr1 PARDER alias .)
    PARDER          reduce using rule 120 (tablaselect -> PARIZQ select_instr1 PARDER alias .)
    CSIMPLE         reduce using rule 120 (tablaselect -> PARIZQ select_instr1 PARDER alias .)


state 877

    (237) funcion_matematica_s -> DIV PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .

    ID              reduce using rule 237 (funcion_matematica_s -> DIV PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 237 (funcion_matematica_s -> DIV PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 237 (funcion_matematica_s -> DIV PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    AS              reduce using rule 237 (funcion_matematica_s -> DIV PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    COMA            reduce using rule 237 (funcion_matematica_s -> DIV PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    FROM            reduce using rule 237 (funcion_matematica_s -> DIV PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    UNION           reduce using rule 237 (funcion_matematica_s -> DIV PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 237 (funcion_matematica_s -> DIV PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 237 (funcion_matematica_s -> DIV PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 237 (funcion_matematica_s -> DIV PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    PARDER          reduce using rule 237 (funcion_matematica_s -> DIV PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 237 (funcion_matematica_s -> DIV PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)


state 878

    (241) funcion_matematica_s -> GCD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .

    ID              reduce using rule 241 (funcion_matematica_s -> GCD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 241 (funcion_matematica_s -> GCD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 241 (funcion_matematica_s -> GCD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    AS              reduce using rule 241 (funcion_matematica_s -> GCD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    COMA            reduce using rule 241 (funcion_matematica_s -> GCD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    FROM            reduce using rule 241 (funcion_matematica_s -> GCD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    UNION           reduce using rule 241 (funcion_matematica_s -> GCD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 241 (funcion_matematica_s -> GCD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 241 (funcion_matematica_s -> GCD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 241 (funcion_matematica_s -> GCD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    PARDER          reduce using rule 241 (funcion_matematica_s -> GCD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 241 (funcion_matematica_s -> GCD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)


state 879

    (244) funcion_matematica_s -> MOD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .

    ID              reduce using rule 244 (funcion_matematica_s -> MOD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 244 (funcion_matematica_s -> MOD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 244 (funcion_matematica_s -> MOD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    AS              reduce using rule 244 (funcion_matematica_s -> MOD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    COMA            reduce using rule 244 (funcion_matematica_s -> MOD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    FROM            reduce using rule 244 (funcion_matematica_s -> MOD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    UNION           reduce using rule 244 (funcion_matematica_s -> MOD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 244 (funcion_matematica_s -> MOD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 244 (funcion_matematica_s -> MOD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 244 (funcion_matematica_s -> MOD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    PARDER          reduce using rule 244 (funcion_matematica_s -> MOD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 244 (funcion_matematica_s -> MOD PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)


state 880

    (246) funcion_matematica_s -> POWER PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .

    ID              reduce using rule 246 (funcion_matematica_s -> POWER PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    CADENASIMPLE    reduce using rule 246 (funcion_matematica_s -> POWER PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    CADENADOBLE     reduce using rule 246 (funcion_matematica_s -> POWER PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    AS              reduce using rule 246 (funcion_matematica_s -> POWER PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    COMA            reduce using rule 246 (funcion_matematica_s -> POWER PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    FROM            reduce using rule 246 (funcion_matematica_s -> POWER PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    UNION           reduce using rule 246 (funcion_matematica_s -> POWER PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    INTERSECT       reduce using rule 246 (funcion_matematica_s -> POWER PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    EXCEPT          reduce using rule 246 (funcion_matematica_s -> POWER PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    PTCOMA          reduce using rule 246 (funcion_matematica_s -> POWER PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    PARDER          reduce using rule 246 (funcion_matematica_s -> POWER PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)
    CSIMPLE         reduce using rule 246 (funcion_matematica_s -> POWER PARIZQ expresionaritmetica COMA expresionaritmetica PARDER .)


state 881

    (254) explist -> expresionaritmetica COMA expresionaritmetica COMA . expresionaritmetica COMA expresionaritmetica
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 963
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 882

    (278) func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA . cualquiernumero PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL

    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253

    cualquiernumero                shift and go to state 964

state 883

    (279) func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA . cualquiernumero PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL

    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253

    cualquiernumero                shift and go to state 965

state 884

    (282) func_bin_strings_4 -> GET_BYTE PARIZQ cadena COMA ENTERO PARDER .

    ID              reduce using rule 282 (func_bin_strings_4 -> GET_BYTE PARIZQ cadena COMA ENTERO PARDER .)
    CADENASIMPLE    reduce using rule 282 (func_bin_strings_4 -> GET_BYTE PARIZQ cadena COMA ENTERO PARDER .)
    CADENADOBLE     reduce using rule 282 (func_bin_strings_4 -> GET_BYTE PARIZQ cadena COMA ENTERO PARDER .)
    AS              reduce using rule 282 (func_bin_strings_4 -> GET_BYTE PARIZQ cadena COMA ENTERO PARDER .)
    COMA            reduce using rule 282 (func_bin_strings_4 -> GET_BYTE PARIZQ cadena COMA ENTERO PARDER .)
    FROM            reduce using rule 282 (func_bin_strings_4 -> GET_BYTE PARIZQ cadena COMA ENTERO PARDER .)
    UNION           reduce using rule 282 (func_bin_strings_4 -> GET_BYTE PARIZQ cadena COMA ENTERO PARDER .)
    INTERSECT       reduce using rule 282 (func_bin_strings_4 -> GET_BYTE PARIZQ cadena COMA ENTERO PARDER .)
    EXCEPT          reduce using rule 282 (func_bin_strings_4 -> GET_BYTE PARIZQ cadena COMA ENTERO PARDER .)
    PTCOMA          reduce using rule 282 (func_bin_strings_4 -> GET_BYTE PARIZQ cadena COMA ENTERO PARDER .)
    PARDER          reduce using rule 282 (func_bin_strings_4 -> GET_BYTE PARIZQ cadena COMA ENTERO PARDER .)
    CSIMPLE         reduce using rule 282 (func_bin_strings_4 -> GET_BYTE PARIZQ cadena COMA ENTERO PARDER .)


state 885

    (283) func_bin_strings_4 -> SET_BYTE PARIZQ cadena COMA ENTERO COMA . ENTERO PARDER

    ENTERO          shift and go to state 966


state 886

    (284) func_bin_strings_4 -> ENCODE PARIZQ cadena COMA cadena PARDER .

    ID              reduce using rule 284 (func_bin_strings_4 -> ENCODE PARIZQ cadena COMA cadena PARDER .)
    CADENASIMPLE    reduce using rule 284 (func_bin_strings_4 -> ENCODE PARIZQ cadena COMA cadena PARDER .)
    CADENADOBLE     reduce using rule 284 (func_bin_strings_4 -> ENCODE PARIZQ cadena COMA cadena PARDER .)
    AS              reduce using rule 284 (func_bin_strings_4 -> ENCODE PARIZQ cadena COMA cadena PARDER .)
    COMA            reduce using rule 284 (func_bin_strings_4 -> ENCODE PARIZQ cadena COMA cadena PARDER .)
    FROM            reduce using rule 284 (func_bin_strings_4 -> ENCODE PARIZQ cadena COMA cadena PARDER .)
    UNION           reduce using rule 284 (func_bin_strings_4 -> ENCODE PARIZQ cadena COMA cadena PARDER .)
    INTERSECT       reduce using rule 284 (func_bin_strings_4 -> ENCODE PARIZQ cadena COMA cadena PARDER .)
    EXCEPT          reduce using rule 284 (func_bin_strings_4 -> ENCODE PARIZQ cadena COMA cadena PARDER .)
    PTCOMA          reduce using rule 284 (func_bin_strings_4 -> ENCODE PARIZQ cadena COMA cadena PARDER .)
    PARDER          reduce using rule 284 (func_bin_strings_4 -> ENCODE PARIZQ cadena COMA cadena PARDER .)
    CSIMPLE         reduce using rule 284 (func_bin_strings_4 -> ENCODE PARIZQ cadena COMA cadena PARDER .)


state 887

    (285) func_bin_strings_4 -> DECODE PARIZQ cadena COMA cadena PARDER .

    ID              reduce using rule 285 (func_bin_strings_4 -> DECODE PARIZQ cadena COMA cadena PARDER .)
    CADENASIMPLE    reduce using rule 285 (func_bin_strings_4 -> DECODE PARIZQ cadena COMA cadena PARDER .)
    CADENADOBLE     reduce using rule 285 (func_bin_strings_4 -> DECODE PARIZQ cadena COMA cadena PARDER .)
    AS              reduce using rule 285 (func_bin_strings_4 -> DECODE PARIZQ cadena COMA cadena PARDER .)
    COMA            reduce using rule 285 (func_bin_strings_4 -> DECODE PARIZQ cadena COMA cadena PARDER .)
    FROM            reduce using rule 285 (func_bin_strings_4 -> DECODE PARIZQ cadena COMA cadena PARDER .)
    UNION           reduce using rule 285 (func_bin_strings_4 -> DECODE PARIZQ cadena COMA cadena PARDER .)
    INTERSECT       reduce using rule 285 (func_bin_strings_4 -> DECODE PARIZQ cadena COMA cadena PARDER .)
    EXCEPT          reduce using rule 285 (func_bin_strings_4 -> DECODE PARIZQ cadena COMA cadena PARDER .)
    PTCOMA          reduce using rule 285 (func_bin_strings_4 -> DECODE PARIZQ cadena COMA cadena PARDER .)
    PARDER          reduce using rule 285 (func_bin_strings_4 -> DECODE PARIZQ cadena COMA cadena PARDER .)
    CSIMPLE         reduce using rule 285 (func_bin_strings_4 -> DECODE PARIZQ cadena COMA cadena PARDER .)


state 888

    (382) extract_instr -> EXTRACT PARIZQ valdate FROM TIMESTAMP CADENASIMPLE . PARDER

    PARDER          shift and go to state 967


state 889

    (389) datepart_instr -> DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE . PARDER

    PARDER          shift and go to state 968


state 890

    (348) attributes -> default_value null_field constraint_field . null_field primary_key
    (355) null_field -> . NULL
    (356) null_field -> . NOT NULL
    (357) null_field -> . empty
    (546) empty -> .

    NULL            shift and go to state 799
    NOT             shift and go to state 800
    PRIMARY         reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    COMA            reduce using rule 546 (empty -> .)

    null_field                     shift and go to state 969
    empty                          shift and go to state 801

state 891

    (358) constraint_field -> UNIQUE .

    NULL            reduce using rule 358 (constraint_field -> UNIQUE .)
    NOT             reduce using rule 358 (constraint_field -> UNIQUE .)
    PRIMARY         reduce using rule 358 (constraint_field -> UNIQUE .)
    PARDER          reduce using rule 358 (constraint_field -> UNIQUE .)
    COMA            reduce using rule 358 (constraint_field -> UNIQUE .)


state 892

    (359) constraint_field -> CONSTRAINT . ID check_unique

    ID              shift and go to state 970


state 893

    (360) constraint_field -> CHECK . PARIZQ condiciones PARDER

    PARIZQ          shift and go to state 971


state 894

    (361) constraint_field -> empty .

    NULL            reduce using rule 361 (constraint_field -> empty .)
    NOT             reduce using rule 361 (constraint_field -> empty .)
    PRIMARY         reduce using rule 361 (constraint_field -> empty .)
    PARDER          reduce using rule 361 (constraint_field -> empty .)
    COMA            reduce using rule 361 (constraint_field -> empty .)


state 895

    (356) null_field -> NOT NULL .

    UNIQUE          reduce using rule 356 (null_field -> NOT NULL .)
    CONSTRAINT      reduce using rule 356 (null_field -> NOT NULL .)
    CHECK           reduce using rule 356 (null_field -> NOT NULL .)
    NULL            reduce using rule 356 (null_field -> NOT NULL .)
    NOT             reduce using rule 356 (null_field -> NOT NULL .)
    PRIMARY         reduce using rule 356 (null_field -> NOT NULL .)
    PARDER          reduce using rule 356 (null_field -> NOT NULL .)
    COMA            reduce using rule 356 (null_field -> NOT NULL .)


state 896

    (315) type_column -> RDECIMAL PARIZQ ENTERO COMA . ENTERO PARDER

    ENTERO          shift and go to state 972


state 897

    (322) type_column -> VARCHAR PARIZQ ENTERO PARDER .

    DEFAULT         reduce using rule 322 (type_column -> VARCHAR PARIZQ ENTERO PARDER .)
    NULL            reduce using rule 322 (type_column -> VARCHAR PARIZQ ENTERO PARDER .)
    NOT             reduce using rule 322 (type_column -> VARCHAR PARIZQ ENTERO PARDER .)
    UNIQUE          reduce using rule 322 (type_column -> VARCHAR PARIZQ ENTERO PARDER .)
    CONSTRAINT      reduce using rule 322 (type_column -> VARCHAR PARIZQ ENTERO PARDER .)
    CHECK           reduce using rule 322 (type_column -> VARCHAR PARIZQ ENTERO PARDER .)
    PRIMARY         reduce using rule 322 (type_column -> VARCHAR PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 322 (type_column -> VARCHAR PARIZQ ENTERO PARDER .)
    COMA            reduce using rule 322 (type_column -> VARCHAR PARIZQ ENTERO PARDER .)
    PTCOMA          reduce using rule 322 (type_column -> VARCHAR PARIZQ ENTERO PARDER .)


state 898

    (323) type_column -> CHARACTER VARYING PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 973


state 899

    (324) type_column -> CHARACTER PARIZQ ENTERO PARDER .

    DEFAULT         reduce using rule 324 (type_column -> CHARACTER PARIZQ ENTERO PARDER .)
    NULL            reduce using rule 324 (type_column -> CHARACTER PARIZQ ENTERO PARDER .)
    NOT             reduce using rule 324 (type_column -> CHARACTER PARIZQ ENTERO PARDER .)
    UNIQUE          reduce using rule 324 (type_column -> CHARACTER PARIZQ ENTERO PARDER .)
    CONSTRAINT      reduce using rule 324 (type_column -> CHARACTER PARIZQ ENTERO PARDER .)
    CHECK           reduce using rule 324 (type_column -> CHARACTER PARIZQ ENTERO PARDER .)
    PRIMARY         reduce using rule 324 (type_column -> CHARACTER PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 324 (type_column -> CHARACTER PARIZQ ENTERO PARDER .)
    COMA            reduce using rule 324 (type_column -> CHARACTER PARIZQ ENTERO PARDER .)
    PTCOMA          reduce using rule 324 (type_column -> CHARACTER PARIZQ ENTERO PARDER .)


state 900

    (325) type_column -> CHAR PARIZQ ENTERO PARDER .

    DEFAULT         reduce using rule 325 (type_column -> CHAR PARIZQ ENTERO PARDER .)
    NULL            reduce using rule 325 (type_column -> CHAR PARIZQ ENTERO PARDER .)
    NOT             reduce using rule 325 (type_column -> CHAR PARIZQ ENTERO PARDER .)
    UNIQUE          reduce using rule 325 (type_column -> CHAR PARIZQ ENTERO PARDER .)
    CONSTRAINT      reduce using rule 325 (type_column -> CHAR PARIZQ ENTERO PARDER .)
    CHECK           reduce using rule 325 (type_column -> CHAR PARIZQ ENTERO PARDER .)
    PRIMARY         reduce using rule 325 (type_column -> CHAR PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 325 (type_column -> CHAR PARIZQ ENTERO PARDER .)
    COMA            reduce using rule 325 (type_column -> CHAR PARIZQ ENTERO PARDER .)
    PTCOMA          reduce using rule 325 (type_column -> CHAR PARIZQ ENTERO PARDER .)


state 901

    (328) type_column -> TIMESTAMP PARIZQ ENTERO PARDER .

    DEFAULT         reduce using rule 328 (type_column -> TIMESTAMP PARIZQ ENTERO PARDER .)
    NULL            reduce using rule 328 (type_column -> TIMESTAMP PARIZQ ENTERO PARDER .)
    NOT             reduce using rule 328 (type_column -> TIMESTAMP PARIZQ ENTERO PARDER .)
    UNIQUE          reduce using rule 328 (type_column -> TIMESTAMP PARIZQ ENTERO PARDER .)
    CONSTRAINT      reduce using rule 328 (type_column -> TIMESTAMP PARIZQ ENTERO PARDER .)
    CHECK           reduce using rule 328 (type_column -> TIMESTAMP PARIZQ ENTERO PARDER .)
    PRIMARY         reduce using rule 328 (type_column -> TIMESTAMP PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 328 (type_column -> TIMESTAMP PARIZQ ENTERO PARDER .)
    COMA            reduce using rule 328 (type_column -> TIMESTAMP PARIZQ ENTERO PARDER .)
    PTCOMA          reduce using rule 328 (type_column -> TIMESTAMP PARIZQ ENTERO PARDER .)


state 902

    (333) type_column -> TIME PARIZQ ENTERO PARDER .

    DEFAULT         reduce using rule 333 (type_column -> TIME PARIZQ ENTERO PARDER .)
    NULL            reduce using rule 333 (type_column -> TIME PARIZQ ENTERO PARDER .)
    NOT             reduce using rule 333 (type_column -> TIME PARIZQ ENTERO PARDER .)
    UNIQUE          reduce using rule 333 (type_column -> TIME PARIZQ ENTERO PARDER .)
    CONSTRAINT      reduce using rule 333 (type_column -> TIME PARIZQ ENTERO PARDER .)
    CHECK           reduce using rule 333 (type_column -> TIME PARIZQ ENTERO PARDER .)
    PRIMARY         reduce using rule 333 (type_column -> TIME PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 333 (type_column -> TIME PARIZQ ENTERO PARDER .)
    COMA            reduce using rule 333 (type_column -> TIME PARIZQ ENTERO PARDER .)
    PTCOMA          reduce using rule 333 (type_column -> TIME PARIZQ ENTERO PARDER .)


state 903

    (343) end_create_table -> INHERITS PARIZQ ID . PARDER PTCOMA

    PARDER          shift and go to state 974


state 904

    (346) key_column -> PRIMARY KEY PARIZQ listtablas PARDER .

    PARDER          reduce using rule 346 (key_column -> PRIMARY KEY PARIZQ listtablas PARDER .)
    COMA            reduce using rule 346 (key_column -> PRIMARY KEY PARIZQ listtablas PARDER .)


state 905

    (365) create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .

    $end            reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    RAISE           reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    ID              reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    RETURN          reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    EXECUTE         reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    GET             reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    NULL            reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    IF              reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    CASE            reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    COMMIT          reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    ROLLBACK        reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    INSERT          reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    UPDATE          reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    ALTER           reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    CREATE          reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    DROP            reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    DELETE          reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    TRUNCATE        reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    DECLARE         reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    SELECT          reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    BEGIN           reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    END             reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    ELSE            reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    ELSIF           reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)
    WHEN            reduce using rule 365 (create_enum -> CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA .)


state 906

    (366) list_string -> list_string COMA cualquiercadena .

    PARDER          reduce using rule 366 (list_string -> list_string COMA cualquiercadena .)
    COMA            reduce using rule 366 (list_string -> list_string COMA cualquiercadena .)


state 907

    (401) indexinstr -> CREATE INDEX ID ON ID PARIZQ ID ID PARDER . PTCOMA

    PTCOMA          shift and go to state 975


state 908

    (394) indexinstr -> CREATE INDEX ID ON ID PARIZQ ID PARDER PTCOMA .

    $end            reduce using rule 394 (indexinstr -> CREATE INDEX ID ON ID PARIZQ ID PARDER PTCOMA .)


state 909

    (400) indexinstr -> CREATE INDEX ID ON ID PARIZQ ID PARDER whereselect . PTCOMA

    PTCOMA          shift and go to state 976


state 910

    (396) indexinstr -> CREATE INDEX ID ON ID PARIZQ ID COMA ID . PARDER PTCOMA

    PARDER          shift and go to state 977


state 911

    (397) indexinstr -> CREATE INDEX ID ON ID PARIZQ valororderby PARDER PTCOMA .

    $end            reduce using rule 397 (indexinstr -> CREATE INDEX ID ON ID PARIZQ valororderby PARDER PTCOMA .)


state 912

    (399) indexinstr -> CREATE INDEX ID ON ID PARIZQ LOWER PARIZQ ID . PARDER PARDER PTCOMA

    PARDER          shift and go to state 978


state 913

    (183) valororderby -> cualquieridentificador ascdesc anular .

    PARDER          reduce using rule 183 (valororderby -> cualquieridentificador ascdesc anular .)
    COMA            reduce using rule 183 (valororderby -> cualquieridentificador ascdesc anular .)
    LIMIT           reduce using rule 183 (valororderby -> cualquieridentificador ascdesc anular .)
    UNION           reduce using rule 183 (valororderby -> cualquieridentificador ascdesc anular .)
    INTERSECT       reduce using rule 183 (valororderby -> cualquieridentificador ascdesc anular .)
    EXCEPT          reduce using rule 183 (valororderby -> cualquieridentificador ascdesc anular .)
    PTCOMA          reduce using rule 183 (valororderby -> cualquieridentificador ascdesc anular .)
    CSIMPLE         reduce using rule 183 (valororderby -> cualquieridentificador ascdesc anular .)


state 914

    (188) anular -> NULLS . LAST
    (189) anular -> NULLS . FIRST

    LAST            shift and go to state 979
    FIRST           shift and go to state 980


state 915

    (190) anular -> empty .

    PARDER          reduce using rule 190 (anular -> empty .)
    COMA            reduce using rule 190 (anular -> empty .)
    LIMIT           reduce using rule 190 (anular -> empty .)
    UNION           reduce using rule 190 (anular -> empty .)
    INTERSECT       reduce using rule 190 (anular -> empty .)
    EXCEPT          reduce using rule 190 (anular -> empty .)
    PTCOMA          reduce using rule 190 (anular -> empty .)
    CSIMPLE         reduce using rule 190 (anular -> empty .)


state 916

    (184) valororderby -> cualquiernumero ascdesc anular .

    PARDER          reduce using rule 184 (valororderby -> cualquiernumero ascdesc anular .)
    COMA            reduce using rule 184 (valororderby -> cualquiernumero ascdesc anular .)
    LIMIT           reduce using rule 184 (valororderby -> cualquiernumero ascdesc anular .)
    UNION           reduce using rule 184 (valororderby -> cualquiernumero ascdesc anular .)
    INTERSECT       reduce using rule 184 (valororderby -> cualquiernumero ascdesc anular .)
    EXCEPT          reduce using rule 184 (valororderby -> cualquiernumero ascdesc anular .)
    PTCOMA          reduce using rule 184 (valororderby -> cualquiernumero ascdesc anular .)
    CSIMPLE         reduce using rule 184 (valororderby -> cualquiernumero ascdesc anular .)


state 917

    (395) indexinstr -> CREATE INDEX ID ON ID USING HASH PARIZQ ID . PARDER PTCOMA

    PARDER          shift and go to state 981


state 918

    (398) indexinstr -> CREATE UNIQUE INDEX ID ON ID PARIZQ columnas PARDER . PTCOMA

    PTCOMA          shift and go to state 982


state 919

    (426) cuerpofuncion -> CADDOLAR declaraciones . cuerpo CADDOLAR LANGUAGE PLPGSQL PTCOMA
    (427) cuerpofuncion -> CADDOLAR declaraciones . cuerpo CADDOLAR PTCOMA
    (445) cuerpo -> . BEGIN instrlistabloque END PTCOMA

    BEGIN           shift and go to state 984

    cuerpo                         shift and go to state 983

state 920

    (428) declaraciones -> DECLARE . listadeclaraciones
    (430) listadeclaraciones -> . listadeclaraciones declaracion
    (431) listadeclaraciones -> . declaracion
    (432) declaracion -> . ID constantintr type_column1 notnullinst asignavalor PTCOMA
    (433) declaracion -> . ID ALIAS1 FOR DOLAR ENTERO PTCOMA
    (434) declaracion -> . ID ALIAS1 FOR ID PTCOMA
    (435) declaracion -> . ID cualquieridentificador MODULO TYPE PTCOMA
    (436) declaracion -> . ID cualquieridentificador MODULO ROWTYPE PTCOMA

    ID              shift and go to state 987

    listadeclaraciones             shift and go to state 985
    declaracion                    shift and go to state 986

state 921

    (429) declaraciones -> empty .

    BEGIN           reduce using rule 429 (declaraciones -> empty .)


state 922

    (414) tiporetorno -> RETURNS type_column1 AS .

    CADDOLAR        reduce using rule 414 (tiporetorno -> RETURNS type_column1 AS .)


state 923

    (415) tiporetorno -> LANGUAGE PLPGSQL AS .

    CADDOLAR        reduce using rule 415 (tiporetorno -> LANGUAGE PLPGSQL AS .)


state 924

    (493) type_column1 -> RDECIMAL PARIZQ ENTERO COMA ENTERO . PARDER

    PARDER          shift and go to state 988


state 925

    (503) type_column1 -> CHARACTER VARYING PARIZQ ENTERO PARDER .

    COMA            reduce using rule 503 (type_column1 -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 503 (type_column1 -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    AS              reduce using rule 503 (type_column1 -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    NOT             reduce using rule 503 (type_column1 -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    DEFAULT         reduce using rule 503 (type_column1 -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    PTIGUAL         reduce using rule 503 (type_column1 -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    IGUAL           reduce using rule 503 (type_column1 -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    PTCOMA          reduce using rule 503 (type_column1 -> CHARACTER VARYING PARIZQ ENTERO PARDER .)


state 926

    (302) alter_instr -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL .

    PTCOMA          reduce using rule 302 (alter_instr -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL .)


state 927

    (309) list_columns -> list_columns COMA ID type_column .

    COMA            reduce using rule 309 (list_columns -> list_columns COMA ID type_column .)
    PTCOMA          reduce using rule 309 (list_columns -> list_columns COMA ID type_column .)


state 928

    (300) alter_instr -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID . PARDER

    PARDER          shift and go to state 989


state 929

    (301) alter_instr -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER . REFERENCES ID

    REFERENCES      shift and go to state 990


state 930

    (307) list_alter_column -> list_alter_column COMA ALTER COLUMN ID TYPE . type_column
    (311) type_column -> . SMALLINT
    (312) type_column -> . INTEGER
    (313) type_column -> . BIGINT
    (314) type_column -> . RDECIMAL
    (315) type_column -> . RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER
    (316) type_column -> . NUMERIC
    (317) type_column -> . REAL
    (318) type_column -> . FLOAT
    (319) type_column -> . INT
    (320) type_column -> . DOUBLE
    (321) type_column -> . MONEY
    (322) type_column -> . VARCHAR PARIZQ ENTERO PARDER
    (323) type_column -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (324) type_column -> . CHARACTER PARIZQ ENTERO PARDER
    (325) type_column -> . CHAR PARIZQ ENTERO PARDER
    (326) type_column -> . TEXT
    (327) type_column -> . TIMESTAMP
    (328) type_column -> . TIMESTAMP PARIZQ ENTERO PARDER
    (329) type_column -> . DATE
    (330) type_column -> . TIME
    (331) type_column -> . BOOLEAN
    (332) type_column -> . ID
    (333) type_column -> . TIME PARIZQ ENTERO PARDER
    (334) type_column -> . INTERVAL field

    SMALLINT        shift and go to state 514
    INTEGER         shift and go to state 515
    BIGINT          shift and go to state 516
    RDECIMAL        shift and go to state 517
    NUMERIC         shift and go to state 518
    REAL            shift and go to state 519
    FLOAT           shift and go to state 520
    INT             shift and go to state 521
    DOUBLE          shift and go to state 522
    MONEY           shift and go to state 523
    VARCHAR         shift and go to state 524
    CHARACTER       shift and go to state 525
    CHAR            shift and go to state 526
    TEXT            shift and go to state 527
    TIMESTAMP       shift and go to state 528
    DATE            shift and go to state 529
    TIME            shift and go to state 530
    BOOLEAN         shift and go to state 531
    ID              shift and go to state 512
    INTERVAL        shift and go to state 532

    type_column                    shift and go to state 991

state 931

    (54) parametroinsert -> MD5 PARIZQ cualquiercadena PARDER .

    PARDER          reduce using rule 54 (parametroinsert -> MD5 PARIZQ cualquiercadena PARDER .)
    COMA            reduce using rule 54 (parametroinsert -> MD5 PARIZQ cualquiercadena PARDER .)


state 932

    (49) insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros . PARDER PTCOMA
    (50) parametros -> parametros . COMA parametroinsert

    PARDER          shift and go to state 992
    COMA            shift and go to state 738


state 933

    (178) orderby -> ORDER BY . listaorderby
    (179) orderby -> ORDER BY . listaorderby instrlimit
    (181) listaorderby -> . listaorderby COMA valororderby
    (182) listaorderby -> . valororderby
    (183) valororderby -> . cualquieridentificador ascdesc anular
    (184) valororderby -> . cualquiernumero ascdesc anular
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL

    ID              shift and go to state 234
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253

    listaorderby                   shift and go to state 993
    valororderby                   shift and go to state 994
    cualquieridentificador         shift and go to state 705
    cualquiernumero                shift and go to state 706

state 934

    (157) groupby -> GROUP BY listagroupby .
    (158) groupby -> GROUP BY listagroupby . HAVING condicioneshaving
    (160) listagroupby -> listagroupby . COMA valgroupby

    ORDER           reduce using rule 157 (groupby -> GROUP BY listagroupby .)
    UNION           reduce using rule 157 (groupby -> GROUP BY listagroupby .)
    INTERSECT       reduce using rule 157 (groupby -> GROUP BY listagroupby .)
    EXCEPT          reduce using rule 157 (groupby -> GROUP BY listagroupby .)
    PTCOMA          reduce using rule 157 (groupby -> GROUP BY listagroupby .)
    PARDER          reduce using rule 157 (groupby -> GROUP BY listagroupby .)
    CSIMPLE         reduce using rule 157 (groupby -> GROUP BY listagroupby .)
    HAVING          shift and go to state 995
    COMA            shift and go to state 996


state 935

    (161) listagroupby -> valgroupby .

    HAVING          reduce using rule 161 (listagroupby -> valgroupby .)
    COMA            reduce using rule 161 (listagroupby -> valgroupby .)
    ORDER           reduce using rule 161 (listagroupby -> valgroupby .)
    UNION           reduce using rule 161 (listagroupby -> valgroupby .)
    INTERSECT       reduce using rule 161 (listagroupby -> valgroupby .)
    EXCEPT          reduce using rule 161 (listagroupby -> valgroupby .)
    PTCOMA          reduce using rule 161 (listagroupby -> valgroupby .)
    PARDER          reduce using rule 161 (listagroupby -> valgroupby .)
    CSIMPLE         reduce using rule 161 (listagroupby -> valgroupby .)


state 936

    (162) valgroupby -> cualquieridentificador .

    HAVING          reduce using rule 162 (valgroupby -> cualquieridentificador .)
    COMA            reduce using rule 162 (valgroupby -> cualquieridentificador .)
    ORDER           reduce using rule 162 (valgroupby -> cualquieridentificador .)
    UNION           reduce using rule 162 (valgroupby -> cualquieridentificador .)
    INTERSECT       reduce using rule 162 (valgroupby -> cualquieridentificador .)
    EXCEPT          reduce using rule 162 (valgroupby -> cualquieridentificador .)
    PTCOMA          reduce using rule 162 (valgroupby -> cualquieridentificador .)
    PARDER          reduce using rule 162 (valgroupby -> cualquieridentificador .)
    CSIMPLE         reduce using rule 162 (valgroupby -> cualquieridentificador .)


state 937

    (163) valgroupby -> cualquiernumero .

    HAVING          reduce using rule 163 (valgroupby -> cualquiernumero .)
    COMA            reduce using rule 163 (valgroupby -> cualquiernumero .)
    ORDER           reduce using rule 163 (valgroupby -> cualquiernumero .)
    UNION           reduce using rule 163 (valgroupby -> cualquiernumero .)
    INTERSECT       reduce using rule 163 (valgroupby -> cualquiernumero .)
    EXCEPT          reduce using rule 163 (valgroupby -> cualquiernumero .)
    PTCOMA          reduce using rule 163 (valgroupby -> cualquiernumero .)
    PARDER          reduce using rule 163 (valgroupby -> cualquiernumero .)
    CSIMPLE         reduce using rule 163 (valgroupby -> cualquiernumero .)


state 938

    (130) condicioneswhere -> condicioneswhere OR condicionwhere .

    OR              reduce using rule 130 (condicioneswhere -> condicioneswhere OR condicionwhere .)
    AND             reduce using rule 130 (condicioneswhere -> condicioneswhere OR condicionwhere .)
    GROUP           reduce using rule 130 (condicioneswhere -> condicioneswhere OR condicionwhere .)
    ORDER           reduce using rule 130 (condicioneswhere -> condicioneswhere OR condicionwhere .)
    UNION           reduce using rule 130 (condicioneswhere -> condicioneswhere OR condicionwhere .)
    INTERSECT       reduce using rule 130 (condicioneswhere -> condicioneswhere OR condicionwhere .)
    EXCEPT          reduce using rule 130 (condicioneswhere -> condicioneswhere OR condicionwhere .)
    PTCOMA          reduce using rule 130 (condicioneswhere -> condicioneswhere OR condicionwhere .)
    PARDER          reduce using rule 130 (condicioneswhere -> condicioneswhere OR condicionwhere .)
    CSIMPLE         reduce using rule 130 (condicioneswhere -> condicioneswhere OR condicionwhere .)


state 939

    (147) notwhereexists -> NOT . EXISTS PARIZQ select_instr1 PARDER

    EXISTS          shift and go to state 863


state 940

    (131) condicioneswhere -> condicioneswhere AND condicionwhere .

    OR              reduce using rule 131 (condicioneswhere -> condicioneswhere AND condicionwhere .)
    AND             reduce using rule 131 (condicioneswhere -> condicioneswhere AND condicionwhere .)
    GROUP           reduce using rule 131 (condicioneswhere -> condicioneswhere AND condicionwhere .)
    ORDER           reduce using rule 131 (condicioneswhere -> condicioneswhere AND condicionwhere .)
    UNION           reduce using rule 131 (condicioneswhere -> condicioneswhere AND condicionwhere .)
    INTERSECT       reduce using rule 131 (condicioneswhere -> condicioneswhere AND condicionwhere .)
    EXCEPT          reduce using rule 131 (condicioneswhere -> condicioneswhere AND condicionwhere .)
    PTCOMA          reduce using rule 131 (condicioneswhere -> condicioneswhere AND condicionwhere .)
    PARDER          reduce using rule 131 (condicioneswhere -> condicioneswhere AND condicionwhere .)
    CSIMPLE         reduce using rule 131 (condicioneswhere -> condicioneswhere AND condicionwhere .)


state 941

    (133) condicioneswhere -> NOT PARIZQ condicioneswhere . PARDER
    (130) condicioneswhere -> condicioneswhere . OR condicionwhere
    (131) condicioneswhere -> condicioneswhere . AND condicionwhere

    PARDER          shift and go to state 997
    OR              shift and go to state 860
    AND             shift and go to state 861


state 942

    (147) notwhereexists -> NOT EXISTS PARIZQ . select_instr1 PARDER
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    SELECT          shift and go to state 102

    select_instr1                  shift and go to state 998

state 943

    (146) whereexists -> EXISTS PARIZQ select_instr1 . PARDER

    PARDER          shift and go to state 999


state 944

    (150) wherenotin -> cualquiernumero NOT IN . PARIZQ select_instr1 PARDER

    PARIZQ          shift and go to state 1000


state 945

    (371) not_between_state -> cualquiernumero NOT BETWEEN . valores AND valores
    (379) valores -> . cualquiernumero
    (380) valores -> . cualquiercadena
    (381) valores -> . cualquieridentificador
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    cualquiernumero                shift and go to state 947
    valores                        shift and go to state 1001
    cualquiercadena                shift and go to state 949
    cualquieridentificador         shift and go to state 950

state 946

    (148) wherein -> cualquiernumero IN PARIZQ . select_instr1 PARDER
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    SELECT          shift and go to state 102

    select_instr1                  shift and go to state 1002

state 947

    (379) valores -> cualquiernumero .

    AND             reduce using rule 379 (valores -> cualquiernumero .)
    OR              reduce using rule 379 (valores -> cualquiernumero .)
    GROUP           reduce using rule 379 (valores -> cualquiernumero .)
    ORDER           reduce using rule 379 (valores -> cualquiernumero .)
    UNION           reduce using rule 379 (valores -> cualquiernumero .)
    INTERSECT       reduce using rule 379 (valores -> cualquiernumero .)
    EXCEPT          reduce using rule 379 (valores -> cualquiernumero .)
    PTCOMA          reduce using rule 379 (valores -> cualquiernumero .)
    PARDER          reduce using rule 379 (valores -> cualquiernumero .)
    CSIMPLE         reduce using rule 379 (valores -> cualquiernumero .)


state 948

    (369) between_state -> cualquiernumero BETWEEN valores . AND valores

    AND             shift and go to state 1003


state 949

    (380) valores -> cualquiercadena .

    AND             reduce using rule 380 (valores -> cualquiercadena .)
    OR              reduce using rule 380 (valores -> cualquiercadena .)
    GROUP           reduce using rule 380 (valores -> cualquiercadena .)
    ORDER           reduce using rule 380 (valores -> cualquiercadena .)
    UNION           reduce using rule 380 (valores -> cualquiercadena .)
    INTERSECT       reduce using rule 380 (valores -> cualquiercadena .)
    EXCEPT          reduce using rule 380 (valores -> cualquiercadena .)
    PTCOMA          reduce using rule 380 (valores -> cualquiercadena .)
    PARDER          reduce using rule 380 (valores -> cualquiercadena .)
    CSIMPLE         reduce using rule 380 (valores -> cualquiercadena .)


state 950

    (381) valores -> cualquieridentificador .

    AND             reduce using rule 381 (valores -> cualquieridentificador .)
    OR              reduce using rule 381 (valores -> cualquieridentificador .)
    GROUP           reduce using rule 381 (valores -> cualquieridentificador .)
    ORDER           reduce using rule 381 (valores -> cualquieridentificador .)
    UNION           reduce using rule 381 (valores -> cualquieridentificador .)
    INTERSECT       reduce using rule 381 (valores -> cualquieridentificador .)
    EXCEPT          reduce using rule 381 (valores -> cualquieridentificador .)
    PTCOMA          reduce using rule 381 (valores -> cualquieridentificador .)
    PARDER          reduce using rule 381 (valores -> cualquieridentificador .)
    CSIMPLE         reduce using rule 381 (valores -> cualquieridentificador .)


state 951

    (151) wherenotin -> cadenastodas NOT IN . PARIZQ select_instr1 PARDER

    PARIZQ          shift and go to state 1004


state 952

    (152) wherenotlike -> cadenastodas NOT LIKE . CADENALIKE

    CADENALIKE      shift and go to state 1005


state 953

    (372) not_between_state -> cadenastodas NOT BETWEEN . valores AND valores
    (379) valores -> . cualquiernumero
    (380) valores -> . cualquiercadena
    (381) valores -> . cualquieridentificador
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    valores                        shift and go to state 1006
    cualquiernumero                shift and go to state 947
    cualquiercadena                shift and go to state 949
    cualquieridentificador         shift and go to state 950

state 954

    (149) wherein -> cadenastodas IN PARIZQ . select_instr1 PARDER
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    SELECT          shift and go to state 102

    select_instr1                  shift and go to state 1007

state 955

    (153) wherelike -> cadenastodas LIKE CADENALIKE .

    OR              reduce using rule 153 (wherelike -> cadenastodas LIKE CADENALIKE .)
    AND             reduce using rule 153 (wherelike -> cadenastodas LIKE CADENALIKE .)
    GROUP           reduce using rule 153 (wherelike -> cadenastodas LIKE CADENALIKE .)
    ORDER           reduce using rule 153 (wherelike -> cadenastodas LIKE CADENALIKE .)
    UNION           reduce using rule 153 (wherelike -> cadenastodas LIKE CADENALIKE .)
    INTERSECT       reduce using rule 153 (wherelike -> cadenastodas LIKE CADENALIKE .)
    EXCEPT          reduce using rule 153 (wherelike -> cadenastodas LIKE CADENALIKE .)
    PTCOMA          reduce using rule 153 (wherelike -> cadenastodas LIKE CADENALIKE .)
    PARDER          reduce using rule 153 (wherelike -> cadenastodas LIKE CADENALIKE .)
    CSIMPLE         reduce using rule 153 (wherelike -> cadenastodas LIKE CADENALIKE .)


state 956

    (370) between_state -> cadenastodas BETWEEN valores . AND valores

    AND             shift and go to state 1008


state 957

    (154) wheresubstring -> SUBSTRING PARIZQ cadenastodas . COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE

    COMA            shift and go to state 1009


state 958

    (155) cadenastodas -> cualquiercadena .
    (296) cadena -> cualquiercadena .

  ! reduce/reduce conflict for COMA resolved using rule 155 (cadenastodas -> cualquiercadena .)
    COMA            reduce using rule 155 (cadenastodas -> cualquiercadena .)

  ! COMA            [ reduce using rule 296 (cadena -> cualquiercadena .) ]


state 959

    (156) cadenastodas -> cualquieridentificador .
    (297) cadena -> cualquieridentificador .

  ! reduce/reduce conflict for COMA resolved using rule 156 (cadenastodas -> cualquieridentificador .)
    COMA            reduce using rule 156 (cadenastodas -> cualquieridentificador .)

  ! COMA            [ reduce using rule 297 (cadena -> cualquieridentificador .) ]


state 960

    (373) predicates_state -> valores IS NULL .

    OR              reduce using rule 373 (predicates_state -> valores IS NULL .)
    AND             reduce using rule 373 (predicates_state -> valores IS NULL .)
    GROUP           reduce using rule 373 (predicates_state -> valores IS NULL .)
    ORDER           reduce using rule 373 (predicates_state -> valores IS NULL .)
    UNION           reduce using rule 373 (predicates_state -> valores IS NULL .)
    INTERSECT       reduce using rule 373 (predicates_state -> valores IS NULL .)
    EXCEPT          reduce using rule 373 (predicates_state -> valores IS NULL .)
    PTCOMA          reduce using rule 373 (predicates_state -> valores IS NULL .)
    PARDER          reduce using rule 373 (predicates_state -> valores IS NULL .)
    CSIMPLE         reduce using rule 373 (predicates_state -> valores IS NULL .)


state 961

    (374) predicates_state -> valores IS NOT . NULL
    (378) is_distinct_state -> valores IS NOT . DISTINCT FROM valores

    NULL            shift and go to state 1010
    DISTINCT        shift and go to state 1011


state 962

    (377) is_distinct_state -> valores IS DISTINCT . FROM valores

    FROM            shift and go to state 1012


state 963

    (254) explist -> expresionaritmetica COMA expresionaritmetica COMA expresionaritmetica . COMA expresionaritmetica
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    COMA            shift and go to state 1013
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 964

    (278) func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero . PARDER

    PARDER          shift and go to state 1014


state 965

    (279) func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero . PARDER

    PARDER          shift and go to state 1015


state 966

    (283) func_bin_strings_4 -> SET_BYTE PARIZQ cadena COMA ENTERO COMA ENTERO . PARDER

    PARDER          shift and go to state 1016


state 967

    (382) extract_instr -> EXTRACT PARIZQ valdate FROM TIMESTAMP CADENASIMPLE PARDER .

    ID              reduce using rule 382 (extract_instr -> EXTRACT PARIZQ valdate FROM TIMESTAMP CADENASIMPLE PARDER .)
    CADENASIMPLE    reduce using rule 382 (extract_instr -> EXTRACT PARIZQ valdate FROM TIMESTAMP CADENASIMPLE PARDER .)
    CADENADOBLE     reduce using rule 382 (extract_instr -> EXTRACT PARIZQ valdate FROM TIMESTAMP CADENASIMPLE PARDER .)
    AS              reduce using rule 382 (extract_instr -> EXTRACT PARIZQ valdate FROM TIMESTAMP CADENASIMPLE PARDER .)
    COMA            reduce using rule 382 (extract_instr -> EXTRACT PARIZQ valdate FROM TIMESTAMP CADENASIMPLE PARDER .)
    FROM            reduce using rule 382 (extract_instr -> EXTRACT PARIZQ valdate FROM TIMESTAMP CADENASIMPLE PARDER .)
    UNION           reduce using rule 382 (extract_instr -> EXTRACT PARIZQ valdate FROM TIMESTAMP CADENASIMPLE PARDER .)
    INTERSECT       reduce using rule 382 (extract_instr -> EXTRACT PARIZQ valdate FROM TIMESTAMP CADENASIMPLE PARDER .)
    EXCEPT          reduce using rule 382 (extract_instr -> EXTRACT PARIZQ valdate FROM TIMESTAMP CADENASIMPLE PARDER .)
    PTCOMA          reduce using rule 382 (extract_instr -> EXTRACT PARIZQ valdate FROM TIMESTAMP CADENASIMPLE PARDER .)
    PARDER          reduce using rule 382 (extract_instr -> EXTRACT PARIZQ valdate FROM TIMESTAMP CADENASIMPLE PARDER .)
    CSIMPLE         reduce using rule 382 (extract_instr -> EXTRACT PARIZQ valdate FROM TIMESTAMP CADENASIMPLE PARDER .)


state 968

    (389) datepart_instr -> DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER .

    ID              reduce using rule 389 (datepart_instr -> DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER .)
    CADENASIMPLE    reduce using rule 389 (datepart_instr -> DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER .)
    CADENADOBLE     reduce using rule 389 (datepart_instr -> DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER .)
    AS              reduce using rule 389 (datepart_instr -> DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER .)
    COMA            reduce using rule 389 (datepart_instr -> DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER .)
    FROM            reduce using rule 389 (datepart_instr -> DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER .)
    UNION           reduce using rule 389 (datepart_instr -> DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER .)
    INTERSECT       reduce using rule 389 (datepart_instr -> DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER .)
    EXCEPT          reduce using rule 389 (datepart_instr -> DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER .)
    PTCOMA          reduce using rule 389 (datepart_instr -> DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER .)
    PARDER          reduce using rule 389 (datepart_instr -> DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER .)
    CSIMPLE         reduce using rule 389 (datepart_instr -> DATE_PART PARIZQ CADENASIMPLE COMA INTERVAL CADENASIMPLE PARDER .)


state 969

    (348) attributes -> default_value null_field constraint_field null_field . primary_key
    (353) primary_key -> . PRIMARY KEY
    (354) primary_key -> . empty
    (546) empty -> .

    PRIMARY         shift and go to state 1018
    PARDER          reduce using rule 546 (empty -> .)
    COMA            reduce using rule 546 (empty -> .)

    primary_key                    shift and go to state 1017
    empty                          shift and go to state 1019

state 970

    (359) constraint_field -> CONSTRAINT ID . check_unique
    (362) check_unique -> . UNIQUE
    (363) check_unique -> . CHECK PARIZQ condiciones PARDER
    (364) check_unique -> . empty
    (546) empty -> .

    UNIQUE          shift and go to state 1021
    CHECK           shift and go to state 1022
    NULL            reduce using rule 546 (empty -> .)
    NOT             reduce using rule 546 (empty -> .)
    PRIMARY         reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    COMA            reduce using rule 546 (empty -> .)

    check_unique                   shift and go to state 1020
    empty                          shift and go to state 1023

state 971

    (360) constraint_field -> CHECK PARIZQ . condiciones PARDER
    (195) condiciones -> . condiciones AND condicion
    (196) condiciones -> . condiciones OR condicion
    (197) condiciones -> . NOT PARIZQ condiciones PARDER
    (198) condiciones -> . NOT condiciones
    (199) condiciones -> . condicion
    (200) condicion -> . expresion MENQUE expresion
    (201) condicion -> . expresion MAYQUE expresion
    (202) condicion -> . expresion MENIGUAL expresion
    (203) condicion -> . expresion MAYIGUAL expresion
    (204) condicion -> . expresion IGUAL expresion
    (205) condicion -> . expresion DIFERENTE expresion
    (206) condicion -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    NOT             shift and go to state 406
    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    condiciones                    shift and go to state 1024
    condicion                      shift and go to state 405
    expresion                      shift and go to state 407
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 972

    (315) type_column -> RDECIMAL PARIZQ ENTERO COMA ENTERO . PARDER

    PARDER          shift and go to state 1025


state 973

    (323) type_column -> CHARACTER VARYING PARIZQ ENTERO PARDER .

    DEFAULT         reduce using rule 323 (type_column -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    NULL            reduce using rule 323 (type_column -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    NOT             reduce using rule 323 (type_column -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    UNIQUE          reduce using rule 323 (type_column -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    CONSTRAINT      reduce using rule 323 (type_column -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    CHECK           reduce using rule 323 (type_column -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    PRIMARY         reduce using rule 323 (type_column -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 323 (type_column -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    COMA            reduce using rule 323 (type_column -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    PTCOMA          reduce using rule 323 (type_column -> CHARACTER VARYING PARIZQ ENTERO PARDER .)


state 974

    (343) end_create_table -> INHERITS PARIZQ ID PARDER . PTCOMA

    PTCOMA          shift and go to state 1026


state 975

    (401) indexinstr -> CREATE INDEX ID ON ID PARIZQ ID ID PARDER PTCOMA .

    $end            reduce using rule 401 (indexinstr -> CREATE INDEX ID ON ID PARIZQ ID ID PARDER PTCOMA .)


state 976

    (400) indexinstr -> CREATE INDEX ID ON ID PARIZQ ID PARDER whereselect PTCOMA .

    $end            reduce using rule 400 (indexinstr -> CREATE INDEX ID ON ID PARIZQ ID PARDER whereselect PTCOMA .)


state 977

    (396) indexinstr -> CREATE INDEX ID ON ID PARIZQ ID COMA ID PARDER . PTCOMA

    PTCOMA          shift and go to state 1027


state 978

    (399) indexinstr -> CREATE INDEX ID ON ID PARIZQ LOWER PARIZQ ID PARDER . PARDER PTCOMA

    PARDER          shift and go to state 1028


state 979

    (188) anular -> NULLS LAST .

    PARDER          reduce using rule 188 (anular -> NULLS LAST .)
    COMA            reduce using rule 188 (anular -> NULLS LAST .)
    LIMIT           reduce using rule 188 (anular -> NULLS LAST .)
    UNION           reduce using rule 188 (anular -> NULLS LAST .)
    INTERSECT       reduce using rule 188 (anular -> NULLS LAST .)
    EXCEPT          reduce using rule 188 (anular -> NULLS LAST .)
    PTCOMA          reduce using rule 188 (anular -> NULLS LAST .)
    CSIMPLE         reduce using rule 188 (anular -> NULLS LAST .)


state 980

    (189) anular -> NULLS FIRST .

    PARDER          reduce using rule 189 (anular -> NULLS FIRST .)
    COMA            reduce using rule 189 (anular -> NULLS FIRST .)
    LIMIT           reduce using rule 189 (anular -> NULLS FIRST .)
    UNION           reduce using rule 189 (anular -> NULLS FIRST .)
    INTERSECT       reduce using rule 189 (anular -> NULLS FIRST .)
    EXCEPT          reduce using rule 189 (anular -> NULLS FIRST .)
    PTCOMA          reduce using rule 189 (anular -> NULLS FIRST .)
    CSIMPLE         reduce using rule 189 (anular -> NULLS FIRST .)


state 981

    (395) indexinstr -> CREATE INDEX ID ON ID USING HASH PARIZQ ID PARDER . PTCOMA

    PTCOMA          shift and go to state 1029


state 982

    (398) indexinstr -> CREATE UNIQUE INDEX ID ON ID PARIZQ columnas PARDER PTCOMA .

    $end            reduce using rule 398 (indexinstr -> CREATE UNIQUE INDEX ID ON ID PARIZQ columnas PARDER PTCOMA .)


state 983

    (426) cuerpofuncion -> CADDOLAR declaraciones cuerpo . CADDOLAR LANGUAGE PLPGSQL PTCOMA
    (427) cuerpofuncion -> CADDOLAR declaraciones cuerpo . CADDOLAR PTCOMA

    CADDOLAR        shift and go to state 1030


state 984

    (445) cuerpo -> BEGIN . instrlistabloque END PTCOMA
    (446) instrlistabloque -> . listabloque
    (447) instrlistabloque -> . empty
    (448) listabloque -> . listabloque bloque
    (449) listabloque -> . bloque
    (546) empty -> .
    (450) bloque -> . raisenotice
    (451) bloque -> . asignacionbloque
    (452) bloque -> . subbloque
    (453) bloque -> . returnbloque
    (454) bloque -> . instrexecute
    (455) bloque -> . getdiagnostic
    (456) bloque -> . instrnull
    (457) bloque -> . instrif
    (458) bloque -> . instrcase
    (459) bloque -> . commitinstr
    (460) bloque -> . rollbackinstr
    (461) bloque -> . insert_instr
    (462) bloque -> . update_instr
    (463) bloque -> . alter_instr PTCOMA
    (464) bloque -> . create_enum
    (465) bloque -> . drop_table
    (466) bloque -> . delete_instr
    (467) bloque -> . truncate_instr
    (468) bloque -> . select_instr
    (471) raisenotice -> . RAISE NOTICE CADENASIMPLE COMA ID PTCOMA
    (472) raisenotice -> . RAISE NOTICE CADENASIMPLE PTCOMA
    (473) asignacionbloque -> . ID IGUAL expresion PTCOMA
    (474) asignacionbloque -> . ID PTIGUAL expresion PTCOMA
    (479) subbloque -> . declaraciones cuerposub
    (475) returnbloque -> . RETURN condicion PTCOMA
    (476) returnbloque -> . RETURN QUERY select_instr1 PTCOMA
    (477) returnbloque -> . RETURN QUERY instrexecute PTCOMA
    (478) returnbloque -> . RETURN PTCOMA
    (517) instrexecute -> . EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion
    (518) instrexecute -> . EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion
    (525) getdiagnostic -> . GET DIAGNOSTICS ID IGUAL ID
    (526) getdiagnostic -> . GET DIAGNOSTICS ID PTIGUAL ID
    (527) instrnull -> . NULL PTCOMA
    (528) instrif -> . IF condiciones THEN instrlistabloque END IF PTCOMA
    (529) instrif -> . IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA
    (530) instrif -> . IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA
    (531) instrif -> . IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA
    (535) instrcase -> . CASE expresion listawhen1 elsecase END CASE PTCOMA
    (541) instrcase -> . CASE listawhen2 elsecase END CASE PTCOMA
    (469) commitinstr -> . COMMIT PTCOMA
    (470) rollbackinstr -> . ROLLBACK PTCOMA
    (48) insert_instr -> . INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA
    (49) insert_instr -> . INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA
    (58) update_instr -> . UPDATE ID SET asignaciones PTCOMA
    (59) update_instr -> . UPDATE ID SET asignaciones WHERE condiciones PTCOMA
    (298) alter_instr -> . ALTER TABLE ID ADD COLUMN list_columns
    (299) alter_instr -> . ALTER TABLE ID ADD CHECK PARIZQ condicion PARDER
    (300) alter_instr -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER
    (301) alter_instr -> . ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID
    (302) alter_instr -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL
    (303) alter_instr -> . ALTER TABLE ID DROP CONSTRAINT ID
    (304) alter_instr -> . ALTER TABLE ID RENAME COLUMN ID TO ID
    (305) alter_instr -> . ALTER TABLE ID DROP COLUMN listtablas
    (306) alter_instr -> . ALTER TABLE ID list_alter_column
    (365) create_enum -> . CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA
    (368) drop_table -> . DROP TABLE ID PTCOMA
    (63) delete_instr -> . DELETE FROM ID PTCOMA
    (64) delete_instr -> . DELETE FROM ID WHERE condiciones PTCOMA
    (65) truncate_instr -> . TRUNCATE listtablas PTCOMA
    (66) truncate_instr -> . TRUNCATE listtablas CASCADE PTCOMA
    (67) truncate_instr -> . TRUNCATE TABLE listtablas PTCOMA
    (68) truncate_instr -> . TRUNCATE TABLE listtablas CASCADE PTCOMA
    (71) select_instr -> . select_instr1 second_query PTCOMA
    (428) declaraciones -> . DECLARE listadeclaraciones
    (429) declaraciones -> . empty
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    END             reduce using rule 546 (empty -> .)
    BEGIN           reduce using rule 546 (empty -> .)
    RAISE           shift and go to state 1054
    ID              shift and go to state 1055
    RETURN          shift and go to state 1057
    EXECUTE         shift and go to state 1058
    GET             shift and go to state 1059
    NULL            shift and go to state 1060
    IF              shift and go to state 1061
    CASE            shift and go to state 1062
    COMMIT          shift and go to state 1063
    ROLLBACK        shift and go to state 1064
    INSERT          shift and go to state 30
    UPDATE          shift and go to state 31
    ALTER           shift and go to state 1065
    CREATE          shift and go to state 1067
    DROP            shift and go to state 1066
    DELETE          shift and go to state 32
    TRUNCATE        shift and go to state 33
    DECLARE         shift and go to state 920
    SELECT          shift and go to state 102

    instrlistabloque               shift and go to state 1031
    listabloque                    shift and go to state 1032
    empty                          shift and go to state 1033
    bloque                         shift and go to state 1034
    raisenotice                    shift and go to state 1035
    asignacionbloque               shift and go to state 1036
    subbloque                      shift and go to state 1037
    returnbloque                   shift and go to state 1038
    instrexecute                   shift and go to state 1039
    getdiagnostic                  shift and go to state 1040
    instrnull                      shift and go to state 1041
    instrif                        shift and go to state 1042
    instrcase                      shift and go to state 1043
    commitinstr                    shift and go to state 1044
    rollbackinstr                  shift and go to state 1045
    insert_instr                   shift and go to state 1046
    update_instr                   shift and go to state 1047
    alter_instr                    shift and go to state 1048
    create_enum                    shift and go to state 1049
    drop_table                     shift and go to state 1050
    delete_instr                   shift and go to state 1051
    truncate_instr                 shift and go to state 1052
    select_instr                   shift and go to state 1053
    declaraciones                  shift and go to state 1056
    select_instr1                  shift and go to state 34

state 985

    (428) declaraciones -> DECLARE listadeclaraciones .
    (430) listadeclaraciones -> listadeclaraciones . declaracion
    (432) declaracion -> . ID constantintr type_column1 notnullinst asignavalor PTCOMA
    (433) declaracion -> . ID ALIAS1 FOR DOLAR ENTERO PTCOMA
    (434) declaracion -> . ID ALIAS1 FOR ID PTCOMA
    (435) declaracion -> . ID cualquieridentificador MODULO TYPE PTCOMA
    (436) declaracion -> . ID cualquieridentificador MODULO ROWTYPE PTCOMA

    BEGIN           reduce using rule 428 (declaraciones -> DECLARE listadeclaraciones .)
    ID              shift and go to state 987

    declaracion                    shift and go to state 1068

state 986

    (431) listadeclaraciones -> declaracion .

    ID              reduce using rule 431 (listadeclaraciones -> declaracion .)
    BEGIN           reduce using rule 431 (listadeclaraciones -> declaracion .)


state 987

    (432) declaracion -> ID . constantintr type_column1 notnullinst asignavalor PTCOMA
    (433) declaracion -> ID . ALIAS1 FOR DOLAR ENTERO PTCOMA
    (434) declaracion -> ID . ALIAS1 FOR ID PTCOMA
    (435) declaracion -> ID . cualquieridentificador MODULO TYPE PTCOMA
    (436) declaracion -> ID . cualquieridentificador MODULO ROWTYPE PTCOMA
    (437) constantintr -> . CONSTANT
    (438) constantintr -> . empty
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (546) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ALIAS1          shift and go to state 1070
    CONSTANT        shift and go to state 1072
    ID              shift and go to state 234
    SMALLINT        reduce using rule 546 (empty -> .)
    INTEGER         reduce using rule 546 (empty -> .)
    BIGINT          reduce using rule 546 (empty -> .)
    RDECIMAL        reduce using rule 546 (empty -> .)
    NUMERIC         reduce using rule 546 (empty -> .)
    REAL            reduce using rule 546 (empty -> .)
    FLOAT           reduce using rule 546 (empty -> .)
    INT             reduce using rule 546 (empty -> .)
    DOUBLE          reduce using rule 546 (empty -> .)
    MONEY           reduce using rule 546 (empty -> .)
    VARCHAR         reduce using rule 546 (empty -> .)
    CHARACTER       reduce using rule 546 (empty -> .)
    CHAR            reduce using rule 546 (empty -> .)
    TEXT            reduce using rule 546 (empty -> .)
    TIMESTAMP       reduce using rule 546 (empty -> .)
    DATE            reduce using rule 546 (empty -> .)
    TIME            reduce using rule 546 (empty -> .)
    BOOLEAN         reduce using rule 546 (empty -> .)
    RECORD          reduce using rule 546 (empty -> .)
    TABLE           reduce using rule 546 (empty -> .)

  ! ID              [ reduce using rule 546 (empty -> .) ]

    constantintr                   shift and go to state 1069
    cualquieridentificador         shift and go to state 1071
    empty                          shift and go to state 1073

state 988

    (493) type_column1 -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .

    COMA            reduce using rule 493 (type_column1 -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .)
    PARDER          reduce using rule 493 (type_column1 -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .)
    AS              reduce using rule 493 (type_column1 -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .)
    NOT             reduce using rule 493 (type_column1 -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .)
    DEFAULT         reduce using rule 493 (type_column1 -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .)
    PTIGUAL         reduce using rule 493 (type_column1 -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .)
    IGUAL           reduce using rule 493 (type_column1 -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .)
    PTCOMA          reduce using rule 493 (type_column1 -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .)


state 989

    (300) alter_instr -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER .

    PTCOMA          reduce using rule 300 (alter_instr -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER .)


state 990

    (301) alter_instr -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES . ID

    ID              shift and go to state 1074


state 991

    (307) list_alter_column -> list_alter_column COMA ALTER COLUMN ID TYPE type_column .

    COMA            reduce using rule 307 (list_alter_column -> list_alter_column COMA ALTER COLUMN ID TYPE type_column .)
    PTCOMA          reduce using rule 307 (list_alter_column -> list_alter_column COMA ALTER COLUMN ID TYPE type_column .)


state 992

    (49) insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER . PTCOMA

    PTCOMA          shift and go to state 1075


state 993

    (178) orderby -> ORDER BY listaorderby .
    (179) orderby -> ORDER BY listaorderby . instrlimit
    (181) listaorderby -> listaorderby . COMA valororderby
    (191) instrlimit -> . LIMIT ENTERO instroffset
    (192) instrlimit -> . LIMIT ALL instroffset

    UNION           reduce using rule 178 (orderby -> ORDER BY listaorderby .)
    INTERSECT       reduce using rule 178 (orderby -> ORDER BY listaorderby .)
    EXCEPT          reduce using rule 178 (orderby -> ORDER BY listaorderby .)
    PTCOMA          reduce using rule 178 (orderby -> ORDER BY listaorderby .)
    PARDER          reduce using rule 178 (orderby -> ORDER BY listaorderby .)
    CSIMPLE         reduce using rule 178 (orderby -> ORDER BY listaorderby .)
    COMA            shift and go to state 1077
    LIMIT           shift and go to state 1078

    instrlimit                     shift and go to state 1076

state 994

    (182) listaorderby -> valororderby .

    COMA            reduce using rule 182 (listaorderby -> valororderby .)
    LIMIT           reduce using rule 182 (listaorderby -> valororderby .)
    UNION           reduce using rule 182 (listaorderby -> valororderby .)
    INTERSECT       reduce using rule 182 (listaorderby -> valororderby .)
    EXCEPT          reduce using rule 182 (listaorderby -> valororderby .)
    PTCOMA          reduce using rule 182 (listaorderby -> valororderby .)
    PARDER          reduce using rule 182 (listaorderby -> valororderby .)
    CSIMPLE         reduce using rule 182 (listaorderby -> valororderby .)


state 995

    (158) groupby -> GROUP BY listagroupby HAVING . condicioneshaving
    (164) condicioneshaving -> . condicioneshaving OR condicionhaving
    (165) condicioneshaving -> . condicioneshaving AND condicionhaving
    (166) condicioneshaving -> . condicionhaving
    (167) condicionhaving -> . expresionhaving MENQUE expresionhaving
    (168) condicionhaving -> . expresionhaving MAYQUE expresionhaving
    (169) condicionhaving -> . expresionhaving MENIGUAL expresionhaving
    (170) condicionhaving -> . expresionhaving MAYIGUAL expresionhaving
    (171) condicionhaving -> . expresionhaving IGUAL expresionhaving
    (172) condicionhaving -> . expresionhaving DIFERENTE expresionhaving
    (173) expresionhaving -> . cualquiercadena
    (174) expresionhaving -> . expresionaritmetica
    (175) expresionhaving -> . condicionhavingagregacion
    (176) expresionhaving -> . funcion_matematica_ws
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (177) condicionhavingagregacion -> . agregacion PARIZQ cualquieridentificador PARDER
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (113) agregacion -> . SUM
    (114) agregacion -> . AVG
    (115) agregacion -> . MAX
    (116) agregacion -> . MIN

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234
    SUM             shift and go to state 172
    AVG             shift and go to state 173
    MAX             shift and go to state 174
    MIN             shift and go to state 175

    condicioneshaving              shift and go to state 1079
    condicionhaving                shift and go to state 1080
    expresionhaving                shift and go to state 1081
    cualquiercadena                shift and go to state 1082
    expresionaritmetica            shift and go to state 1083
    condicionhavingagregacion      shift and go to state 1084
    funcion_matematica_ws          shift and go to state 1085
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249
    agregacion                     shift and go to state 1086

state 996

    (160) listagroupby -> listagroupby COMA . valgroupby
    (162) valgroupby -> . cualquieridentificador
    (163) valgroupby -> . cualquiernumero
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL

    ID              shift and go to state 234
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253

    valgroupby                     shift and go to state 1087
    cualquieridentificador         shift and go to state 936
    cualquiernumero                shift and go to state 937

state 997

    (133) condicioneswhere -> NOT PARIZQ condicioneswhere PARDER .

    OR              reduce using rule 133 (condicioneswhere -> NOT PARIZQ condicioneswhere PARDER .)
    AND             reduce using rule 133 (condicioneswhere -> NOT PARIZQ condicioneswhere PARDER .)
    GROUP           reduce using rule 133 (condicioneswhere -> NOT PARIZQ condicioneswhere PARDER .)
    ORDER           reduce using rule 133 (condicioneswhere -> NOT PARIZQ condicioneswhere PARDER .)
    UNION           reduce using rule 133 (condicioneswhere -> NOT PARIZQ condicioneswhere PARDER .)
    INTERSECT       reduce using rule 133 (condicioneswhere -> NOT PARIZQ condicioneswhere PARDER .)
    EXCEPT          reduce using rule 133 (condicioneswhere -> NOT PARIZQ condicioneswhere PARDER .)
    PTCOMA          reduce using rule 133 (condicioneswhere -> NOT PARIZQ condicioneswhere PARDER .)
    PARDER          reduce using rule 133 (condicioneswhere -> NOT PARIZQ condicioneswhere PARDER .)
    CSIMPLE         reduce using rule 133 (condicioneswhere -> NOT PARIZQ condicioneswhere PARDER .)


state 998

    (147) notwhereexists -> NOT EXISTS PARIZQ select_instr1 . PARDER

    PARDER          shift and go to state 1088


state 999

    (146) whereexists -> EXISTS PARIZQ select_instr1 PARDER .

    OR              reduce using rule 146 (whereexists -> EXISTS PARIZQ select_instr1 PARDER .)
    AND             reduce using rule 146 (whereexists -> EXISTS PARIZQ select_instr1 PARDER .)
    GROUP           reduce using rule 146 (whereexists -> EXISTS PARIZQ select_instr1 PARDER .)
    ORDER           reduce using rule 146 (whereexists -> EXISTS PARIZQ select_instr1 PARDER .)
    UNION           reduce using rule 146 (whereexists -> EXISTS PARIZQ select_instr1 PARDER .)
    INTERSECT       reduce using rule 146 (whereexists -> EXISTS PARIZQ select_instr1 PARDER .)
    EXCEPT          reduce using rule 146 (whereexists -> EXISTS PARIZQ select_instr1 PARDER .)
    PTCOMA          reduce using rule 146 (whereexists -> EXISTS PARIZQ select_instr1 PARDER .)
    PARDER          reduce using rule 146 (whereexists -> EXISTS PARIZQ select_instr1 PARDER .)
    CSIMPLE         reduce using rule 146 (whereexists -> EXISTS PARIZQ select_instr1 PARDER .)


state 1000

    (150) wherenotin -> cualquiernumero NOT IN PARIZQ . select_instr1 PARDER
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    SELECT          shift and go to state 102

    select_instr1                  shift and go to state 1089

state 1001

    (371) not_between_state -> cualquiernumero NOT BETWEEN valores . AND valores

    AND             shift and go to state 1090


state 1002

    (148) wherein -> cualquiernumero IN PARIZQ select_instr1 . PARDER

    PARDER          shift and go to state 1091


state 1003

    (369) between_state -> cualquiernumero BETWEEN valores AND . valores
    (379) valores -> . cualquiernumero
    (380) valores -> . cualquiercadena
    (381) valores -> . cualquieridentificador
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    cualquiernumero                shift and go to state 947
    valores                        shift and go to state 1092
    cualquiercadena                shift and go to state 949
    cualquieridentificador         shift and go to state 950

state 1004

    (151) wherenotin -> cadenastodas NOT IN PARIZQ . select_instr1 PARDER
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    SELECT          shift and go to state 102

    select_instr1                  shift and go to state 1093

state 1005

    (152) wherenotlike -> cadenastodas NOT LIKE CADENALIKE .

    OR              reduce using rule 152 (wherenotlike -> cadenastodas NOT LIKE CADENALIKE .)
    AND             reduce using rule 152 (wherenotlike -> cadenastodas NOT LIKE CADENALIKE .)
    GROUP           reduce using rule 152 (wherenotlike -> cadenastodas NOT LIKE CADENALIKE .)
    ORDER           reduce using rule 152 (wherenotlike -> cadenastodas NOT LIKE CADENALIKE .)
    UNION           reduce using rule 152 (wherenotlike -> cadenastodas NOT LIKE CADENALIKE .)
    INTERSECT       reduce using rule 152 (wherenotlike -> cadenastodas NOT LIKE CADENALIKE .)
    EXCEPT          reduce using rule 152 (wherenotlike -> cadenastodas NOT LIKE CADENALIKE .)
    PTCOMA          reduce using rule 152 (wherenotlike -> cadenastodas NOT LIKE CADENALIKE .)
    PARDER          reduce using rule 152 (wherenotlike -> cadenastodas NOT LIKE CADENALIKE .)
    CSIMPLE         reduce using rule 152 (wherenotlike -> cadenastodas NOT LIKE CADENALIKE .)


state 1006

    (372) not_between_state -> cadenastodas NOT BETWEEN valores . AND valores

    AND             shift and go to state 1094


state 1007

    (149) wherein -> cadenastodas IN PARIZQ select_instr1 . PARDER

    PARDER          shift and go to state 1095


state 1008

    (370) between_state -> cadenastodas BETWEEN valores AND . valores
    (379) valores -> . cualquiernumero
    (380) valores -> . cualquiercadena
    (381) valores -> . cualquieridentificador
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    valores                        shift and go to state 1096
    cualquiernumero                shift and go to state 947
    cualquiercadena                shift and go to state 949
    cualquieridentificador         shift and go to state 950

state 1009

    (154) wheresubstring -> SUBSTRING PARIZQ cadenastodas COMA . ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE

    ENTERO          shift and go to state 1097


state 1010

    (374) predicates_state -> valores IS NOT NULL .

    OR              reduce using rule 374 (predicates_state -> valores IS NOT NULL .)
    AND             reduce using rule 374 (predicates_state -> valores IS NOT NULL .)
    GROUP           reduce using rule 374 (predicates_state -> valores IS NOT NULL .)
    ORDER           reduce using rule 374 (predicates_state -> valores IS NOT NULL .)
    UNION           reduce using rule 374 (predicates_state -> valores IS NOT NULL .)
    INTERSECT       reduce using rule 374 (predicates_state -> valores IS NOT NULL .)
    EXCEPT          reduce using rule 374 (predicates_state -> valores IS NOT NULL .)
    PTCOMA          reduce using rule 374 (predicates_state -> valores IS NOT NULL .)
    PARDER          reduce using rule 374 (predicates_state -> valores IS NOT NULL .)
    CSIMPLE         reduce using rule 374 (predicates_state -> valores IS NOT NULL .)


state 1011

    (378) is_distinct_state -> valores IS NOT DISTINCT . FROM valores

    FROM            shift and go to state 1098


state 1012

    (377) is_distinct_state -> valores IS DISTINCT FROM . valores
    (379) valores -> . cualquiernumero
    (380) valores -> . cualquiercadena
    (381) valores -> . cualquieridentificador
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    valores                        shift and go to state 1099
    cualquiernumero                shift and go to state 947
    cualquiercadena                shift and go to state 949
    cualquieridentificador         shift and go to state 950

state 1013

    (254) explist -> expresionaritmetica COMA expresionaritmetica COMA expresionaritmetica COMA . expresionaritmetica
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresionaritmetica            shift and go to state 1100
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 1014

    (278) func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .

    ID              reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    CADENASIMPLE    reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    CADENADOBLE     reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    AS              reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    COMA            reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    FROM            reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    UNION           reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    INTERSECT       reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    EXCEPT          reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    PTCOMA          reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    PARDER          reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    CSIMPLE         reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    MENQUE          reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    MAYQUE          reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    MENIGUAL        reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    MAYIGUAL        reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    IGUAL           reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    DIFERENTE       reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    AND             reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    OR              reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    WHERE           reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    THEN            reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    RAISE           reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    RETURN          reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    EXECUTE         reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    GET             reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    NULL            reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    IF              reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    CASE            reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    COMMIT          reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    ROLLBACK        reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    INSERT          reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    UPDATE          reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    ALTER           reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    CREATE          reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    DROP            reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    DELETE          reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    TRUNCATE        reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    DECLARE         reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    SELECT          reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    BEGIN           reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    END             reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    ELSE            reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    ELSIF           reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    WHEN            reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    GROUP           reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    ORDER           reduce using rule 278 (func_bin_strings_2 -> SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)


state 1015

    (279) func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .

    ID              reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    CADENASIMPLE    reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    CADENADOBLE     reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    AS              reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    COMA            reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    FROM            reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    UNION           reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    INTERSECT       reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    EXCEPT          reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    PTCOMA          reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    PARDER          reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    CSIMPLE         reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    MENQUE          reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    MAYQUE          reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    MENIGUAL        reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    MAYIGUAL        reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    IGUAL           reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    DIFERENTE       reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    AND             reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    OR              reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    WHERE           reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    THEN            reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    RAISE           reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    RETURN          reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    EXECUTE         reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    GET             reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    NULL            reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    IF              reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    CASE            reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    COMMIT          reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    ROLLBACK        reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    INSERT          reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    UPDATE          reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    ALTER           reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    CREATE          reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    DROP            reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    DELETE          reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    TRUNCATE        reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    DECLARE         reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    SELECT          reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    BEGIN           reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    END             reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    ELSE            reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    ELSIF           reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    WHEN            reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    GROUP           reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)
    ORDER           reduce using rule 279 (func_bin_strings_2 -> SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER .)


state 1016

    (283) func_bin_strings_4 -> SET_BYTE PARIZQ cadena COMA ENTERO COMA ENTERO PARDER .

    ID              reduce using rule 283 (func_bin_strings_4 -> SET_BYTE PARIZQ cadena COMA ENTERO COMA ENTERO PARDER .)
    CADENASIMPLE    reduce using rule 283 (func_bin_strings_4 -> SET_BYTE PARIZQ cadena COMA ENTERO COMA ENTERO PARDER .)
    CADENADOBLE     reduce using rule 283 (func_bin_strings_4 -> SET_BYTE PARIZQ cadena COMA ENTERO COMA ENTERO PARDER .)
    AS              reduce using rule 283 (func_bin_strings_4 -> SET_BYTE PARIZQ cadena COMA ENTERO COMA ENTERO PARDER .)
    COMA            reduce using rule 283 (func_bin_strings_4 -> SET_BYTE PARIZQ cadena COMA ENTERO COMA ENTERO PARDER .)
    FROM            reduce using rule 283 (func_bin_strings_4 -> SET_BYTE PARIZQ cadena COMA ENTERO COMA ENTERO PARDER .)
    UNION           reduce using rule 283 (func_bin_strings_4 -> SET_BYTE PARIZQ cadena COMA ENTERO COMA ENTERO PARDER .)
    INTERSECT       reduce using rule 283 (func_bin_strings_4 -> SET_BYTE PARIZQ cadena COMA ENTERO COMA ENTERO PARDER .)
    EXCEPT          reduce using rule 283 (func_bin_strings_4 -> SET_BYTE PARIZQ cadena COMA ENTERO COMA ENTERO PARDER .)
    PTCOMA          reduce using rule 283 (func_bin_strings_4 -> SET_BYTE PARIZQ cadena COMA ENTERO COMA ENTERO PARDER .)
    PARDER          reduce using rule 283 (func_bin_strings_4 -> SET_BYTE PARIZQ cadena COMA ENTERO COMA ENTERO PARDER .)
    CSIMPLE         reduce using rule 283 (func_bin_strings_4 -> SET_BYTE PARIZQ cadena COMA ENTERO COMA ENTERO PARDER .)


state 1017

    (348) attributes -> default_value null_field constraint_field null_field primary_key .

    PARDER          reduce using rule 348 (attributes -> default_value null_field constraint_field null_field primary_key .)
    COMA            reduce using rule 348 (attributes -> default_value null_field constraint_field null_field primary_key .)


state 1018

    (353) primary_key -> PRIMARY . KEY

    KEY             shift and go to state 1101


state 1019

    (354) primary_key -> empty .

    PARDER          reduce using rule 354 (primary_key -> empty .)
    COMA            reduce using rule 354 (primary_key -> empty .)


state 1020

    (359) constraint_field -> CONSTRAINT ID check_unique .

    NULL            reduce using rule 359 (constraint_field -> CONSTRAINT ID check_unique .)
    NOT             reduce using rule 359 (constraint_field -> CONSTRAINT ID check_unique .)
    PRIMARY         reduce using rule 359 (constraint_field -> CONSTRAINT ID check_unique .)
    PARDER          reduce using rule 359 (constraint_field -> CONSTRAINT ID check_unique .)
    COMA            reduce using rule 359 (constraint_field -> CONSTRAINT ID check_unique .)


state 1021

    (362) check_unique -> UNIQUE .

    NULL            reduce using rule 362 (check_unique -> UNIQUE .)
    NOT             reduce using rule 362 (check_unique -> UNIQUE .)
    PRIMARY         reduce using rule 362 (check_unique -> UNIQUE .)
    PARDER          reduce using rule 362 (check_unique -> UNIQUE .)
    COMA            reduce using rule 362 (check_unique -> UNIQUE .)


state 1022

    (363) check_unique -> CHECK . PARIZQ condiciones PARDER

    PARIZQ          shift and go to state 1102


state 1023

    (364) check_unique -> empty .

    NULL            reduce using rule 364 (check_unique -> empty .)
    NOT             reduce using rule 364 (check_unique -> empty .)
    PRIMARY         reduce using rule 364 (check_unique -> empty .)
    PARDER          reduce using rule 364 (check_unique -> empty .)
    COMA            reduce using rule 364 (check_unique -> empty .)


state 1024

    (360) constraint_field -> CHECK PARIZQ condiciones . PARDER
    (195) condiciones -> condiciones . AND condicion
    (196) condiciones -> condiciones . OR condicion

    PARDER          shift and go to state 1103
    AND             shift and go to state 585
    OR              shift and go to state 586


state 1025

    (315) type_column -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .

    DEFAULT         reduce using rule 315 (type_column -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .)
    NULL            reduce using rule 315 (type_column -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .)
    NOT             reduce using rule 315 (type_column -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .)
    UNIQUE          reduce using rule 315 (type_column -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .)
    CONSTRAINT      reduce using rule 315 (type_column -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .)
    CHECK           reduce using rule 315 (type_column -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .)
    PRIMARY         reduce using rule 315 (type_column -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .)
    PARDER          reduce using rule 315 (type_column -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .)
    COMA            reduce using rule 315 (type_column -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .)
    PTCOMA          reduce using rule 315 (type_column -> RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER .)


state 1026

    (343) end_create_table -> INHERITS PARIZQ ID PARDER PTCOMA .

    $end            reduce using rule 343 (end_create_table -> INHERITS PARIZQ ID PARDER PTCOMA .)


state 1027

    (396) indexinstr -> CREATE INDEX ID ON ID PARIZQ ID COMA ID PARDER PTCOMA .

    $end            reduce using rule 396 (indexinstr -> CREATE INDEX ID ON ID PARIZQ ID COMA ID PARDER PTCOMA .)


state 1028

    (399) indexinstr -> CREATE INDEX ID ON ID PARIZQ LOWER PARIZQ ID PARDER PARDER . PTCOMA

    PTCOMA          shift and go to state 1104


state 1029

    (395) indexinstr -> CREATE INDEX ID ON ID USING HASH PARIZQ ID PARDER PTCOMA .

    $end            reduce using rule 395 (indexinstr -> CREATE INDEX ID ON ID USING HASH PARIZQ ID PARDER PTCOMA .)


state 1030

    (426) cuerpofuncion -> CADDOLAR declaraciones cuerpo CADDOLAR . LANGUAGE PLPGSQL PTCOMA
    (427) cuerpofuncion -> CADDOLAR declaraciones cuerpo CADDOLAR . PTCOMA

    LANGUAGE        shift and go to state 1105
    PTCOMA          shift and go to state 1106


state 1031

    (445) cuerpo -> BEGIN instrlistabloque . END PTCOMA

    END             shift and go to state 1107


state 1032

    (446) instrlistabloque -> listabloque .
    (448) listabloque -> listabloque . bloque
    (450) bloque -> . raisenotice
    (451) bloque -> . asignacionbloque
    (452) bloque -> . subbloque
    (453) bloque -> . returnbloque
    (454) bloque -> . instrexecute
    (455) bloque -> . getdiagnostic
    (456) bloque -> . instrnull
    (457) bloque -> . instrif
    (458) bloque -> . instrcase
    (459) bloque -> . commitinstr
    (460) bloque -> . rollbackinstr
    (461) bloque -> . insert_instr
    (462) bloque -> . update_instr
    (463) bloque -> . alter_instr PTCOMA
    (464) bloque -> . create_enum
    (465) bloque -> . drop_table
    (466) bloque -> . delete_instr
    (467) bloque -> . truncate_instr
    (468) bloque -> . select_instr
    (471) raisenotice -> . RAISE NOTICE CADENASIMPLE COMA ID PTCOMA
    (472) raisenotice -> . RAISE NOTICE CADENASIMPLE PTCOMA
    (473) asignacionbloque -> . ID IGUAL expresion PTCOMA
    (474) asignacionbloque -> . ID PTIGUAL expresion PTCOMA
    (479) subbloque -> . declaraciones cuerposub
    (475) returnbloque -> . RETURN condicion PTCOMA
    (476) returnbloque -> . RETURN QUERY select_instr1 PTCOMA
    (477) returnbloque -> . RETURN QUERY instrexecute PTCOMA
    (478) returnbloque -> . RETURN PTCOMA
    (517) instrexecute -> . EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion
    (518) instrexecute -> . EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion
    (525) getdiagnostic -> . GET DIAGNOSTICS ID IGUAL ID
    (526) getdiagnostic -> . GET DIAGNOSTICS ID PTIGUAL ID
    (527) instrnull -> . NULL PTCOMA
    (528) instrif -> . IF condiciones THEN instrlistabloque END IF PTCOMA
    (529) instrif -> . IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA
    (530) instrif -> . IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA
    (531) instrif -> . IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA
    (535) instrcase -> . CASE expresion listawhen1 elsecase END CASE PTCOMA
    (541) instrcase -> . CASE listawhen2 elsecase END CASE PTCOMA
    (469) commitinstr -> . COMMIT PTCOMA
    (470) rollbackinstr -> . ROLLBACK PTCOMA
    (48) insert_instr -> . INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA
    (49) insert_instr -> . INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA
    (58) update_instr -> . UPDATE ID SET asignaciones PTCOMA
    (59) update_instr -> . UPDATE ID SET asignaciones WHERE condiciones PTCOMA
    (298) alter_instr -> . ALTER TABLE ID ADD COLUMN list_columns
    (299) alter_instr -> . ALTER TABLE ID ADD CHECK PARIZQ condicion PARDER
    (300) alter_instr -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER
    (301) alter_instr -> . ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID
    (302) alter_instr -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL
    (303) alter_instr -> . ALTER TABLE ID DROP CONSTRAINT ID
    (304) alter_instr -> . ALTER TABLE ID RENAME COLUMN ID TO ID
    (305) alter_instr -> . ALTER TABLE ID DROP COLUMN listtablas
    (306) alter_instr -> . ALTER TABLE ID list_alter_column
    (365) create_enum -> . CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA
    (368) drop_table -> . DROP TABLE ID PTCOMA
    (63) delete_instr -> . DELETE FROM ID PTCOMA
    (64) delete_instr -> . DELETE FROM ID WHERE condiciones PTCOMA
    (65) truncate_instr -> . TRUNCATE listtablas PTCOMA
    (66) truncate_instr -> . TRUNCATE listtablas CASCADE PTCOMA
    (67) truncate_instr -> . TRUNCATE TABLE listtablas PTCOMA
    (68) truncate_instr -> . TRUNCATE TABLE listtablas CASCADE PTCOMA
    (71) select_instr -> . select_instr1 second_query PTCOMA
    (428) declaraciones -> . DECLARE listadeclaraciones
    (429) declaraciones -> . empty
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom
    (546) empty -> .

    END             reduce using rule 446 (instrlistabloque -> listabloque .)
    ELSE            reduce using rule 446 (instrlistabloque -> listabloque .)
    ELSIF           reduce using rule 446 (instrlistabloque -> listabloque .)
    WHEN            reduce using rule 446 (instrlistabloque -> listabloque .)
    RAISE           shift and go to state 1054
    ID              shift and go to state 1055
    RETURN          shift and go to state 1057
    EXECUTE         shift and go to state 1058
    GET             shift and go to state 1059
    NULL            shift and go to state 1060
    IF              shift and go to state 1061
    CASE            shift and go to state 1062
    COMMIT          shift and go to state 1063
    ROLLBACK        shift and go to state 1064
    INSERT          shift and go to state 30
    UPDATE          shift and go to state 31
    ALTER           shift and go to state 1065
    CREATE          shift and go to state 1067
    DROP            shift and go to state 1066
    DELETE          shift and go to state 32
    TRUNCATE        shift and go to state 33
    DECLARE         shift and go to state 920
    SELECT          shift and go to state 102
    BEGIN           reduce using rule 546 (empty -> .)

    bloque                         shift and go to state 1108
    raisenotice                    shift and go to state 1035
    asignacionbloque               shift and go to state 1036
    subbloque                      shift and go to state 1037
    returnbloque                   shift and go to state 1038
    instrexecute                   shift and go to state 1039
    getdiagnostic                  shift and go to state 1040
    instrnull                      shift and go to state 1041
    instrif                        shift and go to state 1042
    instrcase                      shift and go to state 1043
    commitinstr                    shift and go to state 1044
    rollbackinstr                  shift and go to state 1045
    insert_instr                   shift and go to state 1046
    update_instr                   shift and go to state 1047
    alter_instr                    shift and go to state 1048
    create_enum                    shift and go to state 1049
    drop_table                     shift and go to state 1050
    delete_instr                   shift and go to state 1051
    truncate_instr                 shift and go to state 1052
    select_instr                   shift and go to state 1053
    declaraciones                  shift and go to state 1056
    select_instr1                  shift and go to state 34
    empty                          shift and go to state 921

state 1033

    (447) instrlistabloque -> empty .
    (429) declaraciones -> empty .

    END             reduce using rule 447 (instrlistabloque -> empty .)
    ELSE            reduce using rule 447 (instrlistabloque -> empty .)
    ELSIF           reduce using rule 447 (instrlistabloque -> empty .)
    WHEN            reduce using rule 447 (instrlistabloque -> empty .)
    BEGIN           reduce using rule 429 (declaraciones -> empty .)


state 1034

    (449) listabloque -> bloque .

    RAISE           reduce using rule 449 (listabloque -> bloque .)
    ID              reduce using rule 449 (listabloque -> bloque .)
    RETURN          reduce using rule 449 (listabloque -> bloque .)
    EXECUTE         reduce using rule 449 (listabloque -> bloque .)
    GET             reduce using rule 449 (listabloque -> bloque .)
    NULL            reduce using rule 449 (listabloque -> bloque .)
    IF              reduce using rule 449 (listabloque -> bloque .)
    CASE            reduce using rule 449 (listabloque -> bloque .)
    COMMIT          reduce using rule 449 (listabloque -> bloque .)
    ROLLBACK        reduce using rule 449 (listabloque -> bloque .)
    INSERT          reduce using rule 449 (listabloque -> bloque .)
    UPDATE          reduce using rule 449 (listabloque -> bloque .)
    ALTER           reduce using rule 449 (listabloque -> bloque .)
    CREATE          reduce using rule 449 (listabloque -> bloque .)
    DROP            reduce using rule 449 (listabloque -> bloque .)
    DELETE          reduce using rule 449 (listabloque -> bloque .)
    TRUNCATE        reduce using rule 449 (listabloque -> bloque .)
    DECLARE         reduce using rule 449 (listabloque -> bloque .)
    SELECT          reduce using rule 449 (listabloque -> bloque .)
    BEGIN           reduce using rule 449 (listabloque -> bloque .)
    END             reduce using rule 449 (listabloque -> bloque .)
    ELSE            reduce using rule 449 (listabloque -> bloque .)
    ELSIF           reduce using rule 449 (listabloque -> bloque .)
    WHEN            reduce using rule 449 (listabloque -> bloque .)


state 1035

    (450) bloque -> raisenotice .

    RAISE           reduce using rule 450 (bloque -> raisenotice .)
    ID              reduce using rule 450 (bloque -> raisenotice .)
    RETURN          reduce using rule 450 (bloque -> raisenotice .)
    EXECUTE         reduce using rule 450 (bloque -> raisenotice .)
    GET             reduce using rule 450 (bloque -> raisenotice .)
    NULL            reduce using rule 450 (bloque -> raisenotice .)
    IF              reduce using rule 450 (bloque -> raisenotice .)
    CASE            reduce using rule 450 (bloque -> raisenotice .)
    COMMIT          reduce using rule 450 (bloque -> raisenotice .)
    ROLLBACK        reduce using rule 450 (bloque -> raisenotice .)
    INSERT          reduce using rule 450 (bloque -> raisenotice .)
    UPDATE          reduce using rule 450 (bloque -> raisenotice .)
    ALTER           reduce using rule 450 (bloque -> raisenotice .)
    CREATE          reduce using rule 450 (bloque -> raisenotice .)
    DROP            reduce using rule 450 (bloque -> raisenotice .)
    DELETE          reduce using rule 450 (bloque -> raisenotice .)
    TRUNCATE        reduce using rule 450 (bloque -> raisenotice .)
    DECLARE         reduce using rule 450 (bloque -> raisenotice .)
    SELECT          reduce using rule 450 (bloque -> raisenotice .)
    BEGIN           reduce using rule 450 (bloque -> raisenotice .)
    END             reduce using rule 450 (bloque -> raisenotice .)
    ELSE            reduce using rule 450 (bloque -> raisenotice .)
    ELSIF           reduce using rule 450 (bloque -> raisenotice .)
    WHEN            reduce using rule 450 (bloque -> raisenotice .)


state 1036

    (451) bloque -> asignacionbloque .

    RAISE           reduce using rule 451 (bloque -> asignacionbloque .)
    ID              reduce using rule 451 (bloque -> asignacionbloque .)
    RETURN          reduce using rule 451 (bloque -> asignacionbloque .)
    EXECUTE         reduce using rule 451 (bloque -> asignacionbloque .)
    GET             reduce using rule 451 (bloque -> asignacionbloque .)
    NULL            reduce using rule 451 (bloque -> asignacionbloque .)
    IF              reduce using rule 451 (bloque -> asignacionbloque .)
    CASE            reduce using rule 451 (bloque -> asignacionbloque .)
    COMMIT          reduce using rule 451 (bloque -> asignacionbloque .)
    ROLLBACK        reduce using rule 451 (bloque -> asignacionbloque .)
    INSERT          reduce using rule 451 (bloque -> asignacionbloque .)
    UPDATE          reduce using rule 451 (bloque -> asignacionbloque .)
    ALTER           reduce using rule 451 (bloque -> asignacionbloque .)
    CREATE          reduce using rule 451 (bloque -> asignacionbloque .)
    DROP            reduce using rule 451 (bloque -> asignacionbloque .)
    DELETE          reduce using rule 451 (bloque -> asignacionbloque .)
    TRUNCATE        reduce using rule 451 (bloque -> asignacionbloque .)
    DECLARE         reduce using rule 451 (bloque -> asignacionbloque .)
    SELECT          reduce using rule 451 (bloque -> asignacionbloque .)
    BEGIN           reduce using rule 451 (bloque -> asignacionbloque .)
    END             reduce using rule 451 (bloque -> asignacionbloque .)
    ELSE            reduce using rule 451 (bloque -> asignacionbloque .)
    ELSIF           reduce using rule 451 (bloque -> asignacionbloque .)
    WHEN            reduce using rule 451 (bloque -> asignacionbloque .)


state 1037

    (452) bloque -> subbloque .

    RAISE           reduce using rule 452 (bloque -> subbloque .)
    ID              reduce using rule 452 (bloque -> subbloque .)
    RETURN          reduce using rule 452 (bloque -> subbloque .)
    EXECUTE         reduce using rule 452 (bloque -> subbloque .)
    GET             reduce using rule 452 (bloque -> subbloque .)
    NULL            reduce using rule 452 (bloque -> subbloque .)
    IF              reduce using rule 452 (bloque -> subbloque .)
    CASE            reduce using rule 452 (bloque -> subbloque .)
    COMMIT          reduce using rule 452 (bloque -> subbloque .)
    ROLLBACK        reduce using rule 452 (bloque -> subbloque .)
    INSERT          reduce using rule 452 (bloque -> subbloque .)
    UPDATE          reduce using rule 452 (bloque -> subbloque .)
    ALTER           reduce using rule 452 (bloque -> subbloque .)
    CREATE          reduce using rule 452 (bloque -> subbloque .)
    DROP            reduce using rule 452 (bloque -> subbloque .)
    DELETE          reduce using rule 452 (bloque -> subbloque .)
    TRUNCATE        reduce using rule 452 (bloque -> subbloque .)
    DECLARE         reduce using rule 452 (bloque -> subbloque .)
    SELECT          reduce using rule 452 (bloque -> subbloque .)
    BEGIN           reduce using rule 452 (bloque -> subbloque .)
    END             reduce using rule 452 (bloque -> subbloque .)
    ELSE            reduce using rule 452 (bloque -> subbloque .)
    ELSIF           reduce using rule 452 (bloque -> subbloque .)
    WHEN            reduce using rule 452 (bloque -> subbloque .)


state 1038

    (453) bloque -> returnbloque .

    RAISE           reduce using rule 453 (bloque -> returnbloque .)
    ID              reduce using rule 453 (bloque -> returnbloque .)
    RETURN          reduce using rule 453 (bloque -> returnbloque .)
    EXECUTE         reduce using rule 453 (bloque -> returnbloque .)
    GET             reduce using rule 453 (bloque -> returnbloque .)
    NULL            reduce using rule 453 (bloque -> returnbloque .)
    IF              reduce using rule 453 (bloque -> returnbloque .)
    CASE            reduce using rule 453 (bloque -> returnbloque .)
    COMMIT          reduce using rule 453 (bloque -> returnbloque .)
    ROLLBACK        reduce using rule 453 (bloque -> returnbloque .)
    INSERT          reduce using rule 453 (bloque -> returnbloque .)
    UPDATE          reduce using rule 453 (bloque -> returnbloque .)
    ALTER           reduce using rule 453 (bloque -> returnbloque .)
    CREATE          reduce using rule 453 (bloque -> returnbloque .)
    DROP            reduce using rule 453 (bloque -> returnbloque .)
    DELETE          reduce using rule 453 (bloque -> returnbloque .)
    TRUNCATE        reduce using rule 453 (bloque -> returnbloque .)
    DECLARE         reduce using rule 453 (bloque -> returnbloque .)
    SELECT          reduce using rule 453 (bloque -> returnbloque .)
    BEGIN           reduce using rule 453 (bloque -> returnbloque .)
    END             reduce using rule 453 (bloque -> returnbloque .)
    ELSE            reduce using rule 453 (bloque -> returnbloque .)
    ELSIF           reduce using rule 453 (bloque -> returnbloque .)
    WHEN            reduce using rule 453 (bloque -> returnbloque .)


state 1039

    (454) bloque -> instrexecute .

    RAISE           reduce using rule 454 (bloque -> instrexecute .)
    ID              reduce using rule 454 (bloque -> instrexecute .)
    RETURN          reduce using rule 454 (bloque -> instrexecute .)
    EXECUTE         reduce using rule 454 (bloque -> instrexecute .)
    GET             reduce using rule 454 (bloque -> instrexecute .)
    NULL            reduce using rule 454 (bloque -> instrexecute .)
    IF              reduce using rule 454 (bloque -> instrexecute .)
    CASE            reduce using rule 454 (bloque -> instrexecute .)
    COMMIT          reduce using rule 454 (bloque -> instrexecute .)
    ROLLBACK        reduce using rule 454 (bloque -> instrexecute .)
    INSERT          reduce using rule 454 (bloque -> instrexecute .)
    UPDATE          reduce using rule 454 (bloque -> instrexecute .)
    ALTER           reduce using rule 454 (bloque -> instrexecute .)
    CREATE          reduce using rule 454 (bloque -> instrexecute .)
    DROP            reduce using rule 454 (bloque -> instrexecute .)
    DELETE          reduce using rule 454 (bloque -> instrexecute .)
    TRUNCATE        reduce using rule 454 (bloque -> instrexecute .)
    DECLARE         reduce using rule 454 (bloque -> instrexecute .)
    SELECT          reduce using rule 454 (bloque -> instrexecute .)
    BEGIN           reduce using rule 454 (bloque -> instrexecute .)
    END             reduce using rule 454 (bloque -> instrexecute .)
    ELSE            reduce using rule 454 (bloque -> instrexecute .)
    ELSIF           reduce using rule 454 (bloque -> instrexecute .)
    WHEN            reduce using rule 454 (bloque -> instrexecute .)


state 1040

    (455) bloque -> getdiagnostic .

    RAISE           reduce using rule 455 (bloque -> getdiagnostic .)
    ID              reduce using rule 455 (bloque -> getdiagnostic .)
    RETURN          reduce using rule 455 (bloque -> getdiagnostic .)
    EXECUTE         reduce using rule 455 (bloque -> getdiagnostic .)
    GET             reduce using rule 455 (bloque -> getdiagnostic .)
    NULL            reduce using rule 455 (bloque -> getdiagnostic .)
    IF              reduce using rule 455 (bloque -> getdiagnostic .)
    CASE            reduce using rule 455 (bloque -> getdiagnostic .)
    COMMIT          reduce using rule 455 (bloque -> getdiagnostic .)
    ROLLBACK        reduce using rule 455 (bloque -> getdiagnostic .)
    INSERT          reduce using rule 455 (bloque -> getdiagnostic .)
    UPDATE          reduce using rule 455 (bloque -> getdiagnostic .)
    ALTER           reduce using rule 455 (bloque -> getdiagnostic .)
    CREATE          reduce using rule 455 (bloque -> getdiagnostic .)
    DROP            reduce using rule 455 (bloque -> getdiagnostic .)
    DELETE          reduce using rule 455 (bloque -> getdiagnostic .)
    TRUNCATE        reduce using rule 455 (bloque -> getdiagnostic .)
    DECLARE         reduce using rule 455 (bloque -> getdiagnostic .)
    SELECT          reduce using rule 455 (bloque -> getdiagnostic .)
    BEGIN           reduce using rule 455 (bloque -> getdiagnostic .)
    END             reduce using rule 455 (bloque -> getdiagnostic .)
    ELSE            reduce using rule 455 (bloque -> getdiagnostic .)
    ELSIF           reduce using rule 455 (bloque -> getdiagnostic .)
    WHEN            reduce using rule 455 (bloque -> getdiagnostic .)


state 1041

    (456) bloque -> instrnull .

    RAISE           reduce using rule 456 (bloque -> instrnull .)
    ID              reduce using rule 456 (bloque -> instrnull .)
    RETURN          reduce using rule 456 (bloque -> instrnull .)
    EXECUTE         reduce using rule 456 (bloque -> instrnull .)
    GET             reduce using rule 456 (bloque -> instrnull .)
    NULL            reduce using rule 456 (bloque -> instrnull .)
    IF              reduce using rule 456 (bloque -> instrnull .)
    CASE            reduce using rule 456 (bloque -> instrnull .)
    COMMIT          reduce using rule 456 (bloque -> instrnull .)
    ROLLBACK        reduce using rule 456 (bloque -> instrnull .)
    INSERT          reduce using rule 456 (bloque -> instrnull .)
    UPDATE          reduce using rule 456 (bloque -> instrnull .)
    ALTER           reduce using rule 456 (bloque -> instrnull .)
    CREATE          reduce using rule 456 (bloque -> instrnull .)
    DROP            reduce using rule 456 (bloque -> instrnull .)
    DELETE          reduce using rule 456 (bloque -> instrnull .)
    TRUNCATE        reduce using rule 456 (bloque -> instrnull .)
    DECLARE         reduce using rule 456 (bloque -> instrnull .)
    SELECT          reduce using rule 456 (bloque -> instrnull .)
    BEGIN           reduce using rule 456 (bloque -> instrnull .)
    END             reduce using rule 456 (bloque -> instrnull .)
    ELSE            reduce using rule 456 (bloque -> instrnull .)
    ELSIF           reduce using rule 456 (bloque -> instrnull .)
    WHEN            reduce using rule 456 (bloque -> instrnull .)


state 1042

    (457) bloque -> instrif .

    RAISE           reduce using rule 457 (bloque -> instrif .)
    ID              reduce using rule 457 (bloque -> instrif .)
    RETURN          reduce using rule 457 (bloque -> instrif .)
    EXECUTE         reduce using rule 457 (bloque -> instrif .)
    GET             reduce using rule 457 (bloque -> instrif .)
    NULL            reduce using rule 457 (bloque -> instrif .)
    IF              reduce using rule 457 (bloque -> instrif .)
    CASE            reduce using rule 457 (bloque -> instrif .)
    COMMIT          reduce using rule 457 (bloque -> instrif .)
    ROLLBACK        reduce using rule 457 (bloque -> instrif .)
    INSERT          reduce using rule 457 (bloque -> instrif .)
    UPDATE          reduce using rule 457 (bloque -> instrif .)
    ALTER           reduce using rule 457 (bloque -> instrif .)
    CREATE          reduce using rule 457 (bloque -> instrif .)
    DROP            reduce using rule 457 (bloque -> instrif .)
    DELETE          reduce using rule 457 (bloque -> instrif .)
    TRUNCATE        reduce using rule 457 (bloque -> instrif .)
    DECLARE         reduce using rule 457 (bloque -> instrif .)
    SELECT          reduce using rule 457 (bloque -> instrif .)
    BEGIN           reduce using rule 457 (bloque -> instrif .)
    END             reduce using rule 457 (bloque -> instrif .)
    ELSE            reduce using rule 457 (bloque -> instrif .)
    ELSIF           reduce using rule 457 (bloque -> instrif .)
    WHEN            reduce using rule 457 (bloque -> instrif .)


state 1043

    (458) bloque -> instrcase .

    RAISE           reduce using rule 458 (bloque -> instrcase .)
    ID              reduce using rule 458 (bloque -> instrcase .)
    RETURN          reduce using rule 458 (bloque -> instrcase .)
    EXECUTE         reduce using rule 458 (bloque -> instrcase .)
    GET             reduce using rule 458 (bloque -> instrcase .)
    NULL            reduce using rule 458 (bloque -> instrcase .)
    IF              reduce using rule 458 (bloque -> instrcase .)
    CASE            reduce using rule 458 (bloque -> instrcase .)
    COMMIT          reduce using rule 458 (bloque -> instrcase .)
    ROLLBACK        reduce using rule 458 (bloque -> instrcase .)
    INSERT          reduce using rule 458 (bloque -> instrcase .)
    UPDATE          reduce using rule 458 (bloque -> instrcase .)
    ALTER           reduce using rule 458 (bloque -> instrcase .)
    CREATE          reduce using rule 458 (bloque -> instrcase .)
    DROP            reduce using rule 458 (bloque -> instrcase .)
    DELETE          reduce using rule 458 (bloque -> instrcase .)
    TRUNCATE        reduce using rule 458 (bloque -> instrcase .)
    DECLARE         reduce using rule 458 (bloque -> instrcase .)
    SELECT          reduce using rule 458 (bloque -> instrcase .)
    BEGIN           reduce using rule 458 (bloque -> instrcase .)
    END             reduce using rule 458 (bloque -> instrcase .)
    ELSE            reduce using rule 458 (bloque -> instrcase .)
    ELSIF           reduce using rule 458 (bloque -> instrcase .)
    WHEN            reduce using rule 458 (bloque -> instrcase .)


state 1044

    (459) bloque -> commitinstr .

    RAISE           reduce using rule 459 (bloque -> commitinstr .)
    ID              reduce using rule 459 (bloque -> commitinstr .)
    RETURN          reduce using rule 459 (bloque -> commitinstr .)
    EXECUTE         reduce using rule 459 (bloque -> commitinstr .)
    GET             reduce using rule 459 (bloque -> commitinstr .)
    NULL            reduce using rule 459 (bloque -> commitinstr .)
    IF              reduce using rule 459 (bloque -> commitinstr .)
    CASE            reduce using rule 459 (bloque -> commitinstr .)
    COMMIT          reduce using rule 459 (bloque -> commitinstr .)
    ROLLBACK        reduce using rule 459 (bloque -> commitinstr .)
    INSERT          reduce using rule 459 (bloque -> commitinstr .)
    UPDATE          reduce using rule 459 (bloque -> commitinstr .)
    ALTER           reduce using rule 459 (bloque -> commitinstr .)
    CREATE          reduce using rule 459 (bloque -> commitinstr .)
    DROP            reduce using rule 459 (bloque -> commitinstr .)
    DELETE          reduce using rule 459 (bloque -> commitinstr .)
    TRUNCATE        reduce using rule 459 (bloque -> commitinstr .)
    DECLARE         reduce using rule 459 (bloque -> commitinstr .)
    SELECT          reduce using rule 459 (bloque -> commitinstr .)
    BEGIN           reduce using rule 459 (bloque -> commitinstr .)
    END             reduce using rule 459 (bloque -> commitinstr .)
    ELSE            reduce using rule 459 (bloque -> commitinstr .)
    ELSIF           reduce using rule 459 (bloque -> commitinstr .)
    WHEN            reduce using rule 459 (bloque -> commitinstr .)


state 1045

    (460) bloque -> rollbackinstr .

    RAISE           reduce using rule 460 (bloque -> rollbackinstr .)
    ID              reduce using rule 460 (bloque -> rollbackinstr .)
    RETURN          reduce using rule 460 (bloque -> rollbackinstr .)
    EXECUTE         reduce using rule 460 (bloque -> rollbackinstr .)
    GET             reduce using rule 460 (bloque -> rollbackinstr .)
    NULL            reduce using rule 460 (bloque -> rollbackinstr .)
    IF              reduce using rule 460 (bloque -> rollbackinstr .)
    CASE            reduce using rule 460 (bloque -> rollbackinstr .)
    COMMIT          reduce using rule 460 (bloque -> rollbackinstr .)
    ROLLBACK        reduce using rule 460 (bloque -> rollbackinstr .)
    INSERT          reduce using rule 460 (bloque -> rollbackinstr .)
    UPDATE          reduce using rule 460 (bloque -> rollbackinstr .)
    ALTER           reduce using rule 460 (bloque -> rollbackinstr .)
    CREATE          reduce using rule 460 (bloque -> rollbackinstr .)
    DROP            reduce using rule 460 (bloque -> rollbackinstr .)
    DELETE          reduce using rule 460 (bloque -> rollbackinstr .)
    TRUNCATE        reduce using rule 460 (bloque -> rollbackinstr .)
    DECLARE         reduce using rule 460 (bloque -> rollbackinstr .)
    SELECT          reduce using rule 460 (bloque -> rollbackinstr .)
    BEGIN           reduce using rule 460 (bloque -> rollbackinstr .)
    END             reduce using rule 460 (bloque -> rollbackinstr .)
    ELSE            reduce using rule 460 (bloque -> rollbackinstr .)
    ELSIF           reduce using rule 460 (bloque -> rollbackinstr .)
    WHEN            reduce using rule 460 (bloque -> rollbackinstr .)


state 1046

    (461) bloque -> insert_instr .

    RAISE           reduce using rule 461 (bloque -> insert_instr .)
    ID              reduce using rule 461 (bloque -> insert_instr .)
    RETURN          reduce using rule 461 (bloque -> insert_instr .)
    EXECUTE         reduce using rule 461 (bloque -> insert_instr .)
    GET             reduce using rule 461 (bloque -> insert_instr .)
    NULL            reduce using rule 461 (bloque -> insert_instr .)
    IF              reduce using rule 461 (bloque -> insert_instr .)
    CASE            reduce using rule 461 (bloque -> insert_instr .)
    COMMIT          reduce using rule 461 (bloque -> insert_instr .)
    ROLLBACK        reduce using rule 461 (bloque -> insert_instr .)
    INSERT          reduce using rule 461 (bloque -> insert_instr .)
    UPDATE          reduce using rule 461 (bloque -> insert_instr .)
    ALTER           reduce using rule 461 (bloque -> insert_instr .)
    CREATE          reduce using rule 461 (bloque -> insert_instr .)
    DROP            reduce using rule 461 (bloque -> insert_instr .)
    DELETE          reduce using rule 461 (bloque -> insert_instr .)
    TRUNCATE        reduce using rule 461 (bloque -> insert_instr .)
    DECLARE         reduce using rule 461 (bloque -> insert_instr .)
    SELECT          reduce using rule 461 (bloque -> insert_instr .)
    BEGIN           reduce using rule 461 (bloque -> insert_instr .)
    END             reduce using rule 461 (bloque -> insert_instr .)
    ELSE            reduce using rule 461 (bloque -> insert_instr .)
    ELSIF           reduce using rule 461 (bloque -> insert_instr .)
    WHEN            reduce using rule 461 (bloque -> insert_instr .)


state 1047

    (462) bloque -> update_instr .

    RAISE           reduce using rule 462 (bloque -> update_instr .)
    ID              reduce using rule 462 (bloque -> update_instr .)
    RETURN          reduce using rule 462 (bloque -> update_instr .)
    EXECUTE         reduce using rule 462 (bloque -> update_instr .)
    GET             reduce using rule 462 (bloque -> update_instr .)
    NULL            reduce using rule 462 (bloque -> update_instr .)
    IF              reduce using rule 462 (bloque -> update_instr .)
    CASE            reduce using rule 462 (bloque -> update_instr .)
    COMMIT          reduce using rule 462 (bloque -> update_instr .)
    ROLLBACK        reduce using rule 462 (bloque -> update_instr .)
    INSERT          reduce using rule 462 (bloque -> update_instr .)
    UPDATE          reduce using rule 462 (bloque -> update_instr .)
    ALTER           reduce using rule 462 (bloque -> update_instr .)
    CREATE          reduce using rule 462 (bloque -> update_instr .)
    DROP            reduce using rule 462 (bloque -> update_instr .)
    DELETE          reduce using rule 462 (bloque -> update_instr .)
    TRUNCATE        reduce using rule 462 (bloque -> update_instr .)
    DECLARE         reduce using rule 462 (bloque -> update_instr .)
    SELECT          reduce using rule 462 (bloque -> update_instr .)
    BEGIN           reduce using rule 462 (bloque -> update_instr .)
    END             reduce using rule 462 (bloque -> update_instr .)
    ELSE            reduce using rule 462 (bloque -> update_instr .)
    ELSIF           reduce using rule 462 (bloque -> update_instr .)
    WHEN            reduce using rule 462 (bloque -> update_instr .)


state 1048

    (463) bloque -> alter_instr . PTCOMA

    PTCOMA          shift and go to state 1109


state 1049

    (464) bloque -> create_enum .

    RAISE           reduce using rule 464 (bloque -> create_enum .)
    ID              reduce using rule 464 (bloque -> create_enum .)
    RETURN          reduce using rule 464 (bloque -> create_enum .)
    EXECUTE         reduce using rule 464 (bloque -> create_enum .)
    GET             reduce using rule 464 (bloque -> create_enum .)
    NULL            reduce using rule 464 (bloque -> create_enum .)
    IF              reduce using rule 464 (bloque -> create_enum .)
    CASE            reduce using rule 464 (bloque -> create_enum .)
    COMMIT          reduce using rule 464 (bloque -> create_enum .)
    ROLLBACK        reduce using rule 464 (bloque -> create_enum .)
    INSERT          reduce using rule 464 (bloque -> create_enum .)
    UPDATE          reduce using rule 464 (bloque -> create_enum .)
    ALTER           reduce using rule 464 (bloque -> create_enum .)
    CREATE          reduce using rule 464 (bloque -> create_enum .)
    DROP            reduce using rule 464 (bloque -> create_enum .)
    DELETE          reduce using rule 464 (bloque -> create_enum .)
    TRUNCATE        reduce using rule 464 (bloque -> create_enum .)
    DECLARE         reduce using rule 464 (bloque -> create_enum .)
    SELECT          reduce using rule 464 (bloque -> create_enum .)
    BEGIN           reduce using rule 464 (bloque -> create_enum .)
    END             reduce using rule 464 (bloque -> create_enum .)
    ELSE            reduce using rule 464 (bloque -> create_enum .)
    ELSIF           reduce using rule 464 (bloque -> create_enum .)
    WHEN            reduce using rule 464 (bloque -> create_enum .)


state 1050

    (465) bloque -> drop_table .

    RAISE           reduce using rule 465 (bloque -> drop_table .)
    ID              reduce using rule 465 (bloque -> drop_table .)
    RETURN          reduce using rule 465 (bloque -> drop_table .)
    EXECUTE         reduce using rule 465 (bloque -> drop_table .)
    GET             reduce using rule 465 (bloque -> drop_table .)
    NULL            reduce using rule 465 (bloque -> drop_table .)
    IF              reduce using rule 465 (bloque -> drop_table .)
    CASE            reduce using rule 465 (bloque -> drop_table .)
    COMMIT          reduce using rule 465 (bloque -> drop_table .)
    ROLLBACK        reduce using rule 465 (bloque -> drop_table .)
    INSERT          reduce using rule 465 (bloque -> drop_table .)
    UPDATE          reduce using rule 465 (bloque -> drop_table .)
    ALTER           reduce using rule 465 (bloque -> drop_table .)
    CREATE          reduce using rule 465 (bloque -> drop_table .)
    DROP            reduce using rule 465 (bloque -> drop_table .)
    DELETE          reduce using rule 465 (bloque -> drop_table .)
    TRUNCATE        reduce using rule 465 (bloque -> drop_table .)
    DECLARE         reduce using rule 465 (bloque -> drop_table .)
    SELECT          reduce using rule 465 (bloque -> drop_table .)
    BEGIN           reduce using rule 465 (bloque -> drop_table .)
    END             reduce using rule 465 (bloque -> drop_table .)
    ELSE            reduce using rule 465 (bloque -> drop_table .)
    ELSIF           reduce using rule 465 (bloque -> drop_table .)
    WHEN            reduce using rule 465 (bloque -> drop_table .)


state 1051

    (466) bloque -> delete_instr .

    RAISE           reduce using rule 466 (bloque -> delete_instr .)
    ID              reduce using rule 466 (bloque -> delete_instr .)
    RETURN          reduce using rule 466 (bloque -> delete_instr .)
    EXECUTE         reduce using rule 466 (bloque -> delete_instr .)
    GET             reduce using rule 466 (bloque -> delete_instr .)
    NULL            reduce using rule 466 (bloque -> delete_instr .)
    IF              reduce using rule 466 (bloque -> delete_instr .)
    CASE            reduce using rule 466 (bloque -> delete_instr .)
    COMMIT          reduce using rule 466 (bloque -> delete_instr .)
    ROLLBACK        reduce using rule 466 (bloque -> delete_instr .)
    INSERT          reduce using rule 466 (bloque -> delete_instr .)
    UPDATE          reduce using rule 466 (bloque -> delete_instr .)
    ALTER           reduce using rule 466 (bloque -> delete_instr .)
    CREATE          reduce using rule 466 (bloque -> delete_instr .)
    DROP            reduce using rule 466 (bloque -> delete_instr .)
    DELETE          reduce using rule 466 (bloque -> delete_instr .)
    TRUNCATE        reduce using rule 466 (bloque -> delete_instr .)
    DECLARE         reduce using rule 466 (bloque -> delete_instr .)
    SELECT          reduce using rule 466 (bloque -> delete_instr .)
    BEGIN           reduce using rule 466 (bloque -> delete_instr .)
    END             reduce using rule 466 (bloque -> delete_instr .)
    ELSE            reduce using rule 466 (bloque -> delete_instr .)
    ELSIF           reduce using rule 466 (bloque -> delete_instr .)
    WHEN            reduce using rule 466 (bloque -> delete_instr .)


state 1052

    (467) bloque -> truncate_instr .

    RAISE           reduce using rule 467 (bloque -> truncate_instr .)
    ID              reduce using rule 467 (bloque -> truncate_instr .)
    RETURN          reduce using rule 467 (bloque -> truncate_instr .)
    EXECUTE         reduce using rule 467 (bloque -> truncate_instr .)
    GET             reduce using rule 467 (bloque -> truncate_instr .)
    NULL            reduce using rule 467 (bloque -> truncate_instr .)
    IF              reduce using rule 467 (bloque -> truncate_instr .)
    CASE            reduce using rule 467 (bloque -> truncate_instr .)
    COMMIT          reduce using rule 467 (bloque -> truncate_instr .)
    ROLLBACK        reduce using rule 467 (bloque -> truncate_instr .)
    INSERT          reduce using rule 467 (bloque -> truncate_instr .)
    UPDATE          reduce using rule 467 (bloque -> truncate_instr .)
    ALTER           reduce using rule 467 (bloque -> truncate_instr .)
    CREATE          reduce using rule 467 (bloque -> truncate_instr .)
    DROP            reduce using rule 467 (bloque -> truncate_instr .)
    DELETE          reduce using rule 467 (bloque -> truncate_instr .)
    TRUNCATE        reduce using rule 467 (bloque -> truncate_instr .)
    DECLARE         reduce using rule 467 (bloque -> truncate_instr .)
    SELECT          reduce using rule 467 (bloque -> truncate_instr .)
    BEGIN           reduce using rule 467 (bloque -> truncate_instr .)
    END             reduce using rule 467 (bloque -> truncate_instr .)
    ELSE            reduce using rule 467 (bloque -> truncate_instr .)
    ELSIF           reduce using rule 467 (bloque -> truncate_instr .)
    WHEN            reduce using rule 467 (bloque -> truncate_instr .)


state 1053

    (468) bloque -> select_instr .

    RAISE           reduce using rule 468 (bloque -> select_instr .)
    ID              reduce using rule 468 (bloque -> select_instr .)
    RETURN          reduce using rule 468 (bloque -> select_instr .)
    EXECUTE         reduce using rule 468 (bloque -> select_instr .)
    GET             reduce using rule 468 (bloque -> select_instr .)
    NULL            reduce using rule 468 (bloque -> select_instr .)
    IF              reduce using rule 468 (bloque -> select_instr .)
    CASE            reduce using rule 468 (bloque -> select_instr .)
    COMMIT          reduce using rule 468 (bloque -> select_instr .)
    ROLLBACK        reduce using rule 468 (bloque -> select_instr .)
    INSERT          reduce using rule 468 (bloque -> select_instr .)
    UPDATE          reduce using rule 468 (bloque -> select_instr .)
    ALTER           reduce using rule 468 (bloque -> select_instr .)
    CREATE          reduce using rule 468 (bloque -> select_instr .)
    DROP            reduce using rule 468 (bloque -> select_instr .)
    DELETE          reduce using rule 468 (bloque -> select_instr .)
    TRUNCATE        reduce using rule 468 (bloque -> select_instr .)
    DECLARE         reduce using rule 468 (bloque -> select_instr .)
    SELECT          reduce using rule 468 (bloque -> select_instr .)
    BEGIN           reduce using rule 468 (bloque -> select_instr .)
    END             reduce using rule 468 (bloque -> select_instr .)
    ELSE            reduce using rule 468 (bloque -> select_instr .)
    ELSIF           reduce using rule 468 (bloque -> select_instr .)
    WHEN            reduce using rule 468 (bloque -> select_instr .)


state 1054

    (471) raisenotice -> RAISE . NOTICE CADENASIMPLE COMA ID PTCOMA
    (472) raisenotice -> RAISE . NOTICE CADENASIMPLE PTCOMA

    NOTICE          shift and go to state 1110


state 1055

    (473) asignacionbloque -> ID . IGUAL expresion PTCOMA
    (474) asignacionbloque -> ID . PTIGUAL expresion PTCOMA

    IGUAL           shift and go to state 1111
    PTIGUAL         shift and go to state 1112


state 1056

    (479) subbloque -> declaraciones . cuerposub
    (480) cuerposub -> . BEGIN listasubbloque END PTCOMA
    (481) cuerposub -> . BEGIN empty END PTCOMA

    BEGIN           shift and go to state 1114

    cuerposub                      shift and go to state 1113

state 1057

    (475) returnbloque -> RETURN . condicion PTCOMA
    (476) returnbloque -> RETURN . QUERY select_instr1 PTCOMA
    (477) returnbloque -> RETURN . QUERY instrexecute PTCOMA
    (478) returnbloque -> RETURN . PTCOMA
    (200) condicion -> . expresion MENQUE expresion
    (201) condicion -> . expresion MAYQUE expresion
    (202) condicion -> . expresion MENIGUAL expresion
    (203) condicion -> . expresion MAYIGUAL expresion
    (204) condicion -> . expresion IGUAL expresion
    (205) condicion -> . expresion DIFERENTE expresion
    (206) condicion -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    QUERY           shift and go to state 1117
    PTCOMA          shift and go to state 1116
    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    condicion                      shift and go to state 1115
    expresion                      shift and go to state 407
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 1058

    (517) instrexecute -> EXECUTE . CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion
    (518) instrexecute -> EXECUTE . FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion

    CSIMPLE         shift and go to state 1118
    FORMAT          shift and go to state 1119


state 1059

    (525) getdiagnostic -> GET . DIAGNOSTICS ID IGUAL ID
    (526) getdiagnostic -> GET . DIAGNOSTICS ID PTIGUAL ID

    DIAGNOSTICS     shift and go to state 1120


state 1060

    (527) instrnull -> NULL . PTCOMA

    PTCOMA          shift and go to state 1121


state 1061

    (528) instrif -> IF . condiciones THEN instrlistabloque END IF PTCOMA
    (529) instrif -> IF . condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA
    (530) instrif -> IF . condiciones THEN instrlistabloque instrelseif END IF PTCOMA
    (531) instrif -> IF . condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA
    (195) condiciones -> . condiciones AND condicion
    (196) condiciones -> . condiciones OR condicion
    (197) condiciones -> . NOT PARIZQ condiciones PARDER
    (198) condiciones -> . NOT condiciones
    (199) condiciones -> . condicion
    (200) condicion -> . expresion MENQUE expresion
    (201) condicion -> . expresion MAYQUE expresion
    (202) condicion -> . expresion MENIGUAL expresion
    (203) condicion -> . expresion MAYIGUAL expresion
    (204) condicion -> . expresion IGUAL expresion
    (205) condicion -> . expresion DIFERENTE expresion
    (206) condicion -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    NOT             shift and go to state 406
    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    condiciones                    shift and go to state 1122
    condicion                      shift and go to state 405
    expresion                      shift and go to state 407
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 1062

    (535) instrcase -> CASE . expresion listawhen1 elsecase END CASE PTCOMA
    (541) instrcase -> CASE . listawhen2 elsecase END CASE PTCOMA
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (542) listawhen2 -> . listawhen2 when2
    (543) listawhen2 -> . when2
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (544) when2 -> . WHEN ID BETWEEN ENTERO AND ENTERO THEN instrlistabloque
    (545) when2 -> . WHEN condiciones THEN instrlistabloque
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    WHEN            shift and go to state 1126
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresion                      shift and go to state 1123
    listawhen2                     shift and go to state 1124
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    when2                          shift and go to state 1125
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 1063

    (469) commitinstr -> COMMIT . PTCOMA

    PTCOMA          shift and go to state 1127


state 1064

    (470) rollbackinstr -> ROLLBACK . PTCOMA

    PTCOMA          shift and go to state 1128


state 1065

    (298) alter_instr -> ALTER . TABLE ID ADD COLUMN list_columns
    (299) alter_instr -> ALTER . TABLE ID ADD CHECK PARIZQ condicion PARDER
    (300) alter_instr -> ALTER . TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER
    (301) alter_instr -> ALTER . TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID
    (302) alter_instr -> ALTER . TABLE ID ALTER COLUMN ID SET NOT NULL
    (303) alter_instr -> ALTER . TABLE ID DROP CONSTRAINT ID
    (304) alter_instr -> ALTER . TABLE ID RENAME COLUMN ID TO ID
    (305) alter_instr -> ALTER . TABLE ID DROP COLUMN listtablas
    (306) alter_instr -> ALTER . TABLE ID list_alter_column

    TABLE           shift and go to state 49


state 1066

    (368) drop_table -> DROP . TABLE ID PTCOMA

    TABLE           shift and go to state 52


state 1067

    (365) create_enum -> CREATE . TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA

    TYPE            shift and go to state 41


state 1068

    (430) listadeclaraciones -> listadeclaraciones declaracion .

    ID              reduce using rule 430 (listadeclaraciones -> listadeclaraciones declaracion .)
    BEGIN           reduce using rule 430 (listadeclaraciones -> listadeclaraciones declaracion .)


state 1069

    (432) declaracion -> ID constantintr . type_column1 notnullinst asignavalor PTCOMA
    (489) type_column1 -> . SMALLINT
    (490) type_column1 -> . INTEGER
    (491) type_column1 -> . BIGINT
    (492) type_column1 -> . RDECIMAL
    (493) type_column1 -> . RDECIMAL PARIZQ ENTERO COMA ENTERO PARDER
    (494) type_column1 -> . NUMERIC
    (495) type_column1 -> . NUMERIC PARIZQ ENTERO PARDER
    (496) type_column1 -> . REAL
    (497) type_column1 -> . FLOAT
    (498) type_column1 -> . INT
    (499) type_column1 -> . DOUBLE
    (500) type_column1 -> . MONEY
    (501) type_column1 -> . VARCHAR
    (502) type_column1 -> . VARCHAR PARIZQ ENTERO PARDER
    (503) type_column1 -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (504) type_column1 -> . CHARACTER PARIZQ ENTERO PARDER
    (505) type_column1 -> . CHAR
    (506) type_column1 -> . CHAR PARIZQ ENTERO PARDER
    (507) type_column1 -> . TEXT
    (508) type_column1 -> . TIMESTAMP
    (509) type_column1 -> . TIMESTAMP PARIZQ ENTERO PARDER
    (510) type_column1 -> . DATE
    (511) type_column1 -> . TIME
    (512) type_column1 -> . BOOLEAN
    (513) type_column1 -> . ID
    (514) type_column1 -> . TIME PARIZQ ENTERO PARDER
    (515) type_column1 -> . RECORD
    (516) type_column1 -> . TABLE PARIZQ parametrosfunc PARDER

    SMALLINT        shift and go to state 359
    INTEGER         shift and go to state 360
    BIGINT          shift and go to state 361
    RDECIMAL        shift and go to state 362
    NUMERIC         shift and go to state 363
    REAL            shift and go to state 364
    FLOAT           shift and go to state 365
    INT             shift and go to state 366
    DOUBLE          shift and go to state 367
    MONEY           shift and go to state 368
    VARCHAR         shift and go to state 369
    CHARACTER       shift and go to state 370
    CHAR            shift and go to state 371
    TEXT            shift and go to state 372
    TIMESTAMP       shift and go to state 373
    DATE            shift and go to state 374
    TIME            shift and go to state 375
    BOOLEAN         shift and go to state 376
    ID              shift and go to state 540
    RECORD          shift and go to state 377
    TABLE           shift and go to state 378

    type_column1                   shift and go to state 1129

state 1070

    (433) declaracion -> ID ALIAS1 . FOR DOLAR ENTERO PTCOMA
    (434) declaracion -> ID ALIAS1 . FOR ID PTCOMA

    FOR             shift and go to state 1130


state 1071

    (435) declaracion -> ID cualquieridentificador . MODULO TYPE PTCOMA
    (436) declaracion -> ID cualquieridentificador . MODULO ROWTYPE PTCOMA

    MODULO          shift and go to state 1131


state 1072

    (437) constantintr -> CONSTANT .

    SMALLINT        reduce using rule 437 (constantintr -> CONSTANT .)
    INTEGER         reduce using rule 437 (constantintr -> CONSTANT .)
    BIGINT          reduce using rule 437 (constantintr -> CONSTANT .)
    RDECIMAL        reduce using rule 437 (constantintr -> CONSTANT .)
    NUMERIC         reduce using rule 437 (constantintr -> CONSTANT .)
    REAL            reduce using rule 437 (constantintr -> CONSTANT .)
    FLOAT           reduce using rule 437 (constantintr -> CONSTANT .)
    INT             reduce using rule 437 (constantintr -> CONSTANT .)
    DOUBLE          reduce using rule 437 (constantintr -> CONSTANT .)
    MONEY           reduce using rule 437 (constantintr -> CONSTANT .)
    VARCHAR         reduce using rule 437 (constantintr -> CONSTANT .)
    CHARACTER       reduce using rule 437 (constantintr -> CONSTANT .)
    CHAR            reduce using rule 437 (constantintr -> CONSTANT .)
    TEXT            reduce using rule 437 (constantintr -> CONSTANT .)
    TIMESTAMP       reduce using rule 437 (constantintr -> CONSTANT .)
    DATE            reduce using rule 437 (constantintr -> CONSTANT .)
    TIME            reduce using rule 437 (constantintr -> CONSTANT .)
    BOOLEAN         reduce using rule 437 (constantintr -> CONSTANT .)
    ID              reduce using rule 437 (constantintr -> CONSTANT .)
    RECORD          reduce using rule 437 (constantintr -> CONSTANT .)
    TABLE           reduce using rule 437 (constantintr -> CONSTANT .)


state 1073

    (438) constantintr -> empty .

    SMALLINT        reduce using rule 438 (constantintr -> empty .)
    INTEGER         reduce using rule 438 (constantintr -> empty .)
    BIGINT          reduce using rule 438 (constantintr -> empty .)
    RDECIMAL        reduce using rule 438 (constantintr -> empty .)
    NUMERIC         reduce using rule 438 (constantintr -> empty .)
    REAL            reduce using rule 438 (constantintr -> empty .)
    FLOAT           reduce using rule 438 (constantintr -> empty .)
    INT             reduce using rule 438 (constantintr -> empty .)
    DOUBLE          reduce using rule 438 (constantintr -> empty .)
    MONEY           reduce using rule 438 (constantintr -> empty .)
    VARCHAR         reduce using rule 438 (constantintr -> empty .)
    CHARACTER       reduce using rule 438 (constantintr -> empty .)
    CHAR            reduce using rule 438 (constantintr -> empty .)
    TEXT            reduce using rule 438 (constantintr -> empty .)
    TIMESTAMP       reduce using rule 438 (constantintr -> empty .)
    DATE            reduce using rule 438 (constantintr -> empty .)
    TIME            reduce using rule 438 (constantintr -> empty .)
    BOOLEAN         reduce using rule 438 (constantintr -> empty .)
    ID              reduce using rule 438 (constantintr -> empty .)
    RECORD          reduce using rule 438 (constantintr -> empty .)
    TABLE           reduce using rule 438 (constantintr -> empty .)


state 1074

    (301) alter_instr -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID .

    PTCOMA          reduce using rule 301 (alter_instr -> ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID .)


state 1075

    (49) insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .

    $end            reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    RAISE           reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    ID              reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    RETURN          reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    EXECUTE         reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    GET             reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    NULL            reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    IF              reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    CASE            reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    COMMIT          reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    ROLLBACK        reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    INSERT          reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    UPDATE          reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    ALTER           reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    CREATE          reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    DROP            reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    DELETE          reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    TRUNCATE        reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    DECLARE         reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    SELECT          reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    BEGIN           reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    END             reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    ELSE            reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    ELSIF           reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)
    WHEN            reduce using rule 49 (insert_instr -> INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA .)


state 1076

    (179) orderby -> ORDER BY listaorderby instrlimit .

    UNION           reduce using rule 179 (orderby -> ORDER BY listaorderby instrlimit .)
    INTERSECT       reduce using rule 179 (orderby -> ORDER BY listaorderby instrlimit .)
    EXCEPT          reduce using rule 179 (orderby -> ORDER BY listaorderby instrlimit .)
    PTCOMA          reduce using rule 179 (orderby -> ORDER BY listaorderby instrlimit .)
    PARDER          reduce using rule 179 (orderby -> ORDER BY listaorderby instrlimit .)
    CSIMPLE         reduce using rule 179 (orderby -> ORDER BY listaorderby instrlimit .)


state 1077

    (181) listaorderby -> listaorderby COMA . valororderby
    (183) valororderby -> . cualquieridentificador ascdesc anular
    (184) valororderby -> . cualquiernumero ascdesc anular
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL

    ID              shift and go to state 234
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253

    valororderby                   shift and go to state 1132
    cualquieridentificador         shift and go to state 705
    cualquiernumero                shift and go to state 706

state 1078

    (191) instrlimit -> LIMIT . ENTERO instroffset
    (192) instrlimit -> LIMIT . ALL instroffset

    ENTERO          shift and go to state 1133
    ALL             shift and go to state 1134


state 1079

    (158) groupby -> GROUP BY listagroupby HAVING condicioneshaving .
    (164) condicioneshaving -> condicioneshaving . OR condicionhaving
    (165) condicioneshaving -> condicioneshaving . AND condicionhaving

    ORDER           reduce using rule 158 (groupby -> GROUP BY listagroupby HAVING condicioneshaving .)
    UNION           reduce using rule 158 (groupby -> GROUP BY listagroupby HAVING condicioneshaving .)
    INTERSECT       reduce using rule 158 (groupby -> GROUP BY listagroupby HAVING condicioneshaving .)
    EXCEPT          reduce using rule 158 (groupby -> GROUP BY listagroupby HAVING condicioneshaving .)
    PTCOMA          reduce using rule 158 (groupby -> GROUP BY listagroupby HAVING condicioneshaving .)
    PARDER          reduce using rule 158 (groupby -> GROUP BY listagroupby HAVING condicioneshaving .)
    CSIMPLE         reduce using rule 158 (groupby -> GROUP BY listagroupby HAVING condicioneshaving .)
    OR              shift and go to state 1135
    AND             shift and go to state 1136


state 1080

    (166) condicioneshaving -> condicionhaving .

    OR              reduce using rule 166 (condicioneshaving -> condicionhaving .)
    AND             reduce using rule 166 (condicioneshaving -> condicionhaving .)
    ORDER           reduce using rule 166 (condicioneshaving -> condicionhaving .)
    UNION           reduce using rule 166 (condicioneshaving -> condicionhaving .)
    INTERSECT       reduce using rule 166 (condicioneshaving -> condicionhaving .)
    EXCEPT          reduce using rule 166 (condicioneshaving -> condicionhaving .)
    PTCOMA          reduce using rule 166 (condicioneshaving -> condicionhaving .)
    PARDER          reduce using rule 166 (condicioneshaving -> condicionhaving .)
    CSIMPLE         reduce using rule 166 (condicioneshaving -> condicionhaving .)


state 1081

    (167) condicionhaving -> expresionhaving . MENQUE expresionhaving
    (168) condicionhaving -> expresionhaving . MAYQUE expresionhaving
    (169) condicionhaving -> expresionhaving . MENIGUAL expresionhaving
    (170) condicionhaving -> expresionhaving . MAYIGUAL expresionhaving
    (171) condicionhaving -> expresionhaving . IGUAL expresionhaving
    (172) condicionhaving -> expresionhaving . DIFERENTE expresionhaving

    MENQUE          shift and go to state 1137
    MAYQUE          shift and go to state 1138
    MENIGUAL        shift and go to state 1139
    MAYIGUAL        shift and go to state 1140
    IGUAL           shift and go to state 1141
    DIFERENTE       shift and go to state 1142


state 1082

    (173) expresionhaving -> cualquiercadena .

    MENQUE          reduce using rule 173 (expresionhaving -> cualquiercadena .)
    MAYQUE          reduce using rule 173 (expresionhaving -> cualquiercadena .)
    MENIGUAL        reduce using rule 173 (expresionhaving -> cualquiercadena .)
    MAYIGUAL        reduce using rule 173 (expresionhaving -> cualquiercadena .)
    IGUAL           reduce using rule 173 (expresionhaving -> cualquiercadena .)
    DIFERENTE       reduce using rule 173 (expresionhaving -> cualquiercadena .)
    OR              reduce using rule 173 (expresionhaving -> cualquiercadena .)
    AND             reduce using rule 173 (expresionhaving -> cualquiercadena .)
    ORDER           reduce using rule 173 (expresionhaving -> cualquiercadena .)
    UNION           reduce using rule 173 (expresionhaving -> cualquiercadena .)
    INTERSECT       reduce using rule 173 (expresionhaving -> cualquiercadena .)
    EXCEPT          reduce using rule 173 (expresionhaving -> cualquiercadena .)
    PTCOMA          reduce using rule 173 (expresionhaving -> cualquiercadena .)
    PARDER          reduce using rule 173 (expresionhaving -> cualquiercadena .)
    CSIMPLE         reduce using rule 173 (expresionhaving -> cualquiercadena .)


state 1083

    (174) expresionhaving -> expresionaritmetica .
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    MENQUE          reduce using rule 174 (expresionhaving -> expresionaritmetica .)
    MAYQUE          reduce using rule 174 (expresionhaving -> expresionaritmetica .)
    MENIGUAL        reduce using rule 174 (expresionhaving -> expresionaritmetica .)
    MAYIGUAL        reduce using rule 174 (expresionhaving -> expresionaritmetica .)
    IGUAL           reduce using rule 174 (expresionhaving -> expresionaritmetica .)
    DIFERENTE       reduce using rule 174 (expresionhaving -> expresionaritmetica .)
    OR              reduce using rule 174 (expresionhaving -> expresionaritmetica .)
    AND             reduce using rule 174 (expresionhaving -> expresionaritmetica .)
    ORDER           reduce using rule 174 (expresionhaving -> expresionaritmetica .)
    UNION           reduce using rule 174 (expresionhaving -> expresionaritmetica .)
    INTERSECT       reduce using rule 174 (expresionhaving -> expresionaritmetica .)
    EXCEPT          reduce using rule 174 (expresionhaving -> expresionaritmetica .)
    PTCOMA          reduce using rule 174 (expresionhaving -> expresionaritmetica .)
    PARDER          reduce using rule 174 (expresionhaving -> expresionaritmetica .)
    CSIMPLE         reduce using rule 174 (expresionhaving -> expresionaritmetica .)
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 1084

    (175) expresionhaving -> condicionhavingagregacion .

    MENQUE          reduce using rule 175 (expresionhaving -> condicionhavingagregacion .)
    MAYQUE          reduce using rule 175 (expresionhaving -> condicionhavingagregacion .)
    MENIGUAL        reduce using rule 175 (expresionhaving -> condicionhavingagregacion .)
    MAYIGUAL        reduce using rule 175 (expresionhaving -> condicionhavingagregacion .)
    IGUAL           reduce using rule 175 (expresionhaving -> condicionhavingagregacion .)
    DIFERENTE       reduce using rule 175 (expresionhaving -> condicionhavingagregacion .)
    OR              reduce using rule 175 (expresionhaving -> condicionhavingagregacion .)
    AND             reduce using rule 175 (expresionhaving -> condicionhavingagregacion .)
    ORDER           reduce using rule 175 (expresionhaving -> condicionhavingagregacion .)
    UNION           reduce using rule 175 (expresionhaving -> condicionhavingagregacion .)
    INTERSECT       reduce using rule 175 (expresionhaving -> condicionhavingagregacion .)
    EXCEPT          reduce using rule 175 (expresionhaving -> condicionhavingagregacion .)
    PTCOMA          reduce using rule 175 (expresionhaving -> condicionhavingagregacion .)
    PARDER          reduce using rule 175 (expresionhaving -> condicionhavingagregacion .)
    CSIMPLE         reduce using rule 175 (expresionhaving -> condicionhavingagregacion .)


state 1085

    (176) expresionhaving -> funcion_matematica_ws .

    MENQUE          reduce using rule 176 (expresionhaving -> funcion_matematica_ws .)
    MAYQUE          reduce using rule 176 (expresionhaving -> funcion_matematica_ws .)
    MENIGUAL        reduce using rule 176 (expresionhaving -> funcion_matematica_ws .)
    MAYIGUAL        reduce using rule 176 (expresionhaving -> funcion_matematica_ws .)
    IGUAL           reduce using rule 176 (expresionhaving -> funcion_matematica_ws .)
    DIFERENTE       reduce using rule 176 (expresionhaving -> funcion_matematica_ws .)
    OR              reduce using rule 176 (expresionhaving -> funcion_matematica_ws .)
    AND             reduce using rule 176 (expresionhaving -> funcion_matematica_ws .)
    ORDER           reduce using rule 176 (expresionhaving -> funcion_matematica_ws .)
    UNION           reduce using rule 176 (expresionhaving -> funcion_matematica_ws .)
    INTERSECT       reduce using rule 176 (expresionhaving -> funcion_matematica_ws .)
    EXCEPT          reduce using rule 176 (expresionhaving -> funcion_matematica_ws .)
    PTCOMA          reduce using rule 176 (expresionhaving -> funcion_matematica_ws .)
    PARDER          reduce using rule 176 (expresionhaving -> funcion_matematica_ws .)
    CSIMPLE         reduce using rule 176 (expresionhaving -> funcion_matematica_ws .)


state 1086

    (177) condicionhavingagregacion -> agregacion . PARIZQ cualquieridentificador PARDER

    PARIZQ          shift and go to state 1143


state 1087

    (160) listagroupby -> listagroupby COMA valgroupby .

    HAVING          reduce using rule 160 (listagroupby -> listagroupby COMA valgroupby .)
    COMA            reduce using rule 160 (listagroupby -> listagroupby COMA valgroupby .)
    ORDER           reduce using rule 160 (listagroupby -> listagroupby COMA valgroupby .)
    UNION           reduce using rule 160 (listagroupby -> listagroupby COMA valgroupby .)
    INTERSECT       reduce using rule 160 (listagroupby -> listagroupby COMA valgroupby .)
    EXCEPT          reduce using rule 160 (listagroupby -> listagroupby COMA valgroupby .)
    PTCOMA          reduce using rule 160 (listagroupby -> listagroupby COMA valgroupby .)
    PARDER          reduce using rule 160 (listagroupby -> listagroupby COMA valgroupby .)
    CSIMPLE         reduce using rule 160 (listagroupby -> listagroupby COMA valgroupby .)


state 1088

    (147) notwhereexists -> NOT EXISTS PARIZQ select_instr1 PARDER .

    OR              reduce using rule 147 (notwhereexists -> NOT EXISTS PARIZQ select_instr1 PARDER .)
    AND             reduce using rule 147 (notwhereexists -> NOT EXISTS PARIZQ select_instr1 PARDER .)
    GROUP           reduce using rule 147 (notwhereexists -> NOT EXISTS PARIZQ select_instr1 PARDER .)
    ORDER           reduce using rule 147 (notwhereexists -> NOT EXISTS PARIZQ select_instr1 PARDER .)
    UNION           reduce using rule 147 (notwhereexists -> NOT EXISTS PARIZQ select_instr1 PARDER .)
    INTERSECT       reduce using rule 147 (notwhereexists -> NOT EXISTS PARIZQ select_instr1 PARDER .)
    EXCEPT          reduce using rule 147 (notwhereexists -> NOT EXISTS PARIZQ select_instr1 PARDER .)
    PTCOMA          reduce using rule 147 (notwhereexists -> NOT EXISTS PARIZQ select_instr1 PARDER .)
    PARDER          reduce using rule 147 (notwhereexists -> NOT EXISTS PARIZQ select_instr1 PARDER .)
    CSIMPLE         reduce using rule 147 (notwhereexists -> NOT EXISTS PARIZQ select_instr1 PARDER .)


state 1089

    (150) wherenotin -> cualquiernumero NOT IN PARIZQ select_instr1 . PARDER

    PARDER          shift and go to state 1144


state 1090

    (371) not_between_state -> cualquiernumero NOT BETWEEN valores AND . valores
    (379) valores -> . cualquiernumero
    (380) valores -> . cualquiercadena
    (381) valores -> . cualquieridentificador
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    cualquiernumero                shift and go to state 947
    valores                        shift and go to state 1145
    cualquiercadena                shift and go to state 949
    cualquieridentificador         shift and go to state 950

state 1091

    (148) wherein -> cualquiernumero IN PARIZQ select_instr1 PARDER .

    OR              reduce using rule 148 (wherein -> cualquiernumero IN PARIZQ select_instr1 PARDER .)
    AND             reduce using rule 148 (wherein -> cualquiernumero IN PARIZQ select_instr1 PARDER .)
    GROUP           reduce using rule 148 (wherein -> cualquiernumero IN PARIZQ select_instr1 PARDER .)
    ORDER           reduce using rule 148 (wherein -> cualquiernumero IN PARIZQ select_instr1 PARDER .)
    UNION           reduce using rule 148 (wherein -> cualquiernumero IN PARIZQ select_instr1 PARDER .)
    INTERSECT       reduce using rule 148 (wherein -> cualquiernumero IN PARIZQ select_instr1 PARDER .)
    EXCEPT          reduce using rule 148 (wherein -> cualquiernumero IN PARIZQ select_instr1 PARDER .)
    PTCOMA          reduce using rule 148 (wherein -> cualquiernumero IN PARIZQ select_instr1 PARDER .)
    PARDER          reduce using rule 148 (wherein -> cualquiernumero IN PARIZQ select_instr1 PARDER .)
    CSIMPLE         reduce using rule 148 (wherein -> cualquiernumero IN PARIZQ select_instr1 PARDER .)


state 1092

    (369) between_state -> cualquiernumero BETWEEN valores AND valores .

    OR              reduce using rule 369 (between_state -> cualquiernumero BETWEEN valores AND valores .)
    AND             reduce using rule 369 (between_state -> cualquiernumero BETWEEN valores AND valores .)
    GROUP           reduce using rule 369 (between_state -> cualquiernumero BETWEEN valores AND valores .)
    ORDER           reduce using rule 369 (between_state -> cualquiernumero BETWEEN valores AND valores .)
    UNION           reduce using rule 369 (between_state -> cualquiernumero BETWEEN valores AND valores .)
    INTERSECT       reduce using rule 369 (between_state -> cualquiernumero BETWEEN valores AND valores .)
    EXCEPT          reduce using rule 369 (between_state -> cualquiernumero BETWEEN valores AND valores .)
    PTCOMA          reduce using rule 369 (between_state -> cualquiernumero BETWEEN valores AND valores .)
    PARDER          reduce using rule 369 (between_state -> cualquiernumero BETWEEN valores AND valores .)
    CSIMPLE         reduce using rule 369 (between_state -> cualquiernumero BETWEEN valores AND valores .)


state 1093

    (151) wherenotin -> cadenastodas NOT IN PARIZQ select_instr1 . PARDER

    PARDER          shift and go to state 1146


state 1094

    (372) not_between_state -> cadenastodas NOT BETWEEN valores AND . valores
    (379) valores -> . cualquiernumero
    (380) valores -> . cualquiercadena
    (381) valores -> . cualquieridentificador
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    valores                        shift and go to state 1147
    cualquiernumero                shift and go to state 947
    cualquiercadena                shift and go to state 949
    cualquieridentificador         shift and go to state 950

state 1095

    (149) wherein -> cadenastodas IN PARIZQ select_instr1 PARDER .

    OR              reduce using rule 149 (wherein -> cadenastodas IN PARIZQ select_instr1 PARDER .)
    AND             reduce using rule 149 (wherein -> cadenastodas IN PARIZQ select_instr1 PARDER .)
    GROUP           reduce using rule 149 (wherein -> cadenastodas IN PARIZQ select_instr1 PARDER .)
    ORDER           reduce using rule 149 (wherein -> cadenastodas IN PARIZQ select_instr1 PARDER .)
    UNION           reduce using rule 149 (wherein -> cadenastodas IN PARIZQ select_instr1 PARDER .)
    INTERSECT       reduce using rule 149 (wherein -> cadenastodas IN PARIZQ select_instr1 PARDER .)
    EXCEPT          reduce using rule 149 (wherein -> cadenastodas IN PARIZQ select_instr1 PARDER .)
    PTCOMA          reduce using rule 149 (wherein -> cadenastodas IN PARIZQ select_instr1 PARDER .)
    PARDER          reduce using rule 149 (wherein -> cadenastodas IN PARIZQ select_instr1 PARDER .)
    CSIMPLE         reduce using rule 149 (wherein -> cadenastodas IN PARIZQ select_instr1 PARDER .)


state 1096

    (370) between_state -> cadenastodas BETWEEN valores AND valores .

    OR              reduce using rule 370 (between_state -> cadenastodas BETWEEN valores AND valores .)
    AND             reduce using rule 370 (between_state -> cadenastodas BETWEEN valores AND valores .)
    GROUP           reduce using rule 370 (between_state -> cadenastodas BETWEEN valores AND valores .)
    ORDER           reduce using rule 370 (between_state -> cadenastodas BETWEEN valores AND valores .)
    UNION           reduce using rule 370 (between_state -> cadenastodas BETWEEN valores AND valores .)
    INTERSECT       reduce using rule 370 (between_state -> cadenastodas BETWEEN valores AND valores .)
    EXCEPT          reduce using rule 370 (between_state -> cadenastodas BETWEEN valores AND valores .)
    PTCOMA          reduce using rule 370 (between_state -> cadenastodas BETWEEN valores AND valores .)
    PARDER          reduce using rule 370 (between_state -> cadenastodas BETWEEN valores AND valores .)
    CSIMPLE         reduce using rule 370 (between_state -> cadenastodas BETWEEN valores AND valores .)


state 1097

    (154) wheresubstring -> SUBSTRING PARIZQ cadenastodas COMA ENTERO . COMA ENTERO PARDER IGUAL CADENASIMPLE

    COMA            shift and go to state 1148


state 1098

    (378) is_distinct_state -> valores IS NOT DISTINCT FROM . valores
    (379) valores -> . cualquiernumero
    (380) valores -> . cualquiercadena
    (381) valores -> . cualquieridentificador
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ID              shift and go to state 234

    valores                        shift and go to state 1149
    cualquiernumero                shift and go to state 947
    cualquiercadena                shift and go to state 949
    cualquieridentificador         shift and go to state 950

state 1099

    (377) is_distinct_state -> valores IS DISTINCT FROM valores .

    OR              reduce using rule 377 (is_distinct_state -> valores IS DISTINCT FROM valores .)
    AND             reduce using rule 377 (is_distinct_state -> valores IS DISTINCT FROM valores .)
    GROUP           reduce using rule 377 (is_distinct_state -> valores IS DISTINCT FROM valores .)
    ORDER           reduce using rule 377 (is_distinct_state -> valores IS DISTINCT FROM valores .)
    UNION           reduce using rule 377 (is_distinct_state -> valores IS DISTINCT FROM valores .)
    INTERSECT       reduce using rule 377 (is_distinct_state -> valores IS DISTINCT FROM valores .)
    EXCEPT          reduce using rule 377 (is_distinct_state -> valores IS DISTINCT FROM valores .)
    PTCOMA          reduce using rule 377 (is_distinct_state -> valores IS DISTINCT FROM valores .)
    PARDER          reduce using rule 377 (is_distinct_state -> valores IS DISTINCT FROM valores .)
    CSIMPLE         reduce using rule 377 (is_distinct_state -> valores IS DISTINCT FROM valores .)


state 1100

    (254) explist -> expresionaritmetica COMA expresionaritmetica COMA expresionaritmetica COMA expresionaritmetica .
    (214) expresionaritmetica -> expresionaritmetica . MAS expresionaritmetica
    (215) expresionaritmetica -> expresionaritmetica . MENOS expresionaritmetica
    (216) expresionaritmetica -> expresionaritmetica . ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> expresionaritmetica . DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> expresionaritmetica . MODULO expresionaritmetica
    (219) expresionaritmetica -> expresionaritmetica . EXPONENTE expresionaritmetica

    PARDER          reduce using rule 254 (explist -> expresionaritmetica COMA expresionaritmetica COMA expresionaritmetica COMA expresionaritmetica .)
    MAS             shift and go to state 416
    MENOS           shift and go to state 417
    ASTERISCO       shift and go to state 418
    DIVIDIDO        shift and go to state 419
    MODULO          shift and go to state 420
    EXPONENTE       shift and go to state 421


state 1101

    (353) primary_key -> PRIMARY KEY .

    PARDER          reduce using rule 353 (primary_key -> PRIMARY KEY .)
    COMA            reduce using rule 353 (primary_key -> PRIMARY KEY .)


state 1102

    (363) check_unique -> CHECK PARIZQ . condiciones PARDER
    (195) condiciones -> . condiciones AND condicion
    (196) condiciones -> . condiciones OR condicion
    (197) condiciones -> . NOT PARIZQ condiciones PARDER
    (198) condiciones -> . NOT condiciones
    (199) condiciones -> . condicion
    (200) condicion -> . expresion MENQUE expresion
    (201) condicion -> . expresion MAYQUE expresion
    (202) condicion -> . expresion MENIGUAL expresion
    (203) condicion -> . expresion MAYIGUAL expresion
    (204) condicion -> . expresion IGUAL expresion
    (205) condicion -> . expresion DIFERENTE expresion
    (206) condicion -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    NOT             shift and go to state 406
    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    condiciones                    shift and go to state 1150
    condicion                      shift and go to state 405
    expresion                      shift and go to state 407
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 1103

    (360) constraint_field -> CHECK PARIZQ condiciones PARDER .

    NULL            reduce using rule 360 (constraint_field -> CHECK PARIZQ condiciones PARDER .)
    NOT             reduce using rule 360 (constraint_field -> CHECK PARIZQ condiciones PARDER .)
    PRIMARY         reduce using rule 360 (constraint_field -> CHECK PARIZQ condiciones PARDER .)
    PARDER          reduce using rule 360 (constraint_field -> CHECK PARIZQ condiciones PARDER .)
    COMA            reduce using rule 360 (constraint_field -> CHECK PARIZQ condiciones PARDER .)


state 1104

    (399) indexinstr -> CREATE INDEX ID ON ID PARIZQ LOWER PARIZQ ID PARDER PARDER PTCOMA .

    $end            reduce using rule 399 (indexinstr -> CREATE INDEX ID ON ID PARIZQ LOWER PARIZQ ID PARDER PARDER PTCOMA .)


state 1105

    (426) cuerpofuncion -> CADDOLAR declaraciones cuerpo CADDOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 1151


state 1106

    (427) cuerpofuncion -> CADDOLAR declaraciones cuerpo CADDOLAR PTCOMA .

    $end            reduce using rule 427 (cuerpofuncion -> CADDOLAR declaraciones cuerpo CADDOLAR PTCOMA .)


state 1107

    (445) cuerpo -> BEGIN instrlistabloque END . PTCOMA

    PTCOMA          shift and go to state 1152


state 1108

    (448) listabloque -> listabloque bloque .

    RAISE           reduce using rule 448 (listabloque -> listabloque bloque .)
    ID              reduce using rule 448 (listabloque -> listabloque bloque .)
    RETURN          reduce using rule 448 (listabloque -> listabloque bloque .)
    EXECUTE         reduce using rule 448 (listabloque -> listabloque bloque .)
    GET             reduce using rule 448 (listabloque -> listabloque bloque .)
    NULL            reduce using rule 448 (listabloque -> listabloque bloque .)
    IF              reduce using rule 448 (listabloque -> listabloque bloque .)
    CASE            reduce using rule 448 (listabloque -> listabloque bloque .)
    COMMIT          reduce using rule 448 (listabloque -> listabloque bloque .)
    ROLLBACK        reduce using rule 448 (listabloque -> listabloque bloque .)
    INSERT          reduce using rule 448 (listabloque -> listabloque bloque .)
    UPDATE          reduce using rule 448 (listabloque -> listabloque bloque .)
    ALTER           reduce using rule 448 (listabloque -> listabloque bloque .)
    CREATE          reduce using rule 448 (listabloque -> listabloque bloque .)
    DROP            reduce using rule 448 (listabloque -> listabloque bloque .)
    DELETE          reduce using rule 448 (listabloque -> listabloque bloque .)
    TRUNCATE        reduce using rule 448 (listabloque -> listabloque bloque .)
    DECLARE         reduce using rule 448 (listabloque -> listabloque bloque .)
    SELECT          reduce using rule 448 (listabloque -> listabloque bloque .)
    BEGIN           reduce using rule 448 (listabloque -> listabloque bloque .)
    END             reduce using rule 448 (listabloque -> listabloque bloque .)
    ELSE            reduce using rule 448 (listabloque -> listabloque bloque .)
    ELSIF           reduce using rule 448 (listabloque -> listabloque bloque .)
    WHEN            reduce using rule 448 (listabloque -> listabloque bloque .)


state 1109

    (463) bloque -> alter_instr PTCOMA .

    RAISE           reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    ID              reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    RETURN          reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    EXECUTE         reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    GET             reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    NULL            reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    IF              reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    CASE            reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    COMMIT          reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    ROLLBACK        reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    INSERT          reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    UPDATE          reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    ALTER           reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    CREATE          reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    DROP            reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    DELETE          reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    TRUNCATE        reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    DECLARE         reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    SELECT          reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    BEGIN           reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    END             reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    ELSE            reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    ELSIF           reduce using rule 463 (bloque -> alter_instr PTCOMA .)
    WHEN            reduce using rule 463 (bloque -> alter_instr PTCOMA .)


state 1110

    (471) raisenotice -> RAISE NOTICE . CADENASIMPLE COMA ID PTCOMA
    (472) raisenotice -> RAISE NOTICE . CADENASIMPLE PTCOMA

    CADENASIMPLE    shift and go to state 1153


state 1111

    (473) asignacionbloque -> ID IGUAL . expresion PTCOMA
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresion                      shift and go to state 1154
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 1112

    (474) asignacionbloque -> ID PTIGUAL . expresion PTCOMA
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresion                      shift and go to state 1155
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 1113

    (479) subbloque -> declaraciones cuerposub .

    RAISE           reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    ID              reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    RETURN          reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    EXECUTE         reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    GET             reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    NULL            reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    IF              reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    CASE            reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    COMMIT          reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    ROLLBACK        reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    INSERT          reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    UPDATE          reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    ALTER           reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    CREATE          reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    DROP            reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    DELETE          reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    TRUNCATE        reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    DECLARE         reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    SELECT          reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    BEGIN           reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    END             reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    ELSE            reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    ELSIF           reduce using rule 479 (subbloque -> declaraciones cuerposub .)
    WHEN            reduce using rule 479 (subbloque -> declaraciones cuerposub .)


state 1114

    (480) cuerposub -> BEGIN . listasubbloque END PTCOMA
    (481) cuerposub -> BEGIN . empty END PTCOMA
    (482) listasubbloque -> . listasubbloque subbloque1
    (483) listasubbloque -> . subbloque1
    (546) empty -> .
    (484) subbloque1 -> . raisenotice1
    (485) subbloque1 -> . asignacionbloque
    (486) raisenotice1 -> . RAISE NOTICE CADENASIMPLE COMA ID PTCOMA
    (487) raisenotice1 -> . RAISE NOTICE CADENASIMPLE COMA OUTERBLOCK PUNTO ID PTCOMA
    (488) raisenotice1 -> . RAISE NOTICE CADENASIMPLE PTCOMA
    (473) asignacionbloque -> . ID IGUAL expresion PTCOMA
    (474) asignacionbloque -> . ID PTIGUAL expresion PTCOMA

    END             reduce using rule 546 (empty -> .)
    RAISE           shift and go to state 1161
    ID              shift and go to state 1055

    listasubbloque                 shift and go to state 1156
    empty                          shift and go to state 1157
    subbloque1                     shift and go to state 1158
    raisenotice1                   shift and go to state 1159
    asignacionbloque               shift and go to state 1160

state 1115

    (475) returnbloque -> RETURN condicion . PTCOMA

    PTCOMA          shift and go to state 1162


state 1116

    (478) returnbloque -> RETURN PTCOMA .

    RAISE           reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    ID              reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    RETURN          reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    EXECUTE         reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    GET             reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    NULL            reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    IF              reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    CASE            reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    COMMIT          reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    ROLLBACK        reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    INSERT          reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    UPDATE          reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    ALTER           reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    CREATE          reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    DROP            reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    DELETE          reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    TRUNCATE        reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    DECLARE         reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    SELECT          reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    BEGIN           reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    END             reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    ELSE            reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    ELSIF           reduce using rule 478 (returnbloque -> RETURN PTCOMA .)
    WHEN            reduce using rule 478 (returnbloque -> RETURN PTCOMA .)


state 1117

    (476) returnbloque -> RETURN QUERY . select_instr1 PTCOMA
    (477) returnbloque -> RETURN QUERY . instrexecute PTCOMA
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom
    (517) instrexecute -> . EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion
    (518) instrexecute -> . EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion

    SELECT          shift and go to state 102
    EXECUTE         shift and go to state 1058

    select_instr1                  shift and go to state 1163
    instrexecute                   shift and go to state 1164

state 1118

    (517) instrexecute -> EXECUTE CSIMPLE . select_instr1 CSIMPLE intotarget usingexpresion
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    SELECT          shift and go to state 102

    select_instr1                  shift and go to state 1165

state 1119

    (518) instrexecute -> EXECUTE FORMAT . PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion

    PARIZQ          shift and go to state 1166


state 1120

    (525) getdiagnostic -> GET DIAGNOSTICS . ID IGUAL ID
    (526) getdiagnostic -> GET DIAGNOSTICS . ID PTIGUAL ID

    ID              shift and go to state 1167


state 1121

    (527) instrnull -> NULL PTCOMA .

    RAISE           reduce using rule 527 (instrnull -> NULL PTCOMA .)
    ID              reduce using rule 527 (instrnull -> NULL PTCOMA .)
    RETURN          reduce using rule 527 (instrnull -> NULL PTCOMA .)
    EXECUTE         reduce using rule 527 (instrnull -> NULL PTCOMA .)
    GET             reduce using rule 527 (instrnull -> NULL PTCOMA .)
    NULL            reduce using rule 527 (instrnull -> NULL PTCOMA .)
    IF              reduce using rule 527 (instrnull -> NULL PTCOMA .)
    CASE            reduce using rule 527 (instrnull -> NULL PTCOMA .)
    COMMIT          reduce using rule 527 (instrnull -> NULL PTCOMA .)
    ROLLBACK        reduce using rule 527 (instrnull -> NULL PTCOMA .)
    INSERT          reduce using rule 527 (instrnull -> NULL PTCOMA .)
    UPDATE          reduce using rule 527 (instrnull -> NULL PTCOMA .)
    ALTER           reduce using rule 527 (instrnull -> NULL PTCOMA .)
    CREATE          reduce using rule 527 (instrnull -> NULL PTCOMA .)
    DROP            reduce using rule 527 (instrnull -> NULL PTCOMA .)
    DELETE          reduce using rule 527 (instrnull -> NULL PTCOMA .)
    TRUNCATE        reduce using rule 527 (instrnull -> NULL PTCOMA .)
    DECLARE         reduce using rule 527 (instrnull -> NULL PTCOMA .)
    SELECT          reduce using rule 527 (instrnull -> NULL PTCOMA .)
    BEGIN           reduce using rule 527 (instrnull -> NULL PTCOMA .)
    END             reduce using rule 527 (instrnull -> NULL PTCOMA .)
    ELSE            reduce using rule 527 (instrnull -> NULL PTCOMA .)
    ELSIF           reduce using rule 527 (instrnull -> NULL PTCOMA .)
    WHEN            reduce using rule 527 (instrnull -> NULL PTCOMA .)


state 1122

    (528) instrif -> IF condiciones . THEN instrlistabloque END IF PTCOMA
    (529) instrif -> IF condiciones . THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA
    (530) instrif -> IF condiciones . THEN instrlistabloque instrelseif END IF PTCOMA
    (531) instrif -> IF condiciones . THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA
    (195) condiciones -> condiciones . AND condicion
    (196) condiciones -> condiciones . OR condicion

    THEN            shift and go to state 1168
    AND             shift and go to state 585
    OR              shift and go to state 586


state 1123

    (535) instrcase -> CASE expresion . listawhen1 elsecase END CASE PTCOMA
    (538) listawhen1 -> . listawhen1 when1
    (539) listawhen1 -> . when1
    (540) when1 -> . WHEN listaexpresiones THEN instrlistabloque

    WHEN            shift and go to state 1171

    listawhen1                     shift and go to state 1169
    when1                          shift and go to state 1170

state 1124

    (541) instrcase -> CASE listawhen2 . elsecase END CASE PTCOMA
    (542) listawhen2 -> listawhen2 . when2
    (536) elsecase -> . ELSE instrlistabloque
    (537) elsecase -> . empty
    (544) when2 -> . WHEN ID BETWEEN ENTERO AND ENTERO THEN instrlistabloque
    (545) when2 -> . WHEN condiciones THEN instrlistabloque
    (546) empty -> .

    ELSE            shift and go to state 1174
    WHEN            shift and go to state 1126
    END             reduce using rule 546 (empty -> .)

    elsecase                       shift and go to state 1172
    when2                          shift and go to state 1173
    empty                          shift and go to state 1175

state 1125

    (543) listawhen2 -> when2 .

    ELSE            reduce using rule 543 (listawhen2 -> when2 .)
    WHEN            reduce using rule 543 (listawhen2 -> when2 .)
    END             reduce using rule 543 (listawhen2 -> when2 .)


state 1126

    (544) when2 -> WHEN . ID BETWEEN ENTERO AND ENTERO THEN instrlistabloque
    (545) when2 -> WHEN . condiciones THEN instrlistabloque
    (195) condiciones -> . condiciones AND condicion
    (196) condiciones -> . condiciones OR condicion
    (197) condiciones -> . NOT PARIZQ condiciones PARDER
    (198) condiciones -> . NOT condiciones
    (199) condiciones -> . condicion
    (200) condicion -> . expresion MENQUE expresion
    (201) condicion -> . expresion MAYQUE expresion
    (202) condicion -> . expresion MENIGUAL expresion
    (203) condicion -> . expresion MAYIGUAL expresion
    (204) condicion -> . expresion IGUAL expresion
    (205) condicion -> . expresion DIFERENTE expresion
    (206) condicion -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    ID              shift and go to state 1176
    NOT             shift and go to state 406
    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253

    condiciones                    shift and go to state 1177
    condicion                      shift and go to state 405
    expresion                      shift and go to state 407
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 1127

    (469) commitinstr -> COMMIT PTCOMA .

    RAISE           reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    ID              reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    RETURN          reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    EXECUTE         reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    GET             reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    NULL            reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    IF              reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    CASE            reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    COMMIT          reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    ROLLBACK        reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    INSERT          reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    UPDATE          reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    ALTER           reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    CREATE          reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    DROP            reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    DELETE          reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    TRUNCATE        reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    DECLARE         reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    SELECT          reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    BEGIN           reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    END             reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    ELSE            reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    ELSIF           reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)
    WHEN            reduce using rule 469 (commitinstr -> COMMIT PTCOMA .)


state 1128

    (470) rollbackinstr -> ROLLBACK PTCOMA .

    RAISE           reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    ID              reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    RETURN          reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    EXECUTE         reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    GET             reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    NULL            reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    IF              reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    CASE            reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    COMMIT          reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    ROLLBACK        reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    INSERT          reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    UPDATE          reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    ALTER           reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    CREATE          reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    DROP            reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    DELETE          reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    TRUNCATE        reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    DECLARE         reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    SELECT          reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    BEGIN           reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    END             reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    ELSE            reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    ELSIF           reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)
    WHEN            reduce using rule 470 (rollbackinstr -> ROLLBACK PTCOMA .)


state 1129

    (432) declaracion -> ID constantintr type_column1 . notnullinst asignavalor PTCOMA
    (439) notnullinst -> . NOT NULL
    (440) notnullinst -> . empty
    (546) empty -> .

    NOT             shift and go to state 1179
    DEFAULT         reduce using rule 546 (empty -> .)
    PTIGUAL         reduce using rule 546 (empty -> .)
    IGUAL           reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)

    notnullinst                    shift and go to state 1178
    empty                          shift and go to state 1180

state 1130

    (433) declaracion -> ID ALIAS1 FOR . DOLAR ENTERO PTCOMA
    (434) declaracion -> ID ALIAS1 FOR . ID PTCOMA

    DOLAR           shift and go to state 1182
    ID              shift and go to state 1181


state 1131

    (435) declaracion -> ID cualquieridentificador MODULO . TYPE PTCOMA
    (436) declaracion -> ID cualquieridentificador MODULO . ROWTYPE PTCOMA

    TYPE            shift and go to state 1183
    ROWTYPE         shift and go to state 1184


state 1132

    (181) listaorderby -> listaorderby COMA valororderby .

    COMA            reduce using rule 181 (listaorderby -> listaorderby COMA valororderby .)
    LIMIT           reduce using rule 181 (listaorderby -> listaorderby COMA valororderby .)
    UNION           reduce using rule 181 (listaorderby -> listaorderby COMA valororderby .)
    INTERSECT       reduce using rule 181 (listaorderby -> listaorderby COMA valororderby .)
    EXCEPT          reduce using rule 181 (listaorderby -> listaorderby COMA valororderby .)
    PTCOMA          reduce using rule 181 (listaorderby -> listaorderby COMA valororderby .)
    PARDER          reduce using rule 181 (listaorderby -> listaorderby COMA valororderby .)
    CSIMPLE         reduce using rule 181 (listaorderby -> listaorderby COMA valororderby .)


state 1133

    (191) instrlimit -> LIMIT ENTERO . instroffset
    (193) instroffset -> . OFFSET ENTERO
    (194) instroffset -> . empty
    (546) empty -> .

    OFFSET          shift and go to state 1186
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    instroffset                    shift and go to state 1185
    empty                          shift and go to state 1187

state 1134

    (192) instrlimit -> LIMIT ALL . instroffset
    (193) instroffset -> . OFFSET ENTERO
    (194) instroffset -> . empty
    (546) empty -> .

    OFFSET          shift and go to state 1186
    UNION           reduce using rule 546 (empty -> .)
    INTERSECT       reduce using rule 546 (empty -> .)
    EXCEPT          reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)
    PARDER          reduce using rule 546 (empty -> .)
    CSIMPLE         reduce using rule 546 (empty -> .)

    instroffset                    shift and go to state 1188
    empty                          shift and go to state 1187

state 1135

    (164) condicioneshaving -> condicioneshaving OR . condicionhaving
    (167) condicionhaving -> . expresionhaving MENQUE expresionhaving
    (168) condicionhaving -> . expresionhaving MAYQUE expresionhaving
    (169) condicionhaving -> . expresionhaving MENIGUAL expresionhaving
    (170) condicionhaving -> . expresionhaving MAYIGUAL expresionhaving
    (171) condicionhaving -> . expresionhaving IGUAL expresionhaving
    (172) condicionhaving -> . expresionhaving DIFERENTE expresionhaving
    (173) expresionhaving -> . cualquiercadena
    (174) expresionhaving -> . expresionaritmetica
    (175) expresionhaving -> . condicionhavingagregacion
    (176) expresionhaving -> . funcion_matematica_ws
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (177) condicionhavingagregacion -> . agregacion PARIZQ cualquieridentificador PARDER
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (113) agregacion -> . SUM
    (114) agregacion -> . AVG
    (115) agregacion -> . MAX
    (116) agregacion -> . MIN

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234
    SUM             shift and go to state 172
    AVG             shift and go to state 173
    MAX             shift and go to state 174
    MIN             shift and go to state 175

    condicionhaving                shift and go to state 1189
    expresionhaving                shift and go to state 1081
    cualquiercadena                shift and go to state 1082
    expresionaritmetica            shift and go to state 1083
    condicionhavingagregacion      shift and go to state 1084
    funcion_matematica_ws          shift and go to state 1085
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249
    agregacion                     shift and go to state 1086

state 1136

    (165) condicioneshaving -> condicioneshaving AND . condicionhaving
    (167) condicionhaving -> . expresionhaving MENQUE expresionhaving
    (168) condicionhaving -> . expresionhaving MAYQUE expresionhaving
    (169) condicionhaving -> . expresionhaving MENIGUAL expresionhaving
    (170) condicionhaving -> . expresionhaving MAYIGUAL expresionhaving
    (171) condicionhaving -> . expresionhaving IGUAL expresionhaving
    (172) condicionhaving -> . expresionhaving DIFERENTE expresionhaving
    (173) expresionhaving -> . cualquiercadena
    (174) expresionhaving -> . expresionaritmetica
    (175) expresionhaving -> . condicionhavingagregacion
    (176) expresionhaving -> . funcion_matematica_ws
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (177) condicionhavingagregacion -> . agregacion PARIZQ cualquieridentificador PARDER
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (113) agregacion -> . SUM
    (114) agregacion -> . AVG
    (115) agregacion -> . MAX
    (116) agregacion -> . MIN

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234
    SUM             shift and go to state 172
    AVG             shift and go to state 173
    MAX             shift and go to state 174
    MIN             shift and go to state 175

    condicionhaving                shift and go to state 1190
    expresionhaving                shift and go to state 1081
    cualquiercadena                shift and go to state 1082
    expresionaritmetica            shift and go to state 1083
    condicionhavingagregacion      shift and go to state 1084
    funcion_matematica_ws          shift and go to state 1085
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249
    agregacion                     shift and go to state 1086

state 1137

    (167) condicionhaving -> expresionhaving MENQUE . expresionhaving
    (173) expresionhaving -> . cualquiercadena
    (174) expresionhaving -> . expresionaritmetica
    (175) expresionhaving -> . condicionhavingagregacion
    (176) expresionhaving -> . funcion_matematica_ws
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (177) condicionhavingagregacion -> . agregacion PARIZQ cualquieridentificador PARDER
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (113) agregacion -> . SUM
    (114) agregacion -> . AVG
    (115) agregacion -> . MAX
    (116) agregacion -> . MIN

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234
    SUM             shift and go to state 172
    AVG             shift and go to state 173
    MAX             shift and go to state 174
    MIN             shift and go to state 175

    expresionhaving                shift and go to state 1191
    cualquiercadena                shift and go to state 1082
    expresionaritmetica            shift and go to state 1083
    condicionhavingagregacion      shift and go to state 1084
    funcion_matematica_ws          shift and go to state 1085
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249
    agregacion                     shift and go to state 1086

state 1138

    (168) condicionhaving -> expresionhaving MAYQUE . expresionhaving
    (173) expresionhaving -> . cualquiercadena
    (174) expresionhaving -> . expresionaritmetica
    (175) expresionhaving -> . condicionhavingagregacion
    (176) expresionhaving -> . funcion_matematica_ws
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (177) condicionhavingagregacion -> . agregacion PARIZQ cualquieridentificador PARDER
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (113) agregacion -> . SUM
    (114) agregacion -> . AVG
    (115) agregacion -> . MAX
    (116) agregacion -> . MIN

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234
    SUM             shift and go to state 172
    AVG             shift and go to state 173
    MAX             shift and go to state 174
    MIN             shift and go to state 175

    expresionhaving                shift and go to state 1192
    cualquiercadena                shift and go to state 1082
    expresionaritmetica            shift and go to state 1083
    condicionhavingagregacion      shift and go to state 1084
    funcion_matematica_ws          shift and go to state 1085
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249
    agregacion                     shift and go to state 1086

state 1139

    (169) condicionhaving -> expresionhaving MENIGUAL . expresionhaving
    (173) expresionhaving -> . cualquiercadena
    (174) expresionhaving -> . expresionaritmetica
    (175) expresionhaving -> . condicionhavingagregacion
    (176) expresionhaving -> . funcion_matematica_ws
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (177) condicionhavingagregacion -> . agregacion PARIZQ cualquieridentificador PARDER
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (113) agregacion -> . SUM
    (114) agregacion -> . AVG
    (115) agregacion -> . MAX
    (116) agregacion -> . MIN

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234
    SUM             shift and go to state 172
    AVG             shift and go to state 173
    MAX             shift and go to state 174
    MIN             shift and go to state 175

    expresionhaving                shift and go to state 1193
    cualquiercadena                shift and go to state 1082
    expresionaritmetica            shift and go to state 1083
    condicionhavingagregacion      shift and go to state 1084
    funcion_matematica_ws          shift and go to state 1085
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249
    agregacion                     shift and go to state 1086

state 1140

    (170) condicionhaving -> expresionhaving MAYIGUAL . expresionhaving
    (173) expresionhaving -> . cualquiercadena
    (174) expresionhaving -> . expresionaritmetica
    (175) expresionhaving -> . condicionhavingagregacion
    (176) expresionhaving -> . funcion_matematica_ws
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (177) condicionhavingagregacion -> . agregacion PARIZQ cualquieridentificador PARDER
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (113) agregacion -> . SUM
    (114) agregacion -> . AVG
    (115) agregacion -> . MAX
    (116) agregacion -> . MIN

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234
    SUM             shift and go to state 172
    AVG             shift and go to state 173
    MAX             shift and go to state 174
    MIN             shift and go to state 175

    expresionhaving                shift and go to state 1194
    cualquiercadena                shift and go to state 1082
    expresionaritmetica            shift and go to state 1083
    condicionhavingagregacion      shift and go to state 1084
    funcion_matematica_ws          shift and go to state 1085
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249
    agregacion                     shift and go to state 1086

state 1141

    (171) condicionhaving -> expresionhaving IGUAL . expresionhaving
    (173) expresionhaving -> . cualquiercadena
    (174) expresionhaving -> . expresionaritmetica
    (175) expresionhaving -> . condicionhavingagregacion
    (176) expresionhaving -> . funcion_matematica_ws
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (177) condicionhavingagregacion -> . agregacion PARIZQ cualquieridentificador PARDER
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (113) agregacion -> . SUM
    (114) agregacion -> . AVG
    (115) agregacion -> . MAX
    (116) agregacion -> . MIN

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234
    SUM             shift and go to state 172
    AVG             shift and go to state 173
    MAX             shift and go to state 174
    MIN             shift and go to state 175

    expresionhaving                shift and go to state 1195
    cualquiercadena                shift and go to state 1082
    expresionaritmetica            shift and go to state 1083
    condicionhavingagregacion      shift and go to state 1084
    funcion_matematica_ws          shift and go to state 1085
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249
    agregacion                     shift and go to state 1086

state 1142

    (172) condicionhaving -> expresionhaving DIFERENTE . expresionhaving
    (173) expresionhaving -> . cualquiercadena
    (174) expresionhaving -> . expresionaritmetica
    (175) expresionhaving -> . condicionhavingagregacion
    (176) expresionhaving -> . funcion_matematica_ws
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (177) condicionhavingagregacion -> . agregacion PARIZQ cualquieridentificador PARDER
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID
    (113) agregacion -> . SUM
    (114) agregacion -> . AVG
    (115) agregacion -> . MAX
    (116) agregacion -> . MIN

    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    MENOS           shift and go to state 247
    PARIZQ          shift and go to state 410
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234
    SUM             shift and go to state 172
    AVG             shift and go to state 173
    MAX             shift and go to state 174
    MIN             shift and go to state 175

    expresionhaving                shift and go to state 1196
    cualquiercadena                shift and go to state 1082
    expresionaritmetica            shift and go to state 1083
    condicionhavingagregacion      shift and go to state 1084
    funcion_matematica_ws          shift and go to state 1085
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249
    agregacion                     shift and go to state 1086

state 1143

    (177) condicionhavingagregacion -> agregacion PARIZQ . cualquieridentificador PARDER
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    ID              shift and go to state 234

    cualquieridentificador         shift and go to state 1197

state 1144

    (150) wherenotin -> cualquiernumero NOT IN PARIZQ select_instr1 PARDER .

    OR              reduce using rule 150 (wherenotin -> cualquiernumero NOT IN PARIZQ select_instr1 PARDER .)
    AND             reduce using rule 150 (wherenotin -> cualquiernumero NOT IN PARIZQ select_instr1 PARDER .)
    GROUP           reduce using rule 150 (wherenotin -> cualquiernumero NOT IN PARIZQ select_instr1 PARDER .)
    ORDER           reduce using rule 150 (wherenotin -> cualquiernumero NOT IN PARIZQ select_instr1 PARDER .)
    UNION           reduce using rule 150 (wherenotin -> cualquiernumero NOT IN PARIZQ select_instr1 PARDER .)
    INTERSECT       reduce using rule 150 (wherenotin -> cualquiernumero NOT IN PARIZQ select_instr1 PARDER .)
    EXCEPT          reduce using rule 150 (wherenotin -> cualquiernumero NOT IN PARIZQ select_instr1 PARDER .)
    PTCOMA          reduce using rule 150 (wherenotin -> cualquiernumero NOT IN PARIZQ select_instr1 PARDER .)
    PARDER          reduce using rule 150 (wherenotin -> cualquiernumero NOT IN PARIZQ select_instr1 PARDER .)
    CSIMPLE         reduce using rule 150 (wherenotin -> cualquiernumero NOT IN PARIZQ select_instr1 PARDER .)


state 1145

    (371) not_between_state -> cualquiernumero NOT BETWEEN valores AND valores .

    OR              reduce using rule 371 (not_between_state -> cualquiernumero NOT BETWEEN valores AND valores .)
    AND             reduce using rule 371 (not_between_state -> cualquiernumero NOT BETWEEN valores AND valores .)
    GROUP           reduce using rule 371 (not_between_state -> cualquiernumero NOT BETWEEN valores AND valores .)
    ORDER           reduce using rule 371 (not_between_state -> cualquiernumero NOT BETWEEN valores AND valores .)
    UNION           reduce using rule 371 (not_between_state -> cualquiernumero NOT BETWEEN valores AND valores .)
    INTERSECT       reduce using rule 371 (not_between_state -> cualquiernumero NOT BETWEEN valores AND valores .)
    EXCEPT          reduce using rule 371 (not_between_state -> cualquiernumero NOT BETWEEN valores AND valores .)
    PTCOMA          reduce using rule 371 (not_between_state -> cualquiernumero NOT BETWEEN valores AND valores .)
    PARDER          reduce using rule 371 (not_between_state -> cualquiernumero NOT BETWEEN valores AND valores .)
    CSIMPLE         reduce using rule 371 (not_between_state -> cualquiernumero NOT BETWEEN valores AND valores .)


state 1146

    (151) wherenotin -> cadenastodas NOT IN PARIZQ select_instr1 PARDER .

    OR              reduce using rule 151 (wherenotin -> cadenastodas NOT IN PARIZQ select_instr1 PARDER .)
    AND             reduce using rule 151 (wherenotin -> cadenastodas NOT IN PARIZQ select_instr1 PARDER .)
    GROUP           reduce using rule 151 (wherenotin -> cadenastodas NOT IN PARIZQ select_instr1 PARDER .)
    ORDER           reduce using rule 151 (wherenotin -> cadenastodas NOT IN PARIZQ select_instr1 PARDER .)
    UNION           reduce using rule 151 (wherenotin -> cadenastodas NOT IN PARIZQ select_instr1 PARDER .)
    INTERSECT       reduce using rule 151 (wherenotin -> cadenastodas NOT IN PARIZQ select_instr1 PARDER .)
    EXCEPT          reduce using rule 151 (wherenotin -> cadenastodas NOT IN PARIZQ select_instr1 PARDER .)
    PTCOMA          reduce using rule 151 (wherenotin -> cadenastodas NOT IN PARIZQ select_instr1 PARDER .)
    PARDER          reduce using rule 151 (wherenotin -> cadenastodas NOT IN PARIZQ select_instr1 PARDER .)
    CSIMPLE         reduce using rule 151 (wherenotin -> cadenastodas NOT IN PARIZQ select_instr1 PARDER .)


state 1147

    (372) not_between_state -> cadenastodas NOT BETWEEN valores AND valores .

    OR              reduce using rule 372 (not_between_state -> cadenastodas NOT BETWEEN valores AND valores .)
    AND             reduce using rule 372 (not_between_state -> cadenastodas NOT BETWEEN valores AND valores .)
    GROUP           reduce using rule 372 (not_between_state -> cadenastodas NOT BETWEEN valores AND valores .)
    ORDER           reduce using rule 372 (not_between_state -> cadenastodas NOT BETWEEN valores AND valores .)
    UNION           reduce using rule 372 (not_between_state -> cadenastodas NOT BETWEEN valores AND valores .)
    INTERSECT       reduce using rule 372 (not_between_state -> cadenastodas NOT BETWEEN valores AND valores .)
    EXCEPT          reduce using rule 372 (not_between_state -> cadenastodas NOT BETWEEN valores AND valores .)
    PTCOMA          reduce using rule 372 (not_between_state -> cadenastodas NOT BETWEEN valores AND valores .)
    PARDER          reduce using rule 372 (not_between_state -> cadenastodas NOT BETWEEN valores AND valores .)
    CSIMPLE         reduce using rule 372 (not_between_state -> cadenastodas NOT BETWEEN valores AND valores .)


state 1148

    (154) wheresubstring -> SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA . ENTERO PARDER IGUAL CADENASIMPLE

    ENTERO          shift and go to state 1198


state 1149

    (378) is_distinct_state -> valores IS NOT DISTINCT FROM valores .

    OR              reduce using rule 378 (is_distinct_state -> valores IS NOT DISTINCT FROM valores .)
    AND             reduce using rule 378 (is_distinct_state -> valores IS NOT DISTINCT FROM valores .)
    GROUP           reduce using rule 378 (is_distinct_state -> valores IS NOT DISTINCT FROM valores .)
    ORDER           reduce using rule 378 (is_distinct_state -> valores IS NOT DISTINCT FROM valores .)
    UNION           reduce using rule 378 (is_distinct_state -> valores IS NOT DISTINCT FROM valores .)
    INTERSECT       reduce using rule 378 (is_distinct_state -> valores IS NOT DISTINCT FROM valores .)
    EXCEPT          reduce using rule 378 (is_distinct_state -> valores IS NOT DISTINCT FROM valores .)
    PTCOMA          reduce using rule 378 (is_distinct_state -> valores IS NOT DISTINCT FROM valores .)
    PARDER          reduce using rule 378 (is_distinct_state -> valores IS NOT DISTINCT FROM valores .)
    CSIMPLE         reduce using rule 378 (is_distinct_state -> valores IS NOT DISTINCT FROM valores .)


state 1150

    (363) check_unique -> CHECK PARIZQ condiciones . PARDER
    (195) condiciones -> condiciones . AND condicion
    (196) condiciones -> condiciones . OR condicion

    PARDER          shift and go to state 1199
    AND             shift and go to state 585
    OR              shift and go to state 586


state 1151

    (426) cuerpofuncion -> CADDOLAR declaraciones cuerpo CADDOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 1200


state 1152

    (445) cuerpo -> BEGIN instrlistabloque END PTCOMA .

    CADDOLAR        reduce using rule 445 (cuerpo -> BEGIN instrlistabloque END PTCOMA .)


state 1153

    (471) raisenotice -> RAISE NOTICE CADENASIMPLE . COMA ID PTCOMA
    (472) raisenotice -> RAISE NOTICE CADENASIMPLE . PTCOMA

    COMA            shift and go to state 1201
    PTCOMA          shift and go to state 1202


state 1154

    (473) asignacionbloque -> ID IGUAL expresion . PTCOMA

    PTCOMA          shift and go to state 1203


state 1155

    (474) asignacionbloque -> ID PTIGUAL expresion . PTCOMA

    PTCOMA          shift and go to state 1204


state 1156

    (480) cuerposub -> BEGIN listasubbloque . END PTCOMA
    (482) listasubbloque -> listasubbloque . subbloque1
    (484) subbloque1 -> . raisenotice1
    (485) subbloque1 -> . asignacionbloque
    (486) raisenotice1 -> . RAISE NOTICE CADENASIMPLE COMA ID PTCOMA
    (487) raisenotice1 -> . RAISE NOTICE CADENASIMPLE COMA OUTERBLOCK PUNTO ID PTCOMA
    (488) raisenotice1 -> . RAISE NOTICE CADENASIMPLE PTCOMA
    (473) asignacionbloque -> . ID IGUAL expresion PTCOMA
    (474) asignacionbloque -> . ID PTIGUAL expresion PTCOMA

    END             shift and go to state 1205
    RAISE           shift and go to state 1161
    ID              shift and go to state 1055

    subbloque1                     shift and go to state 1206
    raisenotice1                   shift and go to state 1159
    asignacionbloque               shift and go to state 1160

state 1157

    (481) cuerposub -> BEGIN empty . END PTCOMA

    END             shift and go to state 1207


state 1158

    (483) listasubbloque -> subbloque1 .

    END             reduce using rule 483 (listasubbloque -> subbloque1 .)
    RAISE           reduce using rule 483 (listasubbloque -> subbloque1 .)
    ID              reduce using rule 483 (listasubbloque -> subbloque1 .)


state 1159

    (484) subbloque1 -> raisenotice1 .

    END             reduce using rule 484 (subbloque1 -> raisenotice1 .)
    RAISE           reduce using rule 484 (subbloque1 -> raisenotice1 .)
    ID              reduce using rule 484 (subbloque1 -> raisenotice1 .)


state 1160

    (485) subbloque1 -> asignacionbloque .

    END             reduce using rule 485 (subbloque1 -> asignacionbloque .)
    RAISE           reduce using rule 485 (subbloque1 -> asignacionbloque .)
    ID              reduce using rule 485 (subbloque1 -> asignacionbloque .)


state 1161

    (486) raisenotice1 -> RAISE . NOTICE CADENASIMPLE COMA ID PTCOMA
    (487) raisenotice1 -> RAISE . NOTICE CADENASIMPLE COMA OUTERBLOCK PUNTO ID PTCOMA
    (488) raisenotice1 -> RAISE . NOTICE CADENASIMPLE PTCOMA

    NOTICE          shift and go to state 1208


state 1162

    (475) returnbloque -> RETURN condicion PTCOMA .

    RAISE           reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    ID              reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    RETURN          reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    EXECUTE         reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    GET             reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    NULL            reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    IF              reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    CASE            reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    COMMIT          reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    ROLLBACK        reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    INSERT          reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    UPDATE          reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    ALTER           reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    CREATE          reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    DROP            reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    DELETE          reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    TRUNCATE        reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    DECLARE         reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    SELECT          reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    BEGIN           reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    END             reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    ELSE            reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    ELSIF           reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)
    WHEN            reduce using rule 475 (returnbloque -> RETURN condicion PTCOMA .)


state 1163

    (476) returnbloque -> RETURN QUERY select_instr1 . PTCOMA

    PTCOMA          shift and go to state 1209


state 1164

    (477) returnbloque -> RETURN QUERY instrexecute . PTCOMA

    PTCOMA          shift and go to state 1210


state 1165

    (517) instrexecute -> EXECUTE CSIMPLE select_instr1 . CSIMPLE intotarget usingexpresion

    CSIMPLE         shift and go to state 1211


state 1166

    (518) instrexecute -> EXECUTE FORMAT PARIZQ . CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion

    CSIMPLE         shift and go to state 1212


state 1167

    (525) getdiagnostic -> GET DIAGNOSTICS ID . IGUAL ID
    (526) getdiagnostic -> GET DIAGNOSTICS ID . PTIGUAL ID

    IGUAL           shift and go to state 1213
    PTIGUAL         shift and go to state 1214


state 1168

    (528) instrif -> IF condiciones THEN . instrlistabloque END IF PTCOMA
    (529) instrif -> IF condiciones THEN . instrlistabloque ELSE instrlistabloque END IF PTCOMA
    (530) instrif -> IF condiciones THEN . instrlistabloque instrelseif END IF PTCOMA
    (531) instrif -> IF condiciones THEN . instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA
    (446) instrlistabloque -> . listabloque
    (447) instrlistabloque -> . empty
    (448) listabloque -> . listabloque bloque
    (449) listabloque -> . bloque
    (546) empty -> .
    (450) bloque -> . raisenotice
    (451) bloque -> . asignacionbloque
    (452) bloque -> . subbloque
    (453) bloque -> . returnbloque
    (454) bloque -> . instrexecute
    (455) bloque -> . getdiagnostic
    (456) bloque -> . instrnull
    (457) bloque -> . instrif
    (458) bloque -> . instrcase
    (459) bloque -> . commitinstr
    (460) bloque -> . rollbackinstr
    (461) bloque -> . insert_instr
    (462) bloque -> . update_instr
    (463) bloque -> . alter_instr PTCOMA
    (464) bloque -> . create_enum
    (465) bloque -> . drop_table
    (466) bloque -> . delete_instr
    (467) bloque -> . truncate_instr
    (468) bloque -> . select_instr
    (471) raisenotice -> . RAISE NOTICE CADENASIMPLE COMA ID PTCOMA
    (472) raisenotice -> . RAISE NOTICE CADENASIMPLE PTCOMA
    (473) asignacionbloque -> . ID IGUAL expresion PTCOMA
    (474) asignacionbloque -> . ID PTIGUAL expresion PTCOMA
    (479) subbloque -> . declaraciones cuerposub
    (475) returnbloque -> . RETURN condicion PTCOMA
    (476) returnbloque -> . RETURN QUERY select_instr1 PTCOMA
    (477) returnbloque -> . RETURN QUERY instrexecute PTCOMA
    (478) returnbloque -> . RETURN PTCOMA
    (517) instrexecute -> . EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion
    (518) instrexecute -> . EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion
    (525) getdiagnostic -> . GET DIAGNOSTICS ID IGUAL ID
    (526) getdiagnostic -> . GET DIAGNOSTICS ID PTIGUAL ID
    (527) instrnull -> . NULL PTCOMA
    (528) instrif -> . IF condiciones THEN instrlistabloque END IF PTCOMA
    (529) instrif -> . IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA
    (530) instrif -> . IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA
    (531) instrif -> . IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA
    (535) instrcase -> . CASE expresion listawhen1 elsecase END CASE PTCOMA
    (541) instrcase -> . CASE listawhen2 elsecase END CASE PTCOMA
    (469) commitinstr -> . COMMIT PTCOMA
    (470) rollbackinstr -> . ROLLBACK PTCOMA
    (48) insert_instr -> . INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA
    (49) insert_instr -> . INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA
    (58) update_instr -> . UPDATE ID SET asignaciones PTCOMA
    (59) update_instr -> . UPDATE ID SET asignaciones WHERE condiciones PTCOMA
    (298) alter_instr -> . ALTER TABLE ID ADD COLUMN list_columns
    (299) alter_instr -> . ALTER TABLE ID ADD CHECK PARIZQ condicion PARDER
    (300) alter_instr -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER
    (301) alter_instr -> . ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID
    (302) alter_instr -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL
    (303) alter_instr -> . ALTER TABLE ID DROP CONSTRAINT ID
    (304) alter_instr -> . ALTER TABLE ID RENAME COLUMN ID TO ID
    (305) alter_instr -> . ALTER TABLE ID DROP COLUMN listtablas
    (306) alter_instr -> . ALTER TABLE ID list_alter_column
    (365) create_enum -> . CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA
    (368) drop_table -> . DROP TABLE ID PTCOMA
    (63) delete_instr -> . DELETE FROM ID PTCOMA
    (64) delete_instr -> . DELETE FROM ID WHERE condiciones PTCOMA
    (65) truncate_instr -> . TRUNCATE listtablas PTCOMA
    (66) truncate_instr -> . TRUNCATE listtablas CASCADE PTCOMA
    (67) truncate_instr -> . TRUNCATE TABLE listtablas PTCOMA
    (68) truncate_instr -> . TRUNCATE TABLE listtablas CASCADE PTCOMA
    (71) select_instr -> . select_instr1 second_query PTCOMA
    (428) declaraciones -> . DECLARE listadeclaraciones
    (429) declaraciones -> . empty
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    END             reduce using rule 546 (empty -> .)
    ELSE            reduce using rule 546 (empty -> .)
    ELSIF           reduce using rule 546 (empty -> .)
    BEGIN           reduce using rule 546 (empty -> .)
    RAISE           shift and go to state 1054
    ID              shift and go to state 1055
    RETURN          shift and go to state 1057
    EXECUTE         shift and go to state 1058
    GET             shift and go to state 1059
    NULL            shift and go to state 1060
    IF              shift and go to state 1061
    CASE            shift and go to state 1062
    COMMIT          shift and go to state 1063
    ROLLBACK        shift and go to state 1064
    INSERT          shift and go to state 30
    UPDATE          shift and go to state 31
    ALTER           shift and go to state 1065
    CREATE          shift and go to state 1067
    DROP            shift and go to state 1066
    DELETE          shift and go to state 32
    TRUNCATE        shift and go to state 33
    DECLARE         shift and go to state 920
    SELECT          shift and go to state 102

    instrlistabloque               shift and go to state 1215
    listabloque                    shift and go to state 1032
    empty                          shift and go to state 1033
    bloque                         shift and go to state 1034
    raisenotice                    shift and go to state 1035
    asignacionbloque               shift and go to state 1036
    subbloque                      shift and go to state 1037
    returnbloque                   shift and go to state 1038
    instrexecute                   shift and go to state 1039
    getdiagnostic                  shift and go to state 1040
    instrnull                      shift and go to state 1041
    instrif                        shift and go to state 1042
    instrcase                      shift and go to state 1043
    commitinstr                    shift and go to state 1044
    rollbackinstr                  shift and go to state 1045
    insert_instr                   shift and go to state 1046
    update_instr                   shift and go to state 1047
    alter_instr                    shift and go to state 1048
    create_enum                    shift and go to state 1049
    drop_table                     shift and go to state 1050
    delete_instr                   shift and go to state 1051
    truncate_instr                 shift and go to state 1052
    select_instr                   shift and go to state 1053
    declaraciones                  shift and go to state 1056
    select_instr1                  shift and go to state 34

state 1169

    (535) instrcase -> CASE expresion listawhen1 . elsecase END CASE PTCOMA
    (538) listawhen1 -> listawhen1 . when1
    (536) elsecase -> . ELSE instrlistabloque
    (537) elsecase -> . empty
    (540) when1 -> . WHEN listaexpresiones THEN instrlistabloque
    (546) empty -> .

    ELSE            shift and go to state 1174
    WHEN            shift and go to state 1171
    END             reduce using rule 546 (empty -> .)

    elsecase                       shift and go to state 1216
    when1                          shift and go to state 1217
    empty                          shift and go to state 1175

state 1170

    (539) listawhen1 -> when1 .

    ELSE            reduce using rule 539 (listawhen1 -> when1 .)
    WHEN            reduce using rule 539 (listawhen1 -> when1 .)
    END             reduce using rule 539 (listawhen1 -> when1 .)


state 1171

    (540) when1 -> WHEN . listaexpresiones THEN instrlistabloque
    (523) listaexpresiones -> . listaexpresiones COMA expresion
    (524) listaexpresiones -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    listaexpresiones               shift and go to state 1218
    expresion                      shift and go to state 238
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 1172

    (541) instrcase -> CASE listawhen2 elsecase . END CASE PTCOMA

    END             shift and go to state 1219


state 1173

    (542) listawhen2 -> listawhen2 when2 .

    ELSE            reduce using rule 542 (listawhen2 -> listawhen2 when2 .)
    WHEN            reduce using rule 542 (listawhen2 -> listawhen2 when2 .)
    END             reduce using rule 542 (listawhen2 -> listawhen2 when2 .)


state 1174

    (536) elsecase -> ELSE . instrlistabloque
    (446) instrlistabloque -> . listabloque
    (447) instrlistabloque -> . empty
    (448) listabloque -> . listabloque bloque
    (449) listabloque -> . bloque
    (546) empty -> .
    (450) bloque -> . raisenotice
    (451) bloque -> . asignacionbloque
    (452) bloque -> . subbloque
    (453) bloque -> . returnbloque
    (454) bloque -> . instrexecute
    (455) bloque -> . getdiagnostic
    (456) bloque -> . instrnull
    (457) bloque -> . instrif
    (458) bloque -> . instrcase
    (459) bloque -> . commitinstr
    (460) bloque -> . rollbackinstr
    (461) bloque -> . insert_instr
    (462) bloque -> . update_instr
    (463) bloque -> . alter_instr PTCOMA
    (464) bloque -> . create_enum
    (465) bloque -> . drop_table
    (466) bloque -> . delete_instr
    (467) bloque -> . truncate_instr
    (468) bloque -> . select_instr
    (471) raisenotice -> . RAISE NOTICE CADENASIMPLE COMA ID PTCOMA
    (472) raisenotice -> . RAISE NOTICE CADENASIMPLE PTCOMA
    (473) asignacionbloque -> . ID IGUAL expresion PTCOMA
    (474) asignacionbloque -> . ID PTIGUAL expresion PTCOMA
    (479) subbloque -> . declaraciones cuerposub
    (475) returnbloque -> . RETURN condicion PTCOMA
    (476) returnbloque -> . RETURN QUERY select_instr1 PTCOMA
    (477) returnbloque -> . RETURN QUERY instrexecute PTCOMA
    (478) returnbloque -> . RETURN PTCOMA
    (517) instrexecute -> . EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion
    (518) instrexecute -> . EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion
    (525) getdiagnostic -> . GET DIAGNOSTICS ID IGUAL ID
    (526) getdiagnostic -> . GET DIAGNOSTICS ID PTIGUAL ID
    (527) instrnull -> . NULL PTCOMA
    (528) instrif -> . IF condiciones THEN instrlistabloque END IF PTCOMA
    (529) instrif -> . IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA
    (530) instrif -> . IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA
    (531) instrif -> . IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA
    (535) instrcase -> . CASE expresion listawhen1 elsecase END CASE PTCOMA
    (541) instrcase -> . CASE listawhen2 elsecase END CASE PTCOMA
    (469) commitinstr -> . COMMIT PTCOMA
    (470) rollbackinstr -> . ROLLBACK PTCOMA
    (48) insert_instr -> . INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA
    (49) insert_instr -> . INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA
    (58) update_instr -> . UPDATE ID SET asignaciones PTCOMA
    (59) update_instr -> . UPDATE ID SET asignaciones WHERE condiciones PTCOMA
    (298) alter_instr -> . ALTER TABLE ID ADD COLUMN list_columns
    (299) alter_instr -> . ALTER TABLE ID ADD CHECK PARIZQ condicion PARDER
    (300) alter_instr -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER
    (301) alter_instr -> . ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID
    (302) alter_instr -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL
    (303) alter_instr -> . ALTER TABLE ID DROP CONSTRAINT ID
    (304) alter_instr -> . ALTER TABLE ID RENAME COLUMN ID TO ID
    (305) alter_instr -> . ALTER TABLE ID DROP COLUMN listtablas
    (306) alter_instr -> . ALTER TABLE ID list_alter_column
    (365) create_enum -> . CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA
    (368) drop_table -> . DROP TABLE ID PTCOMA
    (63) delete_instr -> . DELETE FROM ID PTCOMA
    (64) delete_instr -> . DELETE FROM ID WHERE condiciones PTCOMA
    (65) truncate_instr -> . TRUNCATE listtablas PTCOMA
    (66) truncate_instr -> . TRUNCATE listtablas CASCADE PTCOMA
    (67) truncate_instr -> . TRUNCATE TABLE listtablas PTCOMA
    (68) truncate_instr -> . TRUNCATE TABLE listtablas CASCADE PTCOMA
    (71) select_instr -> . select_instr1 second_query PTCOMA
    (428) declaraciones -> . DECLARE listadeclaraciones
    (429) declaraciones -> . empty
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    END             reduce using rule 546 (empty -> .)
    BEGIN           reduce using rule 546 (empty -> .)
    RAISE           shift and go to state 1054
    ID              shift and go to state 1055
    RETURN          shift and go to state 1057
    EXECUTE         shift and go to state 1058
    GET             shift and go to state 1059
    NULL            shift and go to state 1060
    IF              shift and go to state 1061
    CASE            shift and go to state 1062
    COMMIT          shift and go to state 1063
    ROLLBACK        shift and go to state 1064
    INSERT          shift and go to state 30
    UPDATE          shift and go to state 31
    ALTER           shift and go to state 1065
    CREATE          shift and go to state 1067
    DROP            shift and go to state 1066
    DELETE          shift and go to state 32
    TRUNCATE        shift and go to state 33
    DECLARE         shift and go to state 920
    SELECT          shift and go to state 102

    instrlistabloque               shift and go to state 1220
    listabloque                    shift and go to state 1032
    empty                          shift and go to state 1033
    bloque                         shift and go to state 1034
    raisenotice                    shift and go to state 1035
    asignacionbloque               shift and go to state 1036
    subbloque                      shift and go to state 1037
    returnbloque                   shift and go to state 1038
    instrexecute                   shift and go to state 1039
    getdiagnostic                  shift and go to state 1040
    instrnull                      shift and go to state 1041
    instrif                        shift and go to state 1042
    instrcase                      shift and go to state 1043
    commitinstr                    shift and go to state 1044
    rollbackinstr                  shift and go to state 1045
    insert_instr                   shift and go to state 1046
    update_instr                   shift and go to state 1047
    alter_instr                    shift and go to state 1048
    create_enum                    shift and go to state 1049
    drop_table                     shift and go to state 1050
    delete_instr                   shift and go to state 1051
    truncate_instr                 shift and go to state 1052
    select_instr                   shift and go to state 1053
    declaraciones                  shift and go to state 1056
    select_instr1                  shift and go to state 34

state 1175

    (537) elsecase -> empty .

    END             reduce using rule 537 (elsecase -> empty .)


state 1176

    (544) when2 -> WHEN ID . BETWEEN ENTERO AND ENTERO THEN instrlistabloque
    (228) cualquieridentificador -> ID .
    (229) cualquieridentificador -> ID . PUNTO ID

    BETWEEN         shift and go to state 1221
    MAS             reduce using rule 228 (cualquieridentificador -> ID .)
    MENOS           reduce using rule 228 (cualquieridentificador -> ID .)
    ASTERISCO       reduce using rule 228 (cualquieridentificador -> ID .)
    DIVIDIDO        reduce using rule 228 (cualquieridentificador -> ID .)
    MODULO          reduce using rule 228 (cualquieridentificador -> ID .)
    EXPONENTE       reduce using rule 228 (cualquieridentificador -> ID .)
    MENQUE          reduce using rule 228 (cualquieridentificador -> ID .)
    MAYQUE          reduce using rule 228 (cualquieridentificador -> ID .)
    MENIGUAL        reduce using rule 228 (cualquieridentificador -> ID .)
    MAYIGUAL        reduce using rule 228 (cualquieridentificador -> ID .)
    IGUAL           reduce using rule 228 (cualquieridentificador -> ID .)
    DIFERENTE       reduce using rule 228 (cualquieridentificador -> ID .)
    THEN            reduce using rule 228 (cualquieridentificador -> ID .)
    AND             reduce using rule 228 (cualquieridentificador -> ID .)
    OR              reduce using rule 228 (cualquieridentificador -> ID .)
    PUNTO           shift and go to state 409


state 1177

    (545) when2 -> WHEN condiciones . THEN instrlistabloque
    (195) condiciones -> condiciones . AND condicion
    (196) condiciones -> condiciones . OR condicion

    THEN            shift and go to state 1222
    AND             shift and go to state 585
    OR              shift and go to state 586


state 1178

    (432) declaracion -> ID constantintr type_column1 notnullinst . asignavalor PTCOMA
    (441) asignavalor -> . DEFAULT expresion
    (442) asignavalor -> . PTIGUAL expresion
    (443) asignavalor -> . IGUAL expresion
    (444) asignavalor -> . empty
    (546) empty -> .

    DEFAULT         shift and go to state 1224
    PTIGUAL         shift and go to state 1225
    IGUAL           shift and go to state 1226
    PTCOMA          reduce using rule 546 (empty -> .)

    asignavalor                    shift and go to state 1223
    empty                          shift and go to state 1227

state 1179

    (439) notnullinst -> NOT . NULL

    NULL            shift and go to state 1228


state 1180

    (440) notnullinst -> empty .

    DEFAULT         reduce using rule 440 (notnullinst -> empty .)
    PTIGUAL         reduce using rule 440 (notnullinst -> empty .)
    IGUAL           reduce using rule 440 (notnullinst -> empty .)
    PTCOMA          reduce using rule 440 (notnullinst -> empty .)


state 1181

    (434) declaracion -> ID ALIAS1 FOR ID . PTCOMA

    PTCOMA          shift and go to state 1229


state 1182

    (433) declaracion -> ID ALIAS1 FOR DOLAR . ENTERO PTCOMA

    ENTERO          shift and go to state 1230


state 1183

    (435) declaracion -> ID cualquieridentificador MODULO TYPE . PTCOMA

    PTCOMA          shift and go to state 1231


state 1184

    (436) declaracion -> ID cualquieridentificador MODULO ROWTYPE . PTCOMA

    PTCOMA          shift and go to state 1232


state 1185

    (191) instrlimit -> LIMIT ENTERO instroffset .

    UNION           reduce using rule 191 (instrlimit -> LIMIT ENTERO instroffset .)
    INTERSECT       reduce using rule 191 (instrlimit -> LIMIT ENTERO instroffset .)
    EXCEPT          reduce using rule 191 (instrlimit -> LIMIT ENTERO instroffset .)
    PTCOMA          reduce using rule 191 (instrlimit -> LIMIT ENTERO instroffset .)
    PARDER          reduce using rule 191 (instrlimit -> LIMIT ENTERO instroffset .)
    CSIMPLE         reduce using rule 191 (instrlimit -> LIMIT ENTERO instroffset .)


state 1186

    (193) instroffset -> OFFSET . ENTERO

    ENTERO          shift and go to state 1233


state 1187

    (194) instroffset -> empty .

    UNION           reduce using rule 194 (instroffset -> empty .)
    INTERSECT       reduce using rule 194 (instroffset -> empty .)
    EXCEPT          reduce using rule 194 (instroffset -> empty .)
    PTCOMA          reduce using rule 194 (instroffset -> empty .)
    PARDER          reduce using rule 194 (instroffset -> empty .)
    CSIMPLE         reduce using rule 194 (instroffset -> empty .)


state 1188

    (192) instrlimit -> LIMIT ALL instroffset .

    UNION           reduce using rule 192 (instrlimit -> LIMIT ALL instroffset .)
    INTERSECT       reduce using rule 192 (instrlimit -> LIMIT ALL instroffset .)
    EXCEPT          reduce using rule 192 (instrlimit -> LIMIT ALL instroffset .)
    PTCOMA          reduce using rule 192 (instrlimit -> LIMIT ALL instroffset .)
    PARDER          reduce using rule 192 (instrlimit -> LIMIT ALL instroffset .)
    CSIMPLE         reduce using rule 192 (instrlimit -> LIMIT ALL instroffset .)


state 1189

    (164) condicioneshaving -> condicioneshaving OR condicionhaving .

    OR              reduce using rule 164 (condicioneshaving -> condicioneshaving OR condicionhaving .)
    AND             reduce using rule 164 (condicioneshaving -> condicioneshaving OR condicionhaving .)
    ORDER           reduce using rule 164 (condicioneshaving -> condicioneshaving OR condicionhaving .)
    UNION           reduce using rule 164 (condicioneshaving -> condicioneshaving OR condicionhaving .)
    INTERSECT       reduce using rule 164 (condicioneshaving -> condicioneshaving OR condicionhaving .)
    EXCEPT          reduce using rule 164 (condicioneshaving -> condicioneshaving OR condicionhaving .)
    PTCOMA          reduce using rule 164 (condicioneshaving -> condicioneshaving OR condicionhaving .)
    PARDER          reduce using rule 164 (condicioneshaving -> condicioneshaving OR condicionhaving .)
    CSIMPLE         reduce using rule 164 (condicioneshaving -> condicioneshaving OR condicionhaving .)


state 1190

    (165) condicioneshaving -> condicioneshaving AND condicionhaving .

    OR              reduce using rule 165 (condicioneshaving -> condicioneshaving AND condicionhaving .)
    AND             reduce using rule 165 (condicioneshaving -> condicioneshaving AND condicionhaving .)
    ORDER           reduce using rule 165 (condicioneshaving -> condicioneshaving AND condicionhaving .)
    UNION           reduce using rule 165 (condicioneshaving -> condicioneshaving AND condicionhaving .)
    INTERSECT       reduce using rule 165 (condicioneshaving -> condicioneshaving AND condicionhaving .)
    EXCEPT          reduce using rule 165 (condicioneshaving -> condicioneshaving AND condicionhaving .)
    PTCOMA          reduce using rule 165 (condicioneshaving -> condicioneshaving AND condicionhaving .)
    PARDER          reduce using rule 165 (condicioneshaving -> condicioneshaving AND condicionhaving .)
    CSIMPLE         reduce using rule 165 (condicioneshaving -> condicioneshaving AND condicionhaving .)


state 1191

    (167) condicionhaving -> expresionhaving MENQUE expresionhaving .

    OR              reduce using rule 167 (condicionhaving -> expresionhaving MENQUE expresionhaving .)
    AND             reduce using rule 167 (condicionhaving -> expresionhaving MENQUE expresionhaving .)
    ORDER           reduce using rule 167 (condicionhaving -> expresionhaving MENQUE expresionhaving .)
    UNION           reduce using rule 167 (condicionhaving -> expresionhaving MENQUE expresionhaving .)
    INTERSECT       reduce using rule 167 (condicionhaving -> expresionhaving MENQUE expresionhaving .)
    EXCEPT          reduce using rule 167 (condicionhaving -> expresionhaving MENQUE expresionhaving .)
    PTCOMA          reduce using rule 167 (condicionhaving -> expresionhaving MENQUE expresionhaving .)
    PARDER          reduce using rule 167 (condicionhaving -> expresionhaving MENQUE expresionhaving .)
    CSIMPLE         reduce using rule 167 (condicionhaving -> expresionhaving MENQUE expresionhaving .)


state 1192

    (168) condicionhaving -> expresionhaving MAYQUE expresionhaving .

    OR              reduce using rule 168 (condicionhaving -> expresionhaving MAYQUE expresionhaving .)
    AND             reduce using rule 168 (condicionhaving -> expresionhaving MAYQUE expresionhaving .)
    ORDER           reduce using rule 168 (condicionhaving -> expresionhaving MAYQUE expresionhaving .)
    UNION           reduce using rule 168 (condicionhaving -> expresionhaving MAYQUE expresionhaving .)
    INTERSECT       reduce using rule 168 (condicionhaving -> expresionhaving MAYQUE expresionhaving .)
    EXCEPT          reduce using rule 168 (condicionhaving -> expresionhaving MAYQUE expresionhaving .)
    PTCOMA          reduce using rule 168 (condicionhaving -> expresionhaving MAYQUE expresionhaving .)
    PARDER          reduce using rule 168 (condicionhaving -> expresionhaving MAYQUE expresionhaving .)
    CSIMPLE         reduce using rule 168 (condicionhaving -> expresionhaving MAYQUE expresionhaving .)


state 1193

    (169) condicionhaving -> expresionhaving MENIGUAL expresionhaving .

    OR              reduce using rule 169 (condicionhaving -> expresionhaving MENIGUAL expresionhaving .)
    AND             reduce using rule 169 (condicionhaving -> expresionhaving MENIGUAL expresionhaving .)
    ORDER           reduce using rule 169 (condicionhaving -> expresionhaving MENIGUAL expresionhaving .)
    UNION           reduce using rule 169 (condicionhaving -> expresionhaving MENIGUAL expresionhaving .)
    INTERSECT       reduce using rule 169 (condicionhaving -> expresionhaving MENIGUAL expresionhaving .)
    EXCEPT          reduce using rule 169 (condicionhaving -> expresionhaving MENIGUAL expresionhaving .)
    PTCOMA          reduce using rule 169 (condicionhaving -> expresionhaving MENIGUAL expresionhaving .)
    PARDER          reduce using rule 169 (condicionhaving -> expresionhaving MENIGUAL expresionhaving .)
    CSIMPLE         reduce using rule 169 (condicionhaving -> expresionhaving MENIGUAL expresionhaving .)


state 1194

    (170) condicionhaving -> expresionhaving MAYIGUAL expresionhaving .

    OR              reduce using rule 170 (condicionhaving -> expresionhaving MAYIGUAL expresionhaving .)
    AND             reduce using rule 170 (condicionhaving -> expresionhaving MAYIGUAL expresionhaving .)
    ORDER           reduce using rule 170 (condicionhaving -> expresionhaving MAYIGUAL expresionhaving .)
    UNION           reduce using rule 170 (condicionhaving -> expresionhaving MAYIGUAL expresionhaving .)
    INTERSECT       reduce using rule 170 (condicionhaving -> expresionhaving MAYIGUAL expresionhaving .)
    EXCEPT          reduce using rule 170 (condicionhaving -> expresionhaving MAYIGUAL expresionhaving .)
    PTCOMA          reduce using rule 170 (condicionhaving -> expresionhaving MAYIGUAL expresionhaving .)
    PARDER          reduce using rule 170 (condicionhaving -> expresionhaving MAYIGUAL expresionhaving .)
    CSIMPLE         reduce using rule 170 (condicionhaving -> expresionhaving MAYIGUAL expresionhaving .)


state 1195

    (171) condicionhaving -> expresionhaving IGUAL expresionhaving .

    OR              reduce using rule 171 (condicionhaving -> expresionhaving IGUAL expresionhaving .)
    AND             reduce using rule 171 (condicionhaving -> expresionhaving IGUAL expresionhaving .)
    ORDER           reduce using rule 171 (condicionhaving -> expresionhaving IGUAL expresionhaving .)
    UNION           reduce using rule 171 (condicionhaving -> expresionhaving IGUAL expresionhaving .)
    INTERSECT       reduce using rule 171 (condicionhaving -> expresionhaving IGUAL expresionhaving .)
    EXCEPT          reduce using rule 171 (condicionhaving -> expresionhaving IGUAL expresionhaving .)
    PTCOMA          reduce using rule 171 (condicionhaving -> expresionhaving IGUAL expresionhaving .)
    PARDER          reduce using rule 171 (condicionhaving -> expresionhaving IGUAL expresionhaving .)
    CSIMPLE         reduce using rule 171 (condicionhaving -> expresionhaving IGUAL expresionhaving .)


state 1196

    (172) condicionhaving -> expresionhaving DIFERENTE expresionhaving .

    OR              reduce using rule 172 (condicionhaving -> expresionhaving DIFERENTE expresionhaving .)
    AND             reduce using rule 172 (condicionhaving -> expresionhaving DIFERENTE expresionhaving .)
    ORDER           reduce using rule 172 (condicionhaving -> expresionhaving DIFERENTE expresionhaving .)
    UNION           reduce using rule 172 (condicionhaving -> expresionhaving DIFERENTE expresionhaving .)
    INTERSECT       reduce using rule 172 (condicionhaving -> expresionhaving DIFERENTE expresionhaving .)
    EXCEPT          reduce using rule 172 (condicionhaving -> expresionhaving DIFERENTE expresionhaving .)
    PTCOMA          reduce using rule 172 (condicionhaving -> expresionhaving DIFERENTE expresionhaving .)
    PARDER          reduce using rule 172 (condicionhaving -> expresionhaving DIFERENTE expresionhaving .)
    CSIMPLE         reduce using rule 172 (condicionhaving -> expresionhaving DIFERENTE expresionhaving .)


state 1197

    (177) condicionhavingagregacion -> agregacion PARIZQ cualquieridentificador . PARDER

    PARDER          shift and go to state 1234


state 1198

    (154) wheresubstring -> SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO . PARDER IGUAL CADENASIMPLE

    PARDER          shift and go to state 1235


state 1199

    (363) check_unique -> CHECK PARIZQ condiciones PARDER .

    NULL            reduce using rule 363 (check_unique -> CHECK PARIZQ condiciones PARDER .)
    NOT             reduce using rule 363 (check_unique -> CHECK PARIZQ condiciones PARDER .)
    PRIMARY         reduce using rule 363 (check_unique -> CHECK PARIZQ condiciones PARDER .)
    PARDER          reduce using rule 363 (check_unique -> CHECK PARIZQ condiciones PARDER .)
    COMA            reduce using rule 363 (check_unique -> CHECK PARIZQ condiciones PARDER .)


state 1200

    (426) cuerpofuncion -> CADDOLAR declaraciones cuerpo CADDOLAR LANGUAGE PLPGSQL PTCOMA .

    $end            reduce using rule 426 (cuerpofuncion -> CADDOLAR declaraciones cuerpo CADDOLAR LANGUAGE PLPGSQL PTCOMA .)


state 1201

    (471) raisenotice -> RAISE NOTICE CADENASIMPLE COMA . ID PTCOMA

    ID              shift and go to state 1236


state 1202

    (472) raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .

    RAISE           reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    ID              reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    RETURN          reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    EXECUTE         reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    GET             reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    NULL            reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    IF              reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    CASE            reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    COMMIT          reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    ROLLBACK        reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    INSERT          reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    UPDATE          reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    ALTER           reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    CREATE          reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    DROP            reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    DELETE          reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    TRUNCATE        reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    DECLARE         reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    SELECT          reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    BEGIN           reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    END             reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    ELSE            reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    ELSIF           reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    WHEN            reduce using rule 472 (raisenotice -> RAISE NOTICE CADENASIMPLE PTCOMA .)


state 1203

    (473) asignacionbloque -> ID IGUAL expresion PTCOMA .

    RAISE           reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    EXECUTE         reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    GET             reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    NULL            reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    CASE            reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    COMMIT          reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    ROLLBACK        reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    INSERT          reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    UPDATE          reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    ALTER           reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    CREATE          reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    DROP            reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    DELETE          reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    TRUNCATE        reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    DECLARE         reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    SELECT          reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    BEGIN           reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    END             reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    ELSE            reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    ELSIF           reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)
    WHEN            reduce using rule 473 (asignacionbloque -> ID IGUAL expresion PTCOMA .)


state 1204

    (474) asignacionbloque -> ID PTIGUAL expresion PTCOMA .

    RAISE           reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    ID              reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    RETURN          reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    EXECUTE         reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    GET             reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    NULL            reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    IF              reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    CASE            reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    COMMIT          reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    ROLLBACK        reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    INSERT          reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    UPDATE          reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    ALTER           reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    CREATE          reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    DROP            reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    DELETE          reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    TRUNCATE        reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    DECLARE         reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    SELECT          reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    BEGIN           reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    END             reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    ELSE            reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    ELSIF           reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)
    WHEN            reduce using rule 474 (asignacionbloque -> ID PTIGUAL expresion PTCOMA .)


state 1205

    (480) cuerposub -> BEGIN listasubbloque END . PTCOMA

    PTCOMA          shift and go to state 1237


state 1206

    (482) listasubbloque -> listasubbloque subbloque1 .

    END             reduce using rule 482 (listasubbloque -> listasubbloque subbloque1 .)
    RAISE           reduce using rule 482 (listasubbloque -> listasubbloque subbloque1 .)
    ID              reduce using rule 482 (listasubbloque -> listasubbloque subbloque1 .)


state 1207

    (481) cuerposub -> BEGIN empty END . PTCOMA

    PTCOMA          shift and go to state 1238


state 1208

    (486) raisenotice1 -> RAISE NOTICE . CADENASIMPLE COMA ID PTCOMA
    (487) raisenotice1 -> RAISE NOTICE . CADENASIMPLE COMA OUTERBLOCK PUNTO ID PTCOMA
    (488) raisenotice1 -> RAISE NOTICE . CADENASIMPLE PTCOMA

    CADENASIMPLE    shift and go to state 1239


state 1209

    (476) returnbloque -> RETURN QUERY select_instr1 PTCOMA .

    RAISE           reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    ID              reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    RETURN          reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    EXECUTE         reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    GET             reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    NULL            reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    IF              reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    CASE            reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    COMMIT          reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    ROLLBACK        reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    INSERT          reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    UPDATE          reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    ALTER           reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    CREATE          reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    DROP            reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    DELETE          reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    TRUNCATE        reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    DECLARE         reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    SELECT          reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    BEGIN           reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    END             reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    ELSE            reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    ELSIF           reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)
    WHEN            reduce using rule 476 (returnbloque -> RETURN QUERY select_instr1 PTCOMA .)


state 1210

    (477) returnbloque -> RETURN QUERY instrexecute PTCOMA .

    RAISE           reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    ID              reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    RETURN          reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    EXECUTE         reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    GET             reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    NULL            reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    IF              reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    CASE            reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    COMMIT          reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    ROLLBACK        reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    INSERT          reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    UPDATE          reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    ALTER           reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    CREATE          reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    DROP            reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    DELETE          reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    TRUNCATE        reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    DECLARE         reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    SELECT          reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    BEGIN           reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    END             reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    ELSE            reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    ELSIF           reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)
    WHEN            reduce using rule 477 (returnbloque -> RETURN QUERY instrexecute PTCOMA .)


state 1211

    (517) instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE . intotarget usingexpresion
    (519) intotarget -> . INTO ID
    (520) intotarget -> . empty
    (546) empty -> .

    INTO            shift and go to state 1241
    USING           reduce using rule 546 (empty -> .)
    RAISE           reduce using rule 546 (empty -> .)
    ID              reduce using rule 546 (empty -> .)
    RETURN          reduce using rule 546 (empty -> .)
    EXECUTE         reduce using rule 546 (empty -> .)
    GET             reduce using rule 546 (empty -> .)
    NULL            reduce using rule 546 (empty -> .)
    IF              reduce using rule 546 (empty -> .)
    CASE            reduce using rule 546 (empty -> .)
    COMMIT          reduce using rule 546 (empty -> .)
    ROLLBACK        reduce using rule 546 (empty -> .)
    INSERT          reduce using rule 546 (empty -> .)
    UPDATE          reduce using rule 546 (empty -> .)
    ALTER           reduce using rule 546 (empty -> .)
    CREATE          reduce using rule 546 (empty -> .)
    DROP            reduce using rule 546 (empty -> .)
    DELETE          reduce using rule 546 (empty -> .)
    TRUNCATE        reduce using rule 546 (empty -> .)
    DECLARE         reduce using rule 546 (empty -> .)
    SELECT          reduce using rule 546 (empty -> .)
    BEGIN           reduce using rule 546 (empty -> .)
    END             reduce using rule 546 (empty -> .)
    ELSE            reduce using rule 546 (empty -> .)
    ELSIF           reduce using rule 546 (empty -> .)
    WHEN            reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)

    intotarget                     shift and go to state 1240
    empty                          shift and go to state 1242

state 1212

    (518) instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE . select_instr1 CSIMPLE PARDER intotarget usingexpresion
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    SELECT          shift and go to state 102

    select_instr1                  shift and go to state 1243

state 1213

    (525) getdiagnostic -> GET DIAGNOSTICS ID IGUAL . ID

    ID              shift and go to state 1244


state 1214

    (526) getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL . ID

    ID              shift and go to state 1245


state 1215

    (528) instrif -> IF condiciones THEN instrlistabloque . END IF PTCOMA
    (529) instrif -> IF condiciones THEN instrlistabloque . ELSE instrlistabloque END IF PTCOMA
    (530) instrif -> IF condiciones THEN instrlistabloque . instrelseif END IF PTCOMA
    (531) instrif -> IF condiciones THEN instrlistabloque . instrelseif ELSE instrlistabloque END IF PTCOMA
    (532) instrelseif -> . instrelseif in_elseif
    (533) instrelseif -> . in_elseif
    (534) in_elseif -> . ELSIF condiciones THEN instrlistabloque

    END             shift and go to state 1246
    ELSE            shift and go to state 1247
    ELSIF           shift and go to state 1250

    instrelseif                    shift and go to state 1248
    in_elseif                      shift and go to state 1249

state 1216

    (535) instrcase -> CASE expresion listawhen1 elsecase . END CASE PTCOMA

    END             shift and go to state 1251


state 1217

    (538) listawhen1 -> listawhen1 when1 .

    ELSE            reduce using rule 538 (listawhen1 -> listawhen1 when1 .)
    WHEN            reduce using rule 538 (listawhen1 -> listawhen1 when1 .)
    END             reduce using rule 538 (listawhen1 -> listawhen1 when1 .)


state 1218

    (540) when1 -> WHEN listaexpresiones . THEN instrlistabloque
    (523) listaexpresiones -> listaexpresiones . COMA expresion

    THEN            shift and go to state 1252
    COMA            shift and go to state 415


state 1219

    (541) instrcase -> CASE listawhen2 elsecase END . CASE PTCOMA

    CASE            shift and go to state 1253


state 1220

    (536) elsecase -> ELSE instrlistabloque .

    END             reduce using rule 536 (elsecase -> ELSE instrlistabloque .)


state 1221

    (544) when2 -> WHEN ID BETWEEN . ENTERO AND ENTERO THEN instrlistabloque

    ENTERO          shift and go to state 1254


state 1222

    (545) when2 -> WHEN condiciones THEN . instrlistabloque
    (446) instrlistabloque -> . listabloque
    (447) instrlistabloque -> . empty
    (448) listabloque -> . listabloque bloque
    (449) listabloque -> . bloque
    (546) empty -> .
    (450) bloque -> . raisenotice
    (451) bloque -> . asignacionbloque
    (452) bloque -> . subbloque
    (453) bloque -> . returnbloque
    (454) bloque -> . instrexecute
    (455) bloque -> . getdiagnostic
    (456) bloque -> . instrnull
    (457) bloque -> . instrif
    (458) bloque -> . instrcase
    (459) bloque -> . commitinstr
    (460) bloque -> . rollbackinstr
    (461) bloque -> . insert_instr
    (462) bloque -> . update_instr
    (463) bloque -> . alter_instr PTCOMA
    (464) bloque -> . create_enum
    (465) bloque -> . drop_table
    (466) bloque -> . delete_instr
    (467) bloque -> . truncate_instr
    (468) bloque -> . select_instr
    (471) raisenotice -> . RAISE NOTICE CADENASIMPLE COMA ID PTCOMA
    (472) raisenotice -> . RAISE NOTICE CADENASIMPLE PTCOMA
    (473) asignacionbloque -> . ID IGUAL expresion PTCOMA
    (474) asignacionbloque -> . ID PTIGUAL expresion PTCOMA
    (479) subbloque -> . declaraciones cuerposub
    (475) returnbloque -> . RETURN condicion PTCOMA
    (476) returnbloque -> . RETURN QUERY select_instr1 PTCOMA
    (477) returnbloque -> . RETURN QUERY instrexecute PTCOMA
    (478) returnbloque -> . RETURN PTCOMA
    (517) instrexecute -> . EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion
    (518) instrexecute -> . EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion
    (525) getdiagnostic -> . GET DIAGNOSTICS ID IGUAL ID
    (526) getdiagnostic -> . GET DIAGNOSTICS ID PTIGUAL ID
    (527) instrnull -> . NULL PTCOMA
    (528) instrif -> . IF condiciones THEN instrlistabloque END IF PTCOMA
    (529) instrif -> . IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA
    (530) instrif -> . IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA
    (531) instrif -> . IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA
    (535) instrcase -> . CASE expresion listawhen1 elsecase END CASE PTCOMA
    (541) instrcase -> . CASE listawhen2 elsecase END CASE PTCOMA
    (469) commitinstr -> . COMMIT PTCOMA
    (470) rollbackinstr -> . ROLLBACK PTCOMA
    (48) insert_instr -> . INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA
    (49) insert_instr -> . INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA
    (58) update_instr -> . UPDATE ID SET asignaciones PTCOMA
    (59) update_instr -> . UPDATE ID SET asignaciones WHERE condiciones PTCOMA
    (298) alter_instr -> . ALTER TABLE ID ADD COLUMN list_columns
    (299) alter_instr -> . ALTER TABLE ID ADD CHECK PARIZQ condicion PARDER
    (300) alter_instr -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER
    (301) alter_instr -> . ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID
    (302) alter_instr -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL
    (303) alter_instr -> . ALTER TABLE ID DROP CONSTRAINT ID
    (304) alter_instr -> . ALTER TABLE ID RENAME COLUMN ID TO ID
    (305) alter_instr -> . ALTER TABLE ID DROP COLUMN listtablas
    (306) alter_instr -> . ALTER TABLE ID list_alter_column
    (365) create_enum -> . CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA
    (368) drop_table -> . DROP TABLE ID PTCOMA
    (63) delete_instr -> . DELETE FROM ID PTCOMA
    (64) delete_instr -> . DELETE FROM ID WHERE condiciones PTCOMA
    (65) truncate_instr -> . TRUNCATE listtablas PTCOMA
    (66) truncate_instr -> . TRUNCATE listtablas CASCADE PTCOMA
    (67) truncate_instr -> . TRUNCATE TABLE listtablas PTCOMA
    (68) truncate_instr -> . TRUNCATE TABLE listtablas CASCADE PTCOMA
    (71) select_instr -> . select_instr1 second_query PTCOMA
    (428) declaraciones -> . DECLARE listadeclaraciones
    (429) declaraciones -> . empty
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    ELSE            reduce using rule 546 (empty -> .)
    WHEN            reduce using rule 546 (empty -> .)
    END             reduce using rule 546 (empty -> .)
    BEGIN           reduce using rule 546 (empty -> .)
    RAISE           shift and go to state 1054
    ID              shift and go to state 1055
    RETURN          shift and go to state 1057
    EXECUTE         shift and go to state 1058
    GET             shift and go to state 1059
    NULL            shift and go to state 1060
    IF              shift and go to state 1061
    CASE            shift and go to state 1062
    COMMIT          shift and go to state 1063
    ROLLBACK        shift and go to state 1064
    INSERT          shift and go to state 30
    UPDATE          shift and go to state 31
    ALTER           shift and go to state 1065
    CREATE          shift and go to state 1067
    DROP            shift and go to state 1066
    DELETE          shift and go to state 32
    TRUNCATE        shift and go to state 33
    DECLARE         shift and go to state 920
    SELECT          shift and go to state 102

    instrlistabloque               shift and go to state 1255
    listabloque                    shift and go to state 1032
    empty                          shift and go to state 1033
    bloque                         shift and go to state 1034
    raisenotice                    shift and go to state 1035
    asignacionbloque               shift and go to state 1036
    subbloque                      shift and go to state 1037
    returnbloque                   shift and go to state 1038
    instrexecute                   shift and go to state 1039
    getdiagnostic                  shift and go to state 1040
    instrnull                      shift and go to state 1041
    instrif                        shift and go to state 1042
    instrcase                      shift and go to state 1043
    commitinstr                    shift and go to state 1044
    rollbackinstr                  shift and go to state 1045
    insert_instr                   shift and go to state 1046
    update_instr                   shift and go to state 1047
    alter_instr                    shift and go to state 1048
    create_enum                    shift and go to state 1049
    drop_table                     shift and go to state 1050
    delete_instr                   shift and go to state 1051
    truncate_instr                 shift and go to state 1052
    select_instr                   shift and go to state 1053
    declaraciones                  shift and go to state 1056
    select_instr1                  shift and go to state 34

state 1223

    (432) declaracion -> ID constantintr type_column1 notnullinst asignavalor . PTCOMA

    PTCOMA          shift and go to state 1256


state 1224

    (441) asignavalor -> DEFAULT . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresion                      shift and go to state 1257
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 1225

    (442) asignavalor -> PTIGUAL . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresion                      shift and go to state 1258
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 1226

    (443) asignavalor -> IGUAL . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    expresion                      shift and go to state 1259
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 1227

    (444) asignavalor -> empty .

    PTCOMA          reduce using rule 444 (asignavalor -> empty .)


state 1228

    (439) notnullinst -> NOT NULL .

    DEFAULT         reduce using rule 439 (notnullinst -> NOT NULL .)
    PTIGUAL         reduce using rule 439 (notnullinst -> NOT NULL .)
    IGUAL           reduce using rule 439 (notnullinst -> NOT NULL .)
    PTCOMA          reduce using rule 439 (notnullinst -> NOT NULL .)


state 1229

    (434) declaracion -> ID ALIAS1 FOR ID PTCOMA .

    ID              reduce using rule 434 (declaracion -> ID ALIAS1 FOR ID PTCOMA .)
    BEGIN           reduce using rule 434 (declaracion -> ID ALIAS1 FOR ID PTCOMA .)


state 1230

    (433) declaracion -> ID ALIAS1 FOR DOLAR ENTERO . PTCOMA

    PTCOMA          shift and go to state 1260


state 1231

    (435) declaracion -> ID cualquieridentificador MODULO TYPE PTCOMA .

    ID              reduce using rule 435 (declaracion -> ID cualquieridentificador MODULO TYPE PTCOMA .)
    BEGIN           reduce using rule 435 (declaracion -> ID cualquieridentificador MODULO TYPE PTCOMA .)


state 1232

    (436) declaracion -> ID cualquieridentificador MODULO ROWTYPE PTCOMA .

    ID              reduce using rule 436 (declaracion -> ID cualquieridentificador MODULO ROWTYPE PTCOMA .)
    BEGIN           reduce using rule 436 (declaracion -> ID cualquieridentificador MODULO ROWTYPE PTCOMA .)


state 1233

    (193) instroffset -> OFFSET ENTERO .

    UNION           reduce using rule 193 (instroffset -> OFFSET ENTERO .)
    INTERSECT       reduce using rule 193 (instroffset -> OFFSET ENTERO .)
    EXCEPT          reduce using rule 193 (instroffset -> OFFSET ENTERO .)
    PTCOMA          reduce using rule 193 (instroffset -> OFFSET ENTERO .)
    PARDER          reduce using rule 193 (instroffset -> OFFSET ENTERO .)
    CSIMPLE         reduce using rule 193 (instroffset -> OFFSET ENTERO .)


state 1234

    (177) condicionhavingagregacion -> agregacion PARIZQ cualquieridentificador PARDER .

    MENQUE          reduce using rule 177 (condicionhavingagregacion -> agregacion PARIZQ cualquieridentificador PARDER .)
    MAYQUE          reduce using rule 177 (condicionhavingagregacion -> agregacion PARIZQ cualquieridentificador PARDER .)
    MENIGUAL        reduce using rule 177 (condicionhavingagregacion -> agregacion PARIZQ cualquieridentificador PARDER .)
    MAYIGUAL        reduce using rule 177 (condicionhavingagregacion -> agregacion PARIZQ cualquieridentificador PARDER .)
    IGUAL           reduce using rule 177 (condicionhavingagregacion -> agregacion PARIZQ cualquieridentificador PARDER .)
    DIFERENTE       reduce using rule 177 (condicionhavingagregacion -> agregacion PARIZQ cualquieridentificador PARDER .)
    OR              reduce using rule 177 (condicionhavingagregacion -> agregacion PARIZQ cualquieridentificador PARDER .)
    AND             reduce using rule 177 (condicionhavingagregacion -> agregacion PARIZQ cualquieridentificador PARDER .)
    ORDER           reduce using rule 177 (condicionhavingagregacion -> agregacion PARIZQ cualquieridentificador PARDER .)
    UNION           reduce using rule 177 (condicionhavingagregacion -> agregacion PARIZQ cualquieridentificador PARDER .)
    INTERSECT       reduce using rule 177 (condicionhavingagregacion -> agregacion PARIZQ cualquieridentificador PARDER .)
    EXCEPT          reduce using rule 177 (condicionhavingagregacion -> agregacion PARIZQ cualquieridentificador PARDER .)
    PTCOMA          reduce using rule 177 (condicionhavingagregacion -> agregacion PARIZQ cualquieridentificador PARDER .)
    PARDER          reduce using rule 177 (condicionhavingagregacion -> agregacion PARIZQ cualquieridentificador PARDER .)
    CSIMPLE         reduce using rule 177 (condicionhavingagregacion -> agregacion PARIZQ cualquieridentificador PARDER .)


state 1235

    (154) wheresubstring -> SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER . IGUAL CADENASIMPLE

    IGUAL           shift and go to state 1261


state 1236

    (471) raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID . PTCOMA

    PTCOMA          shift and go to state 1262


state 1237

    (480) cuerposub -> BEGIN listasubbloque END PTCOMA .

    RAISE           reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    ID              reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    RETURN          reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    EXECUTE         reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    GET             reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    NULL            reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    IF              reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    CASE            reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    COMMIT          reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    ROLLBACK        reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    INSERT          reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    UPDATE          reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    ALTER           reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    CREATE          reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    DROP            reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    DELETE          reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    TRUNCATE        reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    DECLARE         reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    SELECT          reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    BEGIN           reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    END             reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    ELSE            reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    ELSIF           reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)
    WHEN            reduce using rule 480 (cuerposub -> BEGIN listasubbloque END PTCOMA .)


state 1238

    (481) cuerposub -> BEGIN empty END PTCOMA .

    RAISE           reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    ID              reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    RETURN          reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    EXECUTE         reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    GET             reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    NULL            reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    IF              reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    CASE            reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    COMMIT          reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    ROLLBACK        reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    INSERT          reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    UPDATE          reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    ALTER           reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    CREATE          reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    DROP            reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    DELETE          reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    TRUNCATE        reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    DECLARE         reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    SELECT          reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    BEGIN           reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    END             reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    ELSE            reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    ELSIF           reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)
    WHEN            reduce using rule 481 (cuerposub -> BEGIN empty END PTCOMA .)


state 1239

    (486) raisenotice1 -> RAISE NOTICE CADENASIMPLE . COMA ID PTCOMA
    (487) raisenotice1 -> RAISE NOTICE CADENASIMPLE . COMA OUTERBLOCK PUNTO ID PTCOMA
    (488) raisenotice1 -> RAISE NOTICE CADENASIMPLE . PTCOMA

    COMA            shift and go to state 1263
    PTCOMA          shift and go to state 1264


state 1240

    (517) instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget . usingexpresion
    (521) usingexpresion -> . USING listaexpresiones
    (522) usingexpresion -> . empty
    (546) empty -> .

    USING           shift and go to state 1266
    RAISE           reduce using rule 546 (empty -> .)
    ID              reduce using rule 546 (empty -> .)
    RETURN          reduce using rule 546 (empty -> .)
    EXECUTE         reduce using rule 546 (empty -> .)
    GET             reduce using rule 546 (empty -> .)
    NULL            reduce using rule 546 (empty -> .)
    IF              reduce using rule 546 (empty -> .)
    CASE            reduce using rule 546 (empty -> .)
    COMMIT          reduce using rule 546 (empty -> .)
    ROLLBACK        reduce using rule 546 (empty -> .)
    INSERT          reduce using rule 546 (empty -> .)
    UPDATE          reduce using rule 546 (empty -> .)
    ALTER           reduce using rule 546 (empty -> .)
    CREATE          reduce using rule 546 (empty -> .)
    DROP            reduce using rule 546 (empty -> .)
    DELETE          reduce using rule 546 (empty -> .)
    TRUNCATE        reduce using rule 546 (empty -> .)
    DECLARE         reduce using rule 546 (empty -> .)
    SELECT          reduce using rule 546 (empty -> .)
    BEGIN           reduce using rule 546 (empty -> .)
    END             reduce using rule 546 (empty -> .)
    ELSE            reduce using rule 546 (empty -> .)
    ELSIF           reduce using rule 546 (empty -> .)
    WHEN            reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)

    usingexpresion                 shift and go to state 1265
    empty                          shift and go to state 1267

state 1241

    (519) intotarget -> INTO . ID

    ID              shift and go to state 1268


state 1242

    (520) intotarget -> empty .

    USING           reduce using rule 520 (intotarget -> empty .)
    RAISE           reduce using rule 520 (intotarget -> empty .)
    ID              reduce using rule 520 (intotarget -> empty .)
    RETURN          reduce using rule 520 (intotarget -> empty .)
    EXECUTE         reduce using rule 520 (intotarget -> empty .)
    GET             reduce using rule 520 (intotarget -> empty .)
    NULL            reduce using rule 520 (intotarget -> empty .)
    IF              reduce using rule 520 (intotarget -> empty .)
    CASE            reduce using rule 520 (intotarget -> empty .)
    COMMIT          reduce using rule 520 (intotarget -> empty .)
    ROLLBACK        reduce using rule 520 (intotarget -> empty .)
    INSERT          reduce using rule 520 (intotarget -> empty .)
    UPDATE          reduce using rule 520 (intotarget -> empty .)
    ALTER           reduce using rule 520 (intotarget -> empty .)
    CREATE          reduce using rule 520 (intotarget -> empty .)
    DROP            reduce using rule 520 (intotarget -> empty .)
    DELETE          reduce using rule 520 (intotarget -> empty .)
    TRUNCATE        reduce using rule 520 (intotarget -> empty .)
    DECLARE         reduce using rule 520 (intotarget -> empty .)
    SELECT          reduce using rule 520 (intotarget -> empty .)
    BEGIN           reduce using rule 520 (intotarget -> empty .)
    END             reduce using rule 520 (intotarget -> empty .)
    ELSE            reduce using rule 520 (intotarget -> empty .)
    ELSIF           reduce using rule 520 (intotarget -> empty .)
    WHEN            reduce using rule 520 (intotarget -> empty .)
    PTCOMA          reduce using rule 520 (intotarget -> empty .)


state 1243

    (518) instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 . CSIMPLE PARDER intotarget usingexpresion

    CSIMPLE         shift and go to state 1269


state 1244

    (525) getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .

    RAISE           reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    ID              reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    RETURN          reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    EXECUTE         reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    GET             reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    NULL            reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    IF              reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    CASE            reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    COMMIT          reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    ROLLBACK        reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    INSERT          reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    UPDATE          reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    ALTER           reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    CREATE          reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    DROP            reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    DELETE          reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    TRUNCATE        reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    DECLARE         reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    SELECT          reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    BEGIN           reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    END             reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    ELSE            reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    ELSIF           reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)
    WHEN            reduce using rule 525 (getdiagnostic -> GET DIAGNOSTICS ID IGUAL ID .)


state 1245

    (526) getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .

    RAISE           reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    ID              reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    RETURN          reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    EXECUTE         reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    GET             reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    NULL            reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    IF              reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    CASE            reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    COMMIT          reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    ROLLBACK        reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    INSERT          reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    UPDATE          reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    ALTER           reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    CREATE          reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    DROP            reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    DELETE          reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    TRUNCATE        reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    DECLARE         reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    SELECT          reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    BEGIN           reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    END             reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    ELSE            reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    ELSIF           reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)
    WHEN            reduce using rule 526 (getdiagnostic -> GET DIAGNOSTICS ID PTIGUAL ID .)


state 1246

    (528) instrif -> IF condiciones THEN instrlistabloque END . IF PTCOMA

    IF              shift and go to state 1270


state 1247

    (529) instrif -> IF condiciones THEN instrlistabloque ELSE . instrlistabloque END IF PTCOMA
    (446) instrlistabloque -> . listabloque
    (447) instrlistabloque -> . empty
    (448) listabloque -> . listabloque bloque
    (449) listabloque -> . bloque
    (546) empty -> .
    (450) bloque -> . raisenotice
    (451) bloque -> . asignacionbloque
    (452) bloque -> . subbloque
    (453) bloque -> . returnbloque
    (454) bloque -> . instrexecute
    (455) bloque -> . getdiagnostic
    (456) bloque -> . instrnull
    (457) bloque -> . instrif
    (458) bloque -> . instrcase
    (459) bloque -> . commitinstr
    (460) bloque -> . rollbackinstr
    (461) bloque -> . insert_instr
    (462) bloque -> . update_instr
    (463) bloque -> . alter_instr PTCOMA
    (464) bloque -> . create_enum
    (465) bloque -> . drop_table
    (466) bloque -> . delete_instr
    (467) bloque -> . truncate_instr
    (468) bloque -> . select_instr
    (471) raisenotice -> . RAISE NOTICE CADENASIMPLE COMA ID PTCOMA
    (472) raisenotice -> . RAISE NOTICE CADENASIMPLE PTCOMA
    (473) asignacionbloque -> . ID IGUAL expresion PTCOMA
    (474) asignacionbloque -> . ID PTIGUAL expresion PTCOMA
    (479) subbloque -> . declaraciones cuerposub
    (475) returnbloque -> . RETURN condicion PTCOMA
    (476) returnbloque -> . RETURN QUERY select_instr1 PTCOMA
    (477) returnbloque -> . RETURN QUERY instrexecute PTCOMA
    (478) returnbloque -> . RETURN PTCOMA
    (517) instrexecute -> . EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion
    (518) instrexecute -> . EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion
    (525) getdiagnostic -> . GET DIAGNOSTICS ID IGUAL ID
    (526) getdiagnostic -> . GET DIAGNOSTICS ID PTIGUAL ID
    (527) instrnull -> . NULL PTCOMA
    (528) instrif -> . IF condiciones THEN instrlistabloque END IF PTCOMA
    (529) instrif -> . IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA
    (530) instrif -> . IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA
    (531) instrif -> . IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA
    (535) instrcase -> . CASE expresion listawhen1 elsecase END CASE PTCOMA
    (541) instrcase -> . CASE listawhen2 elsecase END CASE PTCOMA
    (469) commitinstr -> . COMMIT PTCOMA
    (470) rollbackinstr -> . ROLLBACK PTCOMA
    (48) insert_instr -> . INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA
    (49) insert_instr -> . INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA
    (58) update_instr -> . UPDATE ID SET asignaciones PTCOMA
    (59) update_instr -> . UPDATE ID SET asignaciones WHERE condiciones PTCOMA
    (298) alter_instr -> . ALTER TABLE ID ADD COLUMN list_columns
    (299) alter_instr -> . ALTER TABLE ID ADD CHECK PARIZQ condicion PARDER
    (300) alter_instr -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER
    (301) alter_instr -> . ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID
    (302) alter_instr -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL
    (303) alter_instr -> . ALTER TABLE ID DROP CONSTRAINT ID
    (304) alter_instr -> . ALTER TABLE ID RENAME COLUMN ID TO ID
    (305) alter_instr -> . ALTER TABLE ID DROP COLUMN listtablas
    (306) alter_instr -> . ALTER TABLE ID list_alter_column
    (365) create_enum -> . CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA
    (368) drop_table -> . DROP TABLE ID PTCOMA
    (63) delete_instr -> . DELETE FROM ID PTCOMA
    (64) delete_instr -> . DELETE FROM ID WHERE condiciones PTCOMA
    (65) truncate_instr -> . TRUNCATE listtablas PTCOMA
    (66) truncate_instr -> . TRUNCATE listtablas CASCADE PTCOMA
    (67) truncate_instr -> . TRUNCATE TABLE listtablas PTCOMA
    (68) truncate_instr -> . TRUNCATE TABLE listtablas CASCADE PTCOMA
    (71) select_instr -> . select_instr1 second_query PTCOMA
    (428) declaraciones -> . DECLARE listadeclaraciones
    (429) declaraciones -> . empty
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    END             reduce using rule 546 (empty -> .)
    BEGIN           reduce using rule 546 (empty -> .)
    RAISE           shift and go to state 1054
    ID              shift and go to state 1055
    RETURN          shift and go to state 1057
    EXECUTE         shift and go to state 1058
    GET             shift and go to state 1059
    NULL            shift and go to state 1060
    IF              shift and go to state 1061
    CASE            shift and go to state 1062
    COMMIT          shift and go to state 1063
    ROLLBACK        shift and go to state 1064
    INSERT          shift and go to state 30
    UPDATE          shift and go to state 31
    ALTER           shift and go to state 1065
    CREATE          shift and go to state 1067
    DROP            shift and go to state 1066
    DELETE          shift and go to state 32
    TRUNCATE        shift and go to state 33
    DECLARE         shift and go to state 920
    SELECT          shift and go to state 102

    instrlistabloque               shift and go to state 1271
    listabloque                    shift and go to state 1032
    empty                          shift and go to state 1033
    bloque                         shift and go to state 1034
    raisenotice                    shift and go to state 1035
    asignacionbloque               shift and go to state 1036
    subbloque                      shift and go to state 1037
    returnbloque                   shift and go to state 1038
    instrexecute                   shift and go to state 1039
    getdiagnostic                  shift and go to state 1040
    instrnull                      shift and go to state 1041
    instrif                        shift and go to state 1042
    instrcase                      shift and go to state 1043
    commitinstr                    shift and go to state 1044
    rollbackinstr                  shift and go to state 1045
    insert_instr                   shift and go to state 1046
    update_instr                   shift and go to state 1047
    alter_instr                    shift and go to state 1048
    create_enum                    shift and go to state 1049
    drop_table                     shift and go to state 1050
    delete_instr                   shift and go to state 1051
    truncate_instr                 shift and go to state 1052
    select_instr                   shift and go to state 1053
    declaraciones                  shift and go to state 1056
    select_instr1                  shift and go to state 34

state 1248

    (530) instrif -> IF condiciones THEN instrlistabloque instrelseif . END IF PTCOMA
    (531) instrif -> IF condiciones THEN instrlistabloque instrelseif . ELSE instrlistabloque END IF PTCOMA
    (532) instrelseif -> instrelseif . in_elseif
    (534) in_elseif -> . ELSIF condiciones THEN instrlistabloque

    END             shift and go to state 1272
    ELSE            shift and go to state 1273
    ELSIF           shift and go to state 1250

    in_elseif                      shift and go to state 1274

state 1249

    (533) instrelseif -> in_elseif .

    END             reduce using rule 533 (instrelseif -> in_elseif .)
    ELSE            reduce using rule 533 (instrelseif -> in_elseif .)
    ELSIF           reduce using rule 533 (instrelseif -> in_elseif .)


state 1250

    (534) in_elseif -> ELSIF . condiciones THEN instrlistabloque
    (195) condiciones -> . condiciones AND condicion
    (196) condiciones -> . condiciones OR condicion
    (197) condiciones -> . NOT PARIZQ condiciones PARDER
    (198) condiciones -> . NOT condiciones
    (199) condiciones -> . condicion
    (200) condicion -> . expresion MENQUE expresion
    (201) condicion -> . expresion MAYQUE expresion
    (202) condicion -> . expresion MENIGUAL expresion
    (203) condicion -> . expresion MAYIGUAL expresion
    (204) condicion -> . expresion IGUAL expresion
    (205) condicion -> . expresion DIFERENTE expresion
    (206) condicion -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    NOT             shift and go to state 406
    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    condiciones                    shift and go to state 1275
    condicion                      shift and go to state 405
    expresion                      shift and go to state 407
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 1251

    (535) instrcase -> CASE expresion listawhen1 elsecase END . CASE PTCOMA

    CASE            shift and go to state 1276


state 1252

    (540) when1 -> WHEN listaexpresiones THEN . instrlistabloque
    (446) instrlistabloque -> . listabloque
    (447) instrlistabloque -> . empty
    (448) listabloque -> . listabloque bloque
    (449) listabloque -> . bloque
    (546) empty -> .
    (450) bloque -> . raisenotice
    (451) bloque -> . asignacionbloque
    (452) bloque -> . subbloque
    (453) bloque -> . returnbloque
    (454) bloque -> . instrexecute
    (455) bloque -> . getdiagnostic
    (456) bloque -> . instrnull
    (457) bloque -> . instrif
    (458) bloque -> . instrcase
    (459) bloque -> . commitinstr
    (460) bloque -> . rollbackinstr
    (461) bloque -> . insert_instr
    (462) bloque -> . update_instr
    (463) bloque -> . alter_instr PTCOMA
    (464) bloque -> . create_enum
    (465) bloque -> . drop_table
    (466) bloque -> . delete_instr
    (467) bloque -> . truncate_instr
    (468) bloque -> . select_instr
    (471) raisenotice -> . RAISE NOTICE CADENASIMPLE COMA ID PTCOMA
    (472) raisenotice -> . RAISE NOTICE CADENASIMPLE PTCOMA
    (473) asignacionbloque -> . ID IGUAL expresion PTCOMA
    (474) asignacionbloque -> . ID PTIGUAL expresion PTCOMA
    (479) subbloque -> . declaraciones cuerposub
    (475) returnbloque -> . RETURN condicion PTCOMA
    (476) returnbloque -> . RETURN QUERY select_instr1 PTCOMA
    (477) returnbloque -> . RETURN QUERY instrexecute PTCOMA
    (478) returnbloque -> . RETURN PTCOMA
    (517) instrexecute -> . EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion
    (518) instrexecute -> . EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion
    (525) getdiagnostic -> . GET DIAGNOSTICS ID IGUAL ID
    (526) getdiagnostic -> . GET DIAGNOSTICS ID PTIGUAL ID
    (527) instrnull -> . NULL PTCOMA
    (528) instrif -> . IF condiciones THEN instrlistabloque END IF PTCOMA
    (529) instrif -> . IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA
    (530) instrif -> . IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA
    (531) instrif -> . IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA
    (535) instrcase -> . CASE expresion listawhen1 elsecase END CASE PTCOMA
    (541) instrcase -> . CASE listawhen2 elsecase END CASE PTCOMA
    (469) commitinstr -> . COMMIT PTCOMA
    (470) rollbackinstr -> . ROLLBACK PTCOMA
    (48) insert_instr -> . INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA
    (49) insert_instr -> . INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA
    (58) update_instr -> . UPDATE ID SET asignaciones PTCOMA
    (59) update_instr -> . UPDATE ID SET asignaciones WHERE condiciones PTCOMA
    (298) alter_instr -> . ALTER TABLE ID ADD COLUMN list_columns
    (299) alter_instr -> . ALTER TABLE ID ADD CHECK PARIZQ condicion PARDER
    (300) alter_instr -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER
    (301) alter_instr -> . ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID
    (302) alter_instr -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL
    (303) alter_instr -> . ALTER TABLE ID DROP CONSTRAINT ID
    (304) alter_instr -> . ALTER TABLE ID RENAME COLUMN ID TO ID
    (305) alter_instr -> . ALTER TABLE ID DROP COLUMN listtablas
    (306) alter_instr -> . ALTER TABLE ID list_alter_column
    (365) create_enum -> . CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA
    (368) drop_table -> . DROP TABLE ID PTCOMA
    (63) delete_instr -> . DELETE FROM ID PTCOMA
    (64) delete_instr -> . DELETE FROM ID WHERE condiciones PTCOMA
    (65) truncate_instr -> . TRUNCATE listtablas PTCOMA
    (66) truncate_instr -> . TRUNCATE listtablas CASCADE PTCOMA
    (67) truncate_instr -> . TRUNCATE TABLE listtablas PTCOMA
    (68) truncate_instr -> . TRUNCATE TABLE listtablas CASCADE PTCOMA
    (71) select_instr -> . select_instr1 second_query PTCOMA
    (428) declaraciones -> . DECLARE listadeclaraciones
    (429) declaraciones -> . empty
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    ELSE            reduce using rule 546 (empty -> .)
    WHEN            reduce using rule 546 (empty -> .)
    END             reduce using rule 546 (empty -> .)
    BEGIN           reduce using rule 546 (empty -> .)
    RAISE           shift and go to state 1054
    ID              shift and go to state 1055
    RETURN          shift and go to state 1057
    EXECUTE         shift and go to state 1058
    GET             shift and go to state 1059
    NULL            shift and go to state 1060
    IF              shift and go to state 1061
    CASE            shift and go to state 1062
    COMMIT          shift and go to state 1063
    ROLLBACK        shift and go to state 1064
    INSERT          shift and go to state 30
    UPDATE          shift and go to state 31
    ALTER           shift and go to state 1065
    CREATE          shift and go to state 1067
    DROP            shift and go to state 1066
    DELETE          shift and go to state 32
    TRUNCATE        shift and go to state 33
    DECLARE         shift and go to state 920
    SELECT          shift and go to state 102

    instrlistabloque               shift and go to state 1277
    listabloque                    shift and go to state 1032
    empty                          shift and go to state 1033
    bloque                         shift and go to state 1034
    raisenotice                    shift and go to state 1035
    asignacionbloque               shift and go to state 1036
    subbloque                      shift and go to state 1037
    returnbloque                   shift and go to state 1038
    instrexecute                   shift and go to state 1039
    getdiagnostic                  shift and go to state 1040
    instrnull                      shift and go to state 1041
    instrif                        shift and go to state 1042
    instrcase                      shift and go to state 1043
    commitinstr                    shift and go to state 1044
    rollbackinstr                  shift and go to state 1045
    insert_instr                   shift and go to state 1046
    update_instr                   shift and go to state 1047
    alter_instr                    shift and go to state 1048
    create_enum                    shift and go to state 1049
    drop_table                     shift and go to state 1050
    delete_instr                   shift and go to state 1051
    truncate_instr                 shift and go to state 1052
    select_instr                   shift and go to state 1053
    declaraciones                  shift and go to state 1056
    select_instr1                  shift and go to state 34

state 1253

    (541) instrcase -> CASE listawhen2 elsecase END CASE . PTCOMA

    PTCOMA          shift and go to state 1278


state 1254

    (544) when2 -> WHEN ID BETWEEN ENTERO . AND ENTERO THEN instrlistabloque

    AND             shift and go to state 1279


state 1255

    (545) when2 -> WHEN condiciones THEN instrlistabloque .

    ELSE            reduce using rule 545 (when2 -> WHEN condiciones THEN instrlistabloque .)
    WHEN            reduce using rule 545 (when2 -> WHEN condiciones THEN instrlistabloque .)
    END             reduce using rule 545 (when2 -> WHEN condiciones THEN instrlistabloque .)


state 1256

    (432) declaracion -> ID constantintr type_column1 notnullinst asignavalor PTCOMA .

    ID              reduce using rule 432 (declaracion -> ID constantintr type_column1 notnullinst asignavalor PTCOMA .)
    BEGIN           reduce using rule 432 (declaracion -> ID constantintr type_column1 notnullinst asignavalor PTCOMA .)


state 1257

    (441) asignavalor -> DEFAULT expresion .

    PTCOMA          reduce using rule 441 (asignavalor -> DEFAULT expresion .)


state 1258

    (442) asignavalor -> PTIGUAL expresion .

    PTCOMA          reduce using rule 442 (asignavalor -> PTIGUAL expresion .)


state 1259

    (443) asignavalor -> IGUAL expresion .

    PTCOMA          reduce using rule 443 (asignavalor -> IGUAL expresion .)


state 1260

    (433) declaracion -> ID ALIAS1 FOR DOLAR ENTERO PTCOMA .

    ID              reduce using rule 433 (declaracion -> ID ALIAS1 FOR DOLAR ENTERO PTCOMA .)
    BEGIN           reduce using rule 433 (declaracion -> ID ALIAS1 FOR DOLAR ENTERO PTCOMA .)


state 1261

    (154) wheresubstring -> SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL . CADENASIMPLE

    CADENASIMPLE    shift and go to state 1280


state 1262

    (471) raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .

    RAISE           reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    ID              reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    RETURN          reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    EXECUTE         reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    GET             reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    NULL            reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    IF              reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    CASE            reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    COMMIT          reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    ROLLBACK        reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    INSERT          reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    UPDATE          reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    ALTER           reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    CREATE          reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    DROP            reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    DELETE          reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    TRUNCATE        reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    DECLARE         reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    SELECT          reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    BEGIN           reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    END             reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    ELSE            reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    ELSIF           reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    WHEN            reduce using rule 471 (raisenotice -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)


state 1263

    (486) raisenotice1 -> RAISE NOTICE CADENASIMPLE COMA . ID PTCOMA
    (487) raisenotice1 -> RAISE NOTICE CADENASIMPLE COMA . OUTERBLOCK PUNTO ID PTCOMA

    ID              shift and go to state 1281
    OUTERBLOCK      shift and go to state 1282


state 1264

    (488) raisenotice1 -> RAISE NOTICE CADENASIMPLE PTCOMA .

    END             reduce using rule 488 (raisenotice1 -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    RAISE           reduce using rule 488 (raisenotice1 -> RAISE NOTICE CADENASIMPLE PTCOMA .)
    ID              reduce using rule 488 (raisenotice1 -> RAISE NOTICE CADENASIMPLE PTCOMA .)


state 1265

    (517) instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .

    RAISE           reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    ID              reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    RETURN          reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    EXECUTE         reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    GET             reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    NULL            reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    IF              reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    CASE            reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    COMMIT          reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    ROLLBACK        reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    INSERT          reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    UPDATE          reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    ALTER           reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    CREATE          reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    DROP            reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    DELETE          reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    TRUNCATE        reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    DECLARE         reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    SELECT          reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    BEGIN           reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    END             reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    ELSE            reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    ELSIF           reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    WHEN            reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)
    PTCOMA          reduce using rule 517 (instrexecute -> EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion .)


state 1266

    (521) usingexpresion -> USING . listaexpresiones
    (523) listaexpresiones -> . listaexpresiones COMA expresion
    (524) listaexpresiones -> . expresion
    (207) expresion -> . cualquiercadena
    (208) expresion -> . funcion_matematica_ws
    (209) expresion -> . expresionaritmetica
    (210) expresion -> . func_bin_strings_1
    (211) expresion -> . func_bin_strings_2
    (212) expresion -> . vallogico
    (213) expresion -> . PARIZQ select_instr1 PARDER
    (226) cualquiercadena -> . CADENASIMPLE
    (227) cualquiercadena -> . CADENADOBLE
    (232) funcion_matematica_ws -> . ABS PARIZQ expresionaritmetica PARDER
    (233) funcion_matematica_ws -> . CBRT PARIZQ expresionaritmetica PARDER
    (234) funcion_matematica_ws -> . CEIL PARIZQ expresionaritmetica PARDER
    (235) funcion_matematica_ws -> . CEILING PARIZQ expresionaritmetica PARDER
    (214) expresionaritmetica -> . expresionaritmetica MAS expresionaritmetica
    (215) expresionaritmetica -> . expresionaritmetica MENOS expresionaritmetica
    (216) expresionaritmetica -> . expresionaritmetica ASTERISCO expresionaritmetica
    (217) expresionaritmetica -> . expresionaritmetica DIVIDIDO expresionaritmetica
    (218) expresionaritmetica -> . expresionaritmetica MODULO expresionaritmetica
    (219) expresionaritmetica -> . expresionaritmetica EXPONENTE expresionaritmetica
    (220) expresionaritmetica -> . MENOS expresionaritmetica
    (221) expresionaritmetica -> . cualquiernumero
    (222) expresionaritmetica -> . cualquieridentificador
    (223) expresionaritmetica -> . PARIZQ expresionaritmetica PARDER
    (277) func_bin_strings_1 -> . LENGTH PARIZQ cadena PARDER
    (278) func_bin_strings_2 -> . SUBSTRING PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (279) func_bin_strings_2 -> . SUBSTR PARIZQ cadena COMA cualquiernumero COMA cualquiernumero PARDER
    (280) func_bin_strings_2 -> . TRIM PARIZQ cadena PARDER
    (230) vallogico -> . FALSE
    (231) vallogico -> . TRUE
    (224) cualquiernumero -> . ENTERO
    (225) cualquiernumero -> . DECIMAL
    (228) cualquieridentificador -> . ID
    (229) cualquieridentificador -> . ID PUNTO ID

    PARIZQ          shift and go to state 235
    CADENASIMPLE    shift and go to state 245
    CADENADOBLE     shift and go to state 246
    ABS             shift and go to state 128
    CBRT            shift and go to state 129
    CEIL            shift and go to state 130
    CEILING         shift and go to state 131
    MENOS           shift and go to state 247
    LENGTH          shift and go to state 176
    SUBSTRING       shift and go to state 177
    SUBSTR          shift and go to state 178
    TRIM            shift and go to state 179
    FALSE           shift and go to state 250
    TRUE            shift and go to state 251
    ENTERO          shift and go to state 252
    DECIMAL         shift and go to state 253
    ID              shift and go to state 234

    listaexpresiones               shift and go to state 1283
    expresion                      shift and go to state 238
    cualquiercadena                shift and go to state 239
    funcion_matematica_ws          shift and go to state 240
    expresionaritmetica            shift and go to state 241
    func_bin_strings_1             shift and go to state 242
    func_bin_strings_2             shift and go to state 243
    vallogico                      shift and go to state 244
    cualquiernumero                shift and go to state 248
    cualquieridentificador         shift and go to state 249

state 1267

    (522) usingexpresion -> empty .

    RAISE           reduce using rule 522 (usingexpresion -> empty .)
    ID              reduce using rule 522 (usingexpresion -> empty .)
    RETURN          reduce using rule 522 (usingexpresion -> empty .)
    EXECUTE         reduce using rule 522 (usingexpresion -> empty .)
    GET             reduce using rule 522 (usingexpresion -> empty .)
    NULL            reduce using rule 522 (usingexpresion -> empty .)
    IF              reduce using rule 522 (usingexpresion -> empty .)
    CASE            reduce using rule 522 (usingexpresion -> empty .)
    COMMIT          reduce using rule 522 (usingexpresion -> empty .)
    ROLLBACK        reduce using rule 522 (usingexpresion -> empty .)
    INSERT          reduce using rule 522 (usingexpresion -> empty .)
    UPDATE          reduce using rule 522 (usingexpresion -> empty .)
    ALTER           reduce using rule 522 (usingexpresion -> empty .)
    CREATE          reduce using rule 522 (usingexpresion -> empty .)
    DROP            reduce using rule 522 (usingexpresion -> empty .)
    DELETE          reduce using rule 522 (usingexpresion -> empty .)
    TRUNCATE        reduce using rule 522 (usingexpresion -> empty .)
    DECLARE         reduce using rule 522 (usingexpresion -> empty .)
    SELECT          reduce using rule 522 (usingexpresion -> empty .)
    BEGIN           reduce using rule 522 (usingexpresion -> empty .)
    END             reduce using rule 522 (usingexpresion -> empty .)
    ELSE            reduce using rule 522 (usingexpresion -> empty .)
    ELSIF           reduce using rule 522 (usingexpresion -> empty .)
    WHEN            reduce using rule 522 (usingexpresion -> empty .)
    PTCOMA          reduce using rule 522 (usingexpresion -> empty .)


state 1268

    (519) intotarget -> INTO ID .

    USING           reduce using rule 519 (intotarget -> INTO ID .)
    RAISE           reduce using rule 519 (intotarget -> INTO ID .)
    ID              reduce using rule 519 (intotarget -> INTO ID .)
    RETURN          reduce using rule 519 (intotarget -> INTO ID .)
    EXECUTE         reduce using rule 519 (intotarget -> INTO ID .)
    GET             reduce using rule 519 (intotarget -> INTO ID .)
    NULL            reduce using rule 519 (intotarget -> INTO ID .)
    IF              reduce using rule 519 (intotarget -> INTO ID .)
    CASE            reduce using rule 519 (intotarget -> INTO ID .)
    COMMIT          reduce using rule 519 (intotarget -> INTO ID .)
    ROLLBACK        reduce using rule 519 (intotarget -> INTO ID .)
    INSERT          reduce using rule 519 (intotarget -> INTO ID .)
    UPDATE          reduce using rule 519 (intotarget -> INTO ID .)
    ALTER           reduce using rule 519 (intotarget -> INTO ID .)
    CREATE          reduce using rule 519 (intotarget -> INTO ID .)
    DROP            reduce using rule 519 (intotarget -> INTO ID .)
    DELETE          reduce using rule 519 (intotarget -> INTO ID .)
    TRUNCATE        reduce using rule 519 (intotarget -> INTO ID .)
    DECLARE         reduce using rule 519 (intotarget -> INTO ID .)
    SELECT          reduce using rule 519 (intotarget -> INTO ID .)
    BEGIN           reduce using rule 519 (intotarget -> INTO ID .)
    END             reduce using rule 519 (intotarget -> INTO ID .)
    ELSE            reduce using rule 519 (intotarget -> INTO ID .)
    ELSIF           reduce using rule 519 (intotarget -> INTO ID .)
    WHEN            reduce using rule 519 (intotarget -> INTO ID .)
    PTCOMA          reduce using rule 519 (intotarget -> INTO ID .)


state 1269

    (518) instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE . PARDER intotarget usingexpresion

    PARDER          shift and go to state 1284


state 1270

    (528) instrif -> IF condiciones THEN instrlistabloque END IF . PTCOMA

    PTCOMA          shift and go to state 1285


state 1271

    (529) instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque . END IF PTCOMA

    END             shift and go to state 1286


state 1272

    (530) instrif -> IF condiciones THEN instrlistabloque instrelseif END . IF PTCOMA

    IF              shift and go to state 1287


state 1273

    (531) instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE . instrlistabloque END IF PTCOMA
    (446) instrlistabloque -> . listabloque
    (447) instrlistabloque -> . empty
    (448) listabloque -> . listabloque bloque
    (449) listabloque -> . bloque
    (546) empty -> .
    (450) bloque -> . raisenotice
    (451) bloque -> . asignacionbloque
    (452) bloque -> . subbloque
    (453) bloque -> . returnbloque
    (454) bloque -> . instrexecute
    (455) bloque -> . getdiagnostic
    (456) bloque -> . instrnull
    (457) bloque -> . instrif
    (458) bloque -> . instrcase
    (459) bloque -> . commitinstr
    (460) bloque -> . rollbackinstr
    (461) bloque -> . insert_instr
    (462) bloque -> . update_instr
    (463) bloque -> . alter_instr PTCOMA
    (464) bloque -> . create_enum
    (465) bloque -> . drop_table
    (466) bloque -> . delete_instr
    (467) bloque -> . truncate_instr
    (468) bloque -> . select_instr
    (471) raisenotice -> . RAISE NOTICE CADENASIMPLE COMA ID PTCOMA
    (472) raisenotice -> . RAISE NOTICE CADENASIMPLE PTCOMA
    (473) asignacionbloque -> . ID IGUAL expresion PTCOMA
    (474) asignacionbloque -> . ID PTIGUAL expresion PTCOMA
    (479) subbloque -> . declaraciones cuerposub
    (475) returnbloque -> . RETURN condicion PTCOMA
    (476) returnbloque -> . RETURN QUERY select_instr1 PTCOMA
    (477) returnbloque -> . RETURN QUERY instrexecute PTCOMA
    (478) returnbloque -> . RETURN PTCOMA
    (517) instrexecute -> . EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion
    (518) instrexecute -> . EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion
    (525) getdiagnostic -> . GET DIAGNOSTICS ID IGUAL ID
    (526) getdiagnostic -> . GET DIAGNOSTICS ID PTIGUAL ID
    (527) instrnull -> . NULL PTCOMA
    (528) instrif -> . IF condiciones THEN instrlistabloque END IF PTCOMA
    (529) instrif -> . IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA
    (530) instrif -> . IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA
    (531) instrif -> . IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA
    (535) instrcase -> . CASE expresion listawhen1 elsecase END CASE PTCOMA
    (541) instrcase -> . CASE listawhen2 elsecase END CASE PTCOMA
    (469) commitinstr -> . COMMIT PTCOMA
    (470) rollbackinstr -> . ROLLBACK PTCOMA
    (48) insert_instr -> . INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA
    (49) insert_instr -> . INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA
    (58) update_instr -> . UPDATE ID SET asignaciones PTCOMA
    (59) update_instr -> . UPDATE ID SET asignaciones WHERE condiciones PTCOMA
    (298) alter_instr -> . ALTER TABLE ID ADD COLUMN list_columns
    (299) alter_instr -> . ALTER TABLE ID ADD CHECK PARIZQ condicion PARDER
    (300) alter_instr -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER
    (301) alter_instr -> . ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID
    (302) alter_instr -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL
    (303) alter_instr -> . ALTER TABLE ID DROP CONSTRAINT ID
    (304) alter_instr -> . ALTER TABLE ID RENAME COLUMN ID TO ID
    (305) alter_instr -> . ALTER TABLE ID DROP COLUMN listtablas
    (306) alter_instr -> . ALTER TABLE ID list_alter_column
    (365) create_enum -> . CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA
    (368) drop_table -> . DROP TABLE ID PTCOMA
    (63) delete_instr -> . DELETE FROM ID PTCOMA
    (64) delete_instr -> . DELETE FROM ID WHERE condiciones PTCOMA
    (65) truncate_instr -> . TRUNCATE listtablas PTCOMA
    (66) truncate_instr -> . TRUNCATE listtablas CASCADE PTCOMA
    (67) truncate_instr -> . TRUNCATE TABLE listtablas PTCOMA
    (68) truncate_instr -> . TRUNCATE TABLE listtablas CASCADE PTCOMA
    (71) select_instr -> . select_instr1 second_query PTCOMA
    (428) declaraciones -> . DECLARE listadeclaraciones
    (429) declaraciones -> . empty
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    END             reduce using rule 546 (empty -> .)
    BEGIN           reduce using rule 546 (empty -> .)
    RAISE           shift and go to state 1054
    ID              shift and go to state 1055
    RETURN          shift and go to state 1057
    EXECUTE         shift and go to state 1058
    GET             shift and go to state 1059
    NULL            shift and go to state 1060
    IF              shift and go to state 1061
    CASE            shift and go to state 1062
    COMMIT          shift and go to state 1063
    ROLLBACK        shift and go to state 1064
    INSERT          shift and go to state 30
    UPDATE          shift and go to state 31
    ALTER           shift and go to state 1065
    CREATE          shift and go to state 1067
    DROP            shift and go to state 1066
    DELETE          shift and go to state 32
    TRUNCATE        shift and go to state 33
    DECLARE         shift and go to state 920
    SELECT          shift and go to state 102

    instrlistabloque               shift and go to state 1288
    listabloque                    shift and go to state 1032
    empty                          shift and go to state 1033
    bloque                         shift and go to state 1034
    raisenotice                    shift and go to state 1035
    asignacionbloque               shift and go to state 1036
    subbloque                      shift and go to state 1037
    returnbloque                   shift and go to state 1038
    instrexecute                   shift and go to state 1039
    getdiagnostic                  shift and go to state 1040
    instrnull                      shift and go to state 1041
    instrif                        shift and go to state 1042
    instrcase                      shift and go to state 1043
    commitinstr                    shift and go to state 1044
    rollbackinstr                  shift and go to state 1045
    insert_instr                   shift and go to state 1046
    update_instr                   shift and go to state 1047
    alter_instr                    shift and go to state 1048
    create_enum                    shift and go to state 1049
    drop_table                     shift and go to state 1050
    delete_instr                   shift and go to state 1051
    truncate_instr                 shift and go to state 1052
    select_instr                   shift and go to state 1053
    declaraciones                  shift and go to state 1056
    select_instr1                  shift and go to state 34

state 1274

    (532) instrelseif -> instrelseif in_elseif .

    END             reduce using rule 532 (instrelseif -> instrelseif in_elseif .)
    ELSE            reduce using rule 532 (instrelseif -> instrelseif in_elseif .)
    ELSIF           reduce using rule 532 (instrelseif -> instrelseif in_elseif .)


state 1275

    (534) in_elseif -> ELSIF condiciones . THEN instrlistabloque
    (195) condiciones -> condiciones . AND condicion
    (196) condiciones -> condiciones . OR condicion

    THEN            shift and go to state 1289
    AND             shift and go to state 585
    OR              shift and go to state 586


state 1276

    (535) instrcase -> CASE expresion listawhen1 elsecase END CASE . PTCOMA

    PTCOMA          shift and go to state 1290


state 1277

    (540) when1 -> WHEN listaexpresiones THEN instrlistabloque .

    ELSE            reduce using rule 540 (when1 -> WHEN listaexpresiones THEN instrlistabloque .)
    WHEN            reduce using rule 540 (when1 -> WHEN listaexpresiones THEN instrlistabloque .)
    END             reduce using rule 540 (when1 -> WHEN listaexpresiones THEN instrlistabloque .)


state 1278

    (541) instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .

    RAISE           reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    ID              reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    RETURN          reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    EXECUTE         reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    GET             reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    NULL            reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    IF              reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    CASE            reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    COMMIT          reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    ROLLBACK        reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    INSERT          reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    UPDATE          reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    ALTER           reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    CREATE          reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    DROP            reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    DELETE          reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    TRUNCATE        reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    DECLARE         reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    SELECT          reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    BEGIN           reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    END             reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    ELSE            reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    ELSIF           reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)
    WHEN            reduce using rule 541 (instrcase -> CASE listawhen2 elsecase END CASE PTCOMA .)


state 1279

    (544) when2 -> WHEN ID BETWEEN ENTERO AND . ENTERO THEN instrlistabloque

    ENTERO          shift and go to state 1291


state 1280

    (154) wheresubstring -> SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE .

    OR              reduce using rule 154 (wheresubstring -> SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE .)
    AND             reduce using rule 154 (wheresubstring -> SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE .)
    GROUP           reduce using rule 154 (wheresubstring -> SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE .)
    ORDER           reduce using rule 154 (wheresubstring -> SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE .)
    UNION           reduce using rule 154 (wheresubstring -> SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE .)
    INTERSECT       reduce using rule 154 (wheresubstring -> SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE .)
    EXCEPT          reduce using rule 154 (wheresubstring -> SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE .)
    PTCOMA          reduce using rule 154 (wheresubstring -> SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE .)
    PARDER          reduce using rule 154 (wheresubstring -> SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE .)
    CSIMPLE         reduce using rule 154 (wheresubstring -> SUBSTRING PARIZQ cadenastodas COMA ENTERO COMA ENTERO PARDER IGUAL CADENASIMPLE .)


state 1281

    (486) raisenotice1 -> RAISE NOTICE CADENASIMPLE COMA ID . PTCOMA

    PTCOMA          shift and go to state 1292


state 1282

    (487) raisenotice1 -> RAISE NOTICE CADENASIMPLE COMA OUTERBLOCK . PUNTO ID PTCOMA

    PUNTO           shift and go to state 1293


state 1283

    (521) usingexpresion -> USING listaexpresiones .
    (523) listaexpresiones -> listaexpresiones . COMA expresion

    RAISE           reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    ID              reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    RETURN          reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    EXECUTE         reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    GET             reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    NULL            reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    IF              reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    CASE            reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    COMMIT          reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    ROLLBACK        reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    INSERT          reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    UPDATE          reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    ALTER           reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    CREATE          reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    DROP            reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    DELETE          reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    TRUNCATE        reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    DECLARE         reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    SELECT          reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    BEGIN           reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    END             reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    ELSE            reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    ELSIF           reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    WHEN            reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    PTCOMA          reduce using rule 521 (usingexpresion -> USING listaexpresiones .)
    COMA            shift and go to state 415


state 1284

    (518) instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER . intotarget usingexpresion
    (519) intotarget -> . INTO ID
    (520) intotarget -> . empty
    (546) empty -> .

    INTO            shift and go to state 1241
    USING           reduce using rule 546 (empty -> .)
    RAISE           reduce using rule 546 (empty -> .)
    ID              reduce using rule 546 (empty -> .)
    RETURN          reduce using rule 546 (empty -> .)
    EXECUTE         reduce using rule 546 (empty -> .)
    GET             reduce using rule 546 (empty -> .)
    NULL            reduce using rule 546 (empty -> .)
    IF              reduce using rule 546 (empty -> .)
    CASE            reduce using rule 546 (empty -> .)
    COMMIT          reduce using rule 546 (empty -> .)
    ROLLBACK        reduce using rule 546 (empty -> .)
    INSERT          reduce using rule 546 (empty -> .)
    UPDATE          reduce using rule 546 (empty -> .)
    ALTER           reduce using rule 546 (empty -> .)
    CREATE          reduce using rule 546 (empty -> .)
    DROP            reduce using rule 546 (empty -> .)
    DELETE          reduce using rule 546 (empty -> .)
    TRUNCATE        reduce using rule 546 (empty -> .)
    DECLARE         reduce using rule 546 (empty -> .)
    SELECT          reduce using rule 546 (empty -> .)
    BEGIN           reduce using rule 546 (empty -> .)
    END             reduce using rule 546 (empty -> .)
    ELSE            reduce using rule 546 (empty -> .)
    ELSIF           reduce using rule 546 (empty -> .)
    WHEN            reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)

    intotarget                     shift and go to state 1294
    empty                          shift and go to state 1242

state 1285

    (528) instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .

    RAISE           reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    ID              reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    RETURN          reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    EXECUTE         reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    GET             reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    NULL            reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    IF              reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    CASE            reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    COMMIT          reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    ROLLBACK        reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    INSERT          reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    UPDATE          reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    ALTER           reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    CREATE          reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    DROP            reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    DELETE          reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    TRUNCATE        reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    DECLARE         reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    SELECT          reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    BEGIN           reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    END             reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    ELSE            reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    ELSIF           reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)
    WHEN            reduce using rule 528 (instrif -> IF condiciones THEN instrlistabloque END IF PTCOMA .)


state 1286

    (529) instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END . IF PTCOMA

    IF              shift and go to state 1295


state 1287

    (530) instrif -> IF condiciones THEN instrlistabloque instrelseif END IF . PTCOMA

    PTCOMA          shift and go to state 1296


state 1288

    (531) instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque . END IF PTCOMA

    END             shift and go to state 1297


state 1289

    (534) in_elseif -> ELSIF condiciones THEN . instrlistabloque
    (446) instrlistabloque -> . listabloque
    (447) instrlistabloque -> . empty
    (448) listabloque -> . listabloque bloque
    (449) listabloque -> . bloque
    (546) empty -> .
    (450) bloque -> . raisenotice
    (451) bloque -> . asignacionbloque
    (452) bloque -> . subbloque
    (453) bloque -> . returnbloque
    (454) bloque -> . instrexecute
    (455) bloque -> . getdiagnostic
    (456) bloque -> . instrnull
    (457) bloque -> . instrif
    (458) bloque -> . instrcase
    (459) bloque -> . commitinstr
    (460) bloque -> . rollbackinstr
    (461) bloque -> . insert_instr
    (462) bloque -> . update_instr
    (463) bloque -> . alter_instr PTCOMA
    (464) bloque -> . create_enum
    (465) bloque -> . drop_table
    (466) bloque -> . delete_instr
    (467) bloque -> . truncate_instr
    (468) bloque -> . select_instr
    (471) raisenotice -> . RAISE NOTICE CADENASIMPLE COMA ID PTCOMA
    (472) raisenotice -> . RAISE NOTICE CADENASIMPLE PTCOMA
    (473) asignacionbloque -> . ID IGUAL expresion PTCOMA
    (474) asignacionbloque -> . ID PTIGUAL expresion PTCOMA
    (479) subbloque -> . declaraciones cuerposub
    (475) returnbloque -> . RETURN condicion PTCOMA
    (476) returnbloque -> . RETURN QUERY select_instr1 PTCOMA
    (477) returnbloque -> . RETURN QUERY instrexecute PTCOMA
    (478) returnbloque -> . RETURN PTCOMA
    (517) instrexecute -> . EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion
    (518) instrexecute -> . EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion
    (525) getdiagnostic -> . GET DIAGNOSTICS ID IGUAL ID
    (526) getdiagnostic -> . GET DIAGNOSTICS ID PTIGUAL ID
    (527) instrnull -> . NULL PTCOMA
    (528) instrif -> . IF condiciones THEN instrlistabloque END IF PTCOMA
    (529) instrif -> . IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA
    (530) instrif -> . IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA
    (531) instrif -> . IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA
    (535) instrcase -> . CASE expresion listawhen1 elsecase END CASE PTCOMA
    (541) instrcase -> . CASE listawhen2 elsecase END CASE PTCOMA
    (469) commitinstr -> . COMMIT PTCOMA
    (470) rollbackinstr -> . ROLLBACK PTCOMA
    (48) insert_instr -> . INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA
    (49) insert_instr -> . INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA
    (58) update_instr -> . UPDATE ID SET asignaciones PTCOMA
    (59) update_instr -> . UPDATE ID SET asignaciones WHERE condiciones PTCOMA
    (298) alter_instr -> . ALTER TABLE ID ADD COLUMN list_columns
    (299) alter_instr -> . ALTER TABLE ID ADD CHECK PARIZQ condicion PARDER
    (300) alter_instr -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER
    (301) alter_instr -> . ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID
    (302) alter_instr -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL
    (303) alter_instr -> . ALTER TABLE ID DROP CONSTRAINT ID
    (304) alter_instr -> . ALTER TABLE ID RENAME COLUMN ID TO ID
    (305) alter_instr -> . ALTER TABLE ID DROP COLUMN listtablas
    (306) alter_instr -> . ALTER TABLE ID list_alter_column
    (365) create_enum -> . CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA
    (368) drop_table -> . DROP TABLE ID PTCOMA
    (63) delete_instr -> . DELETE FROM ID PTCOMA
    (64) delete_instr -> . DELETE FROM ID WHERE condiciones PTCOMA
    (65) truncate_instr -> . TRUNCATE listtablas PTCOMA
    (66) truncate_instr -> . TRUNCATE listtablas CASCADE PTCOMA
    (67) truncate_instr -> . TRUNCATE TABLE listtablas PTCOMA
    (68) truncate_instr -> . TRUNCATE TABLE listtablas CASCADE PTCOMA
    (71) select_instr -> . select_instr1 second_query PTCOMA
    (428) declaraciones -> . DECLARE listadeclaraciones
    (429) declaraciones -> . empty
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    END             reduce using rule 546 (empty -> .)
    ELSE            reduce using rule 546 (empty -> .)
    ELSIF           reduce using rule 546 (empty -> .)
    BEGIN           reduce using rule 546 (empty -> .)
    RAISE           shift and go to state 1054
    ID              shift and go to state 1055
    RETURN          shift and go to state 1057
    EXECUTE         shift and go to state 1058
    GET             shift and go to state 1059
    NULL            shift and go to state 1060
    IF              shift and go to state 1061
    CASE            shift and go to state 1062
    COMMIT          shift and go to state 1063
    ROLLBACK        shift and go to state 1064
    INSERT          shift and go to state 30
    UPDATE          shift and go to state 31
    ALTER           shift and go to state 1065
    CREATE          shift and go to state 1067
    DROP            shift and go to state 1066
    DELETE          shift and go to state 32
    TRUNCATE        shift and go to state 33
    DECLARE         shift and go to state 920
    SELECT          shift and go to state 102

    instrlistabloque               shift and go to state 1298
    listabloque                    shift and go to state 1032
    empty                          shift and go to state 1033
    bloque                         shift and go to state 1034
    raisenotice                    shift and go to state 1035
    asignacionbloque               shift and go to state 1036
    subbloque                      shift and go to state 1037
    returnbloque                   shift and go to state 1038
    instrexecute                   shift and go to state 1039
    getdiagnostic                  shift and go to state 1040
    instrnull                      shift and go to state 1041
    instrif                        shift and go to state 1042
    instrcase                      shift and go to state 1043
    commitinstr                    shift and go to state 1044
    rollbackinstr                  shift and go to state 1045
    insert_instr                   shift and go to state 1046
    update_instr                   shift and go to state 1047
    alter_instr                    shift and go to state 1048
    create_enum                    shift and go to state 1049
    drop_table                     shift and go to state 1050
    delete_instr                   shift and go to state 1051
    truncate_instr                 shift and go to state 1052
    select_instr                   shift and go to state 1053
    declaraciones                  shift and go to state 1056
    select_instr1                  shift and go to state 34

state 1290

    (535) instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .

    RAISE           reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    ID              reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    RETURN          reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    EXECUTE         reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    GET             reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    NULL            reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    IF              reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    CASE            reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    COMMIT          reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    ROLLBACK        reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    INSERT          reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    UPDATE          reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    ALTER           reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    CREATE          reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    DROP            reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    DELETE          reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    TRUNCATE        reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    DECLARE         reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    SELECT          reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    BEGIN           reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    END             reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    ELSE            reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    ELSIF           reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)
    WHEN            reduce using rule 535 (instrcase -> CASE expresion listawhen1 elsecase END CASE PTCOMA .)


state 1291

    (544) when2 -> WHEN ID BETWEEN ENTERO AND ENTERO . THEN instrlistabloque

    THEN            shift and go to state 1299


state 1292

    (486) raisenotice1 -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .

    END             reduce using rule 486 (raisenotice1 -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    RAISE           reduce using rule 486 (raisenotice1 -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)
    ID              reduce using rule 486 (raisenotice1 -> RAISE NOTICE CADENASIMPLE COMA ID PTCOMA .)


state 1293

    (487) raisenotice1 -> RAISE NOTICE CADENASIMPLE COMA OUTERBLOCK PUNTO . ID PTCOMA

    ID              shift and go to state 1300


state 1294

    (518) instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget . usingexpresion
    (521) usingexpresion -> . USING listaexpresiones
    (522) usingexpresion -> . empty
    (546) empty -> .

    USING           shift and go to state 1266
    RAISE           reduce using rule 546 (empty -> .)
    ID              reduce using rule 546 (empty -> .)
    RETURN          reduce using rule 546 (empty -> .)
    EXECUTE         reduce using rule 546 (empty -> .)
    GET             reduce using rule 546 (empty -> .)
    NULL            reduce using rule 546 (empty -> .)
    IF              reduce using rule 546 (empty -> .)
    CASE            reduce using rule 546 (empty -> .)
    COMMIT          reduce using rule 546 (empty -> .)
    ROLLBACK        reduce using rule 546 (empty -> .)
    INSERT          reduce using rule 546 (empty -> .)
    UPDATE          reduce using rule 546 (empty -> .)
    ALTER           reduce using rule 546 (empty -> .)
    CREATE          reduce using rule 546 (empty -> .)
    DROP            reduce using rule 546 (empty -> .)
    DELETE          reduce using rule 546 (empty -> .)
    TRUNCATE        reduce using rule 546 (empty -> .)
    DECLARE         reduce using rule 546 (empty -> .)
    SELECT          reduce using rule 546 (empty -> .)
    BEGIN           reduce using rule 546 (empty -> .)
    END             reduce using rule 546 (empty -> .)
    ELSE            reduce using rule 546 (empty -> .)
    ELSIF           reduce using rule 546 (empty -> .)
    WHEN            reduce using rule 546 (empty -> .)
    PTCOMA          reduce using rule 546 (empty -> .)

    usingexpresion                 shift and go to state 1301
    empty                          shift and go to state 1267

state 1295

    (529) instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF . PTCOMA

    PTCOMA          shift and go to state 1302


state 1296

    (530) instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .

    RAISE           reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    ID              reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    RETURN          reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    EXECUTE         reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    GET             reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    NULL            reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    IF              reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    CASE            reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    COMMIT          reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    ROLLBACK        reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    INSERT          reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    UPDATE          reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    ALTER           reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    CREATE          reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    DROP            reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    DELETE          reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    TRUNCATE        reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    DECLARE         reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    SELECT          reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    BEGIN           reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    END             reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    ELSE            reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    ELSIF           reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)
    WHEN            reduce using rule 530 (instrif -> IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA .)


state 1297

    (531) instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END . IF PTCOMA

    IF              shift and go to state 1303


state 1298

    (534) in_elseif -> ELSIF condiciones THEN instrlistabloque .

    END             reduce using rule 534 (in_elseif -> ELSIF condiciones THEN instrlistabloque .)
    ELSE            reduce using rule 534 (in_elseif -> ELSIF condiciones THEN instrlistabloque .)
    ELSIF           reduce using rule 534 (in_elseif -> ELSIF condiciones THEN instrlistabloque .)


state 1299

    (544) when2 -> WHEN ID BETWEEN ENTERO AND ENTERO THEN . instrlistabloque
    (446) instrlistabloque -> . listabloque
    (447) instrlistabloque -> . empty
    (448) listabloque -> . listabloque bloque
    (449) listabloque -> . bloque
    (546) empty -> .
    (450) bloque -> . raisenotice
    (451) bloque -> . asignacionbloque
    (452) bloque -> . subbloque
    (453) bloque -> . returnbloque
    (454) bloque -> . instrexecute
    (455) bloque -> . getdiagnostic
    (456) bloque -> . instrnull
    (457) bloque -> . instrif
    (458) bloque -> . instrcase
    (459) bloque -> . commitinstr
    (460) bloque -> . rollbackinstr
    (461) bloque -> . insert_instr
    (462) bloque -> . update_instr
    (463) bloque -> . alter_instr PTCOMA
    (464) bloque -> . create_enum
    (465) bloque -> . drop_table
    (466) bloque -> . delete_instr
    (467) bloque -> . truncate_instr
    (468) bloque -> . select_instr
    (471) raisenotice -> . RAISE NOTICE CADENASIMPLE COMA ID PTCOMA
    (472) raisenotice -> . RAISE NOTICE CADENASIMPLE PTCOMA
    (473) asignacionbloque -> . ID IGUAL expresion PTCOMA
    (474) asignacionbloque -> . ID PTIGUAL expresion PTCOMA
    (479) subbloque -> . declaraciones cuerposub
    (475) returnbloque -> . RETURN condicion PTCOMA
    (476) returnbloque -> . RETURN QUERY select_instr1 PTCOMA
    (477) returnbloque -> . RETURN QUERY instrexecute PTCOMA
    (478) returnbloque -> . RETURN PTCOMA
    (517) instrexecute -> . EXECUTE CSIMPLE select_instr1 CSIMPLE intotarget usingexpresion
    (518) instrexecute -> . EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion
    (525) getdiagnostic -> . GET DIAGNOSTICS ID IGUAL ID
    (526) getdiagnostic -> . GET DIAGNOSTICS ID PTIGUAL ID
    (527) instrnull -> . NULL PTCOMA
    (528) instrif -> . IF condiciones THEN instrlistabloque END IF PTCOMA
    (529) instrif -> . IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA
    (530) instrif -> . IF condiciones THEN instrlistabloque instrelseif END IF PTCOMA
    (531) instrif -> . IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA
    (535) instrcase -> . CASE expresion listawhen1 elsecase END CASE PTCOMA
    (541) instrcase -> . CASE listawhen2 elsecase END CASE PTCOMA
    (469) commitinstr -> . COMMIT PTCOMA
    (470) rollbackinstr -> . ROLLBACK PTCOMA
    (48) insert_instr -> . INSERT INTO ID VALUES PARIZQ parametros PARDER PTCOMA
    (49) insert_instr -> . INSERT INTO ID PARIZQ columnas PARDER VALUES PARIZQ parametros PARDER PTCOMA
    (58) update_instr -> . UPDATE ID SET asignaciones PTCOMA
    (59) update_instr -> . UPDATE ID SET asignaciones WHERE condiciones PTCOMA
    (298) alter_instr -> . ALTER TABLE ID ADD COLUMN list_columns
    (299) alter_instr -> . ALTER TABLE ID ADD CHECK PARIZQ condicion PARDER
    (300) alter_instr -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARIZQ ID PARDER
    (301) alter_instr -> . ALTER TABLE ID ADD FOREIGN KEY PARIZQ ID PARDER REFERENCES ID
    (302) alter_instr -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL
    (303) alter_instr -> . ALTER TABLE ID DROP CONSTRAINT ID
    (304) alter_instr -> . ALTER TABLE ID RENAME COLUMN ID TO ID
    (305) alter_instr -> . ALTER TABLE ID DROP COLUMN listtablas
    (306) alter_instr -> . ALTER TABLE ID list_alter_column
    (365) create_enum -> . CREATE TYPE ID AS ENUM PARIZQ list_string PARDER PTCOMA
    (368) drop_table -> . DROP TABLE ID PTCOMA
    (63) delete_instr -> . DELETE FROM ID PTCOMA
    (64) delete_instr -> . DELETE FROM ID WHERE condiciones PTCOMA
    (65) truncate_instr -> . TRUNCATE listtablas PTCOMA
    (66) truncate_instr -> . TRUNCATE listtablas CASCADE PTCOMA
    (67) truncate_instr -> . TRUNCATE TABLE listtablas PTCOMA
    (68) truncate_instr -> . TRUNCATE TABLE listtablas CASCADE PTCOMA
    (71) select_instr -> . select_instr1 second_query PTCOMA
    (428) declaraciones -> . DECLARE listadeclaraciones
    (429) declaraciones -> . empty
    (79) select_instr1 -> . SELECT termdistinct selectlist selectfrom

    ELSE            reduce using rule 546 (empty -> .)
    WHEN            reduce using rule 546 (empty -> .)
    END             reduce using rule 546 (empty -> .)
    BEGIN           reduce using rule 546 (empty -> .)
    RAISE           shift and go to state 1054
    ID              shift and go to state 1055
    RETURN          shift and go to state 1057
    EXECUTE         shift and go to state 1058
    GET             shift and go to state 1059
    NULL            shift and go to state 1060
    IF              shift and go to state 1061
    CASE            shift and go to state 1062
    COMMIT          shift and go to state 1063
    ROLLBACK        shift and go to state 1064
    INSERT          shift and go to state 30
    UPDATE          shift and go to state 31
    ALTER           shift and go to state 1065
    CREATE          shift and go to state 1067
    DROP            shift and go to state 1066
    DELETE          shift and go to state 32
    TRUNCATE        shift and go to state 33
    DECLARE         shift and go to state 920
    SELECT          shift and go to state 102

    instrlistabloque               shift and go to state 1304
    listabloque                    shift and go to state 1032
    empty                          shift and go to state 1033
    bloque                         shift and go to state 1034
    raisenotice                    shift and go to state 1035
    asignacionbloque               shift and go to state 1036
    subbloque                      shift and go to state 1037
    returnbloque                   shift and go to state 1038
    instrexecute                   shift and go to state 1039
    getdiagnostic                  shift and go to state 1040
    instrnull                      shift and go to state 1041
    instrif                        shift and go to state 1042
    instrcase                      shift and go to state 1043
    commitinstr                    shift and go to state 1044
    rollbackinstr                  shift and go to state 1045
    insert_instr                   shift and go to state 1046
    update_instr                   shift and go to state 1047
    alter_instr                    shift and go to state 1048
    create_enum                    shift and go to state 1049
    drop_table                     shift and go to state 1050
    delete_instr                   shift and go to state 1051
    truncate_instr                 shift and go to state 1052
    select_instr                   shift and go to state 1053
    declaraciones                  shift and go to state 1056
    select_instr1                  shift and go to state 34

state 1300

    (487) raisenotice1 -> RAISE NOTICE CADENASIMPLE COMA OUTERBLOCK PUNTO ID . PTCOMA

    PTCOMA          shift and go to state 1305


state 1301

    (518) instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .

    RAISE           reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    ID              reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    RETURN          reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    EXECUTE         reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    GET             reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    NULL            reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    IF              reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    CASE            reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    COMMIT          reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    ROLLBACK        reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    INSERT          reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    UPDATE          reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    ALTER           reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    CREATE          reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    DROP            reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    DELETE          reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    TRUNCATE        reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    DECLARE         reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    SELECT          reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    BEGIN           reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    END             reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    ELSE            reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    ELSIF           reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    WHEN            reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)
    PTCOMA          reduce using rule 518 (instrexecute -> EXECUTE FORMAT PARIZQ CSIMPLE select_instr1 CSIMPLE PARDER intotarget usingexpresion .)


state 1302

    (529) instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .

    RAISE           reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    ID              reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    RETURN          reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    EXECUTE         reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    GET             reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    NULL            reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    IF              reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    CASE            reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    COMMIT          reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    ROLLBACK        reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    INSERT          reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    UPDATE          reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    ALTER           reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    CREATE          reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    DROP            reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    DELETE          reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    TRUNCATE        reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    DECLARE         reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    SELECT          reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    BEGIN           reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    END             reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    ELSE            reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    ELSIF           reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)
    WHEN            reduce using rule 529 (instrif -> IF condiciones THEN instrlistabloque ELSE instrlistabloque END IF PTCOMA .)


state 1303

    (531) instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF . PTCOMA

    PTCOMA          shift and go to state 1306


state 1304

    (544) when2 -> WHEN ID BETWEEN ENTERO AND ENTERO THEN instrlistabloque .

    ELSE            reduce using rule 544 (when2 -> WHEN ID BETWEEN ENTERO AND ENTERO THEN instrlistabloque .)
    WHEN            reduce using rule 544 (when2 -> WHEN ID BETWEEN ENTERO AND ENTERO THEN instrlistabloque .)
    END             reduce using rule 544 (when2 -> WHEN ID BETWEEN ENTERO AND ENTERO THEN instrlistabloque .)


state 1305

    (487) raisenotice1 -> RAISE NOTICE CADENASIMPLE COMA OUTERBLOCK PUNTO ID PTCOMA .

    END             reduce using rule 487 (raisenotice1 -> RAISE NOTICE CADENASIMPLE COMA OUTERBLOCK PUNTO ID PTCOMA .)
    RAISE           reduce using rule 487 (raisenotice1 -> RAISE NOTICE CADENASIMPLE COMA OUTERBLOCK PUNTO ID PTCOMA .)
    ID              reduce using rule 487 (raisenotice1 -> RAISE NOTICE CADENASIMPLE COMA OUTERBLOCK PUNTO ID PTCOMA .)


state 1306

    (531) instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .

    RAISE           reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    ID              reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    RETURN          reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    EXECUTE         reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    GET             reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    NULL            reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    IF              reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    CASE            reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    COMMIT          reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    ROLLBACK        reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    INSERT          reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    UPDATE          reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    ALTER           reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    CREATE          reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    DROP            reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    DELETE          reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    TRUNCATE        reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    DECLARE         reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    SELECT          reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    BEGIN           reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    END             reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    ELSE            reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    ELSIF           reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)
    WHEN            reduce using rule 531 (instrif -> IF condiciones THEN instrlistabloque instrelseif ELSE instrlistabloque END IF PTCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 36 resolved as shift
WARNING: shift/reduce conflict for AND in state 588 resolved as shift
WARNING: shift/reduce conflict for OR in state 588 resolved as shift
WARNING: shift/reduce conflict for NULL in state 678 resolved as shift
WARNING: shift/reduce conflict for NOT in state 678 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 702 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 748 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 817 resolved as shift
WARNING: shift/reduce conflict for ID in state 987 resolved as shift
WARNING: reduce/reduce conflict in state 958 resolved using rule (cadenastodas -> cualquiercadena)
WARNING: rejected rule (cadena -> cualquiercadena) in state 958
WARNING: reduce/reduce conflict in state 959 resolved using rule (cadenastodas -> cualquieridentificador)
WARNING: rejected rule (cadena -> cualquieridentificador) in state 959
