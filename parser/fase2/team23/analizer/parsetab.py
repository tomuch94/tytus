
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftR_UNIONR_INTERSECTR_EXCEPTrightR_NOTleftR_ANDR_ORleftR_BETWEENR_ISleftS_IGUALOL_DISTINTODEOL_MAYORQUEOL_MENORQUEOL_MAYORIGUALQUEOL_MENORIGUALQUEleftOC_CONCATENARleftO_SUMAO_RESTAleftO_PRODUCTOO_DIVISIONO_MODULARrightUO_SUMAUO_RESTAleftO_EXPONENTECHARACTER COMMENT DECIMAL ID IDEspecial INTEGER OC_AND OC_CONCATENAR OC_NOT OC_OR OC_SHIFTL OC_SHIFTR OC_XOR OL_DISTINTODE OL_ESIGUAL OL_MAYORIGUALQUE OL_MAYORQUE OL_MENORIGUALQUE OL_MENORQUE O_DIVISION O_EXPONENTE O_MODULAR O_PRODUCTO O_RESTA O_SUMA R_ADD R_ALIAS R_ALL R_ALTER R_AND R_ANY R_AS R_ASC R_BEGIN R_BETWEEN R_BY R_CASE R_CHECK R_COLUMN R_CONCURRENTLY R_CONSTANT R_CONSTRAINT R_COUNT R_CREATE R_CURRENT_DATE R_CURRENT_TIME R_CURRENT_USER R_DATABASE R_DATABASES R_DATE_PART R_DAY R_DECLARE R_DEFAULT R_DELETE R_DESC R_DISTINCT R_DROP R_ELSE R_ELSIF R_END R_ENUM R_EXCEPT R_EXECUTE R_EXISTS R_EXTRACT R_FALSE R_FIRST R_FOR R_FOREIGN R_FROM R_FULL R_FUNCTION R_GROUP R_HASH R_HAVING R_HOUR R_IF R_IN R_INDEX R_INHERITS R_INNER R_INSERT R_INTERSECT R_INTERVAL R_INTO R_IS R_ISNULL R_JOIN R_KEY R_LANGUAGE R_LAST R_LEFT R_LIKE R_LIMIT R_MINUTE R_MODE R_MONTH R_NATURAL R_NOT R_NOTNULL R_NOW R_NULL R_NULLS R_OFFSET R_ON R_OR R_ORDER R_OUTER R_OWNER R_PRIMARY R_PROCEDURE R_PROM R_REFERENCES R_RENAME R_REPLACE R_RETURN R_RETURNS R_RIGHT R_SECOND R_SELECT R_SESSION_USER R_SET R_SHOW R_SOME R_SUM R_SYMMETRIC R_TABLE R_THEN R_TIMESTAMP R_TO R_TRUE R_TRUNCATE R_TYPE R_UNION R_UNIQUE R_UNKNOWN R_UPDATE R_USE R_USING R_VALUES R_WHEN R_WHERE R_YEAR STRING S_COMA S_DOLAR S_DOSPUNTOS S_IGUAL S_PARDER S_PARIZQ S_PUNTO S_PUNTOCOMA T_BIGINT T_BOOLEAN T_CHAR T_CHARACTER T_DATE T_DECIMAL T_DOUBLE T_INTEGER T_MONEY T_NUMERIC T_PRECISION T_REAL T_SMALLINT T_TEXT T_TIME T_VARCHAR T_VARYINGinit : stmtListstmtList : stmtList stmtstmtList : stmt\n    stmt : createStmt  S_PUNTOCOMA\n        | showStmt S_PUNTOCOMA\n        | alterStmt S_PUNTOCOMA\n        | dropStmt S_PUNTOCOMA\n        | insertStmt S_PUNTOCOMA\n        | updateStmt S_PUNTOCOMA\n        | deleteStmt S_PUNTOCOMA\n        | truncateStmt S_PUNTOCOMA\n        | useStmt S_PUNTOCOMA\n        | selectStmt S_PUNTOCOMA\n        | functionStmt\n        | procedureStmt \n        | executePL S_PUNTOCOMA\n        | ifStmt R_END R_IF S_PUNTOCOMA\n        | asignacionStmt S_PUNTOCOMA\n    ifStmt : R_IF S_PARIZQ expresion S_PARDER R_THEN List_body  else_else_ : R_ELSE List_body\n           | Lista_elsif_\n           |\n    \n    Lista_elsif_ : Lista_elsif_ elsif_\n    \n    Lista_elsif_ : elsif_\n    elsif_ : R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body\n\n    \n    List_body : List_body body\n    \n    List_body : body\n    \n    body : createStmt  S_PUNTOCOMA\n        | showStmt S_PUNTOCOMA\n        | alterStmt S_PUNTOCOMA\n        | dropStmt S_PUNTOCOMA\n        | insertStmt S_PUNTOCOMA\n        | updateStmt S_PUNTOCOMA\n        | deleteStmt S_PUNTOCOMA\n        | truncateStmt S_PUNTOCOMA\n        | useStmt S_PUNTOCOMA\n        | selectStmt S_PUNTOCOMA\n        | functionStmt\n        | procedureStmt\n        | executePL S_PUNTOCOMA\n        | ifStmt R_END R_IF S_PUNTOCOMA\n        | asignacionStmt S_PUNTOCOMA\n    \n    idOrString : ID\n    | STRING\n    | CHARACTER\n    createStmt : R_CREATE createBody\n    createBody : createOpts\n    createOpts : unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereClunique_index : R_UNIQUE\n                    | using_hash_index : R_USING R_HASH\n                    | indexNullS : R_NULLS R_FIRST\n    | R_NULLS R_LAST\n    |\n    indexasc_desc : R_DESC\n    | R_ASC\n    |\n    createOpts : R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt \n    createOpts : orReplace R_DATABASE ifNotExists idOrString createOwner createMode\n    \n    orReplace : R_OR R_REPLACE\n    \n    orReplace :\n    \n    createOpts : R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER\n    \n    ifNotExists : R_IF R_NOT R_EXISTS\n    \n    ifNotExists :\n    \n    inheritsOpt : R_INHERITS S_PARIZQ ID S_PARDER\n    \n    inheritsOpt :\n    \n    createOwner : R_OWNER ID\n    | R_OWNER STRING\n    \n    createOwner :  R_OWNER S_IGUAL ID\n    | R_OWNER S_IGUAL STRING\n    \n    createOwner :\n    \n    createMode : R_MODE INTEGER\n    \n    createMode : R_MODE S_IGUAL INTEGER\n    \n    createMode :\n    createTableList : createTableList S_COMA createTablecreateTableList :  createTable\n    createTable :  ID types createColumns\n    \n    createTable : createConstraint\n    | createUnique\n    | createPrimary\n    | createForeign\n    \n    createColumns : colOptionsList\n    \n    createColumns :\n    createConstraint : constrName R_CHECK S_PARIZQ booleanCheck S_PARDERcreateUnique : R_UNIQUE S_PARIZQ idList S_PARDERcreatePrimary : R_PRIMARY R_KEY S_PARIZQ idList S_PARDER\n    createForeign : constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER\n    \n    constrName : R_CONSTRAINT ID\n    \n    constrName :\n    idList : idList S_COMA IDidList : ID\n    types :  ID\n    \n    types : T_SMALLINT\n    | T_INTEGER\n    | T_BIGINT\n    | T_REAL\n    | T_DOUBLE T_PRECISION\n    | T_MONEY\n    | T_TEXT\n    | T_BOOLEAN\n    | R_TIMESTAMP\n    | T_DATE\n    | T_TIME\n    \n    types : T_DECIMAL optParams\n    | T_NUMERIC optParams\n    | T_VARCHAR optParams\n    | T_CHARACTER optParams\n    | T_CHAR optParams\n    \n    types : T_CHARACTER T_VARYING optParams\n    \n    types : R_INTERVAL intervalFields\n    \n    intervalFields :  R_YEAR\n    | R_MONTH\n    | R_DAY\n    | R_HOUR\n    | R_MINUTE\n    | R_SECOND\n    \n    intervalFields :\n    optParams : S_PARIZQ literalList S_PARDERoptParams : colOptionsList : colOptionsList colOptionscolOptionsList : colOptions\n    colOptions : defaultVal\n    | nullOpt\n    | constraintOpt\n    | primaryOpt\n    | referencesOpt\n    defaultVal : R_DEFAULT literal\n    nullOpt : R_NOT R_NULL\n    \n    nullOpt : R_NULL\n    \n    constraintOpt : constrName R_UNIQUE\n    \n    constraintOpt : constrName R_CHECK S_PARIZQ booleanCheck S_PARDER\n    primaryOpt : R_PRIMARY R_KEYreferencesOpt : R_REFERENCES ID\n    expresion : datatype\n              | expBool\n    \n    expresion : S_PARIZQ selectStmt S_PARDER\n    \n    funcCall : ID S_PARIZQ paramsList S_PARDER\n    \n    funcCall : ID S_PARIZQ S_PARDER\n            | R_NOW S_PARIZQ S_PARDER\n    \n    funcCall : R_COUNT S_PARIZQ datatype S_PARDER\n            | R_COUNT S_PARIZQ O_PRODUCTO S_PARDER\n            | R_SUM S_PARIZQ datatype S_PARDER\n            | R_PROM S_PARIZQ datatype S_PARDER\n    \n    extract : R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER\n    \n    extract : R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER\n    \n    timeStamp : R_TIMESTAMP STRING\n          | R_INTERVAL STRING\n    \n    optsExtract : R_YEAR\n                  | R_MONTH\n                  | R_DAY\n                  | R_HOUR\n                  | R_MINUTE\n                  | R_SECOND\n    \n    datePart : R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER\n    \n    dateSource : R_TIMESTAMP STRING\n          | T_DATE STRING\n          | T_TIME STRING\n          | R_INTERVAL STRING\n          | R_NOW S_PARIZQ S_PARDER\n    \n    current : R_CURRENT_DATE\n          | R_CURRENT_TIME\n    \n    current : timeStamp\n    literalList : literalList S_COMA literalliteralList : literal\n    literal :  INTEGER\n    | STRING\n    | DECIMAL\n    | CHARACTER\n    | R_TRUE\n    | R_FALSE\n    | R_NULL\n    paramsList : paramsList S_COMA datatypeparamsList : datatype\n    datatype : datatype O_SUMA datatype\n    | datatype O_RESTA datatype\n    | datatype O_PRODUCTO datatype\n    | datatype O_DIVISION datatype\n    | datatype O_EXPONENTE datatype\n    | datatype O_MODULAR datatype\n    \n    datatype : datatype OC_CONCATENAR datatype\n    \n    datatype : R_CASE caseList optElse R_END\n    \n    caseList : caseList caseWhen\n            | caseWhen\n    caseWhen : R_WHEN expBool R_THEN literaloptElse : R_ELSE literal\n    |\n    \n    datatype : O_RESTA datatype %prec UO_RESTA\n    | O_SUMA datatype %prec UO_SUMA\n    \n    datatype : columnName\n    | literal\n    | funcCall\n    | extract\n    | datePart\n    | current\n    \n    datatype : S_PARIZQ datatype S_PARDER\n    \n    expComp : datatype OL_MENORQUE datatype\n    | datatype OL_MAYORQUE datatype\n    | datatype OL_MAYORIGUALQUE datatype\n    | datatype OL_MENORIGUALQUE datatype\n    | datatype S_IGUAL datatype\n    | datatype OL_DISTINTODE datatype\n    \n    expComp : datatype R_IS R_DISTINCT R_FROM datatype\n    \n    expComp : datatype R_IS R_NOT R_DISTINCT R_FROM datatype\n    \n    expComp :  datatype R_BETWEEN datatype R_AND datatype\n    \n    expComp : datatype R_NOT R_BETWEEN datatype R_AND datatype\n    | datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype\n    \n    expComp : datatype R_ISNULL\n    | datatype R_NOTNULL\n    \n    expComp : datatype R_IS R_NULL\n    | datatype R_IS R_TRUE\n    | datatype R_IS R_FALSE\n    | datatype R_IS R_UNKNOWN\n    \n    expComp : datatype R_IS R_NOT R_NULL\n    | datatype R_IS R_NOT R_TRUE\n    | datatype R_IS R_NOT R_FALSE\n    | datatype R_IS R_NOT R_UNKNOWN\n    \n    expSubq : datatype OL_MENORQUE  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MAYORQUE  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_ESIGUAL  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER\n              | stringExp R_LIKE STRING\n    \n    stringExp : STRING\n          | columnName\n    \n    subqValues : R_ALL\n                  | R_ANY\n                  | R_SOME\n    \n    boolean : R_EXISTS S_PARIZQ selectStmt S_PARDER\n    \n    boolean : datatype R_IN S_PARIZQ selectStmt S_PARDER\n    \n    boolean : datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER\n    \n    boolean : expComp\n            | expSubq\n    \n    expBool : expBool R_AND expBool\n            | expBool R_OR expBool\n    \n    expBool : R_NOT expBool\n    \n    expBool : S_PARIZQ expBool S_PARDER\n    \n    expBool : expBool optBoolPredicate\n    \n    expBool : boolean\n    \n    optBoolPredicate : R_IS R_TRUE\n    | R_IS R_FALSE\n    | R_IS R_UNKNOWN\n    \n    optBoolPredicate : R_IS R_NOT R_TRUE\n    | R_IS R_NOT R_FALSE\n    | R_IS R_NOT R_UNKNOWN\n    \n    columnName : ID\n    \n    columnName : ID S_PUNTO ID\n    \n    booleanCheck : idOrLiteral OL_MENORQUE idOrLiteral\n    | idOrLiteral OL_MAYORQUE idOrLiteral\n    | idOrLiteral OL_MAYORIGUALQUE idOrLiteral\n    | idOrLiteral OL_MENORIGUALQUE idOrLiteral\n    | idOrLiteral S_IGUAL idOrLiteral\n    | idOrLiteral OL_DISTINTODE idOrLiteral\n    \n    booleanCheck : idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral\n    \n    booleanCheck : idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral\n    \n    idOrLiteral : ID\n    | INTEGER\n    | STRING\n    | DECIMAL\n    | CHARACTER\n    | R_TRUE\n    | R_FALSE\n    alterStmt : R_ALTER R_DATABASE idOrString alterDb\n                 | R_ALTER R_TABLE idOrString alterTableList\n                 | R_ALTER R_INDEX ifExists ID R_ALTER ID ID\n                 | R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER\n    alterDb : R_RENAME R_TO idOrString\n    | R_OWNER R_TO ownerOPts\n    \n    ownerOPts : idOrString\n    | R_CURRENT_USER\n    | R_SESSION_USER\n    \n    alterTableList : alterTableList S_COMA alterTable\n    \n    alterTableList : alterTable\n    \n    alterTable : R_ADD alterAdd\n    | R_ALTER alterAlter\n    | R_DROP alterDrop\n    | R_RENAME alterRename\n    \n    alterAdd : R_COLUMN ID types\n    \n    alterAdd : createConstraint\n    | createPrimary\n    | createForeign\n    \n    alterAdd : constrName R_UNIQUE S_PARIZQ ID S_PARDER\n    \n    alterAlter : R_COLUMN ID R_SET nullOpt\n    | R_COLUMN ID R_SET defaultVal\n    | R_COLUMN ID R_TYPE types\n    \n    alterDrop : R_CONSTRAINT ID\n    | R_COLUMN ID\n    \n    alterRename : R_COLUMN ID R_TO ID\n    \n    dropStmt : R_DROP R_TABLE ifExists idOrString\n    | R_DROP R_DATABASE ifExists idOrString\n    | R_DROP R_FUNCTION ifExists idOrString\n    | R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER\n    | R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER\n    | R_DROP R_INDEX concurrenly ifExists idOrString\n    ifExists : R_IF R_EXISTS\n    |\n    concurrenly : R_CONCURRENTLY\n    |\n    selectStmt : R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl joinList whereCl groupByCl limitClselectStmt : selectStmt R_UNION allOpt selectStmtselectStmt : selectStmt R_INTERSECT allOpt selectStmtselectStmt : selectStmt R_EXCEPT allOpt selectStmtselectStmt : S_PARIZQ selectStmt S_PARDER\n    fromCl : R_FROM tableExp\n    selectStmt : R_SELECT selectParamsallOpt : R_ALL\n    |\n    selectParams : O_PRODUCTOselectParams : selectListselectList : selectList S_COMA selectListParams optAliasselectList : selectListParams optAliasselectListParams : expresionselectListParams : ID S_PUNTO O_PRODUCTO\n    optAlias : R_AS idOrString\n    \n    optAlias : idOrString\n    optAlias : tableExp : tableExp S_COMA fromBody tableExp : fromBody fromBody : ID optAliasfromBody : S_PARIZQ selectStmt S_PARDER R_AS idOrStringjoinList : joinList2joinList2 : joinList2 joinCl\n    | joinCljoinCl : joinOpt R_JOIN columnName optAlias R_ON expBool\n    | joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER\n    | R_NATURAL joinOpt R_JOIN columnName optAlias\n    nameList : nameList S_COMA columnName\n    | columnName\n    joinOpt : R_INNER\n    | R_LEFT\n    | R_LEFT R_OUTER\n    | R_RIGHT\n    | R_RIGHT R_OUTER\n    | R_FULL\n    | R_FULL R_OUTER\n    whereCl : R_WHERE expBoolwhereCl : \n    groupByCl : R_GROUP R_BY groupList havingCl\n    \n    groupByCl :\n    \n    groupList :  groupList S_COMA columnName\n            | groupList S_COMA INTEGER\n    \n    groupList :  columnName\n              | INTEGER\n    havingCl : R_HAVING expBoolhavingCl :orderByCl : R_ORDER R_BY orderListorderByCl : orderList : orderList S_COMA orderByElemorderList : orderByElem\n    orderByElem : columnName orderOpts orderNull\n                | INTEGER orderOpts orderNull\n    orderOpts : R_ASC\n                 | R_DESC\n    orderOpts : orderNull : R_NULL R_FIRST\n                 | R_NULL R_LASTorderNull : limitCl : R_LIMIT INTEGER offsetLimit\n               | R_LIMIT R_ALL offsetLimit\n    limitCl :offsetLimit : R_OFFSET INTEGERoffsetLimit :insertStmt : R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDERparamsColumn : S_PARIZQ idList S_PARDERparamsColumn :updateStmt : R_UPDATE fromBody R_SET updateCols whereClupdateCols : updateCols S_COMA updateValsupdateCols : updateVals updateVals : ID S_IGUAL updateExpupdateExp : datatype\n    | R_DEFAULT\n    deleteStmt : R_DELETE fromCl whereCltruncateStmt : R_TRUNCATE tableOpt IDtableOpt : R_TABLE\n    |\n    showStmt : R_SHOW R_DATABASES likeOptlikeOpt : R_LIKE STRING\n    |\n    useStmt : R_USE IDfunctionStmt : R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunctionfunctionStmt : R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunctionbloqueFunction : declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEndparams_list : params_list S_COMA param_itemparams_list : param_itemparam_item : ID typesreturnsStmt : R_RETURNS typesreturnsStmt : declareStmt : R_DECLARE declaracion_listdeclareStmt : declaracion_list : declaracion_list declaracion_itemdeclaracion_list : declaracion_itemdeclaracion_item : ID constant_opt types null_opt default_item S_PUNTOCOMAdeclaracion_item : ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMAconstant_opt : R_CONSTANTconstant_opt : null_opt : R_NOT R_NULLnull_opt : default_opt : R_DEFAULT  \n                   | S_DOSPUNTOS S_IGUAL\n                   | S_IGUALdefault_item : default_opt expresiondefault_item : alias_declaracion : ID \n                         | IDEspecialbeginStmt : beginStmt beginItembeginStmt : beginItembeginItem : stmt\n                 | returnStmt S_PUNTOCOMA\n                 | asignacionStmt S_PUNTOCOMAreturnStmt : R_RETURN expresionlabelEnd : labelEnd : S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMAasignacionStmt : ID S_DOSPUNTOS S_IGUAL expresionasignacionStmt : ID S_IGUAL expresionprocedureStmt : R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedureprocedureStmt : R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedureendProcedure : endProcedure : R_END S_PUNTOCOMAdolarEndProcedure : dolarEndProcedure : S_DOLAR S_DOLARbeginWord : beginWord : R_BEGINlanguageProcedure : R_LANGUAGE IDlanguageProcedure : executePL : R_EXECUTE funcCallexecuteParams : executeParams S_COMA executeItemexecuteParams : executeItemexecuteItem : expresion'
    
_lr_action_items = {'R_CREATE':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,228,346,436,437,448,449,560,561,565,566,567,568,569,570,571,572,573,574,575,577,665,748,803,807,834,835,836,840,841,842,857,858,859,860,868,869,879,880,881,885,886,891,897,899,900,902,911,912,920,],[20,20,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,20,20,-27,-38,-39,-26,20,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-42,20,-41,-400,-440,20,-399,20,-440,20,-441,20,20,-425,-426,20,20,-424,-427,-18,20,-438,-430,-438,-435,-437,-401,-434,-439,-431,]),'R_SHOW':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,228,346,436,437,448,449,560,561,565,566,567,568,569,570,571,572,573,574,575,577,665,748,803,807,834,835,836,840,841,842,857,858,859,860,868,869,879,880,881,885,886,891,897,899,900,902,911,912,920,],[21,21,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,21,21,-27,-38,-39,-26,21,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-42,21,-41,-400,-440,21,-399,21,-440,21,-441,21,21,-425,-426,21,21,-424,-427,-18,21,-438,-430,-438,-435,-437,-401,-434,-439,-431,]),'R_ALTER':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,144,145,146,147,228,248,346,361,436,437,448,449,560,561,565,566,567,568,569,570,571,572,573,574,575,577,665,748,803,807,834,835,836,840,841,842,857,858,859,860,868,869,879,880,881,885,886,891,897,899,900,902,911,912,920,],[22,22,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-43,-44,-45,242,-17,375,22,242,22,-27,-38,-39,-26,22,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-42,22,-41,-400,-440,22,-399,22,-440,22,-441,22,22,-425,-426,22,22,-424,-427,-18,22,-438,-430,-438,-435,-437,-401,-434,-439,-431,]),'R_DROP':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,144,145,146,147,228,346,361,436,437,448,449,560,561,565,566,567,568,569,570,571,572,573,574,575,577,665,748,803,807,834,835,836,840,841,842,857,858,859,860,868,869,879,880,881,885,886,891,897,899,900,902,911,912,920,],[24,24,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-43,-44,-45,246,-17,24,246,24,-27,-38,-39,-26,24,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-42,24,-41,-400,-440,24,-399,24,-440,24,-441,24,24,-425,-426,24,24,-424,-427,-18,24,-438,-430,-438,-435,-437,-401,-434,-439,-431,]),'R_INSERT':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,228,346,436,437,448,449,560,561,565,566,567,568,569,570,571,572,573,574,575,577,665,748,803,807,834,835,836,840,841,842,857,858,859,860,868,869,879,880,881,885,886,891,897,899,900,902,911,912,920,],[26,26,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,26,26,-27,-38,-39,-26,26,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-42,26,-41,-400,-440,26,-399,26,-440,26,-441,26,26,-425,-426,26,26,-424,-427,-18,26,-438,-430,-438,-435,-437,-401,-434,-439,-431,]),'R_UPDATE':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,228,346,436,437,448,449,560,561,565,566,567,568,569,570,571,572,573,574,575,577,665,748,803,807,834,835,836,840,841,842,857,858,859,860,868,869,879,880,881,885,886,891,897,899,900,902,911,912,920,],[27,27,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,27,27,-27,-38,-39,-26,27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-42,27,-41,-400,-440,27,-399,27,-440,27,-441,27,27,-425,-426,27,27,-424,-427,-18,27,-438,-430,-438,-435,-437,-401,-434,-439,-431,]),'R_DELETE':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,228,346,436,437,448,449,560,561,565,566,567,568,569,570,571,572,573,574,575,577,665,748,803,807,834,835,836,840,841,842,857,858,859,860,868,869,879,880,881,885,886,891,897,899,900,902,911,912,920,],[28,28,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,28,28,-27,-38,-39,-26,28,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-42,28,-41,-400,-440,28,-399,28,-440,28,-441,28,28,-425,-426,28,28,-424,-427,-18,28,-438,-430,-438,-435,-437,-401,-434,-439,-431,]),'R_TRUNCATE':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,228,346,436,437,448,449,560,561,565,566,567,568,569,570,571,572,573,574,575,577,665,748,803,807,834,835,836,840,841,842,857,858,859,860,868,869,879,880,881,885,886,891,897,899,900,902,911,912,920,],[29,29,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,29,29,-27,-38,-39,-26,29,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-42,29,-41,-400,-440,29,-399,29,-440,29,-441,29,29,-425,-426,29,29,-424,-427,-18,29,-438,-430,-438,-435,-437,-401,-434,-439,-431,]),'R_USE':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,228,346,436,437,448,449,560,561,565,566,567,568,569,570,571,572,573,574,575,577,665,748,803,807,834,835,836,840,841,842,857,858,859,860,868,869,879,880,881,885,886,891,897,899,900,902,911,912,920,],[30,30,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,30,30,-27,-38,-39,-26,30,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-42,30,-41,-400,-440,30,-399,30,-440,30,-441,30,30,-425,-426,30,30,-424,-427,-18,30,-438,-430,-438,-435,-437,-401,-434,-439,-431,]),'R_SELECT':([0,2,3,14,15,25,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,75,90,126,127,128,129,200,221,228,289,346,401,403,404,405,406,407,420,421,422,436,437,448,449,541,542,543,544,560,561,565,566,567,568,569,570,571,572,573,574,575,577,644,645,646,647,665,734,744,748,791,793,799,803,807,834,835,836,840,841,842,857,858,859,860,868,869,879,880,881,885,886,891,897,899,900,902,911,912,920,],[31,31,-3,-14,-15,31,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-326,-326,-326,-16,-18,31,31,31,-325,31,31,31,31,-17,31,31,31,31,31,31,31,31,31,31,31,31,-27,-38,-39,31,31,31,31,-26,31,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-42,31,31,31,31,31,31,31,-41,31,31,31,-400,-440,31,-399,31,-440,31,-441,31,31,-425,-426,31,31,-424,-427,-18,31,-438,-430,-438,-435,-437,-401,-434,-439,-431,]),'S_PARIZQ':([0,2,3,14,15,18,25,27,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,65,75,77,81,87,90,91,92,100,109,110,111,112,113,115,118,125,126,127,128,129,132,133,144,145,146,150,159,166,172,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,192,196,197,200,206,211,213,216,217,218,221,228,232,235,253,254,264,289,290,291,293,294,295,296,298,300,302,305,313,314,315,316,346,379,384,399,401,403,404,405,406,407,408,414,415,416,417,418,420,421,422,436,437,448,449,466,467,468,469,470,480,489,490,499,500,502,510,529,536,537,538,539,540,541,542,543,544,546,558,560,561,564,565,566,567,568,569,570,571,572,573,574,575,577,584,605,611,617,642,644,645,646,647,652,665,667,682,684,728,730,731,733,734,735,744,745,748,762,791,793,799,803,807,834,835,836,840,841,842,857,858,859,860,863,868,869,876,879,880,881,885,886,891,897,899,900,902,905,906,908,911,912,917,920,],[25,25,-3,-14,-15,49,25,75,90,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-326,-326,-326,-16,90,-18,90,25,75,90,175,200,206,206,213,215,216,217,218,219,220,221,175,25,-325,25,25,175,231,-43,-44,-45,90,257,213,90,206,206,206,206,206,206,206,206,289,206,206,206,206,206,206,206,213,213,200,206,213,213,206,206,206,25,-17,351,354,376,377,75,25,401,206,403,-242,-243,-244,404,405,406,407,206,420,421,422,25,510,206,206,25,25,25,25,25,25,206,541,542,543,544,206,25,25,25,25,-27,-38,-39,580,580,580,580,580,-52,610,611,615,616,618,206,206,206,644,645,646,647,25,25,25,25,206,664,-26,25,667,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-42,580,681,206,715,734,25,25,25,25,744,25,90,-51,757,213,213,790,791,25,793,25,799,-41,812,25,25,25,-400,-440,25,-399,25,-440,25,-441,25,25,-425,-426,90,25,25,890,-424,-427,-18,25,-438,-430,-438,-435,-437,-401,90,-417,-419,-434,-439,-418,-431,]),'R_EXECUTE':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,228,346,436,437,448,449,560,561,565,566,567,568,569,570,571,572,573,574,575,577,665,748,803,807,834,835,836,840,841,842,857,858,859,860,868,869,879,880,881,885,886,891,897,899,900,902,911,912,920,],[32,32,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,32,32,-27,-38,-39,-26,32,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-42,32,-41,-400,-440,32,-399,32,-440,32,-441,32,32,-425,-426,32,32,-424,-427,-18,32,-438,-430,-438,-435,-437,-401,-434,-439,-431,]),'R_IF':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,48,50,57,58,63,66,67,68,69,70,135,156,157,228,346,436,437,448,449,560,561,565,566,567,568,569,570,571,572,573,574,575,576,577,665,748,803,807,834,835,836,840,841,842,857,858,859,860,868,869,879,880,881,885,886,891,897,899,900,902,911,912,920,],[18,18,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,130,-18,139,139,149,149,149,149,149,-314,139,149,-313,-17,18,18,-27,-38,-39,-26,18,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,668,-42,18,-41,-400,-440,18,-399,18,-440,18,-441,18,18,-425,-426,18,18,-424,-427,-18,18,-438,-430,-438,-435,-437,-401,-434,-439,-431,]),'ID':([0,2,3,14,15,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,47,49,50,52,57,58,61,62,63,65,66,67,68,69,70,72,74,77,78,79,81,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,116,117,119,120,132,134,135,137,138,140,148,150,152,153,154,155,156,157,160,162,166,172,174,175,176,177,178,179,180,181,182,185,186,187,188,189,190,192,193,194,196,197,198,200,204,205,206,207,208,211,212,213,216,217,218,222,223,228,230,231,233,249,255,257,264,276,277,278,280,282,283,284,285,286,287,288,291,292,297,299,301,303,304,308,309,310,311,313,317,318,319,320,321,323,324,325,331,345,346,347,351,353,354,355,357,358,360,363,369,371,372,374,375,383,384,385,392,398,399,408,410,411,412,413,418,423,424,425,426,429,430,431,432,433,435,436,437,448,449,473,475,479,483,498,507,510,512,521,523,524,525,527,529,535,536,545,546,560,561,565,566,567,568,569,570,571,572,573,574,575,577,599,604,608,610,611,613,615,616,618,619,627,634,635,636,637,638,639,640,641,643,653,654,655,656,657,658,659,665,667,681,699,715,727,728,730,740,741,742,743,748,757,769,770,771,772,773,774,781,790,794,795,796,797,803,805,807,812,830,832,834,835,836,837,838,839,840,841,842,847,849,853,854,855,856,857,858,859,860,863,864,865,867,868,869,875,879,880,881,884,885,886,890,891,897,899,900,902,905,906,908,910,911,912,915,917,918,920,],[23,23,-3,-14,-15,74,-394,80,87,125,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,132,-18,133,-65,-65,144,144,-312,132,-312,-312,-312,-312,-314,159,144,74,169,-393,87,144,-331,-262,-135,-136,132,132,132,-190,-191,-192,-193,-194,-195,132,-255,-166,-167,-168,-169,-170,-171,-172,-163,-161,-162,-248,-249,-262,232,-65,234,144,237,248,132,144,144,144,144,-312,-313,260,144,132,87,277,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,-208,-209,132,132,-254,132,-189,-190,132,-167,-188,132,-252,132,132,132,132,-147,-148,-17,277,347,144,-311,144,381,74,144,-263,-332,-139,-175,-176,-177,-178,-179,-180,-181,132,-197,-198,-199,-200,-201,-202,-210,-211,-212,-213,132,-250,-251,-256,-257,-258,-137,-196,-253,-140,-239,23,453,347,480,483,-64,144,144,496,498,503,504,505,506,507,260,132,144,524,-138,132,132,-214,-215,-216,-217,132,-259,-260,-261,-182,-141,-142,-143,-144,524,-245,23,-27,-38,-39,347,453,602,453,453,620,132,623,524,144,-262,524,-246,132,-203,132,-205,132,-26,23,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-40,-42,676,679,483,381,132,453,705,708,381,717,524,144,-247,-206,-218,-219,-220,-221,-223,-204,-207,-231,-232,-222,-145,-146,-155,23,132,381,764,381,524,132,132,-229,-233,-235,-237,-41,811,708,708,708,708,708,708,524,524,-230,-234,-236,-238,-400,839,-440,708,-227,-224,23,-399,23,839,-410,-414,-440,23,-441,708,876,524,-225,-228,-226,23,23,-425,-426,132,-409,453,-413,23,23,708,-424,-427,-18,894,23,-438,381,-430,-438,-435,-437,-401,132,-417,-419,-412,-434,-439,-411,-418,919,-431,]),'$endspecial':([884,],[896,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'stmtList':([0,],[2,]),'stmt':([0,2,836,841,858,868,869,885,],[3,33,860,860,860,860,860,860,]),'createStmt':([0,2,346,436,561,665,834,836,841,857,858,868,869,885,],[4,4,438,438,438,438,438,4,4,438,4,4,4,4,]),'showStmt':([0,2,346,436,561,665,834,836,841,857,858,868,869,885,],[5,5,439,439,439,439,439,5,5,439,5,5,5,5,]),'alterStmt':([0,2,346,436,561,665,834,836,841,857,858,868,869,885,],[6,6,440,440,440,440,440,6,6,440,6,6,6,6,]),'dropStmt':([0,2,346,436,561,665,834,836,841,857,858,868,869,885,],[7,7,441,441,441,441,441,7,7,441,7,7,7,7,]),'insertStmt':([0,2,346,436,561,665,834,836,841,857,858,868,869,885,],[8,8,442,442,442,442,442,8,8,442,8,8,8,8,]),'updateStmt':([0,2,346,436,561,665,834,836,841,857,858,868,869,885,],[9,9,443,443,443,443,443,9,9,443,9,9,9,9,]),'deleteStmt':([0,2,346,436,561,665,834,836,841,857,858,868,869,885,],[10,10,444,444,444,444,444,10,10,444,10,10,10,10,]),'truncateStmt':([0,2,346,436,561,665,834,836,841,857,858,868,869,885,],[11,11,445,445,445,445,445,11,11,445,11,11,11,11,]),'useStmt':([0,2,346,436,561,665,834,836,841,857,858,868,869,885,],[12,12,446,446,446,446,446,12,12,446,12,12,12,12,]),'selectStmt':([0,2,25,75,90,126,128,129,200,221,289,346,401,403,404,405,406,407,420,421,422,436,541,542,543,544,561,644,645,646,647,665,734,744,791,793,799,834,836,841,857,858,868,869,885,],[13,13,71,164,201,225,226,227,71,344,400,447,528,530,531,532,533,534,547,548,549,447,648,649,650,651,447,736,737,738,739,447,792,798,829,831,833,447,13,13,447,13,13,13,13,]),'functionStmt':([0,2,346,436,561,665,834,836,841,857,858,868,869,885,],[14,14,448,448,448,448,448,14,14,448,14,14,14,14,]),'procedureStmt':([0,2,346,436,561,665,834,836,841,857,858,868,869,885,],[15,15,449,449,449,449,449,15,15,449,15,15,15,15,]),'executePL':([0,2,346,436,561,665,834,836,841,857,858,868,869,885,],[16,16,450,450,450,450,450,16,16,450,16,16,16,16,]),'ifStmt':([0,2,346,436,561,665,834,836,841,857,858,868,869,885,],[17,17,451,451,451,451,451,17,17,451,17,17,17,17,]),'asignacionStmt':([0,2,346,436,561,665,834,836,841,857,858,868,869,885,],[19,19,452,452,452,452,452,862,862,452,862,862,862,862,]),'createBody':([20,],[51,]),'orReplace':([20,],[53,]),'createOpts':([20,],[54,]),'unique_index':([20,],[56,]),'fromBody':([27,77,264,],[73,168,386,]),'fromCl':([28,82,170,],[76,171,265,]),'tableOpt':([29,],[78,]),'selectParams':([31,81,],[82,170,]),'selectList':([31,81,],[84,84,]),'selectListParams':([31,81,172,],[85,85,276,]),'expresion':([31,49,65,81,150,172,667,863,905,],[86,131,151,86,250,86,747,882,916,]),'datatype':([31,49,65,81,90,91,92,100,150,166,172,175,176,177,178,179,180,181,182,185,186,187,188,189,190,192,196,197,200,206,211,213,216,217,218,291,313,384,399,408,418,510,529,536,546,611,667,728,730,863,905,],[88,88,88,88,202,204,208,214,88,214,88,281,282,283,284,285,286,287,288,292,297,299,301,303,304,312,214,214,202,326,214,202,332,334,335,402,419,515,526,535,545,281,636,643,653,281,88,214,214,88,88,]),'expBool':([31,49,65,81,90,100,150,166,172,196,197,200,211,213,667,728,730,863,905,],[89,89,89,89,203,212,89,263,89,317,318,203,330,203,89,788,789,89,89,]),'columnName':([31,49,65,81,90,91,92,100,150,166,172,175,176,177,178,179,180,181,182,185,186,187,188,189,190,192,196,197,200,206,211,213,216,217,218,291,313,384,392,399,408,418,433,510,521,525,529,536,546,611,627,667,727,728,730,781,790,853,863,905,],[94,94,94,94,94,205,205,94,94,94,94,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,94,94,94,205,94,94,205,205,205,205,205,205,523,205,205,205,552,205,629,634,205,205,205,205,724,94,786,94,94,724,827,877,94,94,]),'literal':([31,49,65,81,90,91,92,100,150,166,172,175,176,177,178,179,180,181,182,185,186,187,188,189,190,192,196,197,200,206,211,213,216,217,218,291,313,329,384,399,408,418,428,510,529,536,546,580,611,667,694,728,730,750,863,905,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,427,95,95,95,95,550,95,95,95,95,670,95,95,759,95,95,801,95,95,]),'funcCall':([31,32,49,65,81,90,91,92,100,150,166,172,175,176,177,178,179,180,181,182,185,186,187,188,189,190,192,196,197,200,206,211,213,216,217,218,291,313,384,399,408,418,510,529,536,546,611,667,728,730,863,905,],[96,124,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'extract':([31,49,65,81,90,91,92,100,150,166,172,175,176,177,178,179,180,181,182,185,186,187,188,189,190,192,196,197,200,206,211,213,216,217,218,291,313,384,399,408,418,510,529,536,546,611,667,728,730,863,905,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'datePart':([31,49,65,81,90,91,92,100,150,166,172,175,176,177,178,179,180,181,182,185,186,187,188,189,190,192,196,197,200,206,211,213,216,217,218,291,313,384,399,408,418,510,529,536,546,611,667,728,730,863,905,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'current':([31,49,65,81,90,91,92,100,150,166,172,175,176,177,178,179,180,181,182,185,186,187,188,189,190,192,196,197,200,206,211,213,216,217,218,291,313,384,399,408,418,510,529,536,546,611,667,728,730,863,905,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'boolean':([31,49,65,81,90,100,150,166,172,196,197,200,211,213,667,728,730,863,905,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'timeStamp':([31,49,65,81,90,91,92,100,150,166,172,175,176,177,178,179,180,181,182,185,186,187,188,189,190,192,196,197,200,206,211,213,216,217,218,291,313,384,399,408,418,433,510,529,536,546,611,667,728,730,863,905,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,551,114,114,114,114,114,114,114,114,114,114,]),'expComp':([31,49,65,81,90,100,150,166,172,196,197,200,211,213,667,728,730,863,905,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'expSubq':([31,49,65,81,90,100,150,166,172,196,197,200,211,213,667,728,730,863,905,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'stringExp':([31,49,65,81,90,100,150,166,172,196,197,200,211,213,667,728,730,863,905,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'allOpt':([44,45,46,],[126,128,129,]),'ifNotExists':([57,58,135,],[138,140,233,]),'likeOpt':([60,],[141,]),'idOrString':([61,62,74,85,138,152,153,154,155,162,233,255,276,357,358,385,523,634,],[143,147,163,163,235,251,252,253,254,261,352,378,163,491,493,517,163,163,]),'ifExists':([63,66,67,68,69,156,],[148,152,153,154,155,255,]),'concurrenly':([70,],[156,]),'optAlias':([74,85,276,523,634,],[161,173,397,633,732,]),'whereCl':([76,171,258,265,267,870,],[165,266,382,387,390,888,]),'tableExp':([77,],[167,]),'optBoolPredicate':([89,203,212,263,317,318,330,788,789,],[198,198,198,198,198,198,198,198,198,]),'caseList':([93,],[209,]),'caseWhen':([93,209,],[210,328,]),'alterDb':([143,],[239,]),'alterTableList':([147,],[243,]),'alterTable':([147,361,],[244,497,]),'paramsColumn':([159,],[256,]),'updateCols':([160,],[258,]),'updateVals':([160,383,],[259,513,]),'joinList':([171,],[267,]),'joinList2':([171,],[268,]),'joinCl':([171,268,],[269,391,]),'joinOpt':([171,268,271,],[270,270,393,]),'paramsList':([175,510,611,],[279,622,701,]),'subqValues':([185,186,187,188,190,193,194,195,308,309,310,311,410,411,412,413,535,545,636,643,653,],[293,298,300,302,305,314,315,316,414,415,416,417,537,538,539,540,642,652,733,735,745,]),'optElse':([209,],[327,]),'optsExtract':([219,],[336,]),'params_list':([231,351,],[348,476,]),'param_item':([231,351,473,],[350,350,594,]),'alterAlter':([242,],[359,]),'alterAdd':([245,],[362,]),'createConstraint':([245,354,608,],[364,484,484,]),'createPrimary':([245,354,608,],[365,486,486,]),'createForeign':([245,354,608,],[366,487,487,]),'constrName':([245,354,608,609,687,],[367,488,488,697,697,]),'alterDrop':([246,],[370,]),'alterRename':([247,],[373,]),'idList':([257,610,618,681,715,890,],[380,700,716,756,776,901,]),'groupByCl':([266,387,390,],[388,518,522,]),'List_body':([346,561,834,],[436,665,857,]),'body':([346,436,561,665,834,857,],[437,560,437,560,437,560,]),'types':([347,475,483,498,613,865,],[454,596,609,614,704,883,]),'returnsStmt':([349,472,],[474,593,]),'createOwner':([352,],[478,]),'createTableList':([354,],[481,]),'createTable':([354,608,],[482,685,]),'createUnique':([354,608,],[485,485,]),'ownerOPts':([358,],[492,]),'updateExp':([384,],[514,]),'orderByCl':([388,518,522,],[519,624,631,]),'dateSource':([434,],[553,]),'else_':([436,],[559,]),'Lista_elsif_':([436,],[562,]),'elsif_':([436,562,],[563,666,]),'optParams':([466,467,468,469,470,584,],[579,581,582,583,585,671,]),'intervalFields':([471,],[586,]),'languageProcedure':([477,597,],[598,674,]),'createMode':([478,],[600,]),'using_hash_index':([480,],[605,]),'limitCl':([519,522,624,631,],[625,632,719,729,]),'groupList':([521,],[628,]),'literalList':([580,],[669,]),'inheritsOpt':([607,],[683,]),'createColumns':([609,],[686,]),'colOptionsList':([609,],[687,]),'colOptions':([609,687,],[688,758,]),'defaultVal':([609,612,687,],[689,703,689,]),'nullOpt':([609,612,687,],[690,702,690,]),'constraintOpt':([609,687,],[691,691,]),'primaryOpt':([609,687,],[692,692,]),'referencesOpt':([609,687,],[693,693,]),'booleanCheck':([616,812,],[706,846,]),'idOrLiteral':([616,769,770,771,772,773,774,812,847,875,],[707,813,814,815,816,817,818,707,874,889,]),'orderList':([627,],[722,]),'orderByElem':([627,781,],[723,823,]),'havingCl':([628,],[726,]),'offsetLimit':([720,721,],[778,780,]),'orderOpts':([724,725,],[782,785,]),'bloqueFunction':([752,802,],[803,835,]),'declareStmt':([752,802,],[804,804,]),'indexasc_desc':([756,],[808,]),'orderNull':([782,785,],[824,826,]),'nameList':([790,],[828,]),'declaracion_list':([805,],[837,]),'declaracion_item':([805,837,],[838,864,]),'beginWord':([807,840,],[841,868,]),'indexNullS':([808,],[843,]),'beginStmt':([836,841,868,],[858,869,885,]),'beginItem':([836,841,858,868,869,885,],[859,859,879,859,879,879,]),'returnStmt':([836,841,858,868,869,885,],[861,861,861,861,861,861,]),'constant_opt':([839,],[865,]),'endProcedure':([869,885,],[886,897,]),'null_opt':([883,],[892,]),'alias_declaracion':([884,],[895,]),'dolarEndProcedure':([886,897,],[899,911,]),'labelEnd':([891,],[902,]),'default_item':([892,],[904,]),'default_opt':([892,],[905,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> stmtList','init',1,'p_init','grammar.py',54),
  ('stmtList -> stmtList stmt','stmtList',2,'p_stmt_list','grammar.py',62),
  ('stmtList -> stmt','stmtList',1,'p_stmt_u','grammar.py',69),
  ('stmt -> createStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',76),
  ('stmt -> showStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',77),
  ('stmt -> alterStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',78),
  ('stmt -> dropStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',79),
  ('stmt -> insertStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',80),
  ('stmt -> updateStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',81),
  ('stmt -> deleteStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',82),
  ('stmt -> truncateStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',83),
  ('stmt -> useStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',84),
  ('stmt -> selectStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',85),
  ('stmt -> functionStmt','stmt',1,'p_stmt','grammar.py',86),
  ('stmt -> procedureStmt','stmt',1,'p_stmt','grammar.py',87),
  ('stmt -> executePL S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',88),
  ('stmt -> ifStmt R_END R_IF S_PUNTOCOMA','stmt',4,'p_stmt','grammar.py',89),
  ('stmt -> asignacionStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',90),
  ('ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_','ifStmt',7,'p_ifStmt','grammar.py',102),
  ('else_ -> R_ELSE List_body','else_',2,'p_els_','grammar.py',108),
  ('else_ -> Lista_elsif_','else_',1,'p_els_','grammar.py',109),
  ('else_ -> <empty>','else_',0,'p_els_','grammar.py',110),
  ('Lista_elsif_ -> Lista_elsif_ elsif_','Lista_elsif_',2,'p_Lista_elsif_','grammar.py',124),
  ('Lista_elsif_ -> elsif_','Lista_elsif_',1,'p_aux_Lista_elsif_','grammar.py',132),
  ('elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body','elsif_',6,'p_elsif_','grammar.py',138),
  ('List_body -> List_body body','List_body',2,'p_lista_cuerpo','grammar.py',151),
  ('List_body -> body','List_body',1,'p_aux_lista_cuerpo','grammar.py',159),
  ('body -> createStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',166),
  ('body -> showStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',167),
  ('body -> alterStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',168),
  ('body -> dropStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',169),
  ('body -> insertStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',170),
  ('body -> updateStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',171),
  ('body -> deleteStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',172),
  ('body -> truncateStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',173),
  ('body -> useStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',174),
  ('body -> selectStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',175),
  ('body -> functionStmt','body',1,'p_body','grammar.py',176),
  ('body -> procedureStmt','body',1,'p_body','grammar.py',177),
  ('body -> executePL S_PUNTOCOMA','body',2,'p_body','grammar.py',178),
  ('body -> ifStmt R_END R_IF S_PUNTOCOMA','body',4,'p_body','grammar.py',179),
  ('body -> asignacionStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',180),
  ('idOrString -> ID','idOrString',1,'p_id_string','grammar.py',194),
  ('idOrString -> STRING','idOrString',1,'p_id_string','grammar.py',195),
  ('idOrString -> CHARACTER','idOrString',1,'p_id_string','grammar.py',196),
  ('createStmt -> R_CREATE createBody','createStmt',2,'p_createstmt','grammar.py',203),
  ('createBody -> createOpts','createBody',1,'p_createbody','grammar.py',210),
  ('createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl','createOpts',12,'p_createopts_index','grammar.py',217),
  ('unique_index -> R_UNIQUE','unique_index',1,'p_unique_index','grammar.py',222),
  ('unique_index -> <empty>','unique_index',0,'p_unique_index','grammar.py',223),
  ('using_hash_index -> R_USING R_HASH','using_hash_index',2,'p_using_hash_index','grammar.py',233),
  ('using_hash_index -> <empty>','using_hash_index',0,'p_using_hash_index','grammar.py',234),
  ('indexNullS -> R_NULLS R_FIRST','indexNullS',2,'p_orderNullS','grammar.py',244),
  ('indexNullS -> R_NULLS R_LAST','indexNullS',2,'p_orderNullS','grammar.py',245),
  ('indexNullS -> <empty>','indexNullS',0,'p_orderNullS','grammar.py',246),
  ('indexasc_desc -> R_DESC','indexasc_desc',1,'p_indexasc_desc','grammar.py',258),
  ('indexasc_desc -> R_ASC','indexasc_desc',1,'p_indexasc_desc','grammar.py',259),
  ('indexasc_desc -> <empty>','indexasc_desc',0,'p_indexasc_desc','grammar.py',260),
  ('createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt','createOpts',7,'p_createopts_table','grammar.py',277),
  ('createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode','createOpts',6,'p_createopts_db','grammar.py',284),
  ('orReplace -> R_OR R_REPLACE','orReplace',2,'p_replace_true','grammar.py',292),
  ('orReplace -> <empty>','orReplace',0,'p_replace_false','grammar.py',300),
  ('createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER','createOpts',8,'p_createopts_type','grammar.py',308),
  ('ifNotExists -> R_IF R_NOT R_EXISTS','ifNotExists',3,'p_ifnotexists_true','grammar.py',316),
  ('ifNotExists -> <empty>','ifNotExists',0,'p_ifnotexists_false','grammar.py',324),
  ('inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER','inheritsOpt',4,'p_inheritsOpt','grammar.py',332),
  ('inheritsOpt -> <empty>','inheritsOpt',0,'p_inheritsOpt_none','grammar.py',340),
  ('createOwner -> R_OWNER ID','createOwner',2,'p_createowner','grammar.py',348),
  ('createOwner -> R_OWNER STRING','createOwner',2,'p_createowner','grammar.py',349),
  ('createOwner -> R_OWNER S_IGUAL ID','createOwner',3,'p_createowner_asg','grammar.py',357),
  ('createOwner -> R_OWNER S_IGUAL STRING','createOwner',3,'p_createowner_asg','grammar.py',358),
  ('createOwner -> <empty>','createOwner',0,'p_createowner_none','grammar.py',366),
  ('createMode -> R_MODE INTEGER','createMode',2,'p_createmode','grammar.py',374),
  ('createMode -> R_MODE S_IGUAL INTEGER','createMode',3,'p_createMode_asg','grammar.py',382),
  ('createMode -> <empty>','createMode',0,'p_createmode_none','grammar.py',390),
  ('createTableList -> createTableList S_COMA createTable','createTableList',3,'p_createtable_list','grammar.py',397),
  ('createTableList -> createTable','createTableList',1,'p_createtable_u','grammar.py',404),
  ('createTable -> ID types createColumns','createTable',3,'p_createTable_id','grammar.py',411),
  ('createTable -> createConstraint','createTable',1,'p_createTable','grammar.py',419),
  ('createTable -> createUnique','createTable',1,'p_createTable','grammar.py',420),
  ('createTable -> createPrimary','createTable',1,'p_createTable','grammar.py',421),
  ('createTable -> createForeign','createTable',1,'p_createTable','grammar.py',422),
  ('createColumns -> colOptionsList','createColumns',1,'p_createColumNs','grammar.py',430),
  ('createColumns -> <empty>','createColumns',0,'p_createColumNs_none','grammar.py',438),
  ('createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER','createConstraint',5,'p_createConstraint','grammar.py',445),
  ('createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER','createUnique',4,'p_createUnique','grammar.py',451),
  ('createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER','createPrimary',5,'p_createPrimary','grammar.py',457),
  ('createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER','createForeign',11,'p_createForeign','grammar.py',464),
  ('constrName -> R_CONSTRAINT ID','constrName',2,'p_constrName','grammar.py',472),
  ('constrName -> <empty>','constrName',0,'p_constrName_none','grammar.py',480),
  ('idList -> idList S_COMA ID','idList',3,'p_id_list','grammar.py',487),
  ('idList -> ID','idList',1,'p_id_u','grammar.py',494),
  ('types -> ID','types',1,'p_types','grammar.py',501),
  ('types -> T_SMALLINT','types',1,'p_types_simple','grammar.py',509),
  ('types -> T_INTEGER','types',1,'p_types_simple','grammar.py',510),
  ('types -> T_BIGINT','types',1,'p_types_simple','grammar.py',511),
  ('types -> T_REAL','types',1,'p_types_simple','grammar.py',512),
  ('types -> T_DOUBLE T_PRECISION','types',2,'p_types_simple','grammar.py',513),
  ('types -> T_MONEY','types',1,'p_types_simple','grammar.py',514),
  ('types -> T_TEXT','types',1,'p_types_simple','grammar.py',515),
  ('types -> T_BOOLEAN','types',1,'p_types_simple','grammar.py',516),
  ('types -> R_TIMESTAMP','types',1,'p_types_simple','grammar.py',517),
  ('types -> T_DATE','types',1,'p_types_simple','grammar.py',518),
  ('types -> T_TIME','types',1,'p_types_simple','grammar.py',519),
  ('types -> T_DECIMAL optParams','types',2,'p_types_params','grammar.py',528),
  ('types -> T_NUMERIC optParams','types',2,'p_types_params','grammar.py',529),
  ('types -> T_VARCHAR optParams','types',2,'p_types_params','grammar.py',530),
  ('types -> T_CHARACTER optParams','types',2,'p_types_params','grammar.py',531),
  ('types -> T_CHAR optParams','types',2,'p_types_params','grammar.py',532),
  ('types -> T_CHARACTER T_VARYING optParams','types',3,'p_types_var','grammar.py',541),
  ('types -> R_INTERVAL intervalFields','types',2,'p_timeType_interval','grammar.py',549),
  ('intervalFields -> R_YEAR','intervalFields',1,'p_intervalFields','grammar.py',557),
  ('intervalFields -> R_MONTH','intervalFields',1,'p_intervalFields','grammar.py',558),
  ('intervalFields -> R_DAY','intervalFields',1,'p_intervalFields','grammar.py',559),
  ('intervalFields -> R_HOUR','intervalFields',1,'p_intervalFields','grammar.py',560),
  ('intervalFields -> R_MINUTE','intervalFields',1,'p_intervalFields','grammar.py',561),
  ('intervalFields -> R_SECOND','intervalFields',1,'p_intervalFields','grammar.py',562),
  ('intervalFields -> <empty>','intervalFields',0,'p_intervalFields_none','grammar.py',570),
  ('optParams -> S_PARIZQ literalList S_PARDER','optParams',3,'p_optParams','grammar.py',577),
  ('optParams -> <empty>','optParams',0,'p_optParams_none','grammar.py',583),
  ('colOptionsList -> colOptionsList colOptions','colOptionsList',2,'p_colOptions_list','grammar.py',589),
  ('colOptionsList -> colOptions','colOptionsList',1,'p_colOptions_u','grammar.py',596),
  ('colOptions -> defaultVal','colOptions',1,'p_colOptions','grammar.py',603),
  ('colOptions -> nullOpt','colOptions',1,'p_colOptions','grammar.py',604),
  ('colOptions -> constraintOpt','colOptions',1,'p_colOptions','grammar.py',605),
  ('colOptions -> primaryOpt','colOptions',1,'p_colOptions','grammar.py',606),
  ('colOptions -> referencesOpt','colOptions',1,'p_colOptions','grammar.py',607),
  ('defaultVal -> R_DEFAULT literal','defaultVal',2,'p_defaultVal','grammar.py',615),
  ('nullOpt -> R_NOT R_NULL','nullOpt',2,'p_nullOpt_true','grammar.py',622),
  ('nullOpt -> R_NULL','nullOpt',1,'p_nullOpt_false','grammar.py',630),
  ('constraintOpt -> constrName R_UNIQUE','constraintOpt',2,'p_constraintOpt_unique','grammar.py',641),
  ('constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER','constraintOpt',5,'p_constraintOpt_check','grammar.py',649),
  ('primaryOpt -> R_PRIMARY R_KEY','primaryOpt',2,'p_primaryOpt','grammar.py',656),
  ('referencesOpt -> R_REFERENCES ID','referencesOpt',2,'p_referencesOpt','grammar.py',662),
  ('expresion -> datatype','expresion',1,'p_expresion','grammar.py',673),
  ('expresion -> expBool','expresion',1,'p_expresion','grammar.py',674),
  ('expresion -> S_PARIZQ selectStmt S_PARDER','expresion',3,'p_expresion_','grammar.py',682),
  ('funcCall -> ID S_PARIZQ paramsList S_PARDER','funcCall',4,'p_funcCall_1','grammar.py',690),
  ('funcCall -> ID S_PARIZQ S_PARDER','funcCall',3,'p_funcCall_2','grammar.py',698),
  ('funcCall -> R_NOW S_PARIZQ S_PARDER','funcCall',3,'p_funcCall_2','grammar.py',699),
  ('funcCall -> R_COUNT S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',707),
  ('funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',708),
  ('funcCall -> R_SUM S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',709),
  ('funcCall -> R_PROM S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',710),
  ('extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER','extract',6,'p_extract_1','grammar.py',720),
  ('extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER','extract',6,'p_extract_2','grammar.py',731),
  ('timeStamp -> R_TIMESTAMP STRING','timeStamp',2,'p_timeStamp','grammar.py',741),
  ('timeStamp -> R_INTERVAL STRING','timeStamp',2,'p_timeStamp','grammar.py',742),
  ('optsExtract -> R_YEAR','optsExtract',1,'p_optsExtract','grammar.py',750),
  ('optsExtract -> R_MONTH','optsExtract',1,'p_optsExtract','grammar.py',751),
  ('optsExtract -> R_DAY','optsExtract',1,'p_optsExtract','grammar.py',752),
  ('optsExtract -> R_HOUR','optsExtract',1,'p_optsExtract','grammar.py',753),
  ('optsExtract -> R_MINUTE','optsExtract',1,'p_optsExtract','grammar.py',754),
  ('optsExtract -> R_SECOND','optsExtract',1,'p_optsExtract','grammar.py',755),
  ('datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER','datePart',6,'p_datePart','grammar.py',763),
  ('dateSource -> R_TIMESTAMP STRING','dateSource',2,'p_dateSource','grammar.py',773),
  ('dateSource -> T_DATE STRING','dateSource',2,'p_dateSource','grammar.py',774),
  ('dateSource -> T_TIME STRING','dateSource',2,'p_dateSource','grammar.py',775),
  ('dateSource -> R_INTERVAL STRING','dateSource',2,'p_dateSource','grammar.py',776),
  ('dateSource -> R_NOW S_PARIZQ S_PARDER','dateSource',3,'p_dateSource','grammar.py',777),
  ('current -> R_CURRENT_DATE','current',1,'p_current','grammar.py',785),
  ('current -> R_CURRENT_TIME','current',1,'p_current','grammar.py',786),
  ('current -> timeStamp','current',1,'p_current_1','grammar.py',795),
  ('literalList -> literalList S_COMA literal','literalList',3,'p_literal_list','grammar.py',802),
  ('literalList -> literal','literalList',1,'p_literal_u','grammar.py',809),
  ('literal -> INTEGER','literal',1,'p_literal','grammar.py',816),
  ('literal -> STRING','literal',1,'p_literal','grammar.py',817),
  ('literal -> DECIMAL','literal',1,'p_literal','grammar.py',818),
  ('literal -> CHARACTER','literal',1,'p_literal','grammar.py',819),
  ('literal -> R_TRUE','literal',1,'p_literal','grammar.py',820),
  ('literal -> R_FALSE','literal',1,'p_literal','grammar.py',821),
  ('literal -> R_NULL','literal',1,'p_literal','grammar.py',822),
  ('paramsList -> paramsList S_COMA datatype','paramsList',3,'p_params_list','grammar.py',841),
  ('paramsList -> datatype','paramsList',1,'p_params_u','grammar.py',848),
  ('datatype -> datatype O_SUMA datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',855),
  ('datatype -> datatype O_RESTA datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',856),
  ('datatype -> datatype O_PRODUCTO datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',857),
  ('datatype -> datatype O_DIVISION datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',858),
  ('datatype -> datatype O_EXPONENTE datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',859),
  ('datatype -> datatype O_MODULAR datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',860),
  ('datatype -> datatype OC_CONCATENAR datatype','datatype',3,'p_datatype_operadores_binarios2','grammar.py',869),
  ('datatype -> R_CASE caseList optElse R_END','datatype',4,'p_datatype_case_when','grammar.py',877),
  ('caseList -> caseList caseWhen','caseList',2,'p_case_list','grammar.py',883),
  ('caseList -> caseWhen','caseList',1,'p_case_list','grammar.py',884),
  ('caseWhen -> R_WHEN expBool R_THEN literal','caseWhen',4,'p_caseWhen','grammar.py',889),
  ('optElse -> R_ELSE literal','optElse',2,'p_caseWhen_2','grammar.py',893),
  ('optElse -> <empty>','optElse',0,'p_caseWhen_2','grammar.py',894),
  ('datatype -> O_RESTA datatype','datatype',2,'p_datatype_operadores_unarios','grammar.py',900),
  ('datatype -> O_SUMA datatype','datatype',2,'p_datatype_operadores_unarios','grammar.py',901),
  ('datatype -> columnName','datatype',1,'p_datatype_operandos','grammar.py',909),
  ('datatype -> literal','datatype',1,'p_datatype_operandos','grammar.py',910),
  ('datatype -> funcCall','datatype',1,'p_datatype_operandos','grammar.py',911),
  ('datatype -> extract','datatype',1,'p_datatype_operandos','grammar.py',912),
  ('datatype -> datePart','datatype',1,'p_datatype_operandos','grammar.py',913),
  ('datatype -> current','datatype',1,'p_datatype_operandos','grammar.py',914),
  ('datatype -> S_PARIZQ datatype S_PARDER','datatype',3,'p_datatype_agrupacion','grammar.py',922),
  ('expComp -> datatype OL_MENORQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',930),
  ('expComp -> datatype OL_MAYORQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',931),
  ('expComp -> datatype OL_MAYORIGUALQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',932),
  ('expComp -> datatype OL_MENORIGUALQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',933),
  ('expComp -> datatype S_IGUAL datatype','expComp',3,'p_expCompBinario_1','grammar.py',934),
  ('expComp -> datatype OL_DISTINTODE datatype','expComp',3,'p_expCompBinario_1','grammar.py',935),
  ('expComp -> datatype R_IS R_DISTINCT R_FROM datatype','expComp',5,'p_expCompBinario_2','grammar.py',943),
  ('expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype','expComp',6,'p_expCompBinario_3','grammar.py',953),
  ('expComp -> datatype R_BETWEEN datatype R_AND datatype','expComp',5,'p_expComp_ternario_1','grammar.py',963),
  ('expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype','expComp',6,'p_expComp_ternario_2','grammar.py',973),
  ('expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype','expComp',6,'p_expComp_ternario_2','grammar.py',974),
  ('expComp -> datatype R_ISNULL','expComp',2,'p_expComp_unario_1','grammar.py',985),
  ('expComp -> datatype R_NOTNULL','expComp',2,'p_expComp_unario_1','grammar.py',986),
  ('expComp -> datatype R_IS R_NULL','expComp',3,'p_expComp_unario_2','grammar.py',995),
  ('expComp -> datatype R_IS R_TRUE','expComp',3,'p_expComp_unario_2','grammar.py',996),
  ('expComp -> datatype R_IS R_FALSE','expComp',3,'p_expComp_unario_2','grammar.py',997),
  ('expComp -> datatype R_IS R_UNKNOWN','expComp',3,'p_expComp_unario_2','grammar.py',998),
  ('expComp -> datatype R_IS R_NOT R_NULL','expComp',4,'p_expComp_unario_3','grammar.py',1006),
  ('expComp -> datatype R_IS R_NOT R_TRUE','expComp',4,'p_expComp_unario_3','grammar.py',1007),
  ('expComp -> datatype R_IS R_NOT R_FALSE','expComp',4,'p_expComp_unario_3','grammar.py',1008),
  ('expComp -> datatype R_IS R_NOT R_UNKNOWN','expComp',4,'p_expComp_unario_3','grammar.py',1009),
  ('expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1019),
  ('expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1020),
  ('expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1021),
  ('expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1022),
  ('expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1023),
  ('expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1024),
  ('expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',9,'p_expSubq','grammar.py',1025),
  ('expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',1026),
  ('expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',1027),
  ('expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',9,'p_expSubq','grammar.py',1028),
  ('expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',1029),
  ('expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',1030),
  ('expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',1031),
  ('expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1032),
  ('expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1033),
  ('expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',1034),
  ('expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',1035),
  ('expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',1036),
  ('expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',1037),
  ('expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',1038),
  ('expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',1039),
  ('expSubq -> stringExp R_LIKE STRING','expSubq',3,'p_expSubq','grammar.py',1040),
  ('stringExp -> STRING','stringExp',1,'p_stringExp','grammar.py',1047),
  ('stringExp -> columnName','stringExp',1,'p_stringExp','grammar.py',1048),
  ('subqValues -> R_ALL','subqValues',1,'p_subqValues','grammar.py',1055),
  ('subqValues -> R_ANY','subqValues',1,'p_subqValues','grammar.py',1056),
  ('subqValues -> R_SOME','subqValues',1,'p_subqValues','grammar.py',1057),
  ('boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER','boolean',4,'p_boolean_1','grammar.py',1064),
  ('boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER','boolean',5,'p_boolean_2','grammar.py',1074),
  ('boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER','boolean',6,'p_boolean_3','grammar.py',1082),
  ('boolean -> expComp','boolean',1,'p_boolean_4','grammar.py',1090),
  ('boolean -> expSubq','boolean',1,'p_boolean_4','grammar.py',1091),
  ('expBool -> expBool R_AND expBool','expBool',3,'p_expBool_1','grammar.py',1099),
  ('expBool -> expBool R_OR expBool','expBool',3,'p_expBool_1','grammar.py',1100),
  ('expBool -> R_NOT expBool','expBool',2,'p_expBool_2','grammar.py',1108),
  ('expBool -> S_PARIZQ expBool S_PARDER','expBool',3,'p_expBool_3','grammar.py',1116),
  ('expBool -> expBool optBoolPredicate','expBool',2,'p_expBool_5','grammar.py',1124),
  ('expBool -> boolean','expBool',1,'p_expBool_4','grammar.py',1132),
  ('optBoolPredicate -> R_IS R_TRUE','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',1140),
  ('optBoolPredicate -> R_IS R_FALSE','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',1141),
  ('optBoolPredicate -> R_IS R_UNKNOWN','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',1142),
  ('optBoolPredicate -> R_IS R_NOT R_TRUE','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',1150),
  ('optBoolPredicate -> R_IS R_NOT R_FALSE','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',1151),
  ('optBoolPredicate -> R_IS R_NOT R_UNKNOWN','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',1152),
  ('columnName -> ID','columnName',1,'p_columnName_id','grammar.py',1160),
  ('columnName -> ID S_PUNTO ID','columnName',3,'p_columnName_table_id','grammar.py',1169),
  ('booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1187),
  ('booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1188),
  ('booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1189),
  ('booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1190),
  ('booleanCheck -> idOrLiteral S_IGUAL idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1191),
  ('booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1192),
  ('booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral','booleanCheck',5,'p_booleanCheck_2','grammar.py',1202),
  ('booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral','booleanCheck',6,'p_booleanCheck_3','grammar.py',1214),
  ('idOrLiteral -> ID','idOrLiteral',1,'p_idOrLiteral','grammar.py',1225),
  ('idOrLiteral -> INTEGER','idOrLiteral',1,'p_idOrLiteral','grammar.py',1226),
  ('idOrLiteral -> STRING','idOrLiteral',1,'p_idOrLiteral','grammar.py',1227),
  ('idOrLiteral -> DECIMAL','idOrLiteral',1,'p_idOrLiteral','grammar.py',1228),
  ('idOrLiteral -> CHARACTER','idOrLiteral',1,'p_idOrLiteral','grammar.py',1229),
  ('idOrLiteral -> R_TRUE','idOrLiteral',1,'p_idOrLiteral','grammar.py',1230),
  ('idOrLiteral -> R_FALSE','idOrLiteral',1,'p_idOrLiteral','grammar.py',1231),
  ('alterStmt -> R_ALTER R_DATABASE idOrString alterDb','alterStmt',4,'p_alterStmt','grammar.py',1260),
  ('alterStmt -> R_ALTER R_TABLE idOrString alterTableList','alterStmt',4,'p_alterStmt','grammar.py',1261),
  ('alterStmt -> R_ALTER R_INDEX ifExists ID R_ALTER ID ID','alterStmt',7,'p_alterStmt','grammar.py',1262),
  ('alterStmt -> R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER','alterStmt',7,'p_alterStmt','grammar.py',1263),
  ('alterDb -> R_RENAME R_TO idOrString','alterDb',3,'p_alterDb','grammar.py',1275),
  ('alterDb -> R_OWNER R_TO ownerOPts','alterDb',3,'p_alterDb','grammar.py',1276),
  ('ownerOPts -> idOrString','ownerOPts',1,'p_ownerOpts','grammar.py',1285),
  ('ownerOPts -> R_CURRENT_USER','ownerOPts',1,'p_ownerOpts','grammar.py',1286),
  ('ownerOPts -> R_SESSION_USER','ownerOPts',1,'p_ownerOpts','grammar.py',1287),
  ('alterTableList -> alterTableList S_COMA alterTable','alterTableList',3,'p_alterTableList','grammar.py',1295),
  ('alterTableList -> alterTable','alterTableList',1,'p_alterTableList_u','grammar.py',1304),
  ('alterTable -> R_ADD alterAdd','alterTable',2,'p_alterTable','grammar.py',1312),
  ('alterTable -> R_ALTER alterAlter','alterTable',2,'p_alterTable','grammar.py',1313),
  ('alterTable -> R_DROP alterDrop','alterTable',2,'p_alterTable','grammar.py',1314),
  ('alterTable -> R_RENAME alterRename','alterTable',2,'p_alterTable','grammar.py',1315),
  ('alterAdd -> R_COLUMN ID types','alterAdd',3,'p_alterAdd_column','grammar.py',1323),
  ('alterAdd -> createConstraint','alterAdd',1,'p_alterAdd_constraint','grammar.py',1331),
  ('alterAdd -> createPrimary','alterAdd',1,'p_alterAdd_constraint','grammar.py',1332),
  ('alterAdd -> createForeign','alterAdd',1,'p_alterAdd_constraint','grammar.py',1333),
  ('alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER','alterAdd',5,'p_alterAdd_unique','grammar.py',1341),
  ('alterAlter -> R_COLUMN ID R_SET nullOpt','alterAlter',4,'p_alterAlter','grammar.py',1349),
  ('alterAlter -> R_COLUMN ID R_SET defaultVal','alterAlter',4,'p_alterAlter','grammar.py',1350),
  ('alterAlter -> R_COLUMN ID R_TYPE types','alterAlter',4,'p_alterAlter','grammar.py',1351),
  ('alterDrop -> R_CONSTRAINT ID','alterDrop',2,'p_alterDrop','grammar.py',1359),
  ('alterDrop -> R_COLUMN ID','alterDrop',2,'p_alterDrop','grammar.py',1360),
  ('alterRename -> R_COLUMN ID R_TO ID','alterRename',4,'p_alterRename','grammar.py',1368),
  ('dropStmt -> R_DROP R_TABLE ifExists idOrString','dropStmt',4,'p_dropStmt','grammar.py',1382),
  ('dropStmt -> R_DROP R_DATABASE ifExists idOrString','dropStmt',4,'p_dropStmt','grammar.py',1383),
  ('dropStmt -> R_DROP R_FUNCTION ifExists idOrString','dropStmt',4,'p_dropStmt','grammar.py',1384),
  ('dropStmt -> R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER','dropStmt',6,'p_dropStmt','grammar.py',1385),
  ('dropStmt -> R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER','dropStmt',6,'p_dropStmt','grammar.py',1386),
  ('dropStmt -> R_DROP R_INDEX concurrenly ifExists idOrString','dropStmt',5,'p_dropStmt','grammar.py',1387),
  ('ifExists -> R_IF R_EXISTS','ifExists',2,'p_ifExists','grammar.py',1401),
  ('ifExists -> <empty>','ifExists',0,'p_ifExists','grammar.py',1402),
  ('concurrenly -> R_CONCURRENTLY','concurrenly',1,'p_concurrenly','grammar.py',1406),
  ('concurrenly -> <empty>','concurrenly',0,'p_concurrenly','grammar.py',1407),
  ('selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl','selectStmt',8,'p_selectStmt_1','grammar.py',1419),
  ('selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl','selectStmt',7,'p_selectStmt_2','grammar.py',1437),
  ('selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl','selectStmt',8,'p_selectStmt__1','grammar.py',1454),
  ('selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl','selectStmt',7,'p_selectStmt__3','grammar.py',1459),
  ('selectStmt -> selectStmt R_UNION allOpt selectStmt','selectStmt',4,'p_selectStmt_union','grammar.py',1464),
  ('selectStmt -> selectStmt R_INTERSECT allOpt selectStmt','selectStmt',4,'p_selectStmt_intersect','grammar.py',1470),
  ('selectStmt -> selectStmt R_EXCEPT allOpt selectStmt','selectStmt',4,'p_selectStmt_except','grammar.py',1476),
  ('selectStmt -> S_PARIZQ selectStmt S_PARDER','selectStmt',3,'p_selectStmt_agrupacion','grammar.py',1482),
  ('fromCl -> R_FROM tableExp','fromCl',2,'p_fromClause','grammar.py',1489),
  ('selectStmt -> R_SELECT selectParams','selectStmt',2,'p_selectstmt_only_params','grammar.py',1501),
  ('allOpt -> R_ALL','allOpt',1,'p_allOpt','grammar.py',1510),
  ('allOpt -> <empty>','allOpt',0,'p_allOpt','grammar.py',1511),
  ('selectParams -> O_PRODUCTO','selectParams',1,'p_selectparams_all','grammar.py',1518),
  ('selectParams -> selectList','selectParams',1,'p_selectparams_params','grammar.py',1525),
  ('selectList -> selectList S_COMA selectListParams optAlias','selectList',4,'p_selectList_list','grammar.py',1533),
  ('selectList -> selectListParams optAlias','selectList',2,'p_selectList_u','grammar.py',1543),
  ('selectListParams -> expresion','selectListParams',1,'p_selectListParams_1','grammar.py',1552),
  ('selectListParams -> ID S_PUNTO O_PRODUCTO','selectListParams',3,'p_selectListParams_2','grammar.py',1559),
  ('optAlias -> R_AS idOrString','optAlias',2,'p_optalias_as','grammar.py',1566),
  ('optAlias -> idOrString','optAlias',1,'p_optalias_id','grammar.py',1574),
  ('optAlias -> <empty>','optAlias',0,'p_optalias_none','grammar.py',1581),
  ('tableExp -> tableExp S_COMA fromBody','tableExp',3,'p_tableexp_list','grammar.py',1587),
  ('tableExp -> fromBody','tableExp',1,'p_tableexp_u','grammar.py',1595),
  ('fromBody -> ID optAlias','fromBody',2,'p_fromBody','grammar.py',1601),
  ('fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString','fromBody',5,'p_tableexp_subq','grammar.py',1610),
  ('joinList -> joinList2','joinList',1,'p_joinList','grammar.py',1617),
  ('joinList2 -> joinList2 joinCl','joinList2',2,'p_joinList_2','grammar.py',1622),
  ('joinList2 -> joinCl','joinList2',1,'p_joinList_2','grammar.py',1623),
  ('joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool','joinCl',6,'p_joinCl','grammar.py',1628),
  ('joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER','joinCl',8,'p_joinCl','grammar.py',1629),
  ('joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias','joinCl',5,'p_joinCl','grammar.py',1630),
  ('nameList -> nameList S_COMA columnName','nameList',3,'p_nameList','grammar.py',1637),
  ('nameList -> columnName','nameList',1,'p_nameList','grammar.py',1638),
  ('joinOpt -> R_INNER','joinOpt',1,'p_joinOpt','grammar.py',1644),
  ('joinOpt -> R_LEFT','joinOpt',1,'p_joinOpt','grammar.py',1645),
  ('joinOpt -> R_LEFT R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1646),
  ('joinOpt -> R_RIGHT','joinOpt',1,'p_joinOpt','grammar.py',1647),
  ('joinOpt -> R_RIGHT R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1648),
  ('joinOpt -> R_FULL','joinOpt',1,'p_joinOpt','grammar.py',1649),
  ('joinOpt -> R_FULL R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1650),
  ('whereCl -> R_WHERE expBool','whereCl',2,'p_whereCl','grammar.py',1657),
  ('whereCl -> <empty>','whereCl',0,'p_whereCl_none','grammar.py',1666),
  ('groupByCl -> R_GROUP R_BY groupList havingCl','groupByCl',4,'p_groupByCl_1','grammar.py',1676),
  ('groupByCl -> <empty>','groupByCl',0,'p_groupByCl_2','grammar.py',1684),
  ('groupList -> groupList S_COMA columnName','groupList',3,'p_groupList_1','grammar.py',1692),
  ('groupList -> groupList S_COMA INTEGER','groupList',3,'p_groupList_1','grammar.py',1693),
  ('groupList -> columnName','groupList',1,'p_groupList_2','grammar.py',1702),
  ('groupList -> INTEGER','groupList',1,'p_groupList_2','grammar.py',1703),
  ('havingCl -> R_HAVING expBool','havingCl',2,'p_havingCl_1','grammar.py',1713),
  ('havingCl -> <empty>','havingCl',0,'p_havingCl_2','grammar.py',1719),
  ('orderByCl -> R_ORDER R_BY orderList','orderByCl',3,'p_orderByCl','grammar.py',1728),
  ('orderByCl -> <empty>','orderByCl',0,'p_orderByCl2','grammar.py',1734),
  ('orderList -> orderList S_COMA orderByElem','orderList',3,'p_orderList','grammar.py',1740),
  ('orderList -> orderByElem','orderList',1,'p_orderList2','grammar.py',1747),
  ('orderByElem -> columnName orderOpts orderNull','orderByElem',3,'p_orderByElem','grammar.py',1754),
  ('orderByElem -> INTEGER orderOpts orderNull','orderByElem',3,'p_orderByElem','grammar.py',1755),
  ('orderOpts -> R_ASC','orderOpts',1,'p_orderOpts','grammar.py',1762),
  ('orderOpts -> R_DESC','orderOpts',1,'p_orderOpts','grammar.py',1763),
  ('orderOpts -> <empty>','orderOpts',0,'p_orderOpts2','grammar.py',1769),
  ('orderNull -> R_NULL R_FIRST','orderNull',2,'p_orderNull','grammar.py',1774),
  ('orderNull -> R_NULL R_LAST','orderNull',2,'p_orderNull','grammar.py',1775),
  ('orderNull -> <empty>','orderNull',0,'p_ordenNull2','grammar.py',1780),
  ('limitCl -> R_LIMIT INTEGER offsetLimit','limitCl',3,'p_limitCl','grammar.py',1789),
  ('limitCl -> R_LIMIT R_ALL offsetLimit','limitCl',3,'p_limitCl','grammar.py',1790),
  ('limitCl -> <empty>','limitCl',0,'p_limitCl_n','grammar.py',1797),
  ('offsetLimit -> R_OFFSET INTEGER','offsetLimit',2,'p_offsetLimit','grammar.py',1803),
  ('offsetLimit -> <empty>','offsetLimit',0,'p_offsetLimit_n','grammar.py',1809),
  ('insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER','insertStmt',8,'p_insertStmt','grammar.py',1822),
  ('paramsColumn -> S_PARIZQ idList S_PARDER','paramsColumn',3,'p_paramsColumn','grammar.py',1829),
  ('paramsColumn -> <empty>','paramsColumn',0,'p_paramsColumn_none','grammar.py',1835),
  ('updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl','updateStmt',5,'p_updateStmt','grammar.py',1848),
  ('updateCols -> updateCols S_COMA updateVals','updateCols',3,'p_updateCols_list','grammar.py',1858),
  ('updateCols -> updateVals','updateCols',1,'p_updateCols_u','grammar.py',1865),
  ('updateVals -> ID S_IGUAL updateExp','updateVals',3,'p_updateVals','grammar.py',1871),
  ('updateExp -> datatype','updateExp',1,'p_updateExp','grammar.py',1878),
  ('updateExp -> R_DEFAULT','updateExp',1,'p_updateExp','grammar.py',1879),
  ('deleteStmt -> R_DELETE fromCl whereCl','deleteStmt',3,'p_deleteStmt','grammar.py',1892),
  ('truncateStmt -> R_TRUNCATE tableOpt ID','truncateStmt',3,'p_truncateStmt','grammar.py',1898),
  ('tableOpt -> R_TABLE','tableOpt',1,'p_tableOpt','grammar.py',1904),
  ('tableOpt -> <empty>','tableOpt',0,'p_tableOpt','grammar.py',1905),
  ('showStmt -> R_SHOW R_DATABASES likeOpt','showStmt',3,'p_showStmt','grammar.py',1911),
  ('likeOpt -> R_LIKE STRING','likeOpt',2,'p_likeOpt','grammar.py',1918),
  ('likeOpt -> <empty>','likeOpt',0,'p_likeOpt','grammar.py',1919),
  ('useStmt -> R_USE ID','useStmt',2,'p_useStmt','grammar.py',1929),
  ('functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction','functionStmt',11,'p_functionStmt','grammar.py',1941),
  ('functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction','functionStmt',10,'p_functionStmt2','grammar.py',1946),
  ('bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd','bloqueFunction',6,'p_functionBloque','grammar.py',1951),
  ('params_list -> params_list S_COMA param_item','params_list',3,'p_params_list_func','grammar.py',1957),
  ('params_list -> param_item','params_list',1,'p_params_list_func_aux','grammar.py',1963),
  ('param_item -> ID types','param_item',2,'p_param_item_func','grammar.py',1968),
  ('returnsStmt -> R_RETURNS types','returnsStmt',2,'p_returnsStmt','grammar.py',1974),
  ('returnsStmt -> <empty>','returnsStmt',0,'p_returnsStmt_aux','grammar.py',1979),
  ('declareStmt -> R_DECLARE declaracion_list','declareStmt',2,'p_declareStmt2','grammar.py',1985),
  ('declareStmt -> <empty>','declareStmt',0,'p_declareStmt','grammar.py',1990),
  ('declaracion_list -> declaracion_list declaracion_item','declaracion_list',2,'p_declaracion_list','grammar.py',1995),
  ('declaracion_list -> declaracion_item','declaracion_list',1,'p_declaracion_list_aux','grammar.py',2001),
  ('declaracion_item -> ID constant_opt types null_opt default_item S_PUNTOCOMA','declaracion_item',6,'p_declaracion_item','grammar.py',2006),
  ('declaracion_item -> ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA','declaracion_item',5,'p_declaracion_item_aux','grammar.py',2011),
  ('constant_opt -> R_CONSTANT','constant_opt',1,'p_constant_item','grammar.py',2016),
  ('constant_opt -> <empty>','constant_opt',0,'p_constant_item2','grammar.py',2021),
  ('null_opt -> R_NOT R_NULL','null_opt',2,'p_null_option','grammar.py',2026),
  ('null_opt -> <empty>','null_opt',0,'p_null_option2','grammar.py',2031),
  ('default_opt -> R_DEFAULT','default_opt',1,'p_default_item','grammar.py',2036),
  ('default_opt -> S_DOSPUNTOS S_IGUAL','default_opt',2,'p_default_item','grammar.py',2037),
  ('default_opt -> S_IGUAL','default_opt',1,'p_default_item','grammar.py',2038),
  ('default_item -> default_opt expresion','default_item',2,'p_default_item2','grammar.py',2042),
  ('default_item -> <empty>','default_item',0,'p_default_item3','grammar.py',2047),
  ('alias_declaracion -> ID','alias_declaracion',1,'p_alias_declaracion','grammar.py',2052),
  ('alias_declaracion -> IDEspecial','alias_declaracion',1,'p_alias_declaracion','grammar.py',2053),
  ('beginStmt -> beginStmt beginItem','beginStmt',2,'p_beingStmt','grammar.py',2058),
  ('beginStmt -> beginItem','beginStmt',1,'p_beingStmt2','grammar.py',2064),
  ('beginItem -> stmt','beginItem',1,'p_beginItem','grammar.py',2069),
  ('beginItem -> returnStmt S_PUNTOCOMA','beginItem',2,'p_beginItem','grammar.py',2070),
  ('beginItem -> asignacionStmt S_PUNTOCOMA','beginItem',2,'p_beginItem','grammar.py',2071),
  ('returnStmt -> R_RETURN expresion','returnStmt',2,'p_returnStmt','grammar.py',2076),
  ('labelEnd -> <empty>','labelEnd',0,'p_labelEnd2','grammar.py',2081),
  ('labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA','labelEnd',5,'p_labelEnd','grammar.py',2086),
  ('asignacionStmt -> ID S_DOSPUNTOS S_IGUAL expresion','asignacionStmt',4,'p_asignacionStmt','grammar.py',2091),
  ('asignacionStmt -> ID S_IGUAL expresion','asignacionStmt',3,'p_asignacionStmt2','grammar.py',2096),
  ('procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure','procedureStmt',15,'p_procedureStmt','grammar.py',2101),
  ('procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure','procedureStmt',14,'p_procedureStmt2','grammar.py',2106),
  ('endProcedure -> <empty>','endProcedure',0,'p_endProcedure2','grammar.py',2111),
  ('endProcedure -> R_END S_PUNTOCOMA','endProcedure',2,'p_endProcedure','grammar.py',2115),
  ('dolarEndProcedure -> <empty>','dolarEndProcedure',0,'p_dolarEndProc2','grammar.py',2119),
  ('dolarEndProcedure -> S_DOLAR S_DOLAR','dolarEndProcedure',2,'p_dolarEndProc','grammar.py',2123),
  ('beginWord -> <empty>','beginWord',0,'p_beginProcWord2','grammar.py',2127),
  ('beginWord -> R_BEGIN','beginWord',1,'p_beginProcWord','grammar.py',2131),
  ('languageProcedure -> R_LANGUAGE ID','languageProcedure',2,'p_procedureLanguage','grammar.py',2135),
  ('languageProcedure -> <empty>','languageProcedure',0,'p_procedureLanguage2','grammar.py',2140),
  ('executePL -> R_EXECUTE funcCall','executePL',2,'p_executePL','grammar.py',2145),
  ('executeParams -> executeParams S_COMA executeItem','executeParams',3,'p_executeParams','grammar.py',2150),
  ('executeParams -> executeItem','executeParams',1,'p_executeParams2','grammar.py',2156),
  ('executeItem -> expresion','executeItem',1,'p_executeItem','grammar.py',2161),
]
