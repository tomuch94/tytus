Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    OC_AND
    OC_NOT
    OC_OR
    OC_SHIFTL
    OC_SHIFTR
    OC_XOR

Grammar

Rule 0     S' -> init
Rule 1     init -> stmtList
Rule 2     stmtList -> stmtList stmt
Rule 3     stmtList -> stmt
Rule 4     stmt -> createStmt S_PUNTOCOMA
Rule 5     stmt -> showStmt S_PUNTOCOMA
Rule 6     stmt -> alterStmt S_PUNTOCOMA
Rule 7     stmt -> dropStmt S_PUNTOCOMA
Rule 8     stmt -> insertStmt S_PUNTOCOMA
Rule 9     stmt -> updateStmt S_PUNTOCOMA
Rule 10    stmt -> deleteStmt S_PUNTOCOMA
Rule 11    stmt -> truncateStmt S_PUNTOCOMA
Rule 12    stmt -> useStmt S_PUNTOCOMA
Rule 13    stmt -> selectStmt S_PUNTOCOMA
Rule 14    stmt -> functionStmt
Rule 15    stmt -> procedureStmt
Rule 16    stmt -> executePL S_PUNTOCOMA
Rule 17    stmt -> ifStmt R_END R_IF S_PUNTOCOMA
Rule 18    stmt -> asignacionStmt S_PUNTOCOMA
Rule 19    ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
Rule 20    else_ -> R_ELSE List_body
Rule 21    else_ -> Lista_elsif_
Rule 22    else_ -> <empty>
Rule 23    Lista_elsif_ -> Lista_elsif_ elsif_
Rule 24    Lista_elsif_ -> elsif_
Rule 25    elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body
Rule 26    List_body -> List_body body
Rule 27    List_body -> body
Rule 28    body -> createStmt S_PUNTOCOMA
Rule 29    body -> showStmt S_PUNTOCOMA
Rule 30    body -> alterStmt S_PUNTOCOMA
Rule 31    body -> dropStmt S_PUNTOCOMA
Rule 32    body -> insertStmt S_PUNTOCOMA
Rule 33    body -> updateStmt S_PUNTOCOMA
Rule 34    body -> deleteStmt S_PUNTOCOMA
Rule 35    body -> truncateStmt S_PUNTOCOMA
Rule 36    body -> useStmt S_PUNTOCOMA
Rule 37    body -> selectStmt S_PUNTOCOMA
Rule 38    body -> functionStmt
Rule 39    body -> procedureStmt
Rule 40    body -> executePL S_PUNTOCOMA
Rule 41    body -> ifStmt R_END R_IF S_PUNTOCOMA
Rule 42    body -> asignacionStmt S_PUNTOCOMA
Rule 43    idOrString -> ID
Rule 44    idOrString -> STRING
Rule 45    idOrString -> CHARACTER
Rule 46    createStmt -> R_CREATE createBody
Rule 47    createBody -> createOpts
Rule 48    createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl
Rule 49    unique_index -> R_UNIQUE
Rule 50    unique_index -> <empty>
Rule 51    using_hash_index -> R_USING R_HASH
Rule 52    using_hash_index -> <empty>
Rule 53    indexNullS -> R_NULLS R_FIRST
Rule 54    indexNullS -> R_NULLS R_LAST
Rule 55    indexNullS -> <empty>
Rule 56    indexasc_desc -> R_DESC
Rule 57    indexasc_desc -> R_ASC
Rule 58    indexasc_desc -> <empty>
Rule 59    createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
Rule 60    createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode
Rule 61    orReplace -> R_OR R_REPLACE
Rule 62    orReplace -> <empty>
Rule 63    createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
Rule 64    ifNotExists -> R_IF R_NOT R_EXISTS
Rule 65    ifNotExists -> <empty>
Rule 66    inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER
Rule 67    inheritsOpt -> <empty>
Rule 68    createOwner -> R_OWNER ID
Rule 69    createOwner -> R_OWNER STRING
Rule 70    createOwner -> R_OWNER S_IGUAL ID
Rule 71    createOwner -> R_OWNER S_IGUAL STRING
Rule 72    createOwner -> <empty>
Rule 73    createMode -> R_MODE INTEGER
Rule 74    createMode -> R_MODE S_IGUAL INTEGER
Rule 75    createMode -> <empty>
Rule 76    createTableList -> createTableList S_COMA createTable
Rule 77    createTableList -> createTable
Rule 78    createTable -> ID types createColumns
Rule 79    createTable -> createConstraint
Rule 80    createTable -> createUnique
Rule 81    createTable -> createPrimary
Rule 82    createTable -> createForeign
Rule 83    createColumns -> colOptionsList
Rule 84    createColumns -> <empty>
Rule 85    createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
Rule 86    createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER
Rule 87    createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
Rule 88    createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
Rule 89    constrName -> R_CONSTRAINT ID
Rule 90    constrName -> <empty>
Rule 91    idList -> idList S_COMA ID
Rule 92    idList -> ID
Rule 93    types -> ID
Rule 94    types -> T_SMALLINT
Rule 95    types -> T_INTEGER
Rule 96    types -> T_BIGINT
Rule 97    types -> T_REAL
Rule 98    types -> T_DOUBLE T_PRECISION
Rule 99    types -> T_MONEY
Rule 100   types -> T_TEXT
Rule 101   types -> T_BOOLEAN
Rule 102   types -> R_TIMESTAMP
Rule 103   types -> T_DATE
Rule 104   types -> T_TIME
Rule 105   types -> T_DECIMAL optParams
Rule 106   types -> T_NUMERIC optParams
Rule 107   types -> T_VARCHAR optParams
Rule 108   types -> T_CHARACTER optParams
Rule 109   types -> T_CHAR optParams
Rule 110   types -> T_CHARACTER T_VARYING optParams
Rule 111   types -> R_INTERVAL intervalFields
Rule 112   intervalFields -> R_YEAR
Rule 113   intervalFields -> R_MONTH
Rule 114   intervalFields -> R_DAY
Rule 115   intervalFields -> R_HOUR
Rule 116   intervalFields -> R_MINUTE
Rule 117   intervalFields -> R_SECOND
Rule 118   intervalFields -> <empty>
Rule 119   optParams -> S_PARIZQ literalList S_PARDER
Rule 120   optParams -> <empty>
Rule 121   colOptionsList -> colOptionsList colOptions
Rule 122   colOptionsList -> colOptions
Rule 123   colOptions -> defaultVal
Rule 124   colOptions -> nullOpt
Rule 125   colOptions -> constraintOpt
Rule 126   colOptions -> primaryOpt
Rule 127   colOptions -> referencesOpt
Rule 128   defaultVal -> R_DEFAULT literal
Rule 129   nullOpt -> R_NOT R_NULL
Rule 130   nullOpt -> R_NULL
Rule 131   constraintOpt -> constrName R_UNIQUE
Rule 132   constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
Rule 133   primaryOpt -> R_PRIMARY R_KEY
Rule 134   referencesOpt -> R_REFERENCES ID
Rule 135   expresion -> datatype
Rule 136   expresion -> expBool
Rule 137   expresion -> S_PARIZQ selectStmt S_PARDER
Rule 138   funcCall -> ID S_PARIZQ paramsList S_PARDER
Rule 139   funcCall -> ID S_PARIZQ S_PARDER
Rule 140   funcCall -> R_NOW S_PARIZQ S_PARDER
Rule 141   funcCall -> R_COUNT S_PARIZQ datatype S_PARDER
Rule 142   funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
Rule 143   funcCall -> R_SUM S_PARIZQ datatype S_PARDER
Rule 144   funcCall -> R_PROM S_PARIZQ datatype S_PARDER
Rule 145   extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
Rule 146   extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
Rule 147   timeStamp -> R_TIMESTAMP STRING
Rule 148   timeStamp -> R_INTERVAL STRING
Rule 149   optsExtract -> R_YEAR
Rule 150   optsExtract -> R_MONTH
Rule 151   optsExtract -> R_DAY
Rule 152   optsExtract -> R_HOUR
Rule 153   optsExtract -> R_MINUTE
Rule 154   optsExtract -> R_SECOND
Rule 155   datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
Rule 156   dateSource -> R_TIMESTAMP STRING
Rule 157   dateSource -> T_DATE STRING
Rule 158   dateSource -> T_TIME STRING
Rule 159   dateSource -> R_INTERVAL STRING
Rule 160   dateSource -> R_NOW S_PARIZQ S_PARDER
Rule 161   current -> R_CURRENT_DATE
Rule 162   current -> R_CURRENT_TIME
Rule 163   current -> timeStamp
Rule 164   literalList -> literalList S_COMA literal
Rule 165   literalList -> literal
Rule 166   literal -> INTEGER
Rule 167   literal -> STRING
Rule 168   literal -> DECIMAL
Rule 169   literal -> CHARACTER
Rule 170   literal -> R_TRUE
Rule 171   literal -> R_FALSE
Rule 172   literal -> R_NULL
Rule 173   paramsList -> paramsList S_COMA datatype
Rule 174   paramsList -> datatype
Rule 175   datatype -> datatype O_SUMA datatype
Rule 176   datatype -> datatype O_RESTA datatype
Rule 177   datatype -> datatype O_PRODUCTO datatype
Rule 178   datatype -> datatype O_DIVISION datatype
Rule 179   datatype -> datatype O_EXPONENTE datatype
Rule 180   datatype -> datatype O_MODULAR datatype
Rule 181   datatype -> datatype OC_CONCATENAR datatype
Rule 182   datatype -> R_CASE caseList optElse R_END
Rule 183   caseList -> caseList caseWhen
Rule 184   caseList -> caseWhen
Rule 185   caseWhen -> R_WHEN expBool R_THEN literal
Rule 186   optElse -> R_ELSE literal
Rule 187   optElse -> <empty>
Rule 188   datatype -> O_RESTA datatype
Rule 189   datatype -> O_SUMA datatype
Rule 190   datatype -> columnName
Rule 191   datatype -> literal
Rule 192   datatype -> funcCall
Rule 193   datatype -> extract
Rule 194   datatype -> datePart
Rule 195   datatype -> current
Rule 196   datatype -> S_PARIZQ datatype S_PARDER
Rule 197   expComp -> datatype OL_MENORQUE datatype
Rule 198   expComp -> datatype OL_MAYORQUE datatype
Rule 199   expComp -> datatype OL_MAYORIGUALQUE datatype
Rule 200   expComp -> datatype OL_MENORIGUALQUE datatype
Rule 201   expComp -> datatype S_IGUAL datatype
Rule 202   expComp -> datatype OL_DISTINTODE datatype
Rule 203   expComp -> datatype R_IS R_DISTINCT R_FROM datatype
Rule 204   expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype
Rule 205   expComp -> datatype R_BETWEEN datatype R_AND datatype
Rule 206   expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype
Rule 207   expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
Rule 208   expComp -> datatype R_ISNULL
Rule 209   expComp -> datatype R_NOTNULL
Rule 210   expComp -> datatype R_IS R_NULL
Rule 211   expComp -> datatype R_IS R_TRUE
Rule 212   expComp -> datatype R_IS R_FALSE
Rule 213   expComp -> datatype R_IS R_UNKNOWN
Rule 214   expComp -> datatype R_IS R_NOT R_NULL
Rule 215   expComp -> datatype R_IS R_NOT R_TRUE
Rule 216   expComp -> datatype R_IS R_NOT R_FALSE
Rule 217   expComp -> datatype R_IS R_NOT R_UNKNOWN
Rule 218   expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 219   expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 220   expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 221   expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 222   expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
Rule 223   expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
Rule 224   expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 225   expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 226   expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 227   expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 228   expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 229   expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 230   expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 231   expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 232   expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 233   expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 234   expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 235   expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
Rule 236   expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
Rule 237   expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
Rule 238   expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
Rule 239   expSubq -> stringExp R_LIKE STRING
Rule 240   stringExp -> STRING
Rule 241   stringExp -> columnName
Rule 242   subqValues -> R_ALL
Rule 243   subqValues -> R_ANY
Rule 244   subqValues -> R_SOME
Rule 245   boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER
Rule 246   boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER
Rule 247   boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
Rule 248   boolean -> expComp
Rule 249   boolean -> expSubq
Rule 250   expBool -> expBool R_AND expBool
Rule 251   expBool -> expBool R_OR expBool
Rule 252   expBool -> R_NOT expBool
Rule 253   expBool -> S_PARIZQ expBool S_PARDER
Rule 254   expBool -> expBool optBoolPredicate
Rule 255   expBool -> boolean
Rule 256   optBoolPredicate -> R_IS R_TRUE
Rule 257   optBoolPredicate -> R_IS R_FALSE
Rule 258   optBoolPredicate -> R_IS R_UNKNOWN
Rule 259   optBoolPredicate -> R_IS R_NOT R_TRUE
Rule 260   optBoolPredicate -> R_IS R_NOT R_FALSE
Rule 261   optBoolPredicate -> R_IS R_NOT R_UNKNOWN
Rule 262   columnName -> ID
Rule 263   columnName -> ID S_PUNTO ID
Rule 264   booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral
Rule 265   booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral
Rule 266   booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral
Rule 267   booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral
Rule 268   booleanCheck -> idOrLiteral S_IGUAL idOrLiteral
Rule 269   booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral
Rule 270   booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
Rule 271   booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
Rule 272   idOrLiteral -> ID
Rule 273   idOrLiteral -> INTEGER
Rule 274   idOrLiteral -> STRING
Rule 275   idOrLiteral -> DECIMAL
Rule 276   idOrLiteral -> CHARACTER
Rule 277   idOrLiteral -> R_TRUE
Rule 278   idOrLiteral -> R_FALSE
Rule 279   alterStmt -> R_ALTER R_DATABASE idOrString alterDb
Rule 280   alterStmt -> R_ALTER R_TABLE idOrString alterTableList
Rule 281   alterStmt -> R_ALTER R_INDEX ifExists ID R_ALTER ID ID
Rule 282   alterStmt -> R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER
Rule 283   alterDb -> R_RENAME R_TO idOrString
Rule 284   alterDb -> R_OWNER R_TO ownerOPts
Rule 285   ownerOPts -> idOrString
Rule 286   ownerOPts -> R_CURRENT_USER
Rule 287   ownerOPts -> R_SESSION_USER
Rule 288   alterTableList -> alterTableList S_COMA alterTable
Rule 289   alterTableList -> alterTable
Rule 290   alterTable -> R_ADD alterAdd
Rule 291   alterTable -> R_ALTER alterAlter
Rule 292   alterTable -> R_DROP alterDrop
Rule 293   alterTable -> R_RENAME alterRename
Rule 294   alterAdd -> R_COLUMN ID types
Rule 295   alterAdd -> createConstraint
Rule 296   alterAdd -> createPrimary
Rule 297   alterAdd -> createForeign
Rule 298   alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER
Rule 299   alterAlter -> R_COLUMN ID R_SET nullOpt
Rule 300   alterAlter -> R_COLUMN ID R_SET defaultVal
Rule 301   alterAlter -> R_COLUMN ID R_TYPE types
Rule 302   alterDrop -> R_CONSTRAINT ID
Rule 303   alterDrop -> R_COLUMN ID
Rule 304   alterRename -> R_COLUMN ID R_TO ID
Rule 305   dropStmt -> R_DROP R_TABLE ifExists idOrString
Rule 306   dropStmt -> R_DROP R_DATABASE ifExists idOrString
Rule 307   dropStmt -> R_DROP R_FUNCTION ifExists idOrString
Rule 308   dropStmt -> R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER
Rule 309   dropStmt -> R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
Rule 310   dropStmt -> R_DROP R_INDEX concurrenly ifExists idOrString
Rule 311   ifExists -> R_IF R_EXISTS
Rule 312   ifExists -> <empty>
Rule 313   concurrenly -> R_CONCURRENTLY
Rule 314   concurrenly -> <empty>
Rule 315   selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
Rule 316   selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
Rule 317   selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
Rule 318   selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
Rule 319   selectStmt -> selectStmt R_UNION allOpt selectStmt
Rule 320   selectStmt -> selectStmt R_INTERSECT allOpt selectStmt
Rule 321   selectStmt -> selectStmt R_EXCEPT allOpt selectStmt
Rule 322   selectStmt -> S_PARIZQ selectStmt S_PARDER
Rule 323   fromCl -> R_FROM tableExp
Rule 324   selectStmt -> R_SELECT selectParams
Rule 325   allOpt -> R_ALL
Rule 326   allOpt -> <empty>
Rule 327   selectParams -> O_PRODUCTO
Rule 328   selectParams -> selectList
Rule 329   selectList -> selectList S_COMA selectListParams optAlias
Rule 330   selectList -> selectListParams optAlias
Rule 331   selectListParams -> expresion
Rule 332   selectListParams -> ID S_PUNTO O_PRODUCTO
Rule 333   optAlias -> R_AS idOrString
Rule 334   optAlias -> idOrString
Rule 335   optAlias -> <empty>
Rule 336   tableExp -> tableExp S_COMA fromBody
Rule 337   tableExp -> fromBody
Rule 338   fromBody -> ID optAlias
Rule 339   fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString
Rule 340   joinList -> joinList2
Rule 341   joinList2 -> joinList2 joinCl
Rule 342   joinList2 -> joinCl
Rule 343   joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool
Rule 344   joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER
Rule 345   joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias
Rule 346   nameList -> nameList S_COMA columnName
Rule 347   nameList -> columnName
Rule 348   joinOpt -> R_INNER
Rule 349   joinOpt -> R_LEFT
Rule 350   joinOpt -> R_LEFT R_OUTER
Rule 351   joinOpt -> R_RIGHT
Rule 352   joinOpt -> R_RIGHT R_OUTER
Rule 353   joinOpt -> R_FULL
Rule 354   joinOpt -> R_FULL R_OUTER
Rule 355   whereCl -> R_WHERE expBool
Rule 356   whereCl -> <empty>
Rule 357   groupByCl -> R_GROUP R_BY groupList havingCl
Rule 358   groupByCl -> <empty>
Rule 359   groupList -> groupList S_COMA columnName
Rule 360   groupList -> groupList S_COMA INTEGER
Rule 361   groupList -> columnName
Rule 362   groupList -> INTEGER
Rule 363   havingCl -> R_HAVING expBool
Rule 364   havingCl -> <empty>
Rule 365   orderByCl -> R_ORDER R_BY orderList
Rule 366   orderByCl -> <empty>
Rule 367   orderList -> orderList S_COMA orderByElem
Rule 368   orderList -> orderByElem
Rule 369   orderByElem -> columnName orderOpts orderNull
Rule 370   orderByElem -> INTEGER orderOpts orderNull
Rule 371   orderOpts -> R_ASC
Rule 372   orderOpts -> R_DESC
Rule 373   orderOpts -> <empty>
Rule 374   orderNull -> R_NULL R_FIRST
Rule 375   orderNull -> R_NULL R_LAST
Rule 376   orderNull -> <empty>
Rule 377   limitCl -> R_LIMIT INTEGER offsetLimit
Rule 378   limitCl -> R_LIMIT R_ALL offsetLimit
Rule 379   limitCl -> <empty>
Rule 380   offsetLimit -> R_OFFSET INTEGER
Rule 381   offsetLimit -> <empty>
Rule 382   insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
Rule 383   paramsColumn -> S_PARIZQ idList S_PARDER
Rule 384   paramsColumn -> <empty>
Rule 385   updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl
Rule 386   updateCols -> updateCols S_COMA updateVals
Rule 387   updateCols -> updateVals
Rule 388   updateVals -> ID S_IGUAL updateExp
Rule 389   updateExp -> datatype
Rule 390   updateExp -> R_DEFAULT
Rule 391   deleteStmt -> R_DELETE fromCl whereCl
Rule 392   truncateStmt -> R_TRUNCATE tableOpt ID
Rule 393   tableOpt -> R_TABLE
Rule 394   tableOpt -> <empty>
Rule 395   showStmt -> R_SHOW R_DATABASES likeOpt
Rule 396   likeOpt -> R_LIKE STRING
Rule 397   likeOpt -> <empty>
Rule 398   useStmt -> R_USE ID
Rule 399   functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
Rule 400   functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
Rule 401   bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd
Rule 402   params_list -> params_list S_COMA param_item
Rule 403   params_list -> param_item
Rule 404   param_item -> ID types
Rule 405   returnsStmt -> R_RETURNS types
Rule 406   returnsStmt -> <empty>
Rule 407   declareStmt -> R_DECLARE declaracion_list
Rule 408   declareStmt -> <empty>
Rule 409   declaracion_list -> declaracion_list declaracion_item
Rule 410   declaracion_list -> declaracion_item
Rule 411   declaracion_item -> ID constant_opt types null_opt default_item S_PUNTOCOMA
Rule 412   declaracion_item -> ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA
Rule 413   constant_opt -> R_CONSTANT
Rule 414   constant_opt -> <empty>
Rule 415   null_opt -> R_NOT R_NULL
Rule 416   null_opt -> <empty>
Rule 417   default_opt -> R_DEFAULT
Rule 418   default_opt -> S_DOSPUNTOS S_IGUAL
Rule 419   default_opt -> S_IGUAL
Rule 420   default_item -> default_opt expresion
Rule 421   default_item -> <empty>
Rule 422   alias_declaracion -> ID
Rule 423   alias_declaracion -> IDEspecial
Rule 424   beginStmt -> beginStmt beginItem
Rule 425   beginStmt -> beginItem
Rule 426   beginItem -> stmt
Rule 427   beginItem -> returnStmt S_PUNTOCOMA
Rule 428   beginItem -> asignacionStmt S_PUNTOCOMA
Rule 429   returnStmt -> R_RETURN expresion
Rule 430   labelEnd -> <empty>
Rule 431   labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA
Rule 432   asignacionStmt -> ID S_DOSPUNTOS S_IGUAL expresion
Rule 433   asignacionStmt -> ID S_IGUAL expresion
Rule 434   procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
Rule 435   procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
Rule 436   endProcedure -> <empty>
Rule 437   endProcedure -> R_END S_PUNTOCOMA
Rule 438   dolarEndProcedure -> <empty>
Rule 439   dolarEndProcedure -> S_DOLAR S_DOLAR
Rule 440   beginWord -> <empty>
Rule 441   beginWord -> R_BEGIN
Rule 442   languageProcedure -> R_LANGUAGE ID
Rule 443   languageProcedure -> <empty>
Rule 444   executePL -> R_EXECUTE funcCall
Rule 445   executeParams -> executeParams S_COMA executeItem
Rule 446   executeParams -> executeItem
Rule 447   executeItem -> expresion

Terminals, with rules where they appear

CHARACTER            : 45 169 276
COMMENT              : 
DECIMAL              : 168 275
ID                   : 43 48 48 63 66 68 70 78 88 89 91 92 93 134 138 139 262 263 263 272 281 281 281 282 282 294 298 299 300 301 302 303 304 304 332 338 382 388 392 398 399 400 404 411 412 422 431 432 433 434 435 442
IDEspecial           : 423
INTEGER              : 73 74 166 273 282 360 362 370 377 380
OC_AND               : 
OC_CONCATENAR        : 181
OC_NOT               : 
OC_OR                : 
OC_SHIFTL            : 
OC_SHIFTR            : 
OC_XOR               : 
OL_DISTINTODE        : 202 223 269
OL_ESIGUAL           : 222
OL_MAYORIGUALQUE     : 199 220 266
OL_MAYORQUE          : 198 219 265
OL_MENORIGUALQUE     : 200 221 267
OL_MENORQUE          : 197 218 264
O_DIVISION           : 178
O_EXPONENTE          : 179
O_MODULAR            : 180
O_PRODUCTO           : 142 177 327 332
O_RESTA              : 176 188
O_SUMA               : 175 189
R_ADD                : 290
R_ALIAS              : 412
R_ALL                : 242 325 378
R_ALTER              : 279 280 281 281 282 282 291
R_AND                : 205 206 207 224 225 226 250
R_ANY                : 243
R_AS                 : 63 333 339 399 400 434 435
R_ASC                : 57 371
R_BEGIN              : 401 441
R_BETWEEN            : 205 206 207 224 225 226
R_BY                 : 357 365
R_CASE               : 182
R_CHECK              : 85 132
R_COLUMN             : 294 299 300 301 303 304
R_CONCURRENTLY       : 313
R_CONSTANT           : 413
R_CONSTRAINT         : 89 302
R_COUNT              : 141 142
R_CREATE             : 46 399 400 434 435
R_CURRENT_DATE       : 161
R_CURRENT_TIME       : 162
R_CURRENT_USER       : 286
R_DATABASE           : 60 279 306
R_DATABASES          : 395
R_DATE_PART          : 155
R_DAY                : 114 151
R_DECLARE            : 407
R_DEFAULT            : 128 390 417
R_DELETE             : 391
R_DESC               : 56 372
R_DISTINCT           : 203 204 227 228 270 271 315
R_DROP               : 292 305 306 307 308 309 310
R_ELSE               : 20 186
R_ELSIF              : 25
R_END                : 17 41 182 401 437
R_ENUM               : 63
R_EXCEPT             : 321
R_EXECUTE            : 444
R_EXISTS             : 64 245 311
R_EXTRACT            : 145 146
R_FALSE              : 171 212 216 235 236 257 260 278
R_FIRST              : 53 374
R_FOR                : 412
R_FOREIGN            : 88
R_FROM               : 145 146 203 204 227 228 270 271 323
R_FULL               : 353 354
R_FUNCTION           : 307 308 399 400
R_GROUP              : 357
R_HASH               : 51
R_HAVING             : 363
R_HOUR               : 115 152
R_IF                 : 17 19 41 64 311
R_IN                 : 246 247
R_INDEX              : 48 281 282 310
R_INHERITS           : 66
R_INNER              : 348
R_INSERT             : 382
R_INTERSECT          : 320
R_INTERVAL           : 111 148 159
R_INTO               : 382
R_IS                 : 203 204 210 211 212 213 214 215 216 217 227 228 229 230 233 234 235 236 237 238 256 257 258 259 260 261 270 271
R_ISNULL             : 208 231
R_JOIN               : 343 344 345
R_KEY                : 87 88 133
R_LANGUAGE           : 431 442
R_LAST               : 54 375
R_LEFT               : 349 350
R_LIKE               : 239 396
R_LIMIT              : 377 378
R_MINUTE             : 116 153
R_MODE               : 73 74
R_MONTH              : 113 150
R_NATURAL            : 345
R_NOT                : 64 129 204 206 214 215 216 217 225 228 230 234 236 238 247 252 259 260 261 271 415
R_NOTNULL            : 209 232
R_NOW                : 140 160
R_NULL               : 129 130 172 210 214 229 230 374 375 415
R_NULLS              : 53 54
R_OFFSET             : 380
R_ON                 : 48 343
R_OR                 : 61 251
R_ORDER              : 365
R_OUTER              : 350 352 354
R_OWNER              : 68 69 70 71 284
R_PRIMARY            : 87 133
R_PROCEDURE          : 309 434 435
R_PROM               : 144
R_REFERENCES         : 88 134
R_RENAME             : 283 293
R_REPLACE            : 61
R_RETURN             : 429
R_RETURNS            : 405
R_RIGHT              : 351 352
R_SECOND             : 117 154
R_SELECT             : 315 316 317 318 324
R_SESSION_USER       : 287
R_SET                : 299 300 385
R_SHOW               : 395
R_SOME               : 244
R_SUM                : 143
R_SYMMETRIC          : 207 226
R_TABLE              : 59 280 305 393
R_THEN               : 19 25 185
R_TIMESTAMP          : 102 147 156
R_TO                 : 283 284 304
R_TRUE               : 170 211 215 233 234 256 259 277
R_TRUNCATE           : 392
R_TYPE               : 63 301
R_UNION              : 319
R_UNIQUE             : 49 86 131 298
R_UNKNOWN            : 213 217 237 238 258 261
R_UPDATE             : 385
R_USE                : 398
R_USING              : 51 344
R_VALUES             : 382
R_WHEN               : 185
R_WHERE              : 355
R_YEAR               : 112 149
STRING               : 44 69 71 147 148 155 156 157 158 159 167 239 240 274 396
S_COMA               : 76 91 155 164 173 288 329 336 346 359 360 367 386 402 445
S_DOLAR              : 399 399 400 400 431 431 434 434 435 435 439 439
S_DOSPUNTOS          : 418 432
S_IGUAL              : 70 71 74 201 268 388 418 419 432 433
S_PARDER             : 19 25 48 59 63 66 85 86 87 88 88 119 132 137 138 139 140 141 142 143 144 145 146 155 160 196 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 245 246 247 253 298 308 309 322 339 344 382 383 399 400 434 435
S_PARIZQ             : 19 25 48 59 63 66 85 86 87 88 88 119 132 137 138 139 140 141 142 143 144 145 146 155 160 196 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 245 246 247 253 298 308 309 322 339 344 382 383 399 400 434 435
S_PUNTO              : 263 332
S_PUNTOCOMA          : 4 5 6 7 8 9 10 11 12 13 16 17 18 28 29 30 31 32 33 34 35 36 37 40 41 42 401 411 412 427 428 431 437
T_BIGINT             : 96
T_BOOLEAN            : 101
T_CHAR               : 109
T_CHARACTER          : 108 110
T_DATE               : 103 157
T_DECIMAL            : 105
T_DOUBLE             : 98
T_INTEGER            : 95
T_MONEY              : 99
T_NUMERIC            : 106
T_PRECISION          : 98
T_REAL               : 97
T_SMALLINT           : 94
T_TEXT               : 100
T_TIME               : 104 158
T_VARCHAR            : 107
T_VARYING            : 110
error                : 

Nonterminals, with rules where they appear

List_body            : 19 20 25 26
Lista_elsif_         : 21 23
alias_declaracion    : 412
allOpt               : 319 320 321
alterAdd             : 290
alterAlter           : 291
alterDb              : 279
alterDrop            : 292
alterRename          : 293
alterStmt            : 6 30
alterTable           : 288 289
alterTableList       : 280 288
asignacionStmt       : 18 42 428
beginItem            : 424 425
beginStmt            : 401 424 434 435
beginWord            : 434 435
bloqueFunction       : 399 400
body                 : 26 27
boolean              : 255
booleanCheck         : 85 132
caseList             : 182 183
caseWhen             : 183 184
colOptions           : 121 122
colOptionsList       : 83 121
columnName           : 146 190 241 343 344 345 346 347 359 361 369
concurrenly          : 310
constant_opt         : 411
constrName           : 85 88 131 132 298
constraintOpt        : 125
createBody           : 46
createColumns        : 78
createConstraint     : 79 295
createForeign        : 82 297
createMode           : 60
createOpts           : 47
createOwner          : 60
createPrimary        : 81 296
createStmt           : 4 28
createTable          : 76 77
createTableList      : 59 76
createUnique         : 80
current              : 195
datatype             : 135 141 143 144 173 174 175 175 176 176 177 177 178 178 179 179 180 180 181 181 188 189 196 197 197 198 198 199 199 200 200 201 201 202 202 203 203 204 204 205 205 205 206 206 206 207 207 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 224 224 225 225 225 226 226 226 227 227 228 228 229 230 231 232 233 234 235 236 237 238 246 247 389
datePart             : 194
dateSource           : 155
declaracion_item     : 409 410
declaracion_list     : 407 409
declareStmt          : 401
defaultVal           : 123 300
default_item         : 411
default_opt          : 420
deleteStmt           : 10 34
dolarEndProcedure    : 434 435
dropStmt             : 7 31
else_                : 19
elsif_               : 23 24
endProcedure         : 434 435
executeItem          : 445 446
executePL            : 16 40
executeParams        : 445
expBool              : 136 185 250 250 251 251 252 253 254 343 355 363
expComp              : 248
expSubq              : 249
expresion            : 19 25 331 420 429 432 433 447
extract              : 193
fromBody             : 336 337 385
fromCl               : 315 316 317 318 391
funcCall             : 192 444
functionStmt         : 14 38
groupByCl            : 315 316 317 318
groupList            : 357 359 360
havingCl             : 357
idList               : 48 86 87 88 88 91 383
idOrLiteral          : 264 264 265 265 266 266 267 267 268 268 269 269 270 270 271 271
idOrString           : 59 60 279 280 283 285 305 306 307 308 309 310 333 334 339
ifExists             : 281 282 305 306 307 308 309 310
ifNotExists          : 59 60 63
ifStmt               : 17 41
indexNullS           : 48
indexasc_desc        : 48
inheritsOpt          : 59
init                 : 0
insertStmt           : 8 32
intervalFields       : 111
joinCl               : 341 342
joinList             : 317 318
joinList2            : 340 341
joinOpt              : 343 344 345
labelEnd             : 401
languageProcedure    : 434 435
likeOpt              : 395
limitCl              : 315 316 317 318
literal              : 128 164 165 185 186 191
literalList          : 119 164
nameList             : 344 346
nullOpt              : 124 299
null_opt             : 411
offsetLimit          : 377 378
optAlias             : 329 330 338 343 344 345
optBoolPredicate     : 254
optElse              : 182
optParams            : 105 106 107 108 109 110
optsExtract          : 145 146
orReplace            : 60 434 435
orderByCl            : 315 316 317
orderByElem          : 367 368
orderList            : 365 367
orderNull            : 369 370
orderOpts            : 369 370
ownerOPts            : 284
param_item           : 402 403
paramsColumn         : 382
paramsList           : 63 138 173 382
params_list          : 399 402 434
primaryOpt           : 126
procedureStmt        : 15 39
referencesOpt        : 127
returnStmt           : 427
returnsStmt          : 399 400
selectList           : 328 329
selectListParams     : 329 330
selectParams         : 315 316 317 318 324
selectStmt           : 13 37 137 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 245 246 247 319 319 320 320 321 321 322 339
showStmt             : 5 29
stmt                 : 2 3 426
stmtList             : 1 2
stringExp            : 239
subqValues           : 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238
tableExp             : 323 336
tableOpt             : 392
timeStamp            : 145 163
truncateStmt         : 11 35
types                : 78 294 301 404 405 411
unique_index         : 48
updateCols           : 385 386
updateExp            : 388
updateStmt           : 9 33
updateVals           : 386 387
useStmt              : 12 36
using_hash_index     : 48
whereCl              : 48 315 316 317 318 385 391

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . stmtList
    (2) stmtList -> . stmtList stmt
    (3) stmtList -> . stmt
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . procedureStmt
    (16) stmt -> . executePL S_PUNTOCOMA
    (17) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (18) stmt -> . asignacionStmt S_PUNTOCOMA
    (46) createStmt -> . R_CREATE createBody
    (395) showStmt -> . R_SHOW R_DATABASES likeOpt
    (279) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (280) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (281) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID ID
    (282) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER
    (305) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (306) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (307) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString
    (308) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER
    (309) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (310) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (382) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (385) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (391) deleteStmt -> . R_DELETE fromCl whereCl
    (392) truncateStmt -> . R_TRUNCATE tableOpt ID
    (398) useStmt -> . R_USE ID
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams
    (399) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (400) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (434) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (444) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
    (432) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (433) asignacionStmt -> . ID S_IGUAL expresion

    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 24
    R_INSERT        shift and go to state 26
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18
    ID              shift and go to state 23

    init                           shift and go to state 1
    stmtList                       shift and go to state 2
    stmt                           shift and go to state 3
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    procedureStmt                  shift and go to state 15
    executePL                      shift and go to state 16
    ifStmt                         shift and go to state 17
    asignacionStmt                 shift and go to state 19

state 1

    (0) S' -> init .



state 2

    (1) init -> stmtList .
    (2) stmtList -> stmtList . stmt
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . procedureStmt
    (16) stmt -> . executePL S_PUNTOCOMA
    (17) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (18) stmt -> . asignacionStmt S_PUNTOCOMA
    (46) createStmt -> . R_CREATE createBody
    (395) showStmt -> . R_SHOW R_DATABASES likeOpt
    (279) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (280) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (281) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID ID
    (282) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER
    (305) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (306) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (307) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString
    (308) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER
    (309) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (310) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (382) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (385) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (391) deleteStmt -> . R_DELETE fromCl whereCl
    (392) truncateStmt -> . R_TRUNCATE tableOpt ID
    (398) useStmt -> . R_USE ID
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams
    (399) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (400) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (434) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (444) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
    (432) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (433) asignacionStmt -> . ID S_IGUAL expresion

    $end            reduce using rule 1 (init -> stmtList .)
    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 24
    R_INSERT        shift and go to state 26
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18
    ID              shift and go to state 23

    stmt                           shift and go to state 33
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    procedureStmt                  shift and go to state 15
    executePL                      shift and go to state 16
    ifStmt                         shift and go to state 17
    asignacionStmt                 shift and go to state 19

state 3

    (3) stmtList -> stmt .

    R_CREATE        reduce using rule 3 (stmtList -> stmt .)
    R_SHOW          reduce using rule 3 (stmtList -> stmt .)
    R_ALTER         reduce using rule 3 (stmtList -> stmt .)
    R_DROP          reduce using rule 3 (stmtList -> stmt .)
    R_INSERT        reduce using rule 3 (stmtList -> stmt .)
    R_UPDATE        reduce using rule 3 (stmtList -> stmt .)
    R_DELETE        reduce using rule 3 (stmtList -> stmt .)
    R_TRUNCATE      reduce using rule 3 (stmtList -> stmt .)
    R_USE           reduce using rule 3 (stmtList -> stmt .)
    R_SELECT        reduce using rule 3 (stmtList -> stmt .)
    S_PARIZQ        reduce using rule 3 (stmtList -> stmt .)
    R_EXECUTE       reduce using rule 3 (stmtList -> stmt .)
    R_IF            reduce using rule 3 (stmtList -> stmt .)
    ID              reduce using rule 3 (stmtList -> stmt .)
    $end            reduce using rule 3 (stmtList -> stmt .)


state 4

    (4) stmt -> createStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 34


state 5

    (5) stmt -> showStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 35


state 6

    (6) stmt -> alterStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 36


state 7

    (7) stmt -> dropStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 37


state 8

    (8) stmt -> insertStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 38


state 9

    (9) stmt -> updateStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 39


state 10

    (10) stmt -> deleteStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 40


state 11

    (11) stmt -> truncateStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 41


state 12

    (12) stmt -> useStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 42


state 13

    (13) stmt -> selectStmt . S_PUNTOCOMA
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     shift and go to state 43
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 14

    (14) stmt -> functionStmt .

    R_CREATE        reduce using rule 14 (stmt -> functionStmt .)
    R_SHOW          reduce using rule 14 (stmt -> functionStmt .)
    R_ALTER         reduce using rule 14 (stmt -> functionStmt .)
    R_DROP          reduce using rule 14 (stmt -> functionStmt .)
    R_INSERT        reduce using rule 14 (stmt -> functionStmt .)
    R_UPDATE        reduce using rule 14 (stmt -> functionStmt .)
    R_DELETE        reduce using rule 14 (stmt -> functionStmt .)
    R_TRUNCATE      reduce using rule 14 (stmt -> functionStmt .)
    R_USE           reduce using rule 14 (stmt -> functionStmt .)
    R_SELECT        reduce using rule 14 (stmt -> functionStmt .)
    S_PARIZQ        reduce using rule 14 (stmt -> functionStmt .)
    R_EXECUTE       reduce using rule 14 (stmt -> functionStmt .)
    R_IF            reduce using rule 14 (stmt -> functionStmt .)
    ID              reduce using rule 14 (stmt -> functionStmt .)
    $end            reduce using rule 14 (stmt -> functionStmt .)
    R_END           reduce using rule 14 (stmt -> functionStmt .)
    R_RETURN        reduce using rule 14 (stmt -> functionStmt .)
    S_DOLAR         reduce using rule 14 (stmt -> functionStmt .)
    R_ELSE          reduce using rule 14 (stmt -> functionStmt .)
    R_ELSIF         reduce using rule 14 (stmt -> functionStmt .)


state 15

    (15) stmt -> procedureStmt .

    R_CREATE        reduce using rule 15 (stmt -> procedureStmt .)
    R_SHOW          reduce using rule 15 (stmt -> procedureStmt .)
    R_ALTER         reduce using rule 15 (stmt -> procedureStmt .)
    R_DROP          reduce using rule 15 (stmt -> procedureStmt .)
    R_INSERT        reduce using rule 15 (stmt -> procedureStmt .)
    R_UPDATE        reduce using rule 15 (stmt -> procedureStmt .)
    R_DELETE        reduce using rule 15 (stmt -> procedureStmt .)
    R_TRUNCATE      reduce using rule 15 (stmt -> procedureStmt .)
    R_USE           reduce using rule 15 (stmt -> procedureStmt .)
    R_SELECT        reduce using rule 15 (stmt -> procedureStmt .)
    S_PARIZQ        reduce using rule 15 (stmt -> procedureStmt .)
    R_EXECUTE       reduce using rule 15 (stmt -> procedureStmt .)
    R_IF            reduce using rule 15 (stmt -> procedureStmt .)
    ID              reduce using rule 15 (stmt -> procedureStmt .)
    $end            reduce using rule 15 (stmt -> procedureStmt .)
    R_END           reduce using rule 15 (stmt -> procedureStmt .)
    R_RETURN        reduce using rule 15 (stmt -> procedureStmt .)
    S_DOLAR         reduce using rule 15 (stmt -> procedureStmt .)
    R_ELSE          reduce using rule 15 (stmt -> procedureStmt .)
    R_ELSIF         reduce using rule 15 (stmt -> procedureStmt .)


state 16

    (16) stmt -> executePL . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 47


state 17

    (17) stmt -> ifStmt . R_END R_IF S_PUNTOCOMA

    R_END           shift and go to state 48


state 18

    (19) ifStmt -> R_IF . S_PARIZQ expresion S_PARDER R_THEN List_body else_

    S_PARIZQ        shift and go to state 49


state 19

    (18) stmt -> asignacionStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 50


state 20

    (46) createStmt -> R_CREATE . createBody
    (399) functionStmt -> R_CREATE . R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (400) functionStmt -> R_CREATE . R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (434) procedureStmt -> R_CREATE . orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> R_CREATE . orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (47) createBody -> . createOpts
    (61) orReplace -> . R_OR R_REPLACE
    (62) orReplace -> .
    (48) createOpts -> . unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl
    (59) createOpts -> . R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (60) createOpts -> . orReplace R_DATABASE ifNotExists idOrString createOwner createMode
    (63) createOpts -> . R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
    (49) unique_index -> . R_UNIQUE
    (50) unique_index -> .

    R_FUNCTION      shift and go to state 52
    R_OR            shift and go to state 55
    R_PROCEDURE     reduce using rule 62 (orReplace -> .)
    R_DATABASE      reduce using rule 62 (orReplace -> .)
    R_TABLE         shift and go to state 57
    R_TYPE          shift and go to state 58
    R_UNIQUE        shift and go to state 59
    R_INDEX         reduce using rule 50 (unique_index -> .)

    createBody                     shift and go to state 51
    orReplace                      shift and go to state 53
    createOpts                     shift and go to state 54
    unique_index                   shift and go to state 56

state 21

    (395) showStmt -> R_SHOW . R_DATABASES likeOpt

    R_DATABASES     shift and go to state 60


state 22

    (279) alterStmt -> R_ALTER . R_DATABASE idOrString alterDb
    (280) alterStmt -> R_ALTER . R_TABLE idOrString alterTableList
    (281) alterStmt -> R_ALTER . R_INDEX ifExists ID R_ALTER ID ID
    (282) alterStmt -> R_ALTER . R_INDEX ifExists ID R_ALTER ID INTEGER

    R_DATABASE      shift and go to state 61
    R_TABLE         shift and go to state 62
    R_INDEX         shift and go to state 63


state 23

    (432) asignacionStmt -> ID . S_DOSPUNTOS S_IGUAL expresion
    (433) asignacionStmt -> ID . S_IGUAL expresion

    S_DOSPUNTOS     shift and go to state 64
    S_IGUAL         shift and go to state 65


state 24

    (305) dropStmt -> R_DROP . R_TABLE ifExists idOrString
    (306) dropStmt -> R_DROP . R_DATABASE ifExists idOrString
    (307) dropStmt -> R_DROP . R_FUNCTION ifExists idOrString
    (308) dropStmt -> R_DROP . R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER
    (309) dropStmt -> R_DROP . R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (310) dropStmt -> R_DROP . R_INDEX concurrenly ifExists idOrString

    R_TABLE         shift and go to state 66
    R_DATABASE      shift and go to state 67
    R_FUNCTION      shift and go to state 68
    R_PROCEDURE     shift and go to state 69
    R_INDEX         shift and go to state 70


state 25

    (322) selectStmt -> S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 71

state 26

    (382) insertStmt -> R_INSERT . R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER

    R_INTO          shift and go to state 72


state 27

    (385) updateStmt -> R_UPDATE . fromBody R_SET updateCols whereCl
    (338) fromBody -> . ID optAlias
    (339) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 74
    S_PARIZQ        shift and go to state 75

    fromBody                       shift and go to state 73

state 28

    (391) deleteStmt -> R_DELETE . fromCl whereCl
    (323) fromCl -> . R_FROM tableExp

    R_FROM          shift and go to state 77

    fromCl                         shift and go to state 76

state 29

    (392) truncateStmt -> R_TRUNCATE . tableOpt ID
    (393) tableOpt -> . R_TABLE
    (394) tableOpt -> .

    R_TABLE         shift and go to state 79
    ID              reduce using rule 394 (tableOpt -> .)

    tableOpt                       shift and go to state 78

state 30

    (398) useStmt -> R_USE . ID

    ID              shift and go to state 80


state 31

    (315) selectStmt -> R_SELECT . R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> R_SELECT . selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> R_SELECT . selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> R_SELECT . selectParams fromCl joinList whereCl groupByCl limitCl
    (324) selectStmt -> R_SELECT . selectParams
    (327) selectParams -> . O_PRODUCTO
    (328) selectParams -> . selectList
    (329) selectList -> . selectList S_COMA selectListParams optAlias
    (330) selectList -> . selectListParams optAlias
    (331) selectListParams -> . expresion
    (332) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (135) expresion -> . datatype
    (136) expresion -> . expBool
    (137) expresion -> . S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName

    R_DISTINCT      shift and go to state 81
    O_PRODUCTO      shift and go to state 83
    ID              shift and go to state 87
    S_PARIZQ        shift and go to state 90
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    R_NOT           shift and go to state 100
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_EXISTS        shift and go to state 118
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    selectParams                   shift and go to state 82
    selectList                     shift and go to state 84
    selectListParams               shift and go to state 85
    expresion                      shift and go to state 86
    datatype                       shift and go to state 88
    expBool                        shift and go to state 89
    columnName                     shift and go to state 94
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    boolean                        shift and go to state 101
    timeStamp                      shift and go to state 114
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    stringExp                      shift and go to state 123

state 32

    (444) executePL -> R_EXECUTE . funcCall
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER

    ID              shift and go to state 125
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112

    funcCall                       shift and go to state 124

state 33

    (2) stmtList -> stmtList stmt .

    R_CREATE        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_SHOW          reduce using rule 2 (stmtList -> stmtList stmt .)
    R_ALTER         reduce using rule 2 (stmtList -> stmtList stmt .)
    R_DROP          reduce using rule 2 (stmtList -> stmtList stmt .)
    R_INSERT        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_UPDATE        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_DELETE        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_TRUNCATE      reduce using rule 2 (stmtList -> stmtList stmt .)
    R_USE           reduce using rule 2 (stmtList -> stmtList stmt .)
    R_SELECT        reduce using rule 2 (stmtList -> stmtList stmt .)
    S_PARIZQ        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_EXECUTE       reduce using rule 2 (stmtList -> stmtList stmt .)
    R_IF            reduce using rule 2 (stmtList -> stmtList stmt .)
    ID              reduce using rule 2 (stmtList -> stmtList stmt .)
    $end            reduce using rule 2 (stmtList -> stmtList stmt .)


state 34

    (4) stmt -> createStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    ID              reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    $end            reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_END           reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_ELSE          reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)


state 35

    (5) stmt -> showStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    ID              reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    $end            reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_END           reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_ELSE          reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)


state 36

    (6) stmt -> alterStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    ID              reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    $end            reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_END           reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_ELSE          reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)


state 37

    (7) stmt -> dropStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    ID              reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    $end            reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_END           reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_ELSE          reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)


state 38

    (8) stmt -> insertStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    ID              reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    $end            reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_END           reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_ELSE          reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)


state 39

    (9) stmt -> updateStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    ID              reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    $end            reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_END           reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_ELSE          reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)


state 40

    (10) stmt -> deleteStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    ID              reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    $end            reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_END           reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_ELSE          reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)


state 41

    (11) stmt -> truncateStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    ID              reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    $end            reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_END           reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_ELSE          reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)


state 42

    (12) stmt -> useStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    ID              reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    $end            reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_END           reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_ELSE          reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)


state 43

    (13) stmt -> selectStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    ID              reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    $end            reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_END           reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_ELSE          reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)


state 44

    (319) selectStmt -> selectStmt R_UNION . allOpt selectStmt
    (325) allOpt -> . R_ALL
    (326) allOpt -> .

    R_ALL           shift and go to state 127
    R_SELECT        reduce using rule 326 (allOpt -> .)
    S_PARIZQ        reduce using rule 326 (allOpt -> .)

    allOpt                         shift and go to state 126

state 45

    (320) selectStmt -> selectStmt R_INTERSECT . allOpt selectStmt
    (325) allOpt -> . R_ALL
    (326) allOpt -> .

    R_ALL           shift and go to state 127
    R_SELECT        reduce using rule 326 (allOpt -> .)
    S_PARIZQ        reduce using rule 326 (allOpt -> .)

    allOpt                         shift and go to state 128

state 46

    (321) selectStmt -> selectStmt R_EXCEPT . allOpt selectStmt
    (325) allOpt -> . R_ALL
    (326) allOpt -> .

    R_ALL           shift and go to state 127
    R_SELECT        reduce using rule 326 (allOpt -> .)
    S_PARIZQ        reduce using rule 326 (allOpt -> .)

    allOpt                         shift and go to state 129

state 47

    (16) stmt -> executePL S_PUNTOCOMA .

    R_CREATE        reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_SHOW          reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_ALTER         reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_DROP          reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_INSERT        reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_DELETE        reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_USE           reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_SELECT        reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_IF            reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    ID              reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    $end            reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_END           reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_RETURN        reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_ELSE          reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)


state 48

    (17) stmt -> ifStmt R_END . R_IF S_PUNTOCOMA

    R_IF            shift and go to state 130


state 49

    (19) ifStmt -> R_IF S_PARIZQ . expresion S_PARDER R_THEN List_body else_
    (135) expresion -> . datatype
    (136) expresion -> . expBool
    (137) expresion -> . S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName

    S_PARIZQ        shift and go to state 90
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    R_NOT           shift and go to state 100
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_EXISTS        shift and go to state 118
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    expresion                      shift and go to state 131
    datatype                       shift and go to state 88
    expBool                        shift and go to state 89
    columnName                     shift and go to state 94
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    boolean                        shift and go to state 101
    timeStamp                      shift and go to state 114
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    stringExp                      shift and go to state 123

state 50

    (18) stmt -> asignacionStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    ID              reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    $end            reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)


state 51

    (46) createStmt -> R_CREATE createBody .

    S_PUNTOCOMA     reduce using rule 46 (createStmt -> R_CREATE createBody .)


state 52

    (399) functionStmt -> R_CREATE R_FUNCTION . ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (400) functionStmt -> R_CREATE R_FUNCTION . ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction

    ID              shift and go to state 133


state 53

    (434) procedureStmt -> R_CREATE orReplace . R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> R_CREATE orReplace . R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (60) createOpts -> orReplace . R_DATABASE ifNotExists idOrString createOwner createMode

    R_PROCEDURE     shift and go to state 134
    R_DATABASE      shift and go to state 135


state 54

    (47) createBody -> createOpts .

    S_PUNTOCOMA     reduce using rule 47 (createBody -> createOpts .)


state 55

    (61) orReplace -> R_OR . R_REPLACE

    R_REPLACE       shift and go to state 136


state 56

    (48) createOpts -> unique_index . R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    R_INDEX         shift and go to state 137


state 57

    (59) createOpts -> R_TABLE . ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (64) ifNotExists -> . R_IF R_NOT R_EXISTS
    (65) ifNotExists -> .

    R_IF            shift and go to state 139
    ID              reduce using rule 65 (ifNotExists -> .)
    STRING          reduce using rule 65 (ifNotExists -> .)
    CHARACTER       reduce using rule 65 (ifNotExists -> .)

    ifNotExists                    shift and go to state 138

state 58

    (63) createOpts -> R_TYPE . ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
    (64) ifNotExists -> . R_IF R_NOT R_EXISTS
    (65) ifNotExists -> .

    R_IF            shift and go to state 139
    ID              reduce using rule 65 (ifNotExists -> .)

    ifNotExists                    shift and go to state 140

state 59

    (49) unique_index -> R_UNIQUE .

    R_INDEX         reduce using rule 49 (unique_index -> R_UNIQUE .)


state 60

    (395) showStmt -> R_SHOW R_DATABASES . likeOpt
    (396) likeOpt -> . R_LIKE STRING
    (397) likeOpt -> .

    R_LIKE          shift and go to state 142
    S_PUNTOCOMA     reduce using rule 397 (likeOpt -> .)

    likeOpt                        shift and go to state 141

state 61

    (279) alterStmt -> R_ALTER R_DATABASE . idOrString alterDb
    (43) idOrString -> . ID
    (44) idOrString -> . STRING
    (45) idOrString -> . CHARACTER

    ID              shift and go to state 144
    STRING          shift and go to state 145
    CHARACTER       shift and go to state 146

    idOrString                     shift and go to state 143

state 62

    (280) alterStmt -> R_ALTER R_TABLE . idOrString alterTableList
    (43) idOrString -> . ID
    (44) idOrString -> . STRING
    (45) idOrString -> . CHARACTER

    ID              shift and go to state 144
    STRING          shift and go to state 145
    CHARACTER       shift and go to state 146

    idOrString                     shift and go to state 147

state 63

    (281) alterStmt -> R_ALTER R_INDEX . ifExists ID R_ALTER ID ID
    (282) alterStmt -> R_ALTER R_INDEX . ifExists ID R_ALTER ID INTEGER
    (311) ifExists -> . R_IF R_EXISTS
    (312) ifExists -> .

    R_IF            shift and go to state 149
    ID              reduce using rule 312 (ifExists -> .)

    ifExists                       shift and go to state 148

state 64

    (432) asignacionStmt -> ID S_DOSPUNTOS . S_IGUAL expresion

    S_IGUAL         shift and go to state 150


state 65

    (433) asignacionStmt -> ID S_IGUAL . expresion
    (135) expresion -> . datatype
    (136) expresion -> . expBool
    (137) expresion -> . S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName

    S_PARIZQ        shift and go to state 90
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    R_NOT           shift and go to state 100
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_EXISTS        shift and go to state 118
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    expresion                      shift and go to state 151
    datatype                       shift and go to state 88
    expBool                        shift and go to state 89
    columnName                     shift and go to state 94
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    boolean                        shift and go to state 101
    timeStamp                      shift and go to state 114
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    stringExp                      shift and go to state 123

state 66

    (305) dropStmt -> R_DROP R_TABLE . ifExists idOrString
    (311) ifExists -> . R_IF R_EXISTS
    (312) ifExists -> .

    R_IF            shift and go to state 149
    ID              reduce using rule 312 (ifExists -> .)
    STRING          reduce using rule 312 (ifExists -> .)
    CHARACTER       reduce using rule 312 (ifExists -> .)

    ifExists                       shift and go to state 152

state 67

    (306) dropStmt -> R_DROP R_DATABASE . ifExists idOrString
    (311) ifExists -> . R_IF R_EXISTS
    (312) ifExists -> .

    R_IF            shift and go to state 149
    ID              reduce using rule 312 (ifExists -> .)
    STRING          reduce using rule 312 (ifExists -> .)
    CHARACTER       reduce using rule 312 (ifExists -> .)

    ifExists                       shift and go to state 153

state 68

    (307) dropStmt -> R_DROP R_FUNCTION . ifExists idOrString
    (308) dropStmt -> R_DROP R_FUNCTION . ifExists idOrString S_PARIZQ S_PARDER
    (311) ifExists -> . R_IF R_EXISTS
    (312) ifExists -> .

    R_IF            shift and go to state 149
    ID              reduce using rule 312 (ifExists -> .)
    STRING          reduce using rule 312 (ifExists -> .)
    CHARACTER       reduce using rule 312 (ifExists -> .)

    ifExists                       shift and go to state 154

state 69

    (309) dropStmt -> R_DROP R_PROCEDURE . ifExists idOrString S_PARIZQ S_PARDER
    (311) ifExists -> . R_IF R_EXISTS
    (312) ifExists -> .

    R_IF            shift and go to state 149
    ID              reduce using rule 312 (ifExists -> .)
    STRING          reduce using rule 312 (ifExists -> .)
    CHARACTER       reduce using rule 312 (ifExists -> .)

    ifExists                       shift and go to state 155

state 70

    (310) dropStmt -> R_DROP R_INDEX . concurrenly ifExists idOrString
    (313) concurrenly -> . R_CONCURRENTLY
    (314) concurrenly -> .

    R_CONCURRENTLY  shift and go to state 157
    R_IF            reduce using rule 314 (concurrenly -> .)
    ID              reduce using rule 314 (concurrenly -> .)
    STRING          reduce using rule 314 (concurrenly -> .)
    CHARACTER       reduce using rule 314 (concurrenly -> .)

    concurrenly                    shift and go to state 156

state 71

    (322) selectStmt -> S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 158
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 72

    (382) insertStmt -> R_INSERT R_INTO . ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER

    ID              shift and go to state 159


state 73

    (385) updateStmt -> R_UPDATE fromBody . R_SET updateCols whereCl

    R_SET           shift and go to state 160


state 74

    (338) fromBody -> ID . optAlias
    (333) optAlias -> . R_AS idOrString
    (334) optAlias -> . idOrString
    (335) optAlias -> .
    (43) idOrString -> . ID
    (44) idOrString -> . STRING
    (45) idOrString -> . CHARACTER

    R_AS            shift and go to state 162
    R_SET           reduce using rule 335 (optAlias -> .)
    S_COMA          reduce using rule 335 (optAlias -> .)
    R_WHERE         reduce using rule 335 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 335 (optAlias -> .)
    R_NATURAL       reduce using rule 335 (optAlias -> .)
    R_INNER         reduce using rule 335 (optAlias -> .)
    R_LEFT          reduce using rule 335 (optAlias -> .)
    R_RIGHT         reduce using rule 335 (optAlias -> .)
    R_FULL          reduce using rule 335 (optAlias -> .)
    R_GROUP         reduce using rule 335 (optAlias -> .)
    R_ORDER         reduce using rule 335 (optAlias -> .)
    R_LIMIT         reduce using rule 335 (optAlias -> .)
    R_UNION         reduce using rule 335 (optAlias -> .)
    R_INTERSECT     reduce using rule 335 (optAlias -> .)
    R_EXCEPT        reduce using rule 335 (optAlias -> .)
    S_PARDER        reduce using rule 335 (optAlias -> .)
    ID              shift and go to state 144
    STRING          shift and go to state 145
    CHARACTER       shift and go to state 146

    optAlias                       shift and go to state 161
    idOrString                     shift and go to state 163

state 75

    (339) fromBody -> S_PARIZQ . selectStmt S_PARDER R_AS idOrString
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 164

state 76

    (391) deleteStmt -> R_DELETE fromCl . whereCl
    (355) whereCl -> . R_WHERE expBool
    (356) whereCl -> .

    R_WHERE         shift and go to state 166
    S_PUNTOCOMA     reduce using rule 356 (whereCl -> .)

    whereCl                        shift and go to state 165

state 77

    (323) fromCl -> R_FROM . tableExp
    (336) tableExp -> . tableExp S_COMA fromBody
    (337) tableExp -> . fromBody
    (338) fromBody -> . ID optAlias
    (339) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 74
    S_PARIZQ        shift and go to state 75

    tableExp                       shift and go to state 167
    fromBody                       shift and go to state 168

state 78

    (392) truncateStmt -> R_TRUNCATE tableOpt . ID

    ID              shift and go to state 169


state 79

    (393) tableOpt -> R_TABLE .

    ID              reduce using rule 393 (tableOpt -> R_TABLE .)


state 80

    (398) useStmt -> R_USE ID .

    S_PUNTOCOMA     reduce using rule 398 (useStmt -> R_USE ID .)


state 81

    (315) selectStmt -> R_SELECT R_DISTINCT . selectParams fromCl whereCl groupByCl orderByCl limitCl
    (327) selectParams -> . O_PRODUCTO
    (328) selectParams -> . selectList
    (329) selectList -> . selectList S_COMA selectListParams optAlias
    (330) selectList -> . selectListParams optAlias
    (331) selectListParams -> . expresion
    (332) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (135) expresion -> . datatype
    (136) expresion -> . expBool
    (137) expresion -> . S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName

    O_PRODUCTO      shift and go to state 83
    ID              shift and go to state 87
    S_PARIZQ        shift and go to state 90
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    R_NOT           shift and go to state 100
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_EXISTS        shift and go to state 118
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    selectParams                   shift and go to state 170
    selectList                     shift and go to state 84
    selectListParams               shift and go to state 85
    expresion                      shift and go to state 86
    datatype                       shift and go to state 88
    expBool                        shift and go to state 89
    columnName                     shift and go to state 94
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    boolean                        shift and go to state 101
    timeStamp                      shift and go to state 114
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    stringExp                      shift and go to state 123

state 82

    (316) selectStmt -> R_SELECT selectParams . fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> R_SELECT selectParams . fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> R_SELECT selectParams . fromCl joinList whereCl groupByCl limitCl
    (324) selectStmt -> R_SELECT selectParams .
    (323) fromCl -> . R_FROM tableExp

    S_PUNTOCOMA     reduce using rule 324 (selectStmt -> R_SELECT selectParams .)
    R_UNION         reduce using rule 324 (selectStmt -> R_SELECT selectParams .)
    R_INTERSECT     reduce using rule 324 (selectStmt -> R_SELECT selectParams .)
    R_EXCEPT        reduce using rule 324 (selectStmt -> R_SELECT selectParams .)
    S_PARDER        reduce using rule 324 (selectStmt -> R_SELECT selectParams .)
    R_FROM          shift and go to state 77

    fromCl                         shift and go to state 171

state 83

    (327) selectParams -> O_PRODUCTO .

    R_FROM          reduce using rule 327 (selectParams -> O_PRODUCTO .)
    S_PUNTOCOMA     reduce using rule 327 (selectParams -> O_PRODUCTO .)
    R_UNION         reduce using rule 327 (selectParams -> O_PRODUCTO .)
    R_INTERSECT     reduce using rule 327 (selectParams -> O_PRODUCTO .)
    R_EXCEPT        reduce using rule 327 (selectParams -> O_PRODUCTO .)
    S_PARDER        reduce using rule 327 (selectParams -> O_PRODUCTO .)


state 84

    (328) selectParams -> selectList .
    (329) selectList -> selectList . S_COMA selectListParams optAlias

    R_FROM          reduce using rule 328 (selectParams -> selectList .)
    S_PUNTOCOMA     reduce using rule 328 (selectParams -> selectList .)
    R_UNION         reduce using rule 328 (selectParams -> selectList .)
    R_INTERSECT     reduce using rule 328 (selectParams -> selectList .)
    R_EXCEPT        reduce using rule 328 (selectParams -> selectList .)
    S_PARDER        reduce using rule 328 (selectParams -> selectList .)
    S_COMA          shift and go to state 172


state 85

    (330) selectList -> selectListParams . optAlias
    (333) optAlias -> . R_AS idOrString
    (334) optAlias -> . idOrString
    (335) optAlias -> .
    (43) idOrString -> . ID
    (44) idOrString -> . STRING
    (45) idOrString -> . CHARACTER

    R_AS            shift and go to state 162
    S_COMA          reduce using rule 335 (optAlias -> .)
    R_FROM          reduce using rule 335 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 335 (optAlias -> .)
    R_UNION         reduce using rule 335 (optAlias -> .)
    R_INTERSECT     reduce using rule 335 (optAlias -> .)
    R_EXCEPT        reduce using rule 335 (optAlias -> .)
    S_PARDER        reduce using rule 335 (optAlias -> .)
    ID              shift and go to state 144
    STRING          shift and go to state 145
    CHARACTER       shift and go to state 146

    optAlias                       shift and go to state 173
    idOrString                     shift and go to state 163

state 86

    (331) selectListParams -> expresion .

    R_AS            reduce using rule 331 (selectListParams -> expresion .)
    ID              reduce using rule 331 (selectListParams -> expresion .)
    STRING          reduce using rule 331 (selectListParams -> expresion .)
    CHARACTER       reduce using rule 331 (selectListParams -> expresion .)
    S_COMA          reduce using rule 331 (selectListParams -> expresion .)
    R_FROM          reduce using rule 331 (selectListParams -> expresion .)
    S_PUNTOCOMA     reduce using rule 331 (selectListParams -> expresion .)
    R_UNION         reduce using rule 331 (selectListParams -> expresion .)
    R_INTERSECT     reduce using rule 331 (selectListParams -> expresion .)
    R_EXCEPT        reduce using rule 331 (selectListParams -> expresion .)
    S_PARDER        reduce using rule 331 (selectListParams -> expresion .)


state 87

    (332) selectListParams -> ID . S_PUNTO O_PRODUCTO
    (262) columnName -> ID .
    (263) columnName -> ID . S_PUNTO ID
    (138) funcCall -> ID . S_PARIZQ paramsList S_PARDER
    (139) funcCall -> ID . S_PARIZQ S_PARDER

    S_PUNTO         shift and go to state 174
    O_SUMA          reduce using rule 262 (columnName -> ID .)
    O_RESTA         reduce using rule 262 (columnName -> ID .)
    O_PRODUCTO      reduce using rule 262 (columnName -> ID .)
    O_DIVISION      reduce using rule 262 (columnName -> ID .)
    O_EXPONENTE     reduce using rule 262 (columnName -> ID .)
    O_MODULAR       reduce using rule 262 (columnName -> ID .)
    OC_CONCATENAR   reduce using rule 262 (columnName -> ID .)
    R_IN            reduce using rule 262 (columnName -> ID .)
    R_NOT           reduce using rule 262 (columnName -> ID .)
    OL_MENORQUE     reduce using rule 262 (columnName -> ID .)
    OL_MAYORQUE     reduce using rule 262 (columnName -> ID .)
    OL_MAYORIGUALQUE reduce using rule 262 (columnName -> ID .)
    OL_MENORIGUALQUE reduce using rule 262 (columnName -> ID .)
    S_IGUAL         reduce using rule 262 (columnName -> ID .)
    OL_DISTINTODE   reduce using rule 262 (columnName -> ID .)
    R_IS            reduce using rule 262 (columnName -> ID .)
    R_BETWEEN       reduce using rule 262 (columnName -> ID .)
    R_ISNULL        reduce using rule 262 (columnName -> ID .)
    R_NOTNULL       reduce using rule 262 (columnName -> ID .)
    OL_ESIGUAL      reduce using rule 262 (columnName -> ID .)
    R_AS            reduce using rule 262 (columnName -> ID .)
    ID              reduce using rule 262 (columnName -> ID .)
    STRING          reduce using rule 262 (columnName -> ID .)
    CHARACTER       reduce using rule 262 (columnName -> ID .)
    S_COMA          reduce using rule 262 (columnName -> ID .)
    R_FROM          reduce using rule 262 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 262 (columnName -> ID .)
    R_UNION         reduce using rule 262 (columnName -> ID .)
    R_INTERSECT     reduce using rule 262 (columnName -> ID .)
    R_EXCEPT        reduce using rule 262 (columnName -> ID .)
    S_PARDER        reduce using rule 262 (columnName -> ID .)
    R_LIKE          reduce using rule 262 (columnName -> ID .)
    S_PARIZQ        shift and go to state 175


state 88

    (135) expresion -> datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype
    (246) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (197) expComp -> datatype . OL_MENORQUE datatype
    (198) expComp -> datatype . OL_MAYORQUE datatype
    (199) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (200) expComp -> datatype . OL_MENORIGUALQUE datatype
    (201) expComp -> datatype . S_IGUAL datatype
    (202) expComp -> datatype . OL_DISTINTODE datatype
    (203) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (206) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> datatype . R_ISNULL
    (209) expComp -> datatype . R_NOTNULL
    (210) expComp -> datatype . R_IS R_NULL
    (211) expComp -> datatype . R_IS R_TRUE
    (212) expComp -> datatype . R_IS R_FALSE
    (213) expComp -> datatype . R_IS R_UNKNOWN
    (214) expComp -> datatype . R_IS R_NOT R_NULL
    (215) expComp -> datatype . R_IS R_NOT R_TRUE
    (216) expComp -> datatype . R_IS R_NOT R_FALSE
    (217) expComp -> datatype . R_IS R_NOT R_UNKNOWN
    (218) expSubq -> datatype . OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> datatype . OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> datatype . OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> datatype . OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> datatype . OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> datatype . OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> datatype . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> datatype . R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> datatype . R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> datatype . R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> datatype . R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> datatype . R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> datatype . R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> datatype . R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> datatype . R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> datatype . R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> datatype . R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> datatype . R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> datatype . R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_AS            reduce using rule 135 (expresion -> datatype .)
    ID              reduce using rule 135 (expresion -> datatype .)
    STRING          reduce using rule 135 (expresion -> datatype .)
    CHARACTER       reduce using rule 135 (expresion -> datatype .)
    S_COMA          reduce using rule 135 (expresion -> datatype .)
    R_FROM          reduce using rule 135 (expresion -> datatype .)
    S_PUNTOCOMA     reduce using rule 135 (expresion -> datatype .)
    R_UNION         reduce using rule 135 (expresion -> datatype .)
    R_INTERSECT     reduce using rule 135 (expresion -> datatype .)
    R_EXCEPT        reduce using rule 135 (expresion -> datatype .)
    S_PARDER        reduce using rule 135 (expresion -> datatype .)
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182
    R_IN            shift and go to state 183
    R_NOT           shift and go to state 184
    OL_MENORQUE     shift and go to state 185
    OL_MAYORQUE     shift and go to state 186
    OL_MAYORIGUALQUE shift and go to state 187
    OL_MENORIGUALQUE shift and go to state 188
    S_IGUAL         shift and go to state 189
    OL_DISTINTODE   shift and go to state 190
    R_IS            shift and go to state 191
    R_BETWEEN       shift and go to state 192
    R_ISNULL        shift and go to state 193
    R_NOTNULL       shift and go to state 194
    OL_ESIGUAL      shift and go to state 195


state 89

    (136) expresion -> expBool .
    (250) expBool -> expBool . R_AND expBool
    (251) expBool -> expBool . R_OR expBool
    (254) expBool -> expBool . optBoolPredicate
    (256) optBoolPredicate -> . R_IS R_TRUE
    (257) optBoolPredicate -> . R_IS R_FALSE
    (258) optBoolPredicate -> . R_IS R_UNKNOWN
    (259) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (260) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (261) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AS            reduce using rule 136 (expresion -> expBool .)
    ID              reduce using rule 136 (expresion -> expBool .)
    STRING          reduce using rule 136 (expresion -> expBool .)
    CHARACTER       reduce using rule 136 (expresion -> expBool .)
    S_COMA          reduce using rule 136 (expresion -> expBool .)
    R_FROM          reduce using rule 136 (expresion -> expBool .)
    S_PUNTOCOMA     reduce using rule 136 (expresion -> expBool .)
    R_UNION         reduce using rule 136 (expresion -> expBool .)
    R_INTERSECT     reduce using rule 136 (expresion -> expBool .)
    R_EXCEPT        reduce using rule 136 (expresion -> expBool .)
    S_PARDER        reduce using rule 136 (expresion -> expBool .)
    R_AND           shift and go to state 196
    R_OR            shift and go to state 197
    R_IS            shift and go to state 199

    optBoolPredicate               shift and go to state 198

state 90

    (137) expresion -> S_PARIZQ . selectStmt S_PARDER
    (196) datatype -> S_PARIZQ . datatype S_PARDER
    (253) expBool -> S_PARIZQ . expBool S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 200
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    R_NOT           shift and go to state 100
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_EXISTS        shift and go to state 118
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    selectStmt                     shift and go to state 201
    datatype                       shift and go to state 202
    expBool                        shift and go to state 203
    columnName                     shift and go to state 94
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    boolean                        shift and go to state 101
    timeStamp                      shift and go to state 114
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    stringExp                      shift and go to state 123

state 91

    (189) datatype -> O_SUMA . datatype
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 204
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 92

    (188) datatype -> O_RESTA . datatype
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 208
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 93

    (182) datatype -> R_CASE . caseList optElse R_END
    (183) caseList -> . caseList caseWhen
    (184) caseList -> . caseWhen
    (185) caseWhen -> . R_WHEN expBool R_THEN literal

    R_WHEN          shift and go to state 211

    caseList                       shift and go to state 209
    caseWhen                       shift and go to state 210

state 94

    (190) datatype -> columnName .
    (241) stringExp -> columnName .

    O_SUMA          reduce using rule 190 (datatype -> columnName .)
    O_RESTA         reduce using rule 190 (datatype -> columnName .)
    O_PRODUCTO      reduce using rule 190 (datatype -> columnName .)
    O_DIVISION      reduce using rule 190 (datatype -> columnName .)
    O_EXPONENTE     reduce using rule 190 (datatype -> columnName .)
    O_MODULAR       reduce using rule 190 (datatype -> columnName .)
    OC_CONCATENAR   reduce using rule 190 (datatype -> columnName .)
    R_IN            reduce using rule 190 (datatype -> columnName .)
    R_NOT           reduce using rule 190 (datatype -> columnName .)
    OL_MENORQUE     reduce using rule 190 (datatype -> columnName .)
    OL_MAYORQUE     reduce using rule 190 (datatype -> columnName .)
    OL_MAYORIGUALQUE reduce using rule 190 (datatype -> columnName .)
    OL_MENORIGUALQUE reduce using rule 190 (datatype -> columnName .)
    S_IGUAL         reduce using rule 190 (datatype -> columnName .)
    OL_DISTINTODE   reduce using rule 190 (datatype -> columnName .)
    R_IS            reduce using rule 190 (datatype -> columnName .)
    R_BETWEEN       reduce using rule 190 (datatype -> columnName .)
    R_ISNULL        reduce using rule 190 (datatype -> columnName .)
    R_NOTNULL       reduce using rule 190 (datatype -> columnName .)
    OL_ESIGUAL      reduce using rule 190 (datatype -> columnName .)
    R_AS            reduce using rule 190 (datatype -> columnName .)
    ID              reduce using rule 190 (datatype -> columnName .)
    STRING          reduce using rule 190 (datatype -> columnName .)
    CHARACTER       reduce using rule 190 (datatype -> columnName .)
    S_COMA          reduce using rule 190 (datatype -> columnName .)
    R_FROM          reduce using rule 190 (datatype -> columnName .)
    S_PUNTOCOMA     reduce using rule 190 (datatype -> columnName .)
    R_UNION         reduce using rule 190 (datatype -> columnName .)
    R_INTERSECT     reduce using rule 190 (datatype -> columnName .)
    R_EXCEPT        reduce using rule 190 (datatype -> columnName .)
    S_PARDER        reduce using rule 190 (datatype -> columnName .)
    R_LIKE          reduce using rule 241 (stringExp -> columnName .)


state 95

    (191) datatype -> literal .

    O_SUMA          reduce using rule 191 (datatype -> literal .)
    O_RESTA         reduce using rule 191 (datatype -> literal .)
    O_PRODUCTO      reduce using rule 191 (datatype -> literal .)
    O_DIVISION      reduce using rule 191 (datatype -> literal .)
    O_EXPONENTE     reduce using rule 191 (datatype -> literal .)
    O_MODULAR       reduce using rule 191 (datatype -> literal .)
    OC_CONCATENAR   reduce using rule 191 (datatype -> literal .)
    R_IN            reduce using rule 191 (datatype -> literal .)
    R_NOT           reduce using rule 191 (datatype -> literal .)
    OL_MENORQUE     reduce using rule 191 (datatype -> literal .)
    OL_MAYORQUE     reduce using rule 191 (datatype -> literal .)
    OL_MAYORIGUALQUE reduce using rule 191 (datatype -> literal .)
    OL_MENORIGUALQUE reduce using rule 191 (datatype -> literal .)
    S_IGUAL         reduce using rule 191 (datatype -> literal .)
    OL_DISTINTODE   reduce using rule 191 (datatype -> literal .)
    R_IS            reduce using rule 191 (datatype -> literal .)
    R_BETWEEN       reduce using rule 191 (datatype -> literal .)
    R_ISNULL        reduce using rule 191 (datatype -> literal .)
    R_NOTNULL       reduce using rule 191 (datatype -> literal .)
    OL_ESIGUAL      reduce using rule 191 (datatype -> literal .)
    R_AS            reduce using rule 191 (datatype -> literal .)
    ID              reduce using rule 191 (datatype -> literal .)
    STRING          reduce using rule 191 (datatype -> literal .)
    CHARACTER       reduce using rule 191 (datatype -> literal .)
    S_COMA          reduce using rule 191 (datatype -> literal .)
    R_FROM          reduce using rule 191 (datatype -> literal .)
    S_PUNTOCOMA     reduce using rule 191 (datatype -> literal .)
    R_UNION         reduce using rule 191 (datatype -> literal .)
    R_INTERSECT     reduce using rule 191 (datatype -> literal .)
    R_EXCEPT        reduce using rule 191 (datatype -> literal .)
    S_PARDER        reduce using rule 191 (datatype -> literal .)
    R_AND           reduce using rule 191 (datatype -> literal .)
    R_OR            reduce using rule 191 (datatype -> literal .)
    R_GROUP         reduce using rule 191 (datatype -> literal .)
    R_ORDER         reduce using rule 191 (datatype -> literal .)
    R_LIMIT         reduce using rule 191 (datatype -> literal .)
    R_THEN          reduce using rule 191 (datatype -> literal .)
    R_NATURAL       reduce using rule 191 (datatype -> literal .)
    R_INNER         reduce using rule 191 (datatype -> literal .)
    R_LEFT          reduce using rule 191 (datatype -> literal .)
    R_RIGHT         reduce using rule 191 (datatype -> literal .)
    R_FULL          reduce using rule 191 (datatype -> literal .)
    R_WHERE         reduce using rule 191 (datatype -> literal .)
    R_ALL           reduce using rule 191 (datatype -> literal .)
    R_ANY           reduce using rule 191 (datatype -> literal .)
    R_SOME          reduce using rule 191 (datatype -> literal .)


state 96

    (192) datatype -> funcCall .

    O_SUMA          reduce using rule 192 (datatype -> funcCall .)
    O_RESTA         reduce using rule 192 (datatype -> funcCall .)
    O_PRODUCTO      reduce using rule 192 (datatype -> funcCall .)
    O_DIVISION      reduce using rule 192 (datatype -> funcCall .)
    O_EXPONENTE     reduce using rule 192 (datatype -> funcCall .)
    O_MODULAR       reduce using rule 192 (datatype -> funcCall .)
    OC_CONCATENAR   reduce using rule 192 (datatype -> funcCall .)
    R_IN            reduce using rule 192 (datatype -> funcCall .)
    R_NOT           reduce using rule 192 (datatype -> funcCall .)
    OL_MENORQUE     reduce using rule 192 (datatype -> funcCall .)
    OL_MAYORQUE     reduce using rule 192 (datatype -> funcCall .)
    OL_MAYORIGUALQUE reduce using rule 192 (datatype -> funcCall .)
    OL_MENORIGUALQUE reduce using rule 192 (datatype -> funcCall .)
    S_IGUAL         reduce using rule 192 (datatype -> funcCall .)
    OL_DISTINTODE   reduce using rule 192 (datatype -> funcCall .)
    R_IS            reduce using rule 192 (datatype -> funcCall .)
    R_BETWEEN       reduce using rule 192 (datatype -> funcCall .)
    R_ISNULL        reduce using rule 192 (datatype -> funcCall .)
    R_NOTNULL       reduce using rule 192 (datatype -> funcCall .)
    OL_ESIGUAL      reduce using rule 192 (datatype -> funcCall .)
    R_AS            reduce using rule 192 (datatype -> funcCall .)
    ID              reduce using rule 192 (datatype -> funcCall .)
    STRING          reduce using rule 192 (datatype -> funcCall .)
    CHARACTER       reduce using rule 192 (datatype -> funcCall .)
    S_COMA          reduce using rule 192 (datatype -> funcCall .)
    R_FROM          reduce using rule 192 (datatype -> funcCall .)
    S_PUNTOCOMA     reduce using rule 192 (datatype -> funcCall .)
    R_UNION         reduce using rule 192 (datatype -> funcCall .)
    R_INTERSECT     reduce using rule 192 (datatype -> funcCall .)
    R_EXCEPT        reduce using rule 192 (datatype -> funcCall .)
    S_PARDER        reduce using rule 192 (datatype -> funcCall .)
    R_AND           reduce using rule 192 (datatype -> funcCall .)
    R_OR            reduce using rule 192 (datatype -> funcCall .)
    R_GROUP         reduce using rule 192 (datatype -> funcCall .)
    R_ORDER         reduce using rule 192 (datatype -> funcCall .)
    R_LIMIT         reduce using rule 192 (datatype -> funcCall .)
    R_THEN          reduce using rule 192 (datatype -> funcCall .)
    R_NATURAL       reduce using rule 192 (datatype -> funcCall .)
    R_INNER         reduce using rule 192 (datatype -> funcCall .)
    R_LEFT          reduce using rule 192 (datatype -> funcCall .)
    R_RIGHT         reduce using rule 192 (datatype -> funcCall .)
    R_FULL          reduce using rule 192 (datatype -> funcCall .)
    R_WHERE         reduce using rule 192 (datatype -> funcCall .)
    R_ALL           reduce using rule 192 (datatype -> funcCall .)
    R_ANY           reduce using rule 192 (datatype -> funcCall .)
    R_SOME          reduce using rule 192 (datatype -> funcCall .)


state 97

    (193) datatype -> extract .

    O_SUMA          reduce using rule 193 (datatype -> extract .)
    O_RESTA         reduce using rule 193 (datatype -> extract .)
    O_PRODUCTO      reduce using rule 193 (datatype -> extract .)
    O_DIVISION      reduce using rule 193 (datatype -> extract .)
    O_EXPONENTE     reduce using rule 193 (datatype -> extract .)
    O_MODULAR       reduce using rule 193 (datatype -> extract .)
    OC_CONCATENAR   reduce using rule 193 (datatype -> extract .)
    R_IN            reduce using rule 193 (datatype -> extract .)
    R_NOT           reduce using rule 193 (datatype -> extract .)
    OL_MENORQUE     reduce using rule 193 (datatype -> extract .)
    OL_MAYORQUE     reduce using rule 193 (datatype -> extract .)
    OL_MAYORIGUALQUE reduce using rule 193 (datatype -> extract .)
    OL_MENORIGUALQUE reduce using rule 193 (datatype -> extract .)
    S_IGUAL         reduce using rule 193 (datatype -> extract .)
    OL_DISTINTODE   reduce using rule 193 (datatype -> extract .)
    R_IS            reduce using rule 193 (datatype -> extract .)
    R_BETWEEN       reduce using rule 193 (datatype -> extract .)
    R_ISNULL        reduce using rule 193 (datatype -> extract .)
    R_NOTNULL       reduce using rule 193 (datatype -> extract .)
    OL_ESIGUAL      reduce using rule 193 (datatype -> extract .)
    R_AS            reduce using rule 193 (datatype -> extract .)
    ID              reduce using rule 193 (datatype -> extract .)
    STRING          reduce using rule 193 (datatype -> extract .)
    CHARACTER       reduce using rule 193 (datatype -> extract .)
    S_COMA          reduce using rule 193 (datatype -> extract .)
    R_FROM          reduce using rule 193 (datatype -> extract .)
    S_PUNTOCOMA     reduce using rule 193 (datatype -> extract .)
    R_UNION         reduce using rule 193 (datatype -> extract .)
    R_INTERSECT     reduce using rule 193 (datatype -> extract .)
    R_EXCEPT        reduce using rule 193 (datatype -> extract .)
    S_PARDER        reduce using rule 193 (datatype -> extract .)
    R_AND           reduce using rule 193 (datatype -> extract .)
    R_OR            reduce using rule 193 (datatype -> extract .)
    R_GROUP         reduce using rule 193 (datatype -> extract .)
    R_ORDER         reduce using rule 193 (datatype -> extract .)
    R_LIMIT         reduce using rule 193 (datatype -> extract .)
    R_THEN          reduce using rule 193 (datatype -> extract .)
    R_NATURAL       reduce using rule 193 (datatype -> extract .)
    R_INNER         reduce using rule 193 (datatype -> extract .)
    R_LEFT          reduce using rule 193 (datatype -> extract .)
    R_RIGHT         reduce using rule 193 (datatype -> extract .)
    R_FULL          reduce using rule 193 (datatype -> extract .)
    R_WHERE         reduce using rule 193 (datatype -> extract .)
    R_ALL           reduce using rule 193 (datatype -> extract .)
    R_ANY           reduce using rule 193 (datatype -> extract .)
    R_SOME          reduce using rule 193 (datatype -> extract .)


state 98

    (194) datatype -> datePart .

    O_SUMA          reduce using rule 194 (datatype -> datePart .)
    O_RESTA         reduce using rule 194 (datatype -> datePart .)
    O_PRODUCTO      reduce using rule 194 (datatype -> datePart .)
    O_DIVISION      reduce using rule 194 (datatype -> datePart .)
    O_EXPONENTE     reduce using rule 194 (datatype -> datePart .)
    O_MODULAR       reduce using rule 194 (datatype -> datePart .)
    OC_CONCATENAR   reduce using rule 194 (datatype -> datePart .)
    R_IN            reduce using rule 194 (datatype -> datePart .)
    R_NOT           reduce using rule 194 (datatype -> datePart .)
    OL_MENORQUE     reduce using rule 194 (datatype -> datePart .)
    OL_MAYORQUE     reduce using rule 194 (datatype -> datePart .)
    OL_MAYORIGUALQUE reduce using rule 194 (datatype -> datePart .)
    OL_MENORIGUALQUE reduce using rule 194 (datatype -> datePart .)
    S_IGUAL         reduce using rule 194 (datatype -> datePart .)
    OL_DISTINTODE   reduce using rule 194 (datatype -> datePart .)
    R_IS            reduce using rule 194 (datatype -> datePart .)
    R_BETWEEN       reduce using rule 194 (datatype -> datePart .)
    R_ISNULL        reduce using rule 194 (datatype -> datePart .)
    R_NOTNULL       reduce using rule 194 (datatype -> datePart .)
    OL_ESIGUAL      reduce using rule 194 (datatype -> datePart .)
    R_AS            reduce using rule 194 (datatype -> datePart .)
    ID              reduce using rule 194 (datatype -> datePart .)
    STRING          reduce using rule 194 (datatype -> datePart .)
    CHARACTER       reduce using rule 194 (datatype -> datePart .)
    S_COMA          reduce using rule 194 (datatype -> datePart .)
    R_FROM          reduce using rule 194 (datatype -> datePart .)
    S_PUNTOCOMA     reduce using rule 194 (datatype -> datePart .)
    R_UNION         reduce using rule 194 (datatype -> datePart .)
    R_INTERSECT     reduce using rule 194 (datatype -> datePart .)
    R_EXCEPT        reduce using rule 194 (datatype -> datePart .)
    S_PARDER        reduce using rule 194 (datatype -> datePart .)
    R_AND           reduce using rule 194 (datatype -> datePart .)
    R_OR            reduce using rule 194 (datatype -> datePart .)
    R_GROUP         reduce using rule 194 (datatype -> datePart .)
    R_ORDER         reduce using rule 194 (datatype -> datePart .)
    R_LIMIT         reduce using rule 194 (datatype -> datePart .)
    R_THEN          reduce using rule 194 (datatype -> datePart .)
    R_NATURAL       reduce using rule 194 (datatype -> datePart .)
    R_INNER         reduce using rule 194 (datatype -> datePart .)
    R_LEFT          reduce using rule 194 (datatype -> datePart .)
    R_RIGHT         reduce using rule 194 (datatype -> datePart .)
    R_FULL          reduce using rule 194 (datatype -> datePart .)
    R_WHERE         reduce using rule 194 (datatype -> datePart .)
    R_ALL           reduce using rule 194 (datatype -> datePart .)
    R_ANY           reduce using rule 194 (datatype -> datePart .)
    R_SOME          reduce using rule 194 (datatype -> datePart .)


state 99

    (195) datatype -> current .

    O_SUMA          reduce using rule 195 (datatype -> current .)
    O_RESTA         reduce using rule 195 (datatype -> current .)
    O_PRODUCTO      reduce using rule 195 (datatype -> current .)
    O_DIVISION      reduce using rule 195 (datatype -> current .)
    O_EXPONENTE     reduce using rule 195 (datatype -> current .)
    O_MODULAR       reduce using rule 195 (datatype -> current .)
    OC_CONCATENAR   reduce using rule 195 (datatype -> current .)
    R_IN            reduce using rule 195 (datatype -> current .)
    R_NOT           reduce using rule 195 (datatype -> current .)
    OL_MENORQUE     reduce using rule 195 (datatype -> current .)
    OL_MAYORQUE     reduce using rule 195 (datatype -> current .)
    OL_MAYORIGUALQUE reduce using rule 195 (datatype -> current .)
    OL_MENORIGUALQUE reduce using rule 195 (datatype -> current .)
    S_IGUAL         reduce using rule 195 (datatype -> current .)
    OL_DISTINTODE   reduce using rule 195 (datatype -> current .)
    R_IS            reduce using rule 195 (datatype -> current .)
    R_BETWEEN       reduce using rule 195 (datatype -> current .)
    R_ISNULL        reduce using rule 195 (datatype -> current .)
    R_NOTNULL       reduce using rule 195 (datatype -> current .)
    OL_ESIGUAL      reduce using rule 195 (datatype -> current .)
    R_AS            reduce using rule 195 (datatype -> current .)
    ID              reduce using rule 195 (datatype -> current .)
    STRING          reduce using rule 195 (datatype -> current .)
    CHARACTER       reduce using rule 195 (datatype -> current .)
    S_COMA          reduce using rule 195 (datatype -> current .)
    R_FROM          reduce using rule 195 (datatype -> current .)
    S_PUNTOCOMA     reduce using rule 195 (datatype -> current .)
    R_UNION         reduce using rule 195 (datatype -> current .)
    R_INTERSECT     reduce using rule 195 (datatype -> current .)
    R_EXCEPT        reduce using rule 195 (datatype -> current .)
    S_PARDER        reduce using rule 195 (datatype -> current .)
    R_AND           reduce using rule 195 (datatype -> current .)
    R_OR            reduce using rule 195 (datatype -> current .)
    R_GROUP         reduce using rule 195 (datatype -> current .)
    R_ORDER         reduce using rule 195 (datatype -> current .)
    R_LIMIT         reduce using rule 195 (datatype -> current .)
    R_THEN          reduce using rule 195 (datatype -> current .)
    R_NATURAL       reduce using rule 195 (datatype -> current .)
    R_INNER         reduce using rule 195 (datatype -> current .)
    R_LEFT          reduce using rule 195 (datatype -> current .)
    R_RIGHT         reduce using rule 195 (datatype -> current .)
    R_FULL          reduce using rule 195 (datatype -> current .)
    R_WHERE         reduce using rule 195 (datatype -> current .)
    R_ALL           reduce using rule 195 (datatype -> current .)
    R_ANY           reduce using rule 195 (datatype -> current .)
    R_SOME          reduce using rule 195 (datatype -> current .)


state 100

    (252) expBool -> R_NOT . expBool
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 100
    S_PARIZQ        shift and go to state 213
    R_EXISTS        shift and go to state 118
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    expBool                        shift and go to state 212
    boolean                        shift and go to state 101
    datatype                       shift and go to state 214
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    columnName                     shift and go to state 94
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    stringExp                      shift and go to state 123
    timeStamp                      shift and go to state 114

state 101

    (255) expBool -> boolean .

    R_AND           reduce using rule 255 (expBool -> boolean .)
    R_OR            reduce using rule 255 (expBool -> boolean .)
    R_IS            reduce using rule 255 (expBool -> boolean .)
    R_AS            reduce using rule 255 (expBool -> boolean .)
    ID              reduce using rule 255 (expBool -> boolean .)
    STRING          reduce using rule 255 (expBool -> boolean .)
    CHARACTER       reduce using rule 255 (expBool -> boolean .)
    S_COMA          reduce using rule 255 (expBool -> boolean .)
    R_FROM          reduce using rule 255 (expBool -> boolean .)
    S_PUNTOCOMA     reduce using rule 255 (expBool -> boolean .)
    R_UNION         reduce using rule 255 (expBool -> boolean .)
    R_INTERSECT     reduce using rule 255 (expBool -> boolean .)
    R_EXCEPT        reduce using rule 255 (expBool -> boolean .)
    S_PARDER        reduce using rule 255 (expBool -> boolean .)
    R_GROUP         reduce using rule 255 (expBool -> boolean .)
    R_ORDER         reduce using rule 255 (expBool -> boolean .)
    R_LIMIT         reduce using rule 255 (expBool -> boolean .)
    R_THEN          reduce using rule 255 (expBool -> boolean .)
    R_NATURAL       reduce using rule 255 (expBool -> boolean .)
    R_INNER         reduce using rule 255 (expBool -> boolean .)
    R_LEFT          reduce using rule 255 (expBool -> boolean .)
    R_RIGHT         reduce using rule 255 (expBool -> boolean .)
    R_FULL          reduce using rule 255 (expBool -> boolean .)
    R_WHERE         reduce using rule 255 (expBool -> boolean .)


state 102

    (166) literal -> INTEGER .

    O_SUMA          reduce using rule 166 (literal -> INTEGER .)
    O_RESTA         reduce using rule 166 (literal -> INTEGER .)
    O_PRODUCTO      reduce using rule 166 (literal -> INTEGER .)
    O_DIVISION      reduce using rule 166 (literal -> INTEGER .)
    O_EXPONENTE     reduce using rule 166 (literal -> INTEGER .)
    O_MODULAR       reduce using rule 166 (literal -> INTEGER .)
    OC_CONCATENAR   reduce using rule 166 (literal -> INTEGER .)
    R_IN            reduce using rule 166 (literal -> INTEGER .)
    R_NOT           reduce using rule 166 (literal -> INTEGER .)
    OL_MENORQUE     reduce using rule 166 (literal -> INTEGER .)
    OL_MAYORQUE     reduce using rule 166 (literal -> INTEGER .)
    OL_MAYORIGUALQUE reduce using rule 166 (literal -> INTEGER .)
    OL_MENORIGUALQUE reduce using rule 166 (literal -> INTEGER .)
    S_IGUAL         reduce using rule 166 (literal -> INTEGER .)
    OL_DISTINTODE   reduce using rule 166 (literal -> INTEGER .)
    R_IS            reduce using rule 166 (literal -> INTEGER .)
    R_BETWEEN       reduce using rule 166 (literal -> INTEGER .)
    R_ISNULL        reduce using rule 166 (literal -> INTEGER .)
    R_NOTNULL       reduce using rule 166 (literal -> INTEGER .)
    OL_ESIGUAL      reduce using rule 166 (literal -> INTEGER .)
    R_AS            reduce using rule 166 (literal -> INTEGER .)
    ID              reduce using rule 166 (literal -> INTEGER .)
    STRING          reduce using rule 166 (literal -> INTEGER .)
    CHARACTER       reduce using rule 166 (literal -> INTEGER .)
    S_COMA          reduce using rule 166 (literal -> INTEGER .)
    R_FROM          reduce using rule 166 (literal -> INTEGER .)
    S_PUNTOCOMA     reduce using rule 166 (literal -> INTEGER .)
    R_UNION         reduce using rule 166 (literal -> INTEGER .)
    R_INTERSECT     reduce using rule 166 (literal -> INTEGER .)
    R_EXCEPT        reduce using rule 166 (literal -> INTEGER .)
    S_PARDER        reduce using rule 166 (literal -> INTEGER .)
    R_AND           reduce using rule 166 (literal -> INTEGER .)
    R_OR            reduce using rule 166 (literal -> INTEGER .)
    R_GROUP         reduce using rule 166 (literal -> INTEGER .)
    R_ORDER         reduce using rule 166 (literal -> INTEGER .)
    R_LIMIT         reduce using rule 166 (literal -> INTEGER .)
    R_THEN          reduce using rule 166 (literal -> INTEGER .)
    R_NATURAL       reduce using rule 166 (literal -> INTEGER .)
    R_INNER         reduce using rule 166 (literal -> INTEGER .)
    R_LEFT          reduce using rule 166 (literal -> INTEGER .)
    R_RIGHT         reduce using rule 166 (literal -> INTEGER .)
    R_FULL          reduce using rule 166 (literal -> INTEGER .)
    R_WHERE         reduce using rule 166 (literal -> INTEGER .)
    R_ALL           reduce using rule 166 (literal -> INTEGER .)
    R_ANY           reduce using rule 166 (literal -> INTEGER .)
    R_SOME          reduce using rule 166 (literal -> INTEGER .)
    R_END           reduce using rule 166 (literal -> INTEGER .)
    R_ELSE          reduce using rule 166 (literal -> INTEGER .)
    R_WHEN          reduce using rule 166 (literal -> INTEGER .)
    R_DEFAULT       reduce using rule 166 (literal -> INTEGER .)
    R_NULL          reduce using rule 166 (literal -> INTEGER .)
    R_PRIMARY       reduce using rule 166 (literal -> INTEGER .)
    R_REFERENCES    reduce using rule 166 (literal -> INTEGER .)
    R_CONSTRAINT    reduce using rule 166 (literal -> INTEGER .)
    R_UNIQUE        reduce using rule 166 (literal -> INTEGER .)
    R_CHECK         reduce using rule 166 (literal -> INTEGER .)


state 103

    (167) literal -> STRING .
    (240) stringExp -> STRING .

    O_SUMA          reduce using rule 167 (literal -> STRING .)
    O_RESTA         reduce using rule 167 (literal -> STRING .)
    O_PRODUCTO      reduce using rule 167 (literal -> STRING .)
    O_DIVISION      reduce using rule 167 (literal -> STRING .)
    O_EXPONENTE     reduce using rule 167 (literal -> STRING .)
    O_MODULAR       reduce using rule 167 (literal -> STRING .)
    OC_CONCATENAR   reduce using rule 167 (literal -> STRING .)
    R_IN            reduce using rule 167 (literal -> STRING .)
    R_NOT           reduce using rule 167 (literal -> STRING .)
    OL_MENORQUE     reduce using rule 167 (literal -> STRING .)
    OL_MAYORQUE     reduce using rule 167 (literal -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 167 (literal -> STRING .)
    OL_MENORIGUALQUE reduce using rule 167 (literal -> STRING .)
    S_IGUAL         reduce using rule 167 (literal -> STRING .)
    OL_DISTINTODE   reduce using rule 167 (literal -> STRING .)
    R_IS            reduce using rule 167 (literal -> STRING .)
    R_BETWEEN       reduce using rule 167 (literal -> STRING .)
    R_ISNULL        reduce using rule 167 (literal -> STRING .)
    R_NOTNULL       reduce using rule 167 (literal -> STRING .)
    OL_ESIGUAL      reduce using rule 167 (literal -> STRING .)
    R_AS            reduce using rule 167 (literal -> STRING .)
    ID              reduce using rule 167 (literal -> STRING .)
    STRING          reduce using rule 167 (literal -> STRING .)
    CHARACTER       reduce using rule 167 (literal -> STRING .)
    S_COMA          reduce using rule 167 (literal -> STRING .)
    R_FROM          reduce using rule 167 (literal -> STRING .)
    S_PUNTOCOMA     reduce using rule 167 (literal -> STRING .)
    R_UNION         reduce using rule 167 (literal -> STRING .)
    R_INTERSECT     reduce using rule 167 (literal -> STRING .)
    R_EXCEPT        reduce using rule 167 (literal -> STRING .)
    S_PARDER        reduce using rule 167 (literal -> STRING .)
    R_LIKE          reduce using rule 240 (stringExp -> STRING .)


state 104

    (168) literal -> DECIMAL .

    O_SUMA          reduce using rule 168 (literal -> DECIMAL .)
    O_RESTA         reduce using rule 168 (literal -> DECIMAL .)
    O_PRODUCTO      reduce using rule 168 (literal -> DECIMAL .)
    O_DIVISION      reduce using rule 168 (literal -> DECIMAL .)
    O_EXPONENTE     reduce using rule 168 (literal -> DECIMAL .)
    O_MODULAR       reduce using rule 168 (literal -> DECIMAL .)
    OC_CONCATENAR   reduce using rule 168 (literal -> DECIMAL .)
    R_IN            reduce using rule 168 (literal -> DECIMAL .)
    R_NOT           reduce using rule 168 (literal -> DECIMAL .)
    OL_MENORQUE     reduce using rule 168 (literal -> DECIMAL .)
    OL_MAYORQUE     reduce using rule 168 (literal -> DECIMAL .)
    OL_MAYORIGUALQUE reduce using rule 168 (literal -> DECIMAL .)
    OL_MENORIGUALQUE reduce using rule 168 (literal -> DECIMAL .)
    S_IGUAL         reduce using rule 168 (literal -> DECIMAL .)
    OL_DISTINTODE   reduce using rule 168 (literal -> DECIMAL .)
    R_IS            reduce using rule 168 (literal -> DECIMAL .)
    R_BETWEEN       reduce using rule 168 (literal -> DECIMAL .)
    R_ISNULL        reduce using rule 168 (literal -> DECIMAL .)
    R_NOTNULL       reduce using rule 168 (literal -> DECIMAL .)
    OL_ESIGUAL      reduce using rule 168 (literal -> DECIMAL .)
    R_AS            reduce using rule 168 (literal -> DECIMAL .)
    ID              reduce using rule 168 (literal -> DECIMAL .)
    STRING          reduce using rule 168 (literal -> DECIMAL .)
    CHARACTER       reduce using rule 168 (literal -> DECIMAL .)
    S_COMA          reduce using rule 168 (literal -> DECIMAL .)
    R_FROM          reduce using rule 168 (literal -> DECIMAL .)
    S_PUNTOCOMA     reduce using rule 168 (literal -> DECIMAL .)
    R_UNION         reduce using rule 168 (literal -> DECIMAL .)
    R_INTERSECT     reduce using rule 168 (literal -> DECIMAL .)
    R_EXCEPT        reduce using rule 168 (literal -> DECIMAL .)
    S_PARDER        reduce using rule 168 (literal -> DECIMAL .)
    R_AND           reduce using rule 168 (literal -> DECIMAL .)
    R_OR            reduce using rule 168 (literal -> DECIMAL .)
    R_GROUP         reduce using rule 168 (literal -> DECIMAL .)
    R_ORDER         reduce using rule 168 (literal -> DECIMAL .)
    R_LIMIT         reduce using rule 168 (literal -> DECIMAL .)
    R_THEN          reduce using rule 168 (literal -> DECIMAL .)
    R_NATURAL       reduce using rule 168 (literal -> DECIMAL .)
    R_INNER         reduce using rule 168 (literal -> DECIMAL .)
    R_LEFT          reduce using rule 168 (literal -> DECIMAL .)
    R_RIGHT         reduce using rule 168 (literal -> DECIMAL .)
    R_FULL          reduce using rule 168 (literal -> DECIMAL .)
    R_WHERE         reduce using rule 168 (literal -> DECIMAL .)
    R_ALL           reduce using rule 168 (literal -> DECIMAL .)
    R_ANY           reduce using rule 168 (literal -> DECIMAL .)
    R_SOME          reduce using rule 168 (literal -> DECIMAL .)
    R_END           reduce using rule 168 (literal -> DECIMAL .)
    R_ELSE          reduce using rule 168 (literal -> DECIMAL .)
    R_WHEN          reduce using rule 168 (literal -> DECIMAL .)
    R_DEFAULT       reduce using rule 168 (literal -> DECIMAL .)
    R_NULL          reduce using rule 168 (literal -> DECIMAL .)
    R_PRIMARY       reduce using rule 168 (literal -> DECIMAL .)
    R_REFERENCES    reduce using rule 168 (literal -> DECIMAL .)
    R_CONSTRAINT    reduce using rule 168 (literal -> DECIMAL .)
    R_UNIQUE        reduce using rule 168 (literal -> DECIMAL .)
    R_CHECK         reduce using rule 168 (literal -> DECIMAL .)


state 105

    (169) literal -> CHARACTER .

    O_SUMA          reduce using rule 169 (literal -> CHARACTER .)
    O_RESTA         reduce using rule 169 (literal -> CHARACTER .)
    O_PRODUCTO      reduce using rule 169 (literal -> CHARACTER .)
    O_DIVISION      reduce using rule 169 (literal -> CHARACTER .)
    O_EXPONENTE     reduce using rule 169 (literal -> CHARACTER .)
    O_MODULAR       reduce using rule 169 (literal -> CHARACTER .)
    OC_CONCATENAR   reduce using rule 169 (literal -> CHARACTER .)
    R_IN            reduce using rule 169 (literal -> CHARACTER .)
    R_NOT           reduce using rule 169 (literal -> CHARACTER .)
    OL_MENORQUE     reduce using rule 169 (literal -> CHARACTER .)
    OL_MAYORQUE     reduce using rule 169 (literal -> CHARACTER .)
    OL_MAYORIGUALQUE reduce using rule 169 (literal -> CHARACTER .)
    OL_MENORIGUALQUE reduce using rule 169 (literal -> CHARACTER .)
    S_IGUAL         reduce using rule 169 (literal -> CHARACTER .)
    OL_DISTINTODE   reduce using rule 169 (literal -> CHARACTER .)
    R_IS            reduce using rule 169 (literal -> CHARACTER .)
    R_BETWEEN       reduce using rule 169 (literal -> CHARACTER .)
    R_ISNULL        reduce using rule 169 (literal -> CHARACTER .)
    R_NOTNULL       reduce using rule 169 (literal -> CHARACTER .)
    OL_ESIGUAL      reduce using rule 169 (literal -> CHARACTER .)
    R_AS            reduce using rule 169 (literal -> CHARACTER .)
    ID              reduce using rule 169 (literal -> CHARACTER .)
    STRING          reduce using rule 169 (literal -> CHARACTER .)
    CHARACTER       reduce using rule 169 (literal -> CHARACTER .)
    S_COMA          reduce using rule 169 (literal -> CHARACTER .)
    R_FROM          reduce using rule 169 (literal -> CHARACTER .)
    S_PUNTOCOMA     reduce using rule 169 (literal -> CHARACTER .)
    R_UNION         reduce using rule 169 (literal -> CHARACTER .)
    R_INTERSECT     reduce using rule 169 (literal -> CHARACTER .)
    R_EXCEPT        reduce using rule 169 (literal -> CHARACTER .)
    S_PARDER        reduce using rule 169 (literal -> CHARACTER .)
    R_AND           reduce using rule 169 (literal -> CHARACTER .)
    R_OR            reduce using rule 169 (literal -> CHARACTER .)
    R_GROUP         reduce using rule 169 (literal -> CHARACTER .)
    R_ORDER         reduce using rule 169 (literal -> CHARACTER .)
    R_LIMIT         reduce using rule 169 (literal -> CHARACTER .)
    R_THEN          reduce using rule 169 (literal -> CHARACTER .)
    R_NATURAL       reduce using rule 169 (literal -> CHARACTER .)
    R_INNER         reduce using rule 169 (literal -> CHARACTER .)
    R_LEFT          reduce using rule 169 (literal -> CHARACTER .)
    R_RIGHT         reduce using rule 169 (literal -> CHARACTER .)
    R_FULL          reduce using rule 169 (literal -> CHARACTER .)
    R_WHERE         reduce using rule 169 (literal -> CHARACTER .)
    R_ALL           reduce using rule 169 (literal -> CHARACTER .)
    R_ANY           reduce using rule 169 (literal -> CHARACTER .)
    R_SOME          reduce using rule 169 (literal -> CHARACTER .)
    R_END           reduce using rule 169 (literal -> CHARACTER .)
    R_ELSE          reduce using rule 169 (literal -> CHARACTER .)
    R_WHEN          reduce using rule 169 (literal -> CHARACTER .)
    R_DEFAULT       reduce using rule 169 (literal -> CHARACTER .)
    R_NULL          reduce using rule 169 (literal -> CHARACTER .)
    R_PRIMARY       reduce using rule 169 (literal -> CHARACTER .)
    R_REFERENCES    reduce using rule 169 (literal -> CHARACTER .)
    R_CONSTRAINT    reduce using rule 169 (literal -> CHARACTER .)
    R_UNIQUE        reduce using rule 169 (literal -> CHARACTER .)
    R_CHECK         reduce using rule 169 (literal -> CHARACTER .)


state 106

    (170) literal -> R_TRUE .

    O_SUMA          reduce using rule 170 (literal -> R_TRUE .)
    O_RESTA         reduce using rule 170 (literal -> R_TRUE .)
    O_PRODUCTO      reduce using rule 170 (literal -> R_TRUE .)
    O_DIVISION      reduce using rule 170 (literal -> R_TRUE .)
    O_EXPONENTE     reduce using rule 170 (literal -> R_TRUE .)
    O_MODULAR       reduce using rule 170 (literal -> R_TRUE .)
    OC_CONCATENAR   reduce using rule 170 (literal -> R_TRUE .)
    R_IN            reduce using rule 170 (literal -> R_TRUE .)
    R_NOT           reduce using rule 170 (literal -> R_TRUE .)
    OL_MENORQUE     reduce using rule 170 (literal -> R_TRUE .)
    OL_MAYORQUE     reduce using rule 170 (literal -> R_TRUE .)
    OL_MAYORIGUALQUE reduce using rule 170 (literal -> R_TRUE .)
    OL_MENORIGUALQUE reduce using rule 170 (literal -> R_TRUE .)
    S_IGUAL         reduce using rule 170 (literal -> R_TRUE .)
    OL_DISTINTODE   reduce using rule 170 (literal -> R_TRUE .)
    R_IS            reduce using rule 170 (literal -> R_TRUE .)
    R_BETWEEN       reduce using rule 170 (literal -> R_TRUE .)
    R_ISNULL        reduce using rule 170 (literal -> R_TRUE .)
    R_NOTNULL       reduce using rule 170 (literal -> R_TRUE .)
    OL_ESIGUAL      reduce using rule 170 (literal -> R_TRUE .)
    R_AS            reduce using rule 170 (literal -> R_TRUE .)
    ID              reduce using rule 170 (literal -> R_TRUE .)
    STRING          reduce using rule 170 (literal -> R_TRUE .)
    CHARACTER       reduce using rule 170 (literal -> R_TRUE .)
    S_COMA          reduce using rule 170 (literal -> R_TRUE .)
    R_FROM          reduce using rule 170 (literal -> R_TRUE .)
    S_PUNTOCOMA     reduce using rule 170 (literal -> R_TRUE .)
    R_UNION         reduce using rule 170 (literal -> R_TRUE .)
    R_INTERSECT     reduce using rule 170 (literal -> R_TRUE .)
    R_EXCEPT        reduce using rule 170 (literal -> R_TRUE .)
    S_PARDER        reduce using rule 170 (literal -> R_TRUE .)
    R_AND           reduce using rule 170 (literal -> R_TRUE .)
    R_OR            reduce using rule 170 (literal -> R_TRUE .)
    R_GROUP         reduce using rule 170 (literal -> R_TRUE .)
    R_ORDER         reduce using rule 170 (literal -> R_TRUE .)
    R_LIMIT         reduce using rule 170 (literal -> R_TRUE .)
    R_THEN          reduce using rule 170 (literal -> R_TRUE .)
    R_NATURAL       reduce using rule 170 (literal -> R_TRUE .)
    R_INNER         reduce using rule 170 (literal -> R_TRUE .)
    R_LEFT          reduce using rule 170 (literal -> R_TRUE .)
    R_RIGHT         reduce using rule 170 (literal -> R_TRUE .)
    R_FULL          reduce using rule 170 (literal -> R_TRUE .)
    R_WHERE         reduce using rule 170 (literal -> R_TRUE .)
    R_ALL           reduce using rule 170 (literal -> R_TRUE .)
    R_ANY           reduce using rule 170 (literal -> R_TRUE .)
    R_SOME          reduce using rule 170 (literal -> R_TRUE .)
    R_END           reduce using rule 170 (literal -> R_TRUE .)
    R_ELSE          reduce using rule 170 (literal -> R_TRUE .)
    R_WHEN          reduce using rule 170 (literal -> R_TRUE .)
    R_DEFAULT       reduce using rule 170 (literal -> R_TRUE .)
    R_NULL          reduce using rule 170 (literal -> R_TRUE .)
    R_PRIMARY       reduce using rule 170 (literal -> R_TRUE .)
    R_REFERENCES    reduce using rule 170 (literal -> R_TRUE .)
    R_CONSTRAINT    reduce using rule 170 (literal -> R_TRUE .)
    R_UNIQUE        reduce using rule 170 (literal -> R_TRUE .)
    R_CHECK         reduce using rule 170 (literal -> R_TRUE .)


state 107

    (171) literal -> R_FALSE .

    O_SUMA          reduce using rule 171 (literal -> R_FALSE .)
    O_RESTA         reduce using rule 171 (literal -> R_FALSE .)
    O_PRODUCTO      reduce using rule 171 (literal -> R_FALSE .)
    O_DIVISION      reduce using rule 171 (literal -> R_FALSE .)
    O_EXPONENTE     reduce using rule 171 (literal -> R_FALSE .)
    O_MODULAR       reduce using rule 171 (literal -> R_FALSE .)
    OC_CONCATENAR   reduce using rule 171 (literal -> R_FALSE .)
    R_IN            reduce using rule 171 (literal -> R_FALSE .)
    R_NOT           reduce using rule 171 (literal -> R_FALSE .)
    OL_MENORQUE     reduce using rule 171 (literal -> R_FALSE .)
    OL_MAYORQUE     reduce using rule 171 (literal -> R_FALSE .)
    OL_MAYORIGUALQUE reduce using rule 171 (literal -> R_FALSE .)
    OL_MENORIGUALQUE reduce using rule 171 (literal -> R_FALSE .)
    S_IGUAL         reduce using rule 171 (literal -> R_FALSE .)
    OL_DISTINTODE   reduce using rule 171 (literal -> R_FALSE .)
    R_IS            reduce using rule 171 (literal -> R_FALSE .)
    R_BETWEEN       reduce using rule 171 (literal -> R_FALSE .)
    R_ISNULL        reduce using rule 171 (literal -> R_FALSE .)
    R_NOTNULL       reduce using rule 171 (literal -> R_FALSE .)
    OL_ESIGUAL      reduce using rule 171 (literal -> R_FALSE .)
    R_AS            reduce using rule 171 (literal -> R_FALSE .)
    ID              reduce using rule 171 (literal -> R_FALSE .)
    STRING          reduce using rule 171 (literal -> R_FALSE .)
    CHARACTER       reduce using rule 171 (literal -> R_FALSE .)
    S_COMA          reduce using rule 171 (literal -> R_FALSE .)
    R_FROM          reduce using rule 171 (literal -> R_FALSE .)
    S_PUNTOCOMA     reduce using rule 171 (literal -> R_FALSE .)
    R_UNION         reduce using rule 171 (literal -> R_FALSE .)
    R_INTERSECT     reduce using rule 171 (literal -> R_FALSE .)
    R_EXCEPT        reduce using rule 171 (literal -> R_FALSE .)
    S_PARDER        reduce using rule 171 (literal -> R_FALSE .)
    R_AND           reduce using rule 171 (literal -> R_FALSE .)
    R_OR            reduce using rule 171 (literal -> R_FALSE .)
    R_GROUP         reduce using rule 171 (literal -> R_FALSE .)
    R_ORDER         reduce using rule 171 (literal -> R_FALSE .)
    R_LIMIT         reduce using rule 171 (literal -> R_FALSE .)
    R_THEN          reduce using rule 171 (literal -> R_FALSE .)
    R_NATURAL       reduce using rule 171 (literal -> R_FALSE .)
    R_INNER         reduce using rule 171 (literal -> R_FALSE .)
    R_LEFT          reduce using rule 171 (literal -> R_FALSE .)
    R_RIGHT         reduce using rule 171 (literal -> R_FALSE .)
    R_FULL          reduce using rule 171 (literal -> R_FALSE .)
    R_WHERE         reduce using rule 171 (literal -> R_FALSE .)
    R_ALL           reduce using rule 171 (literal -> R_FALSE .)
    R_ANY           reduce using rule 171 (literal -> R_FALSE .)
    R_SOME          reduce using rule 171 (literal -> R_FALSE .)
    R_END           reduce using rule 171 (literal -> R_FALSE .)
    R_ELSE          reduce using rule 171 (literal -> R_FALSE .)
    R_WHEN          reduce using rule 171 (literal -> R_FALSE .)
    R_DEFAULT       reduce using rule 171 (literal -> R_FALSE .)
    R_NULL          reduce using rule 171 (literal -> R_FALSE .)
    R_PRIMARY       reduce using rule 171 (literal -> R_FALSE .)
    R_REFERENCES    reduce using rule 171 (literal -> R_FALSE .)
    R_CONSTRAINT    reduce using rule 171 (literal -> R_FALSE .)
    R_UNIQUE        reduce using rule 171 (literal -> R_FALSE .)
    R_CHECK         reduce using rule 171 (literal -> R_FALSE .)


state 108

    (172) literal -> R_NULL .

    O_SUMA          reduce using rule 172 (literal -> R_NULL .)
    O_RESTA         reduce using rule 172 (literal -> R_NULL .)
    O_PRODUCTO      reduce using rule 172 (literal -> R_NULL .)
    O_DIVISION      reduce using rule 172 (literal -> R_NULL .)
    O_EXPONENTE     reduce using rule 172 (literal -> R_NULL .)
    O_MODULAR       reduce using rule 172 (literal -> R_NULL .)
    OC_CONCATENAR   reduce using rule 172 (literal -> R_NULL .)
    R_IN            reduce using rule 172 (literal -> R_NULL .)
    R_NOT           reduce using rule 172 (literal -> R_NULL .)
    OL_MENORQUE     reduce using rule 172 (literal -> R_NULL .)
    OL_MAYORQUE     reduce using rule 172 (literal -> R_NULL .)
    OL_MAYORIGUALQUE reduce using rule 172 (literal -> R_NULL .)
    OL_MENORIGUALQUE reduce using rule 172 (literal -> R_NULL .)
    S_IGUAL         reduce using rule 172 (literal -> R_NULL .)
    OL_DISTINTODE   reduce using rule 172 (literal -> R_NULL .)
    R_IS            reduce using rule 172 (literal -> R_NULL .)
    R_BETWEEN       reduce using rule 172 (literal -> R_NULL .)
    R_ISNULL        reduce using rule 172 (literal -> R_NULL .)
    R_NOTNULL       reduce using rule 172 (literal -> R_NULL .)
    OL_ESIGUAL      reduce using rule 172 (literal -> R_NULL .)
    R_AS            reduce using rule 172 (literal -> R_NULL .)
    ID              reduce using rule 172 (literal -> R_NULL .)
    STRING          reduce using rule 172 (literal -> R_NULL .)
    CHARACTER       reduce using rule 172 (literal -> R_NULL .)
    S_COMA          reduce using rule 172 (literal -> R_NULL .)
    R_FROM          reduce using rule 172 (literal -> R_NULL .)
    S_PUNTOCOMA     reduce using rule 172 (literal -> R_NULL .)
    R_UNION         reduce using rule 172 (literal -> R_NULL .)
    R_INTERSECT     reduce using rule 172 (literal -> R_NULL .)
    R_EXCEPT        reduce using rule 172 (literal -> R_NULL .)
    S_PARDER        reduce using rule 172 (literal -> R_NULL .)
    R_AND           reduce using rule 172 (literal -> R_NULL .)
    R_OR            reduce using rule 172 (literal -> R_NULL .)
    R_GROUP         reduce using rule 172 (literal -> R_NULL .)
    R_ORDER         reduce using rule 172 (literal -> R_NULL .)
    R_LIMIT         reduce using rule 172 (literal -> R_NULL .)
    R_THEN          reduce using rule 172 (literal -> R_NULL .)
    R_NATURAL       reduce using rule 172 (literal -> R_NULL .)
    R_INNER         reduce using rule 172 (literal -> R_NULL .)
    R_LEFT          reduce using rule 172 (literal -> R_NULL .)
    R_RIGHT         reduce using rule 172 (literal -> R_NULL .)
    R_FULL          reduce using rule 172 (literal -> R_NULL .)
    R_WHERE         reduce using rule 172 (literal -> R_NULL .)
    R_ALL           reduce using rule 172 (literal -> R_NULL .)
    R_ANY           reduce using rule 172 (literal -> R_NULL .)
    R_SOME          reduce using rule 172 (literal -> R_NULL .)
    R_END           reduce using rule 172 (literal -> R_NULL .)
    R_ELSE          reduce using rule 172 (literal -> R_NULL .)
    R_WHEN          reduce using rule 172 (literal -> R_NULL .)
    R_DEFAULT       reduce using rule 172 (literal -> R_NULL .)
    R_NULL          reduce using rule 172 (literal -> R_NULL .)
    R_PRIMARY       reduce using rule 172 (literal -> R_NULL .)
    R_REFERENCES    reduce using rule 172 (literal -> R_NULL .)
    R_CONSTRAINT    reduce using rule 172 (literal -> R_NULL .)
    R_UNIQUE        reduce using rule 172 (literal -> R_NULL .)
    R_CHECK         reduce using rule 172 (literal -> R_NULL .)


state 109

    (140) funcCall -> R_NOW . S_PARIZQ S_PARDER

    S_PARIZQ        shift and go to state 215


state 110

    (141) funcCall -> R_COUNT . S_PARIZQ datatype S_PARDER
    (142) funcCall -> R_COUNT . S_PARIZQ O_PRODUCTO S_PARDER

    S_PARIZQ        shift and go to state 216


state 111

    (143) funcCall -> R_SUM . S_PARIZQ datatype S_PARDER

    S_PARIZQ        shift and go to state 217


state 112

    (144) funcCall -> R_PROM . S_PARIZQ datatype S_PARDER

    S_PARIZQ        shift and go to state 218


state 113

    (145) extract -> R_EXTRACT . S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> R_EXTRACT . S_PARIZQ optsExtract R_FROM columnName S_PARDER

    S_PARIZQ        shift and go to state 219


state 114

    (163) current -> timeStamp .

    O_SUMA          reduce using rule 163 (current -> timeStamp .)
    O_RESTA         reduce using rule 163 (current -> timeStamp .)
    O_PRODUCTO      reduce using rule 163 (current -> timeStamp .)
    O_DIVISION      reduce using rule 163 (current -> timeStamp .)
    O_EXPONENTE     reduce using rule 163 (current -> timeStamp .)
    O_MODULAR       reduce using rule 163 (current -> timeStamp .)
    OC_CONCATENAR   reduce using rule 163 (current -> timeStamp .)
    R_IN            reduce using rule 163 (current -> timeStamp .)
    R_NOT           reduce using rule 163 (current -> timeStamp .)
    OL_MENORQUE     reduce using rule 163 (current -> timeStamp .)
    OL_MAYORQUE     reduce using rule 163 (current -> timeStamp .)
    OL_MAYORIGUALQUE reduce using rule 163 (current -> timeStamp .)
    OL_MENORIGUALQUE reduce using rule 163 (current -> timeStamp .)
    S_IGUAL         reduce using rule 163 (current -> timeStamp .)
    OL_DISTINTODE   reduce using rule 163 (current -> timeStamp .)
    R_IS            reduce using rule 163 (current -> timeStamp .)
    R_BETWEEN       reduce using rule 163 (current -> timeStamp .)
    R_ISNULL        reduce using rule 163 (current -> timeStamp .)
    R_NOTNULL       reduce using rule 163 (current -> timeStamp .)
    OL_ESIGUAL      reduce using rule 163 (current -> timeStamp .)
    R_AS            reduce using rule 163 (current -> timeStamp .)
    ID              reduce using rule 163 (current -> timeStamp .)
    STRING          reduce using rule 163 (current -> timeStamp .)
    CHARACTER       reduce using rule 163 (current -> timeStamp .)
    S_COMA          reduce using rule 163 (current -> timeStamp .)
    R_FROM          reduce using rule 163 (current -> timeStamp .)
    S_PUNTOCOMA     reduce using rule 163 (current -> timeStamp .)
    R_UNION         reduce using rule 163 (current -> timeStamp .)
    R_INTERSECT     reduce using rule 163 (current -> timeStamp .)
    R_EXCEPT        reduce using rule 163 (current -> timeStamp .)
    S_PARDER        reduce using rule 163 (current -> timeStamp .)
    R_AND           reduce using rule 163 (current -> timeStamp .)
    R_OR            reduce using rule 163 (current -> timeStamp .)
    R_GROUP         reduce using rule 163 (current -> timeStamp .)
    R_ORDER         reduce using rule 163 (current -> timeStamp .)
    R_LIMIT         reduce using rule 163 (current -> timeStamp .)
    R_THEN          reduce using rule 163 (current -> timeStamp .)
    R_NATURAL       reduce using rule 163 (current -> timeStamp .)
    R_INNER         reduce using rule 163 (current -> timeStamp .)
    R_LEFT          reduce using rule 163 (current -> timeStamp .)
    R_RIGHT         reduce using rule 163 (current -> timeStamp .)
    R_FULL          reduce using rule 163 (current -> timeStamp .)
    R_WHERE         reduce using rule 163 (current -> timeStamp .)
    R_ALL           reduce using rule 163 (current -> timeStamp .)
    R_ANY           reduce using rule 163 (current -> timeStamp .)
    R_SOME          reduce using rule 163 (current -> timeStamp .)


state 115

    (155) datePart -> R_DATE_PART . S_PARIZQ STRING S_COMA dateSource S_PARDER

    S_PARIZQ        shift and go to state 220


state 116

    (161) current -> R_CURRENT_DATE .

    O_SUMA          reduce using rule 161 (current -> R_CURRENT_DATE .)
    O_RESTA         reduce using rule 161 (current -> R_CURRENT_DATE .)
    O_PRODUCTO      reduce using rule 161 (current -> R_CURRENT_DATE .)
    O_DIVISION      reduce using rule 161 (current -> R_CURRENT_DATE .)
    O_EXPONENTE     reduce using rule 161 (current -> R_CURRENT_DATE .)
    O_MODULAR       reduce using rule 161 (current -> R_CURRENT_DATE .)
    OC_CONCATENAR   reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_IN            reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_NOT           reduce using rule 161 (current -> R_CURRENT_DATE .)
    OL_MENORQUE     reduce using rule 161 (current -> R_CURRENT_DATE .)
    OL_MAYORQUE     reduce using rule 161 (current -> R_CURRENT_DATE .)
    OL_MAYORIGUALQUE reduce using rule 161 (current -> R_CURRENT_DATE .)
    OL_MENORIGUALQUE reduce using rule 161 (current -> R_CURRENT_DATE .)
    S_IGUAL         reduce using rule 161 (current -> R_CURRENT_DATE .)
    OL_DISTINTODE   reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_IS            reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_BETWEEN       reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_ISNULL        reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_NOTNULL       reduce using rule 161 (current -> R_CURRENT_DATE .)
    OL_ESIGUAL      reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_AS            reduce using rule 161 (current -> R_CURRENT_DATE .)
    ID              reduce using rule 161 (current -> R_CURRENT_DATE .)
    STRING          reduce using rule 161 (current -> R_CURRENT_DATE .)
    CHARACTER       reduce using rule 161 (current -> R_CURRENT_DATE .)
    S_COMA          reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_FROM          reduce using rule 161 (current -> R_CURRENT_DATE .)
    S_PUNTOCOMA     reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_UNION         reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_INTERSECT     reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_EXCEPT        reduce using rule 161 (current -> R_CURRENT_DATE .)
    S_PARDER        reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_AND           reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_OR            reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_GROUP         reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_ORDER         reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_LIMIT         reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_THEN          reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_NATURAL       reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_INNER         reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_LEFT          reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_RIGHT         reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_FULL          reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_WHERE         reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_ALL           reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_ANY           reduce using rule 161 (current -> R_CURRENT_DATE .)
    R_SOME          reduce using rule 161 (current -> R_CURRENT_DATE .)


state 117

    (162) current -> R_CURRENT_TIME .

    O_SUMA          reduce using rule 162 (current -> R_CURRENT_TIME .)
    O_RESTA         reduce using rule 162 (current -> R_CURRENT_TIME .)
    O_PRODUCTO      reduce using rule 162 (current -> R_CURRENT_TIME .)
    O_DIVISION      reduce using rule 162 (current -> R_CURRENT_TIME .)
    O_EXPONENTE     reduce using rule 162 (current -> R_CURRENT_TIME .)
    O_MODULAR       reduce using rule 162 (current -> R_CURRENT_TIME .)
    OC_CONCATENAR   reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_IN            reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_NOT           reduce using rule 162 (current -> R_CURRENT_TIME .)
    OL_MENORQUE     reduce using rule 162 (current -> R_CURRENT_TIME .)
    OL_MAYORQUE     reduce using rule 162 (current -> R_CURRENT_TIME .)
    OL_MAYORIGUALQUE reduce using rule 162 (current -> R_CURRENT_TIME .)
    OL_MENORIGUALQUE reduce using rule 162 (current -> R_CURRENT_TIME .)
    S_IGUAL         reduce using rule 162 (current -> R_CURRENT_TIME .)
    OL_DISTINTODE   reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_IS            reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_BETWEEN       reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_ISNULL        reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_NOTNULL       reduce using rule 162 (current -> R_CURRENT_TIME .)
    OL_ESIGUAL      reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_AS            reduce using rule 162 (current -> R_CURRENT_TIME .)
    ID              reduce using rule 162 (current -> R_CURRENT_TIME .)
    STRING          reduce using rule 162 (current -> R_CURRENT_TIME .)
    CHARACTER       reduce using rule 162 (current -> R_CURRENT_TIME .)
    S_COMA          reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_FROM          reduce using rule 162 (current -> R_CURRENT_TIME .)
    S_PUNTOCOMA     reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_UNION         reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_INTERSECT     reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_EXCEPT        reduce using rule 162 (current -> R_CURRENT_TIME .)
    S_PARDER        reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_AND           reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_OR            reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_GROUP         reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_ORDER         reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_LIMIT         reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_THEN          reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_NATURAL       reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_INNER         reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_LEFT          reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_RIGHT         reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_FULL          reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_WHERE         reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_ALL           reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_ANY           reduce using rule 162 (current -> R_CURRENT_TIME .)
    R_SOME          reduce using rule 162 (current -> R_CURRENT_TIME .)


state 118

    (245) boolean -> R_EXISTS . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 221


state 119

    (248) boolean -> expComp .

    R_AND           reduce using rule 248 (boolean -> expComp .)
    R_OR            reduce using rule 248 (boolean -> expComp .)
    R_IS            reduce using rule 248 (boolean -> expComp .)
    R_AS            reduce using rule 248 (boolean -> expComp .)
    ID              reduce using rule 248 (boolean -> expComp .)
    STRING          reduce using rule 248 (boolean -> expComp .)
    CHARACTER       reduce using rule 248 (boolean -> expComp .)
    S_COMA          reduce using rule 248 (boolean -> expComp .)
    R_FROM          reduce using rule 248 (boolean -> expComp .)
    S_PUNTOCOMA     reduce using rule 248 (boolean -> expComp .)
    R_UNION         reduce using rule 248 (boolean -> expComp .)
    R_INTERSECT     reduce using rule 248 (boolean -> expComp .)
    R_EXCEPT        reduce using rule 248 (boolean -> expComp .)
    S_PARDER        reduce using rule 248 (boolean -> expComp .)
    R_GROUP         reduce using rule 248 (boolean -> expComp .)
    R_ORDER         reduce using rule 248 (boolean -> expComp .)
    R_LIMIT         reduce using rule 248 (boolean -> expComp .)
    R_THEN          reduce using rule 248 (boolean -> expComp .)
    R_NATURAL       reduce using rule 248 (boolean -> expComp .)
    R_INNER         reduce using rule 248 (boolean -> expComp .)
    R_LEFT          reduce using rule 248 (boolean -> expComp .)
    R_RIGHT         reduce using rule 248 (boolean -> expComp .)
    R_FULL          reduce using rule 248 (boolean -> expComp .)
    R_WHERE         reduce using rule 248 (boolean -> expComp .)


state 120

    (249) boolean -> expSubq .

    R_AND           reduce using rule 249 (boolean -> expSubq .)
    R_OR            reduce using rule 249 (boolean -> expSubq .)
    R_IS            reduce using rule 249 (boolean -> expSubq .)
    R_AS            reduce using rule 249 (boolean -> expSubq .)
    ID              reduce using rule 249 (boolean -> expSubq .)
    STRING          reduce using rule 249 (boolean -> expSubq .)
    CHARACTER       reduce using rule 249 (boolean -> expSubq .)
    S_COMA          reduce using rule 249 (boolean -> expSubq .)
    R_FROM          reduce using rule 249 (boolean -> expSubq .)
    S_PUNTOCOMA     reduce using rule 249 (boolean -> expSubq .)
    R_UNION         reduce using rule 249 (boolean -> expSubq .)
    R_INTERSECT     reduce using rule 249 (boolean -> expSubq .)
    R_EXCEPT        reduce using rule 249 (boolean -> expSubq .)
    S_PARDER        reduce using rule 249 (boolean -> expSubq .)
    R_GROUP         reduce using rule 249 (boolean -> expSubq .)
    R_ORDER         reduce using rule 249 (boolean -> expSubq .)
    R_LIMIT         reduce using rule 249 (boolean -> expSubq .)
    R_THEN          reduce using rule 249 (boolean -> expSubq .)
    R_NATURAL       reduce using rule 249 (boolean -> expSubq .)
    R_INNER         reduce using rule 249 (boolean -> expSubq .)
    R_LEFT          reduce using rule 249 (boolean -> expSubq .)
    R_RIGHT         reduce using rule 249 (boolean -> expSubq .)
    R_FULL          reduce using rule 249 (boolean -> expSubq .)
    R_WHERE         reduce using rule 249 (boolean -> expSubq .)


state 121

    (147) timeStamp -> R_TIMESTAMP . STRING

    STRING          shift and go to state 222


state 122

    (148) timeStamp -> R_INTERVAL . STRING

    STRING          shift and go to state 223


state 123

    (239) expSubq -> stringExp . R_LIKE STRING

    R_LIKE          shift and go to state 224


state 124

    (444) executePL -> R_EXECUTE funcCall .

    S_PUNTOCOMA     reduce using rule 444 (executePL -> R_EXECUTE funcCall .)


state 125

    (138) funcCall -> ID . S_PARIZQ paramsList S_PARDER
    (139) funcCall -> ID . S_PARIZQ S_PARDER

    S_PARIZQ        shift and go to state 175


state 126

    (319) selectStmt -> selectStmt R_UNION allOpt . selectStmt
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 225

state 127

    (325) allOpt -> R_ALL .

    R_SELECT        reduce using rule 325 (allOpt -> R_ALL .)
    S_PARIZQ        reduce using rule 325 (allOpt -> R_ALL .)


state 128

    (320) selectStmt -> selectStmt R_INTERSECT allOpt . selectStmt
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 226

state 129

    (321) selectStmt -> selectStmt R_EXCEPT allOpt . selectStmt
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 227

state 130

    (17) stmt -> ifStmt R_END R_IF . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 228


state 131

    (19) ifStmt -> R_IF S_PARIZQ expresion . S_PARDER R_THEN List_body else_

    S_PARDER        shift and go to state 229


state 132

    (262) columnName -> ID .
    (263) columnName -> ID . S_PUNTO ID
    (138) funcCall -> ID . S_PARIZQ paramsList S_PARDER
    (139) funcCall -> ID . S_PARIZQ S_PARDER

    O_SUMA          reduce using rule 262 (columnName -> ID .)
    O_RESTA         reduce using rule 262 (columnName -> ID .)
    O_PRODUCTO      reduce using rule 262 (columnName -> ID .)
    O_DIVISION      reduce using rule 262 (columnName -> ID .)
    O_EXPONENTE     reduce using rule 262 (columnName -> ID .)
    O_MODULAR       reduce using rule 262 (columnName -> ID .)
    OC_CONCATENAR   reduce using rule 262 (columnName -> ID .)
    R_IN            reduce using rule 262 (columnName -> ID .)
    R_NOT           reduce using rule 262 (columnName -> ID .)
    OL_MENORQUE     reduce using rule 262 (columnName -> ID .)
    OL_MAYORQUE     reduce using rule 262 (columnName -> ID .)
    OL_MAYORIGUALQUE reduce using rule 262 (columnName -> ID .)
    OL_MENORIGUALQUE reduce using rule 262 (columnName -> ID .)
    S_IGUAL         reduce using rule 262 (columnName -> ID .)
    OL_DISTINTODE   reduce using rule 262 (columnName -> ID .)
    R_IS            reduce using rule 262 (columnName -> ID .)
    R_BETWEEN       reduce using rule 262 (columnName -> ID .)
    R_ISNULL        reduce using rule 262 (columnName -> ID .)
    R_NOTNULL       reduce using rule 262 (columnName -> ID .)
    OL_ESIGUAL      reduce using rule 262 (columnName -> ID .)
    S_PARDER        reduce using rule 262 (columnName -> ID .)
    R_LIKE          reduce using rule 262 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 262 (columnName -> ID .)
    R_AS            reduce using rule 262 (columnName -> ID .)
    ID              reduce using rule 262 (columnName -> ID .)
    STRING          reduce using rule 262 (columnName -> ID .)
    CHARACTER       reduce using rule 262 (columnName -> ID .)
    S_COMA          reduce using rule 262 (columnName -> ID .)
    R_FROM          reduce using rule 262 (columnName -> ID .)
    R_UNION         reduce using rule 262 (columnName -> ID .)
    R_INTERSECT     reduce using rule 262 (columnName -> ID .)
    R_EXCEPT        reduce using rule 262 (columnName -> ID .)
    R_AND           reduce using rule 262 (columnName -> ID .)
    R_OR            reduce using rule 262 (columnName -> ID .)
    R_GROUP         reduce using rule 262 (columnName -> ID .)
    R_ORDER         reduce using rule 262 (columnName -> ID .)
    R_LIMIT         reduce using rule 262 (columnName -> ID .)
    R_THEN          reduce using rule 262 (columnName -> ID .)
    R_NATURAL       reduce using rule 262 (columnName -> ID .)
    R_INNER         reduce using rule 262 (columnName -> ID .)
    R_LEFT          reduce using rule 262 (columnName -> ID .)
    R_RIGHT         reduce using rule 262 (columnName -> ID .)
    R_FULL          reduce using rule 262 (columnName -> ID .)
    R_WHERE         reduce using rule 262 (columnName -> ID .)
    R_ALL           reduce using rule 262 (columnName -> ID .)
    R_ANY           reduce using rule 262 (columnName -> ID .)
    R_SOME          reduce using rule 262 (columnName -> ID .)
    S_PUNTO         shift and go to state 230
    S_PARIZQ        shift and go to state 175


state 133

    (399) functionStmt -> R_CREATE R_FUNCTION ID . S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (400) functionStmt -> R_CREATE R_FUNCTION ID . S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction

    S_PARIZQ        shift and go to state 231


state 134

    (434) procedureStmt -> R_CREATE orReplace R_PROCEDURE . ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> R_CREATE orReplace R_PROCEDURE . ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure

    ID              shift and go to state 232


state 135

    (60) createOpts -> orReplace R_DATABASE . ifNotExists idOrString createOwner createMode
    (64) ifNotExists -> . R_IF R_NOT R_EXISTS
    (65) ifNotExists -> .

    R_IF            shift and go to state 139
    ID              reduce using rule 65 (ifNotExists -> .)
    STRING          reduce using rule 65 (ifNotExists -> .)
    CHARACTER       reduce using rule 65 (ifNotExists -> .)

    ifNotExists                    shift and go to state 233

state 136

    (61) orReplace -> R_OR R_REPLACE .

    R_PROCEDURE     reduce using rule 61 (orReplace -> R_OR R_REPLACE .)
    R_DATABASE      reduce using rule 61 (orReplace -> R_OR R_REPLACE .)


state 137

    (48) createOpts -> unique_index R_INDEX . ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    ID              shift and go to state 234


state 138

    (59) createOpts -> R_TABLE ifNotExists . idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (43) idOrString -> . ID
    (44) idOrString -> . STRING
    (45) idOrString -> . CHARACTER

    ID              shift and go to state 144
    STRING          shift and go to state 145
    CHARACTER       shift and go to state 146

    idOrString                     shift and go to state 235

state 139

    (64) ifNotExists -> R_IF . R_NOT R_EXISTS

    R_NOT           shift and go to state 236


state 140

    (63) createOpts -> R_TYPE ifNotExists . ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER

    ID              shift and go to state 237


state 141

    (395) showStmt -> R_SHOW R_DATABASES likeOpt .

    S_PUNTOCOMA     reduce using rule 395 (showStmt -> R_SHOW R_DATABASES likeOpt .)


state 142

    (396) likeOpt -> R_LIKE . STRING

    STRING          shift and go to state 238


state 143

    (279) alterStmt -> R_ALTER R_DATABASE idOrString . alterDb
    (283) alterDb -> . R_RENAME R_TO idOrString
    (284) alterDb -> . R_OWNER R_TO ownerOPts

    R_RENAME        shift and go to state 240
    R_OWNER         shift and go to state 241

    alterDb                        shift and go to state 239

state 144

    (43) idOrString -> ID .

    R_RENAME        reduce using rule 43 (idOrString -> ID .)
    R_OWNER         reduce using rule 43 (idOrString -> ID .)
    R_ADD           reduce using rule 43 (idOrString -> ID .)
    R_ALTER         reduce using rule 43 (idOrString -> ID .)
    R_DROP          reduce using rule 43 (idOrString -> ID .)
    R_SET           reduce using rule 43 (idOrString -> ID .)
    S_COMA          reduce using rule 43 (idOrString -> ID .)
    R_WHERE         reduce using rule 43 (idOrString -> ID .)
    S_PUNTOCOMA     reduce using rule 43 (idOrString -> ID .)
    R_NATURAL       reduce using rule 43 (idOrString -> ID .)
    R_INNER         reduce using rule 43 (idOrString -> ID .)
    R_LEFT          reduce using rule 43 (idOrString -> ID .)
    R_RIGHT         reduce using rule 43 (idOrString -> ID .)
    R_FULL          reduce using rule 43 (idOrString -> ID .)
    R_GROUP         reduce using rule 43 (idOrString -> ID .)
    R_ORDER         reduce using rule 43 (idOrString -> ID .)
    R_LIMIT         reduce using rule 43 (idOrString -> ID .)
    R_UNION         reduce using rule 43 (idOrString -> ID .)
    R_INTERSECT     reduce using rule 43 (idOrString -> ID .)
    R_EXCEPT        reduce using rule 43 (idOrString -> ID .)
    S_PARDER        reduce using rule 43 (idOrString -> ID .)
    R_FROM          reduce using rule 43 (idOrString -> ID .)
    S_PARIZQ        reduce using rule 43 (idOrString -> ID .)
    R_ON            reduce using rule 43 (idOrString -> ID .)
    R_USING         reduce using rule 43 (idOrString -> ID .)
    R_MODE          reduce using rule 43 (idOrString -> ID .)


state 145

    (44) idOrString -> STRING .

    R_RENAME        reduce using rule 44 (idOrString -> STRING .)
    R_OWNER         reduce using rule 44 (idOrString -> STRING .)
    R_ADD           reduce using rule 44 (idOrString -> STRING .)
    R_ALTER         reduce using rule 44 (idOrString -> STRING .)
    R_DROP          reduce using rule 44 (idOrString -> STRING .)
    R_SET           reduce using rule 44 (idOrString -> STRING .)
    S_COMA          reduce using rule 44 (idOrString -> STRING .)
    R_WHERE         reduce using rule 44 (idOrString -> STRING .)
    S_PUNTOCOMA     reduce using rule 44 (idOrString -> STRING .)
    R_NATURAL       reduce using rule 44 (idOrString -> STRING .)
    R_INNER         reduce using rule 44 (idOrString -> STRING .)
    R_LEFT          reduce using rule 44 (idOrString -> STRING .)
    R_RIGHT         reduce using rule 44 (idOrString -> STRING .)
    R_FULL          reduce using rule 44 (idOrString -> STRING .)
    R_GROUP         reduce using rule 44 (idOrString -> STRING .)
    R_ORDER         reduce using rule 44 (idOrString -> STRING .)
    R_LIMIT         reduce using rule 44 (idOrString -> STRING .)
    R_UNION         reduce using rule 44 (idOrString -> STRING .)
    R_INTERSECT     reduce using rule 44 (idOrString -> STRING .)
    R_EXCEPT        reduce using rule 44 (idOrString -> STRING .)
    S_PARDER        reduce using rule 44 (idOrString -> STRING .)
    R_FROM          reduce using rule 44 (idOrString -> STRING .)
    S_PARIZQ        reduce using rule 44 (idOrString -> STRING .)
    R_ON            reduce using rule 44 (idOrString -> STRING .)
    R_USING         reduce using rule 44 (idOrString -> STRING .)
    R_MODE          reduce using rule 44 (idOrString -> STRING .)


state 146

    (45) idOrString -> CHARACTER .

    R_RENAME        reduce using rule 45 (idOrString -> CHARACTER .)
    R_OWNER         reduce using rule 45 (idOrString -> CHARACTER .)
    R_ADD           reduce using rule 45 (idOrString -> CHARACTER .)
    R_ALTER         reduce using rule 45 (idOrString -> CHARACTER .)
    R_DROP          reduce using rule 45 (idOrString -> CHARACTER .)
    R_SET           reduce using rule 45 (idOrString -> CHARACTER .)
    S_COMA          reduce using rule 45 (idOrString -> CHARACTER .)
    R_WHERE         reduce using rule 45 (idOrString -> CHARACTER .)
    S_PUNTOCOMA     reduce using rule 45 (idOrString -> CHARACTER .)
    R_NATURAL       reduce using rule 45 (idOrString -> CHARACTER .)
    R_INNER         reduce using rule 45 (idOrString -> CHARACTER .)
    R_LEFT          reduce using rule 45 (idOrString -> CHARACTER .)
    R_RIGHT         reduce using rule 45 (idOrString -> CHARACTER .)
    R_FULL          reduce using rule 45 (idOrString -> CHARACTER .)
    R_GROUP         reduce using rule 45 (idOrString -> CHARACTER .)
    R_ORDER         reduce using rule 45 (idOrString -> CHARACTER .)
    R_LIMIT         reduce using rule 45 (idOrString -> CHARACTER .)
    R_UNION         reduce using rule 45 (idOrString -> CHARACTER .)
    R_INTERSECT     reduce using rule 45 (idOrString -> CHARACTER .)
    R_EXCEPT        reduce using rule 45 (idOrString -> CHARACTER .)
    S_PARDER        reduce using rule 45 (idOrString -> CHARACTER .)
    R_FROM          reduce using rule 45 (idOrString -> CHARACTER .)
    S_PARIZQ        reduce using rule 45 (idOrString -> CHARACTER .)
    R_ON            reduce using rule 45 (idOrString -> CHARACTER .)
    R_USING         reduce using rule 45 (idOrString -> CHARACTER .)
    R_MODE          reduce using rule 45 (idOrString -> CHARACTER .)


state 147

    (280) alterStmt -> R_ALTER R_TABLE idOrString . alterTableList
    (288) alterTableList -> . alterTableList S_COMA alterTable
    (289) alterTableList -> . alterTable
    (290) alterTable -> . R_ADD alterAdd
    (291) alterTable -> . R_ALTER alterAlter
    (292) alterTable -> . R_DROP alterDrop
    (293) alterTable -> . R_RENAME alterRename

    R_ADD           shift and go to state 245
    R_ALTER         shift and go to state 242
    R_DROP          shift and go to state 246
    R_RENAME        shift and go to state 247

    alterTableList                 shift and go to state 243
    alterTable                     shift and go to state 244

state 148

    (281) alterStmt -> R_ALTER R_INDEX ifExists . ID R_ALTER ID ID
    (282) alterStmt -> R_ALTER R_INDEX ifExists . ID R_ALTER ID INTEGER

    ID              shift and go to state 248


state 149

    (311) ifExists -> R_IF . R_EXISTS

    R_EXISTS        shift and go to state 249


state 150

    (432) asignacionStmt -> ID S_DOSPUNTOS S_IGUAL . expresion
    (135) expresion -> . datatype
    (136) expresion -> . expBool
    (137) expresion -> . S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName

    S_PARIZQ        shift and go to state 90
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    R_NOT           shift and go to state 100
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_EXISTS        shift and go to state 118
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    expresion                      shift and go to state 250
    datatype                       shift and go to state 88
    expBool                        shift and go to state 89
    columnName                     shift and go to state 94
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    boolean                        shift and go to state 101
    timeStamp                      shift and go to state 114
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    stringExp                      shift and go to state 123

state 151

    (433) asignacionStmt -> ID S_IGUAL expresion .

    S_PUNTOCOMA     reduce using rule 433 (asignacionStmt -> ID S_IGUAL expresion .)


state 152

    (305) dropStmt -> R_DROP R_TABLE ifExists . idOrString
    (43) idOrString -> . ID
    (44) idOrString -> . STRING
    (45) idOrString -> . CHARACTER

    ID              shift and go to state 144
    STRING          shift and go to state 145
    CHARACTER       shift and go to state 146

    idOrString                     shift and go to state 251

state 153

    (306) dropStmt -> R_DROP R_DATABASE ifExists . idOrString
    (43) idOrString -> . ID
    (44) idOrString -> . STRING
    (45) idOrString -> . CHARACTER

    ID              shift and go to state 144
    STRING          shift and go to state 145
    CHARACTER       shift and go to state 146

    idOrString                     shift and go to state 252

state 154

    (307) dropStmt -> R_DROP R_FUNCTION ifExists . idOrString
    (308) dropStmt -> R_DROP R_FUNCTION ifExists . idOrString S_PARIZQ S_PARDER
    (43) idOrString -> . ID
    (44) idOrString -> . STRING
    (45) idOrString -> . CHARACTER

    ID              shift and go to state 144
    STRING          shift and go to state 145
    CHARACTER       shift and go to state 146

    idOrString                     shift and go to state 253

state 155

    (309) dropStmt -> R_DROP R_PROCEDURE ifExists . idOrString S_PARIZQ S_PARDER
    (43) idOrString -> . ID
    (44) idOrString -> . STRING
    (45) idOrString -> . CHARACTER

    ID              shift and go to state 144
    STRING          shift and go to state 145
    CHARACTER       shift and go to state 146

    idOrString                     shift and go to state 254

state 156

    (310) dropStmt -> R_DROP R_INDEX concurrenly . ifExists idOrString
    (311) ifExists -> . R_IF R_EXISTS
    (312) ifExists -> .

    R_IF            shift and go to state 149
    ID              reduce using rule 312 (ifExists -> .)
    STRING          reduce using rule 312 (ifExists -> .)
    CHARACTER       reduce using rule 312 (ifExists -> .)

    ifExists                       shift and go to state 255

state 157

    (313) concurrenly -> R_CONCURRENTLY .

    R_IF            reduce using rule 313 (concurrenly -> R_CONCURRENTLY .)
    ID              reduce using rule 313 (concurrenly -> R_CONCURRENTLY .)
    STRING          reduce using rule 313 (concurrenly -> R_CONCURRENTLY .)
    CHARACTER       reduce using rule 313 (concurrenly -> R_CONCURRENTLY .)


state 158

    (322) selectStmt -> S_PARIZQ selectStmt S_PARDER .

    S_PUNTOCOMA     reduce using rule 322 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 322 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 322 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 322 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 322 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)


state 159

    (382) insertStmt -> R_INSERT R_INTO ID . paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (383) paramsColumn -> . S_PARIZQ idList S_PARDER
    (384) paramsColumn -> .

    S_PARIZQ        shift and go to state 257
    R_VALUES        reduce using rule 384 (paramsColumn -> .)

    paramsColumn                   shift and go to state 256

state 160

    (385) updateStmt -> R_UPDATE fromBody R_SET . updateCols whereCl
    (386) updateCols -> . updateCols S_COMA updateVals
    (387) updateCols -> . updateVals
    (388) updateVals -> . ID S_IGUAL updateExp

    ID              shift and go to state 260

    updateCols                     shift and go to state 258
    updateVals                     shift and go to state 259

state 161

    (338) fromBody -> ID optAlias .

    R_SET           reduce using rule 338 (fromBody -> ID optAlias .)
    S_COMA          reduce using rule 338 (fromBody -> ID optAlias .)
    R_WHERE         reduce using rule 338 (fromBody -> ID optAlias .)
    S_PUNTOCOMA     reduce using rule 338 (fromBody -> ID optAlias .)
    R_NATURAL       reduce using rule 338 (fromBody -> ID optAlias .)
    R_INNER         reduce using rule 338 (fromBody -> ID optAlias .)
    R_LEFT          reduce using rule 338 (fromBody -> ID optAlias .)
    R_RIGHT         reduce using rule 338 (fromBody -> ID optAlias .)
    R_FULL          reduce using rule 338 (fromBody -> ID optAlias .)
    R_GROUP         reduce using rule 338 (fromBody -> ID optAlias .)
    R_ORDER         reduce using rule 338 (fromBody -> ID optAlias .)
    R_LIMIT         reduce using rule 338 (fromBody -> ID optAlias .)
    R_UNION         reduce using rule 338 (fromBody -> ID optAlias .)
    R_INTERSECT     reduce using rule 338 (fromBody -> ID optAlias .)
    R_EXCEPT        reduce using rule 338 (fromBody -> ID optAlias .)
    S_PARDER        reduce using rule 338 (fromBody -> ID optAlias .)


state 162

    (333) optAlias -> R_AS . idOrString
    (43) idOrString -> . ID
    (44) idOrString -> . STRING
    (45) idOrString -> . CHARACTER

    ID              shift and go to state 144
    STRING          shift and go to state 145
    CHARACTER       shift and go to state 146

    idOrString                     shift and go to state 261

state 163

    (334) optAlias -> idOrString .

    R_SET           reduce using rule 334 (optAlias -> idOrString .)
    S_COMA          reduce using rule 334 (optAlias -> idOrString .)
    R_WHERE         reduce using rule 334 (optAlias -> idOrString .)
    S_PUNTOCOMA     reduce using rule 334 (optAlias -> idOrString .)
    R_NATURAL       reduce using rule 334 (optAlias -> idOrString .)
    R_INNER         reduce using rule 334 (optAlias -> idOrString .)
    R_LEFT          reduce using rule 334 (optAlias -> idOrString .)
    R_RIGHT         reduce using rule 334 (optAlias -> idOrString .)
    R_FULL          reduce using rule 334 (optAlias -> idOrString .)
    R_GROUP         reduce using rule 334 (optAlias -> idOrString .)
    R_ORDER         reduce using rule 334 (optAlias -> idOrString .)
    R_LIMIT         reduce using rule 334 (optAlias -> idOrString .)
    R_UNION         reduce using rule 334 (optAlias -> idOrString .)
    R_INTERSECT     reduce using rule 334 (optAlias -> idOrString .)
    R_EXCEPT        reduce using rule 334 (optAlias -> idOrString .)
    S_PARDER        reduce using rule 334 (optAlias -> idOrString .)
    R_FROM          reduce using rule 334 (optAlias -> idOrString .)
    R_ON            reduce using rule 334 (optAlias -> idOrString .)
    R_USING         reduce using rule 334 (optAlias -> idOrString .)


state 164

    (339) fromBody -> S_PARIZQ selectStmt . S_PARDER R_AS idOrString
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 262
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 165

    (391) deleteStmt -> R_DELETE fromCl whereCl .

    S_PUNTOCOMA     reduce using rule 391 (deleteStmt -> R_DELETE fromCl whereCl .)


state 166

    (355) whereCl -> R_WHERE . expBool
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 100
    S_PARIZQ        shift and go to state 213
    R_EXISTS        shift and go to state 118
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    expBool                        shift and go to state 263
    boolean                        shift and go to state 101
    datatype                       shift and go to state 214
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    columnName                     shift and go to state 94
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    stringExp                      shift and go to state 123
    timeStamp                      shift and go to state 114

state 167

    (323) fromCl -> R_FROM tableExp .
    (336) tableExp -> tableExp . S_COMA fromBody

    R_WHERE         reduce using rule 323 (fromCl -> R_FROM tableExp .)
    S_PUNTOCOMA     reduce using rule 323 (fromCl -> R_FROM tableExp .)
    R_NATURAL       reduce using rule 323 (fromCl -> R_FROM tableExp .)
    R_INNER         reduce using rule 323 (fromCl -> R_FROM tableExp .)
    R_LEFT          reduce using rule 323 (fromCl -> R_FROM tableExp .)
    R_RIGHT         reduce using rule 323 (fromCl -> R_FROM tableExp .)
    R_FULL          reduce using rule 323 (fromCl -> R_FROM tableExp .)
    R_GROUP         reduce using rule 323 (fromCl -> R_FROM tableExp .)
    R_ORDER         reduce using rule 323 (fromCl -> R_FROM tableExp .)
    R_LIMIT         reduce using rule 323 (fromCl -> R_FROM tableExp .)
    R_UNION         reduce using rule 323 (fromCl -> R_FROM tableExp .)
    R_INTERSECT     reduce using rule 323 (fromCl -> R_FROM tableExp .)
    R_EXCEPT        reduce using rule 323 (fromCl -> R_FROM tableExp .)
    S_PARDER        reduce using rule 323 (fromCl -> R_FROM tableExp .)
    S_COMA          shift and go to state 264


state 168

    (337) tableExp -> fromBody .

    S_COMA          reduce using rule 337 (tableExp -> fromBody .)
    R_WHERE         reduce using rule 337 (tableExp -> fromBody .)
    S_PUNTOCOMA     reduce using rule 337 (tableExp -> fromBody .)
    R_NATURAL       reduce using rule 337 (tableExp -> fromBody .)
    R_INNER         reduce using rule 337 (tableExp -> fromBody .)
    R_LEFT          reduce using rule 337 (tableExp -> fromBody .)
    R_RIGHT         reduce using rule 337 (tableExp -> fromBody .)
    R_FULL          reduce using rule 337 (tableExp -> fromBody .)
    R_GROUP         reduce using rule 337 (tableExp -> fromBody .)
    R_ORDER         reduce using rule 337 (tableExp -> fromBody .)
    R_LIMIT         reduce using rule 337 (tableExp -> fromBody .)
    R_UNION         reduce using rule 337 (tableExp -> fromBody .)
    R_INTERSECT     reduce using rule 337 (tableExp -> fromBody .)
    R_EXCEPT        reduce using rule 337 (tableExp -> fromBody .)
    S_PARDER        reduce using rule 337 (tableExp -> fromBody .)


state 169

    (392) truncateStmt -> R_TRUNCATE tableOpt ID .

    S_PUNTOCOMA     reduce using rule 392 (truncateStmt -> R_TRUNCATE tableOpt ID .)


state 170

    (315) selectStmt -> R_SELECT R_DISTINCT selectParams . fromCl whereCl groupByCl orderByCl limitCl
    (323) fromCl -> . R_FROM tableExp

    R_FROM          shift and go to state 77

    fromCl                         shift and go to state 265

state 171

    (316) selectStmt -> R_SELECT selectParams fromCl . whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> R_SELECT selectParams fromCl . joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> R_SELECT selectParams fromCl . joinList whereCl groupByCl limitCl
    (355) whereCl -> . R_WHERE expBool
    (356) whereCl -> .
    (340) joinList -> . joinList2
    (341) joinList2 -> . joinList2 joinCl
    (342) joinList2 -> . joinCl
    (343) joinCl -> . joinOpt R_JOIN columnName optAlias R_ON expBool
    (344) joinCl -> . joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER
    (345) joinCl -> . R_NATURAL joinOpt R_JOIN columnName optAlias
    (348) joinOpt -> . R_INNER
    (349) joinOpt -> . R_LEFT
    (350) joinOpt -> . R_LEFT R_OUTER
    (351) joinOpt -> . R_RIGHT
    (352) joinOpt -> . R_RIGHT R_OUTER
    (353) joinOpt -> . R_FULL
    (354) joinOpt -> . R_FULL R_OUTER

    R_WHERE         shift and go to state 166
    R_GROUP         reduce using rule 356 (whereCl -> .)
    R_ORDER         reduce using rule 356 (whereCl -> .)
    R_LIMIT         reduce using rule 356 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 356 (whereCl -> .)
    R_UNION         reduce using rule 356 (whereCl -> .)
    R_INTERSECT     reduce using rule 356 (whereCl -> .)
    R_EXCEPT        reduce using rule 356 (whereCl -> .)
    S_PARDER        reduce using rule 356 (whereCl -> .)
    R_NATURAL       shift and go to state 271
    R_INNER         shift and go to state 272
    R_LEFT          shift and go to state 273
    R_RIGHT         shift and go to state 274
    R_FULL          shift and go to state 275

    whereCl                        shift and go to state 266
    joinList                       shift and go to state 267
    joinList2                      shift and go to state 268
    joinCl                         shift and go to state 269
    joinOpt                        shift and go to state 270

state 172

    (329) selectList -> selectList S_COMA . selectListParams optAlias
    (331) selectListParams -> . expresion
    (332) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (135) expresion -> . datatype
    (136) expresion -> . expBool
    (137) expresion -> . S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName

    ID              shift and go to state 87
    S_PARIZQ        shift and go to state 90
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    R_NOT           shift and go to state 100
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_EXISTS        shift and go to state 118
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    selectListParams               shift and go to state 276
    expresion                      shift and go to state 86
    datatype                       shift and go to state 88
    expBool                        shift and go to state 89
    columnName                     shift and go to state 94
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    boolean                        shift and go to state 101
    timeStamp                      shift and go to state 114
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    stringExp                      shift and go to state 123

state 173

    (330) selectList -> selectListParams optAlias .

    S_COMA          reduce using rule 330 (selectList -> selectListParams optAlias .)
    R_FROM          reduce using rule 330 (selectList -> selectListParams optAlias .)
    S_PUNTOCOMA     reduce using rule 330 (selectList -> selectListParams optAlias .)
    R_UNION         reduce using rule 330 (selectList -> selectListParams optAlias .)
    R_INTERSECT     reduce using rule 330 (selectList -> selectListParams optAlias .)
    R_EXCEPT        reduce using rule 330 (selectList -> selectListParams optAlias .)
    S_PARDER        reduce using rule 330 (selectList -> selectListParams optAlias .)


state 174

    (332) selectListParams -> ID S_PUNTO . O_PRODUCTO
    (263) columnName -> ID S_PUNTO . ID

    O_PRODUCTO      shift and go to state 278
    ID              shift and go to state 277


state 175

    (138) funcCall -> ID S_PARIZQ . paramsList S_PARDER
    (139) funcCall -> ID S_PARIZQ . S_PARDER
    (173) paramsList -> . paramsList S_COMA datatype
    (174) paramsList -> . datatype
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    S_PARDER        shift and go to state 280
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    paramsList                     shift and go to state 279
    datatype                       shift and go to state 281
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 176

    (175) datatype -> datatype O_SUMA . datatype
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 282
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 177

    (176) datatype -> datatype O_RESTA . datatype
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 283
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 178

    (177) datatype -> datatype O_PRODUCTO . datatype
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 284
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 179

    (178) datatype -> datatype O_DIVISION . datatype
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 285
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 180

    (179) datatype -> datatype O_EXPONENTE . datatype
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 286
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 181

    (180) datatype -> datatype O_MODULAR . datatype
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 287
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 182

    (181) datatype -> datatype OC_CONCATENAR . datatype
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 288
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 183

    (246) boolean -> datatype R_IN . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 289


state 184

    (247) boolean -> datatype R_NOT . R_IN S_PARIZQ selectStmt S_PARDER
    (206) expComp -> datatype R_NOT . R_BETWEEN datatype R_AND datatype
    (225) expSubq -> datatype R_NOT . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER

    R_IN            shift and go to state 290
    R_BETWEEN       shift and go to state 291


state 185

    (197) expComp -> datatype OL_MENORQUE . datatype
    (218) expSubq -> datatype OL_MENORQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 292
    subqValues                     shift and go to state 293
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 186

    (198) expComp -> datatype OL_MAYORQUE . datatype
    (219) expSubq -> datatype OL_MAYORQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 297
    subqValues                     shift and go to state 298
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 187

    (199) expComp -> datatype OL_MAYORIGUALQUE . datatype
    (220) expSubq -> datatype OL_MAYORIGUALQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 299
    subqValues                     shift and go to state 300
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 188

    (200) expComp -> datatype OL_MENORIGUALQUE . datatype
    (221) expSubq -> datatype OL_MENORIGUALQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 301
    subqValues                     shift and go to state 302
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 189

    (201) expComp -> datatype S_IGUAL . datatype
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 303
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 190

    (202) expComp -> datatype OL_DISTINTODE . datatype
    (223) expSubq -> datatype OL_DISTINTODE . subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 304
    subqValues                     shift and go to state 305
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 191

    (203) expComp -> datatype R_IS . R_DISTINCT R_FROM datatype
    (204) expComp -> datatype R_IS . R_NOT R_DISTINCT R_FROM datatype
    (210) expComp -> datatype R_IS . R_NULL
    (211) expComp -> datatype R_IS . R_TRUE
    (212) expComp -> datatype R_IS . R_FALSE
    (213) expComp -> datatype R_IS . R_UNKNOWN
    (214) expComp -> datatype R_IS . R_NOT R_NULL
    (215) expComp -> datatype R_IS . R_NOT R_TRUE
    (216) expComp -> datatype R_IS . R_NOT R_FALSE
    (217) expComp -> datatype R_IS . R_NOT R_UNKNOWN
    (227) expSubq -> datatype R_IS . R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> datatype R_IS . R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> datatype R_IS . R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> datatype R_IS . R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> datatype R_IS . R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> datatype R_IS . R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> datatype R_IS . R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> datatype R_IS . R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> datatype R_IS . R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> datatype R_IS . R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_DISTINCT      shift and go to state 306
    R_NOT           shift and go to state 307
    R_NULL          shift and go to state 308
    R_TRUE          shift and go to state 309
    R_FALSE         shift and go to state 310
    R_UNKNOWN       shift and go to state 311


state 192

    (205) expComp -> datatype R_BETWEEN . datatype R_AND datatype
    (207) expComp -> datatype R_BETWEEN . R_SYMMETRIC datatype R_AND datatype
    (224) expSubq -> datatype R_BETWEEN . datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> datatype R_BETWEEN . R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_SYMMETRIC     shift and go to state 313
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 312
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 193

    (208) expComp -> datatype R_ISNULL .
    (231) expSubq -> datatype R_ISNULL . subqValues S_PARIZQ selectStmt S_PARDER
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME

    R_AND           reduce using rule 208 (expComp -> datatype R_ISNULL .)
    R_OR            reduce using rule 208 (expComp -> datatype R_ISNULL .)
    R_IS            reduce using rule 208 (expComp -> datatype R_ISNULL .)
    R_AS            reduce using rule 208 (expComp -> datatype R_ISNULL .)
    ID              reduce using rule 208 (expComp -> datatype R_ISNULL .)
    STRING          reduce using rule 208 (expComp -> datatype R_ISNULL .)
    CHARACTER       reduce using rule 208 (expComp -> datatype R_ISNULL .)
    S_COMA          reduce using rule 208 (expComp -> datatype R_ISNULL .)
    R_FROM          reduce using rule 208 (expComp -> datatype R_ISNULL .)
    S_PUNTOCOMA     reduce using rule 208 (expComp -> datatype R_ISNULL .)
    R_UNION         reduce using rule 208 (expComp -> datatype R_ISNULL .)
    R_INTERSECT     reduce using rule 208 (expComp -> datatype R_ISNULL .)
    R_EXCEPT        reduce using rule 208 (expComp -> datatype R_ISNULL .)
    S_PARDER        reduce using rule 208 (expComp -> datatype R_ISNULL .)
    R_GROUP         reduce using rule 208 (expComp -> datatype R_ISNULL .)
    R_ORDER         reduce using rule 208 (expComp -> datatype R_ISNULL .)
    R_LIMIT         reduce using rule 208 (expComp -> datatype R_ISNULL .)
    R_THEN          reduce using rule 208 (expComp -> datatype R_ISNULL .)
    R_NATURAL       reduce using rule 208 (expComp -> datatype R_ISNULL .)
    R_INNER         reduce using rule 208 (expComp -> datatype R_ISNULL .)
    R_LEFT          reduce using rule 208 (expComp -> datatype R_ISNULL .)
    R_RIGHT         reduce using rule 208 (expComp -> datatype R_ISNULL .)
    R_FULL          reduce using rule 208 (expComp -> datatype R_ISNULL .)
    R_WHERE         reduce using rule 208 (expComp -> datatype R_ISNULL .)
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296

    subqValues                     shift and go to state 314

state 194

    (209) expComp -> datatype R_NOTNULL .
    (232) expSubq -> datatype R_NOTNULL . subqValues S_PARIZQ selectStmt S_PARDER
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME

    R_AND           reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    R_OR            reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    R_IS            reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    R_AS            reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    ID              reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    STRING          reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    CHARACTER       reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    S_COMA          reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    R_FROM          reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    S_PUNTOCOMA     reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    R_UNION         reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    R_INTERSECT     reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    R_EXCEPT        reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    S_PARDER        reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    R_GROUP         reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    R_ORDER         reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    R_LIMIT         reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    R_THEN          reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    R_NATURAL       reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    R_INNER         reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    R_LEFT          reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    R_RIGHT         reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    R_FULL          reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    R_WHERE         reduce using rule 209 (expComp -> datatype R_NOTNULL .)
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296

    subqValues                     shift and go to state 315

state 195

    (222) expSubq -> datatype OL_ESIGUAL . subqValues S_PARIZQ selectStmt S_PARDER
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME

    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296

    subqValues                     shift and go to state 316

state 196

    (250) expBool -> expBool R_AND . expBool
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 100
    S_PARIZQ        shift and go to state 213
    R_EXISTS        shift and go to state 118
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    expBool                        shift and go to state 317
    boolean                        shift and go to state 101
    datatype                       shift and go to state 214
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    columnName                     shift and go to state 94
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    stringExp                      shift and go to state 123
    timeStamp                      shift and go to state 114

state 197

    (251) expBool -> expBool R_OR . expBool
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 100
    S_PARIZQ        shift and go to state 213
    R_EXISTS        shift and go to state 118
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    expBool                        shift and go to state 318
    boolean                        shift and go to state 101
    datatype                       shift and go to state 214
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    columnName                     shift and go to state 94
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    stringExp                      shift and go to state 123
    timeStamp                      shift and go to state 114

state 198

    (254) expBool -> expBool optBoolPredicate .

    R_AND           reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    R_OR            reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    R_IS            reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    R_AS            reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    ID              reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    STRING          reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    CHARACTER       reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    S_COMA          reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    R_FROM          reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    S_PUNTOCOMA     reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    R_UNION         reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    R_INTERSECT     reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    R_EXCEPT        reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    S_PARDER        reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    R_GROUP         reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    R_ORDER         reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    R_LIMIT         reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    R_THEN          reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    R_NATURAL       reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    R_INNER         reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    R_LEFT          reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    R_RIGHT         reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    R_FULL          reduce using rule 254 (expBool -> expBool optBoolPredicate .)
    R_WHERE         reduce using rule 254 (expBool -> expBool optBoolPredicate .)


state 199

    (256) optBoolPredicate -> R_IS . R_TRUE
    (257) optBoolPredicate -> R_IS . R_FALSE
    (258) optBoolPredicate -> R_IS . R_UNKNOWN
    (259) optBoolPredicate -> R_IS . R_NOT R_TRUE
    (260) optBoolPredicate -> R_IS . R_NOT R_FALSE
    (261) optBoolPredicate -> R_IS . R_NOT R_UNKNOWN

    R_TRUE          shift and go to state 319
    R_FALSE         shift and go to state 320
    R_UNKNOWN       shift and go to state 321
    R_NOT           shift and go to state 322


state 200

    (322) selectStmt -> S_PARIZQ . selectStmt S_PARDER
    (196) datatype -> S_PARIZQ . datatype S_PARDER
    (253) expBool -> S_PARIZQ . expBool S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 200
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    R_NOT           shift and go to state 100
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_EXISTS        shift and go to state 118
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    selectStmt                     shift and go to state 71
    datatype                       shift and go to state 202
    expBool                        shift and go to state 203
    columnName                     shift and go to state 94
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    boolean                        shift and go to state 101
    timeStamp                      shift and go to state 114
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    stringExp                      shift and go to state 123

state 201

    (137) expresion -> S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 323
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 202

    (196) datatype -> S_PARIZQ datatype . S_PARDER
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype
    (246) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (197) expComp -> datatype . OL_MENORQUE datatype
    (198) expComp -> datatype . OL_MAYORQUE datatype
    (199) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (200) expComp -> datatype . OL_MENORIGUALQUE datatype
    (201) expComp -> datatype . S_IGUAL datatype
    (202) expComp -> datatype . OL_DISTINTODE datatype
    (203) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (206) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> datatype . R_ISNULL
    (209) expComp -> datatype . R_NOTNULL
    (210) expComp -> datatype . R_IS R_NULL
    (211) expComp -> datatype . R_IS R_TRUE
    (212) expComp -> datatype . R_IS R_FALSE
    (213) expComp -> datatype . R_IS R_UNKNOWN
    (214) expComp -> datatype . R_IS R_NOT R_NULL
    (215) expComp -> datatype . R_IS R_NOT R_TRUE
    (216) expComp -> datatype . R_IS R_NOT R_FALSE
    (217) expComp -> datatype . R_IS R_NOT R_UNKNOWN
    (218) expSubq -> datatype . OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> datatype . OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> datatype . OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> datatype . OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> datatype . OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> datatype . OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> datatype . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> datatype . R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> datatype . R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> datatype . R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> datatype . R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> datatype . R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> datatype . R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> datatype . R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> datatype . R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> datatype . R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> datatype . R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> datatype . R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> datatype . R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    S_PARDER        shift and go to state 324
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182
    R_IN            shift and go to state 183
    R_NOT           shift and go to state 184
    OL_MENORQUE     shift and go to state 185
    OL_MAYORQUE     shift and go to state 186
    OL_MAYORIGUALQUE shift and go to state 187
    OL_MENORIGUALQUE shift and go to state 188
    S_IGUAL         shift and go to state 189
    OL_DISTINTODE   shift and go to state 190
    R_IS            shift and go to state 191
    R_BETWEEN       shift and go to state 192
    R_ISNULL        shift and go to state 193
    R_NOTNULL       shift and go to state 194
    OL_ESIGUAL      shift and go to state 195


state 203

    (253) expBool -> S_PARIZQ expBool . S_PARDER
    (250) expBool -> expBool . R_AND expBool
    (251) expBool -> expBool . R_OR expBool
    (254) expBool -> expBool . optBoolPredicate
    (256) optBoolPredicate -> . R_IS R_TRUE
    (257) optBoolPredicate -> . R_IS R_FALSE
    (258) optBoolPredicate -> . R_IS R_UNKNOWN
    (259) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (260) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (261) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    S_PARDER        shift and go to state 325
    R_AND           shift and go to state 196
    R_OR            shift and go to state 197
    R_IS            shift and go to state 199

    optBoolPredicate               shift and go to state 198

state 204

    (189) datatype -> O_SUMA datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 189 (datatype -> O_SUMA datatype .)
    O_RESTA         reduce using rule 189 (datatype -> O_SUMA datatype .)
    O_PRODUCTO      reduce using rule 189 (datatype -> O_SUMA datatype .)
    O_DIVISION      reduce using rule 189 (datatype -> O_SUMA datatype .)
    O_MODULAR       reduce using rule 189 (datatype -> O_SUMA datatype .)
    OC_CONCATENAR   reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_IN            reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_NOT           reduce using rule 189 (datatype -> O_SUMA datatype .)
    OL_MENORQUE     reduce using rule 189 (datatype -> O_SUMA datatype .)
    OL_MAYORQUE     reduce using rule 189 (datatype -> O_SUMA datatype .)
    OL_MAYORIGUALQUE reduce using rule 189 (datatype -> O_SUMA datatype .)
    OL_MENORIGUALQUE reduce using rule 189 (datatype -> O_SUMA datatype .)
    S_IGUAL         reduce using rule 189 (datatype -> O_SUMA datatype .)
    OL_DISTINTODE   reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_IS            reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_BETWEEN       reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_ISNULL        reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_NOTNULL       reduce using rule 189 (datatype -> O_SUMA datatype .)
    OL_ESIGUAL      reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_AS            reduce using rule 189 (datatype -> O_SUMA datatype .)
    ID              reduce using rule 189 (datatype -> O_SUMA datatype .)
    STRING          reduce using rule 189 (datatype -> O_SUMA datatype .)
    CHARACTER       reduce using rule 189 (datatype -> O_SUMA datatype .)
    S_COMA          reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_FROM          reduce using rule 189 (datatype -> O_SUMA datatype .)
    S_PUNTOCOMA     reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_UNION         reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_INTERSECT     reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_EXCEPT        reduce using rule 189 (datatype -> O_SUMA datatype .)
    S_PARDER        reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_AND           reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_OR            reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_GROUP         reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_ORDER         reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_LIMIT         reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_THEN          reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_NATURAL       reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_INNER         reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_LEFT          reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_RIGHT         reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_FULL          reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_WHERE         reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_ALL           reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_ANY           reduce using rule 189 (datatype -> O_SUMA datatype .)
    R_SOME          reduce using rule 189 (datatype -> O_SUMA datatype .)
    O_EXPONENTE     shift and go to state 180

  ! O_EXPONENTE     [ reduce using rule 189 (datatype -> O_SUMA datatype .) ]
  ! O_SUMA          [ shift and go to state 176 ]
  ! O_RESTA         [ shift and go to state 177 ]
  ! O_PRODUCTO      [ shift and go to state 178 ]
  ! O_DIVISION      [ shift and go to state 179 ]
  ! O_MODULAR       [ shift and go to state 181 ]
  ! OC_CONCATENAR   [ shift and go to state 182 ]


state 205

    (190) datatype -> columnName .

    O_SUMA          reduce using rule 190 (datatype -> columnName .)
    O_RESTA         reduce using rule 190 (datatype -> columnName .)
    O_PRODUCTO      reduce using rule 190 (datatype -> columnName .)
    O_DIVISION      reduce using rule 190 (datatype -> columnName .)
    O_EXPONENTE     reduce using rule 190 (datatype -> columnName .)
    O_MODULAR       reduce using rule 190 (datatype -> columnName .)
    OC_CONCATENAR   reduce using rule 190 (datatype -> columnName .)
    R_IN            reduce using rule 190 (datatype -> columnName .)
    R_NOT           reduce using rule 190 (datatype -> columnName .)
    OL_MENORQUE     reduce using rule 190 (datatype -> columnName .)
    OL_MAYORQUE     reduce using rule 190 (datatype -> columnName .)
    OL_MAYORIGUALQUE reduce using rule 190 (datatype -> columnName .)
    OL_MENORIGUALQUE reduce using rule 190 (datatype -> columnName .)
    S_IGUAL         reduce using rule 190 (datatype -> columnName .)
    OL_DISTINTODE   reduce using rule 190 (datatype -> columnName .)
    R_IS            reduce using rule 190 (datatype -> columnName .)
    R_BETWEEN       reduce using rule 190 (datatype -> columnName .)
    R_ISNULL        reduce using rule 190 (datatype -> columnName .)
    R_NOTNULL       reduce using rule 190 (datatype -> columnName .)
    OL_ESIGUAL      reduce using rule 190 (datatype -> columnName .)
    R_AS            reduce using rule 190 (datatype -> columnName .)
    ID              reduce using rule 190 (datatype -> columnName .)
    STRING          reduce using rule 190 (datatype -> columnName .)
    CHARACTER       reduce using rule 190 (datatype -> columnName .)
    S_COMA          reduce using rule 190 (datatype -> columnName .)
    R_FROM          reduce using rule 190 (datatype -> columnName .)
    S_PUNTOCOMA     reduce using rule 190 (datatype -> columnName .)
    R_UNION         reduce using rule 190 (datatype -> columnName .)
    R_INTERSECT     reduce using rule 190 (datatype -> columnName .)
    R_EXCEPT        reduce using rule 190 (datatype -> columnName .)
    S_PARDER        reduce using rule 190 (datatype -> columnName .)
    R_AND           reduce using rule 190 (datatype -> columnName .)
    R_OR            reduce using rule 190 (datatype -> columnName .)
    R_GROUP         reduce using rule 190 (datatype -> columnName .)
    R_ORDER         reduce using rule 190 (datatype -> columnName .)
    R_LIMIT         reduce using rule 190 (datatype -> columnName .)
    R_THEN          reduce using rule 190 (datatype -> columnName .)
    R_NATURAL       reduce using rule 190 (datatype -> columnName .)
    R_INNER         reduce using rule 190 (datatype -> columnName .)
    R_LEFT          reduce using rule 190 (datatype -> columnName .)
    R_RIGHT         reduce using rule 190 (datatype -> columnName .)
    R_FULL          reduce using rule 190 (datatype -> columnName .)
    R_WHERE         reduce using rule 190 (datatype -> columnName .)
    R_ALL           reduce using rule 190 (datatype -> columnName .)
    R_ANY           reduce using rule 190 (datatype -> columnName .)
    R_SOME          reduce using rule 190 (datatype -> columnName .)


state 206

    (196) datatype -> S_PARIZQ . datatype S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 326
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 207

    (167) literal -> STRING .

    O_SUMA          reduce using rule 167 (literal -> STRING .)
    O_RESTA         reduce using rule 167 (literal -> STRING .)
    O_PRODUCTO      reduce using rule 167 (literal -> STRING .)
    O_DIVISION      reduce using rule 167 (literal -> STRING .)
    O_EXPONENTE     reduce using rule 167 (literal -> STRING .)
    O_MODULAR       reduce using rule 167 (literal -> STRING .)
    OC_CONCATENAR   reduce using rule 167 (literal -> STRING .)
    R_IN            reduce using rule 167 (literal -> STRING .)
    R_NOT           reduce using rule 167 (literal -> STRING .)
    OL_MENORQUE     reduce using rule 167 (literal -> STRING .)
    OL_MAYORQUE     reduce using rule 167 (literal -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 167 (literal -> STRING .)
    OL_MENORIGUALQUE reduce using rule 167 (literal -> STRING .)
    S_IGUAL         reduce using rule 167 (literal -> STRING .)
    OL_DISTINTODE   reduce using rule 167 (literal -> STRING .)
    R_IS            reduce using rule 167 (literal -> STRING .)
    R_BETWEEN       reduce using rule 167 (literal -> STRING .)
    R_ISNULL        reduce using rule 167 (literal -> STRING .)
    R_NOTNULL       reduce using rule 167 (literal -> STRING .)
    OL_ESIGUAL      reduce using rule 167 (literal -> STRING .)
    R_AS            reduce using rule 167 (literal -> STRING .)
    ID              reduce using rule 167 (literal -> STRING .)
    STRING          reduce using rule 167 (literal -> STRING .)
    CHARACTER       reduce using rule 167 (literal -> STRING .)
    S_COMA          reduce using rule 167 (literal -> STRING .)
    R_FROM          reduce using rule 167 (literal -> STRING .)
    S_PUNTOCOMA     reduce using rule 167 (literal -> STRING .)
    R_UNION         reduce using rule 167 (literal -> STRING .)
    R_INTERSECT     reduce using rule 167 (literal -> STRING .)
    R_EXCEPT        reduce using rule 167 (literal -> STRING .)
    S_PARDER        reduce using rule 167 (literal -> STRING .)
    R_AND           reduce using rule 167 (literal -> STRING .)
    R_OR            reduce using rule 167 (literal -> STRING .)
    R_GROUP         reduce using rule 167 (literal -> STRING .)
    R_ORDER         reduce using rule 167 (literal -> STRING .)
    R_LIMIT         reduce using rule 167 (literal -> STRING .)
    R_THEN          reduce using rule 167 (literal -> STRING .)
    R_NATURAL       reduce using rule 167 (literal -> STRING .)
    R_INNER         reduce using rule 167 (literal -> STRING .)
    R_LEFT          reduce using rule 167 (literal -> STRING .)
    R_RIGHT         reduce using rule 167 (literal -> STRING .)
    R_FULL          reduce using rule 167 (literal -> STRING .)
    R_WHERE         reduce using rule 167 (literal -> STRING .)
    R_ALL           reduce using rule 167 (literal -> STRING .)
    R_ANY           reduce using rule 167 (literal -> STRING .)
    R_SOME          reduce using rule 167 (literal -> STRING .)
    R_END           reduce using rule 167 (literal -> STRING .)
    R_ELSE          reduce using rule 167 (literal -> STRING .)
    R_WHEN          reduce using rule 167 (literal -> STRING .)
    R_DEFAULT       reduce using rule 167 (literal -> STRING .)
    R_NULL          reduce using rule 167 (literal -> STRING .)
    R_PRIMARY       reduce using rule 167 (literal -> STRING .)
    R_REFERENCES    reduce using rule 167 (literal -> STRING .)
    R_CONSTRAINT    reduce using rule 167 (literal -> STRING .)
    R_UNIQUE        reduce using rule 167 (literal -> STRING .)
    R_CHECK         reduce using rule 167 (literal -> STRING .)


state 208

    (188) datatype -> O_RESTA datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 188 (datatype -> O_RESTA datatype .)
    O_RESTA         reduce using rule 188 (datatype -> O_RESTA datatype .)
    O_PRODUCTO      reduce using rule 188 (datatype -> O_RESTA datatype .)
    O_DIVISION      reduce using rule 188 (datatype -> O_RESTA datatype .)
    O_MODULAR       reduce using rule 188 (datatype -> O_RESTA datatype .)
    OC_CONCATENAR   reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_IN            reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_NOT           reduce using rule 188 (datatype -> O_RESTA datatype .)
    OL_MENORQUE     reduce using rule 188 (datatype -> O_RESTA datatype .)
    OL_MAYORQUE     reduce using rule 188 (datatype -> O_RESTA datatype .)
    OL_MAYORIGUALQUE reduce using rule 188 (datatype -> O_RESTA datatype .)
    OL_MENORIGUALQUE reduce using rule 188 (datatype -> O_RESTA datatype .)
    S_IGUAL         reduce using rule 188 (datatype -> O_RESTA datatype .)
    OL_DISTINTODE   reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_IS            reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_BETWEEN       reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_ISNULL        reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_NOTNULL       reduce using rule 188 (datatype -> O_RESTA datatype .)
    OL_ESIGUAL      reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_AS            reduce using rule 188 (datatype -> O_RESTA datatype .)
    ID              reduce using rule 188 (datatype -> O_RESTA datatype .)
    STRING          reduce using rule 188 (datatype -> O_RESTA datatype .)
    CHARACTER       reduce using rule 188 (datatype -> O_RESTA datatype .)
    S_COMA          reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_FROM          reduce using rule 188 (datatype -> O_RESTA datatype .)
    S_PUNTOCOMA     reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_UNION         reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_INTERSECT     reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_EXCEPT        reduce using rule 188 (datatype -> O_RESTA datatype .)
    S_PARDER        reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_AND           reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_OR            reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_GROUP         reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_ORDER         reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_LIMIT         reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_THEN          reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_NATURAL       reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_INNER         reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_LEFT          reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_RIGHT         reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_FULL          reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_WHERE         reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_ALL           reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_ANY           reduce using rule 188 (datatype -> O_RESTA datatype .)
    R_SOME          reduce using rule 188 (datatype -> O_RESTA datatype .)
    O_EXPONENTE     shift and go to state 180

  ! O_EXPONENTE     [ reduce using rule 188 (datatype -> O_RESTA datatype .) ]
  ! O_SUMA          [ shift and go to state 176 ]
  ! O_RESTA         [ shift and go to state 177 ]
  ! O_PRODUCTO      [ shift and go to state 178 ]
  ! O_DIVISION      [ shift and go to state 179 ]
  ! O_MODULAR       [ shift and go to state 181 ]
  ! OC_CONCATENAR   [ shift and go to state 182 ]


state 209

    (182) datatype -> R_CASE caseList . optElse R_END
    (183) caseList -> caseList . caseWhen
    (186) optElse -> . R_ELSE literal
    (187) optElse -> .
    (185) caseWhen -> . R_WHEN expBool R_THEN literal

    R_ELSE          shift and go to state 329
    R_END           reduce using rule 187 (optElse -> .)
    R_WHEN          shift and go to state 211

    optElse                        shift and go to state 327
    caseWhen                       shift and go to state 328

state 210

    (184) caseList -> caseWhen .

    R_ELSE          reduce using rule 184 (caseList -> caseWhen .)
    R_WHEN          reduce using rule 184 (caseList -> caseWhen .)
    R_END           reduce using rule 184 (caseList -> caseWhen .)


state 211

    (185) caseWhen -> R_WHEN . expBool R_THEN literal
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 100
    S_PARIZQ        shift and go to state 213
    R_EXISTS        shift and go to state 118
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    expBool                        shift and go to state 330
    literal                        shift and go to state 95
    boolean                        shift and go to state 101
    datatype                       shift and go to state 214
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    columnName                     shift and go to state 94
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    stringExp                      shift and go to state 123
    timeStamp                      shift and go to state 114

state 212

    (252) expBool -> R_NOT expBool .
    (250) expBool -> expBool . R_AND expBool
    (251) expBool -> expBool . R_OR expBool
    (254) expBool -> expBool . optBoolPredicate
    (256) optBoolPredicate -> . R_IS R_TRUE
    (257) optBoolPredicate -> . R_IS R_FALSE
    (258) optBoolPredicate -> . R_IS R_UNKNOWN
    (259) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (260) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (261) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AS            reduce using rule 252 (expBool -> R_NOT expBool .)
    ID              reduce using rule 252 (expBool -> R_NOT expBool .)
    STRING          reduce using rule 252 (expBool -> R_NOT expBool .)
    CHARACTER       reduce using rule 252 (expBool -> R_NOT expBool .)
    S_COMA          reduce using rule 252 (expBool -> R_NOT expBool .)
    R_FROM          reduce using rule 252 (expBool -> R_NOT expBool .)
    S_PUNTOCOMA     reduce using rule 252 (expBool -> R_NOT expBool .)
    R_UNION         reduce using rule 252 (expBool -> R_NOT expBool .)
    R_INTERSECT     reduce using rule 252 (expBool -> R_NOT expBool .)
    R_EXCEPT        reduce using rule 252 (expBool -> R_NOT expBool .)
    S_PARDER        reduce using rule 252 (expBool -> R_NOT expBool .)
    R_GROUP         reduce using rule 252 (expBool -> R_NOT expBool .)
    R_ORDER         reduce using rule 252 (expBool -> R_NOT expBool .)
    R_LIMIT         reduce using rule 252 (expBool -> R_NOT expBool .)
    R_THEN          reduce using rule 252 (expBool -> R_NOT expBool .)
    R_NATURAL       reduce using rule 252 (expBool -> R_NOT expBool .)
    R_INNER         reduce using rule 252 (expBool -> R_NOT expBool .)
    R_LEFT          reduce using rule 252 (expBool -> R_NOT expBool .)
    R_RIGHT         reduce using rule 252 (expBool -> R_NOT expBool .)
    R_FULL          reduce using rule 252 (expBool -> R_NOT expBool .)
    R_WHERE         reduce using rule 252 (expBool -> R_NOT expBool .)
    R_AND           shift and go to state 196
    R_OR            shift and go to state 197
    R_IS            shift and go to state 199

  ! R_AND           [ reduce using rule 252 (expBool -> R_NOT expBool .) ]
  ! R_OR            [ reduce using rule 252 (expBool -> R_NOT expBool .) ]
  ! R_IS            [ reduce using rule 252 (expBool -> R_NOT expBool .) ]

    optBoolPredicate               shift and go to state 198

state 213

    (253) expBool -> S_PARIZQ . expBool S_PARDER
    (196) datatype -> S_PARIZQ . datatype S_PARDER
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName

    R_NOT           shift and go to state 100
    S_PARIZQ        shift and go to state 213
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    R_EXISTS        shift and go to state 118
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    expBool                        shift and go to state 203
    datatype                       shift and go to state 202
    boolean                        shift and go to state 101
    columnName                     shift and go to state 94
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    timeStamp                      shift and go to state 114
    stringExp                      shift and go to state 123

state 214

    (246) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype
    (197) expComp -> datatype . OL_MENORQUE datatype
    (198) expComp -> datatype . OL_MAYORQUE datatype
    (199) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (200) expComp -> datatype . OL_MENORIGUALQUE datatype
    (201) expComp -> datatype . S_IGUAL datatype
    (202) expComp -> datatype . OL_DISTINTODE datatype
    (203) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (206) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> datatype . R_ISNULL
    (209) expComp -> datatype . R_NOTNULL
    (210) expComp -> datatype . R_IS R_NULL
    (211) expComp -> datatype . R_IS R_TRUE
    (212) expComp -> datatype . R_IS R_FALSE
    (213) expComp -> datatype . R_IS R_UNKNOWN
    (214) expComp -> datatype . R_IS R_NOT R_NULL
    (215) expComp -> datatype . R_IS R_NOT R_TRUE
    (216) expComp -> datatype . R_IS R_NOT R_FALSE
    (217) expComp -> datatype . R_IS R_NOT R_UNKNOWN
    (218) expSubq -> datatype . OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> datatype . OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> datatype . OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> datatype . OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> datatype . OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> datatype . OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> datatype . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> datatype . R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> datatype . R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> datatype . R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> datatype . R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> datatype . R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> datatype . R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> datatype . R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> datatype . R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> datatype . R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> datatype . R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> datatype . R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> datatype . R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_IN            shift and go to state 183
    R_NOT           shift and go to state 184
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182
    OL_MENORQUE     shift and go to state 185
    OL_MAYORQUE     shift and go to state 186
    OL_MAYORIGUALQUE shift and go to state 187
    OL_MENORIGUALQUE shift and go to state 188
    S_IGUAL         shift and go to state 189
    OL_DISTINTODE   shift and go to state 190
    R_IS            shift and go to state 191
    R_BETWEEN       shift and go to state 192
    R_ISNULL        shift and go to state 193
    R_NOTNULL       shift and go to state 194
    OL_ESIGUAL      shift and go to state 195


state 215

    (140) funcCall -> R_NOW S_PARIZQ . S_PARDER

    S_PARDER        shift and go to state 331


state 216

    (141) funcCall -> R_COUNT S_PARIZQ . datatype S_PARDER
    (142) funcCall -> R_COUNT S_PARIZQ . O_PRODUCTO S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    O_PRODUCTO      shift and go to state 333
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 332
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 217

    (143) funcCall -> R_SUM S_PARIZQ . datatype S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 334
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 218

    (144) funcCall -> R_PROM S_PARIZQ . datatype S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 335
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 219

    (145) extract -> R_EXTRACT S_PARIZQ . optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> R_EXTRACT S_PARIZQ . optsExtract R_FROM columnName S_PARDER
    (149) optsExtract -> . R_YEAR
    (150) optsExtract -> . R_MONTH
    (151) optsExtract -> . R_DAY
    (152) optsExtract -> . R_HOUR
    (153) optsExtract -> . R_MINUTE
    (154) optsExtract -> . R_SECOND

    R_YEAR          shift and go to state 337
    R_MONTH         shift and go to state 338
    R_DAY           shift and go to state 339
    R_HOUR          shift and go to state 340
    R_MINUTE        shift and go to state 341
    R_SECOND        shift and go to state 342

    optsExtract                    shift and go to state 336

state 220

    (155) datePart -> R_DATE_PART S_PARIZQ . STRING S_COMA dateSource S_PARDER

    STRING          shift and go to state 343


state 221

    (245) boolean -> R_EXISTS S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 344

state 222

    (147) timeStamp -> R_TIMESTAMP STRING .

    O_SUMA          reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    O_RESTA         reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    O_PRODUCTO      reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    O_DIVISION      reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    O_EXPONENTE     reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    O_MODULAR       reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    OC_CONCATENAR   reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_IN            reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_NOT           reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MENORQUE     reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MAYORQUE     reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MAYORIGUALQUE reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MENORIGUALQUE reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    S_IGUAL         reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    OL_DISTINTODE   reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_IS            reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_BETWEEN       reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_ISNULL        reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_NOTNULL       reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    OL_ESIGUAL      reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_AS            reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    ID              reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    STRING          reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    CHARACTER       reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    S_COMA          reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_FROM          reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    S_PUNTOCOMA     reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_UNION         reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_INTERSECT     reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_EXCEPT        reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    S_PARDER        reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_AND           reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_OR            reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_GROUP         reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_ORDER         reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_LIMIT         reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_THEN          reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_NATURAL       reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_INNER         reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_LEFT          reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_RIGHT         reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_FULL          reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_WHERE         reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_ALL           reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_ANY           reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)
    R_SOME          reduce using rule 147 (timeStamp -> R_TIMESTAMP STRING .)


state 223

    (148) timeStamp -> R_INTERVAL STRING .

    O_SUMA          reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    O_RESTA         reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    O_PRODUCTO      reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    O_DIVISION      reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    O_EXPONENTE     reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    O_MODULAR       reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    OC_CONCATENAR   reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_IN            reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_NOT           reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    OL_MENORQUE     reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    OL_MAYORQUE     reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    OL_MAYORIGUALQUE reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    OL_MENORIGUALQUE reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    S_IGUAL         reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    OL_DISTINTODE   reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_IS            reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_BETWEEN       reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_ISNULL        reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_NOTNULL       reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    OL_ESIGUAL      reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_AS            reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    ID              reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    STRING          reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    CHARACTER       reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    S_COMA          reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_FROM          reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    S_PUNTOCOMA     reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_UNION         reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_INTERSECT     reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_EXCEPT        reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    S_PARDER        reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_AND           reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_OR            reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_GROUP         reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_ORDER         reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_LIMIT         reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_THEN          reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_NATURAL       reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_INNER         reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_LEFT          reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_RIGHT         reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_FULL          reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_WHERE         reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_ALL           reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_ANY           reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)
    R_SOME          reduce using rule 148 (timeStamp -> R_INTERVAL STRING .)


state 224

    (239) expSubq -> stringExp R_LIKE . STRING

    STRING          shift and go to state 345


state 225

    (319) selectStmt -> selectStmt R_UNION allOpt selectStmt .
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     reduce using rule 319 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    R_UNION         reduce using rule 319 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    R_INTERSECT     reduce using rule 319 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    R_EXCEPT        reduce using rule 319 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    S_PARDER        reduce using rule 319 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)

  ! R_UNION         [ shift and go to state 44 ]
  ! R_INTERSECT     [ shift and go to state 45 ]
  ! R_EXCEPT        [ shift and go to state 46 ]


state 226

    (320) selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     reduce using rule 320 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    R_UNION         reduce using rule 320 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    R_INTERSECT     reduce using rule 320 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    R_EXCEPT        reduce using rule 320 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    S_PARDER        reduce using rule 320 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)

  ! R_UNION         [ shift and go to state 44 ]
  ! R_INTERSECT     [ shift and go to state 45 ]
  ! R_EXCEPT        [ shift and go to state 46 ]


state 227

    (321) selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     reduce using rule 321 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    R_UNION         reduce using rule 321 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    R_INTERSECT     reduce using rule 321 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    R_EXCEPT        reduce using rule 321 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    S_PARDER        reduce using rule 321 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)

  ! R_UNION         [ shift and go to state 44 ]
  ! R_INTERSECT     [ shift and go to state 45 ]
  ! R_EXCEPT        [ shift and go to state 46 ]


state 228

    (17) stmt -> ifStmt R_END R_IF S_PUNTOCOMA .

    R_CREATE        reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_SHOW          reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_ALTER         reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_DROP          reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_INSERT        reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_DELETE        reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_USE           reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_SELECT        reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_IF            reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    ID              reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    $end            reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_END           reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_RETURN        reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_ELSE          reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)


state 229

    (19) ifStmt -> R_IF S_PARIZQ expresion S_PARDER . R_THEN List_body else_

    R_THEN          shift and go to state 346


state 230

    (263) columnName -> ID S_PUNTO . ID

    ID              shift and go to state 277


state 231

    (399) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ . params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (400) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ . S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (402) params_list -> . params_list S_COMA param_item
    (403) params_list -> . param_item
    (404) param_item -> . ID types

    S_PARDER        shift and go to state 349
    ID              shift and go to state 347

    params_list                    shift and go to state 348
    param_item                     shift and go to state 350

state 232

    (434) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID . S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID . S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure

    S_PARIZQ        shift and go to state 351


state 233

    (60) createOpts -> orReplace R_DATABASE ifNotExists . idOrString createOwner createMode
    (43) idOrString -> . ID
    (44) idOrString -> . STRING
    (45) idOrString -> . CHARACTER

    ID              shift and go to state 144
    STRING          shift and go to state 145
    CHARACTER       shift and go to state 146

    idOrString                     shift and go to state 352

state 234

    (48) createOpts -> unique_index R_INDEX ID . R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    R_ON            shift and go to state 353


state 235

    (59) createOpts -> R_TABLE ifNotExists idOrString . S_PARIZQ createTableList S_PARDER inheritsOpt

    S_PARIZQ        shift and go to state 354


state 236

    (64) ifNotExists -> R_IF R_NOT . R_EXISTS

    R_EXISTS        shift and go to state 355


state 237

    (63) createOpts -> R_TYPE ifNotExists ID . R_AS R_ENUM S_PARIZQ paramsList S_PARDER

    R_AS            shift and go to state 356


state 238

    (396) likeOpt -> R_LIKE STRING .

    S_PUNTOCOMA     reduce using rule 396 (likeOpt -> R_LIKE STRING .)


state 239

    (279) alterStmt -> R_ALTER R_DATABASE idOrString alterDb .

    S_PUNTOCOMA     reduce using rule 279 (alterStmt -> R_ALTER R_DATABASE idOrString alterDb .)


state 240

    (283) alterDb -> R_RENAME . R_TO idOrString

    R_TO            shift and go to state 357


state 241

    (284) alterDb -> R_OWNER . R_TO ownerOPts

    R_TO            shift and go to state 358


state 242

    (291) alterTable -> R_ALTER . alterAlter
    (299) alterAlter -> . R_COLUMN ID R_SET nullOpt
    (300) alterAlter -> . R_COLUMN ID R_SET defaultVal
    (301) alterAlter -> . R_COLUMN ID R_TYPE types

    R_COLUMN        shift and go to state 360

    alterAlter                     shift and go to state 359

state 243

    (280) alterStmt -> R_ALTER R_TABLE idOrString alterTableList .
    (288) alterTableList -> alterTableList . S_COMA alterTable

    S_PUNTOCOMA     reduce using rule 280 (alterStmt -> R_ALTER R_TABLE idOrString alterTableList .)
    S_COMA          shift and go to state 361


state 244

    (289) alterTableList -> alterTable .

    S_COMA          reduce using rule 289 (alterTableList -> alterTable .)
    S_PUNTOCOMA     reduce using rule 289 (alterTableList -> alterTable .)


state 245

    (290) alterTable -> R_ADD . alterAdd
    (294) alterAdd -> . R_COLUMN ID types
    (295) alterAdd -> . createConstraint
    (296) alterAdd -> . createPrimary
    (297) alterAdd -> . createForeign
    (298) alterAdd -> . constrName R_UNIQUE S_PARIZQ ID S_PARDER
    (85) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (87) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (88) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (89) constrName -> . R_CONSTRAINT ID
    (90) constrName -> .

    R_COLUMN        shift and go to state 363
    R_PRIMARY       shift and go to state 368
    R_CONSTRAINT    shift and go to state 369
    R_UNIQUE        reduce using rule 90 (constrName -> .)
    R_CHECK         reduce using rule 90 (constrName -> .)
    R_FOREIGN       reduce using rule 90 (constrName -> .)

    alterAdd                       shift and go to state 362
    createConstraint               shift and go to state 364
    createPrimary                  shift and go to state 365
    createForeign                  shift and go to state 366
    constrName                     shift and go to state 367

state 246

    (292) alterTable -> R_DROP . alterDrop
    (302) alterDrop -> . R_CONSTRAINT ID
    (303) alterDrop -> . R_COLUMN ID

    R_CONSTRAINT    shift and go to state 371
    R_COLUMN        shift and go to state 372

    alterDrop                      shift and go to state 370

state 247

    (293) alterTable -> R_RENAME . alterRename
    (304) alterRename -> . R_COLUMN ID R_TO ID

    R_COLUMN        shift and go to state 374

    alterRename                    shift and go to state 373

state 248

    (281) alterStmt -> R_ALTER R_INDEX ifExists ID . R_ALTER ID ID
    (282) alterStmt -> R_ALTER R_INDEX ifExists ID . R_ALTER ID INTEGER

    R_ALTER         shift and go to state 375


state 249

    (311) ifExists -> R_IF R_EXISTS .

    ID              reduce using rule 311 (ifExists -> R_IF R_EXISTS .)
    STRING          reduce using rule 311 (ifExists -> R_IF R_EXISTS .)
    CHARACTER       reduce using rule 311 (ifExists -> R_IF R_EXISTS .)


state 250

    (432) asignacionStmt -> ID S_DOSPUNTOS S_IGUAL expresion .

    S_PUNTOCOMA     reduce using rule 432 (asignacionStmt -> ID S_DOSPUNTOS S_IGUAL expresion .)


state 251

    (305) dropStmt -> R_DROP R_TABLE ifExists idOrString .

    S_PUNTOCOMA     reduce using rule 305 (dropStmt -> R_DROP R_TABLE ifExists idOrString .)


state 252

    (306) dropStmt -> R_DROP R_DATABASE ifExists idOrString .

    S_PUNTOCOMA     reduce using rule 306 (dropStmt -> R_DROP R_DATABASE ifExists idOrString .)


state 253

    (307) dropStmt -> R_DROP R_FUNCTION ifExists idOrString .
    (308) dropStmt -> R_DROP R_FUNCTION ifExists idOrString . S_PARIZQ S_PARDER

    S_PUNTOCOMA     reduce using rule 307 (dropStmt -> R_DROP R_FUNCTION ifExists idOrString .)
    S_PARIZQ        shift and go to state 376


state 254

    (309) dropStmt -> R_DROP R_PROCEDURE ifExists idOrString . S_PARIZQ S_PARDER

    S_PARIZQ        shift and go to state 377


state 255

    (310) dropStmt -> R_DROP R_INDEX concurrenly ifExists . idOrString
    (43) idOrString -> . ID
    (44) idOrString -> . STRING
    (45) idOrString -> . CHARACTER

    ID              shift and go to state 144
    STRING          shift and go to state 145
    CHARACTER       shift and go to state 146

    idOrString                     shift and go to state 378

state 256

    (382) insertStmt -> R_INSERT R_INTO ID paramsColumn . R_VALUES S_PARIZQ paramsList S_PARDER

    R_VALUES        shift and go to state 379


state 257

    (383) paramsColumn -> S_PARIZQ . idList S_PARDER
    (91) idList -> . idList S_COMA ID
    (92) idList -> . ID

    ID              shift and go to state 381

    idList                         shift and go to state 380

state 258

    (385) updateStmt -> R_UPDATE fromBody R_SET updateCols . whereCl
    (386) updateCols -> updateCols . S_COMA updateVals
    (355) whereCl -> . R_WHERE expBool
    (356) whereCl -> .

    S_COMA          shift and go to state 383
    R_WHERE         shift and go to state 166
    S_PUNTOCOMA     reduce using rule 356 (whereCl -> .)

    whereCl                        shift and go to state 382

state 259

    (387) updateCols -> updateVals .

    S_COMA          reduce using rule 387 (updateCols -> updateVals .)
    R_WHERE         reduce using rule 387 (updateCols -> updateVals .)
    S_PUNTOCOMA     reduce using rule 387 (updateCols -> updateVals .)


state 260

    (388) updateVals -> ID . S_IGUAL updateExp

    S_IGUAL         shift and go to state 384


state 261

    (333) optAlias -> R_AS idOrString .

    R_SET           reduce using rule 333 (optAlias -> R_AS idOrString .)
    S_COMA          reduce using rule 333 (optAlias -> R_AS idOrString .)
    R_WHERE         reduce using rule 333 (optAlias -> R_AS idOrString .)
    S_PUNTOCOMA     reduce using rule 333 (optAlias -> R_AS idOrString .)
    R_NATURAL       reduce using rule 333 (optAlias -> R_AS idOrString .)
    R_INNER         reduce using rule 333 (optAlias -> R_AS idOrString .)
    R_LEFT          reduce using rule 333 (optAlias -> R_AS idOrString .)
    R_RIGHT         reduce using rule 333 (optAlias -> R_AS idOrString .)
    R_FULL          reduce using rule 333 (optAlias -> R_AS idOrString .)
    R_GROUP         reduce using rule 333 (optAlias -> R_AS idOrString .)
    R_ORDER         reduce using rule 333 (optAlias -> R_AS idOrString .)
    R_LIMIT         reduce using rule 333 (optAlias -> R_AS idOrString .)
    R_UNION         reduce using rule 333 (optAlias -> R_AS idOrString .)
    R_INTERSECT     reduce using rule 333 (optAlias -> R_AS idOrString .)
    R_EXCEPT        reduce using rule 333 (optAlias -> R_AS idOrString .)
    S_PARDER        reduce using rule 333 (optAlias -> R_AS idOrString .)
    R_FROM          reduce using rule 333 (optAlias -> R_AS idOrString .)
    R_ON            reduce using rule 333 (optAlias -> R_AS idOrString .)
    R_USING         reduce using rule 333 (optAlias -> R_AS idOrString .)


state 262

    (339) fromBody -> S_PARIZQ selectStmt S_PARDER . R_AS idOrString

    R_AS            shift and go to state 385


state 263

    (355) whereCl -> R_WHERE expBool .
    (250) expBool -> expBool . R_AND expBool
    (251) expBool -> expBool . R_OR expBool
    (254) expBool -> expBool . optBoolPredicate
    (256) optBoolPredicate -> . R_IS R_TRUE
    (257) optBoolPredicate -> . R_IS R_FALSE
    (258) optBoolPredicate -> . R_IS R_UNKNOWN
    (259) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (260) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (261) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    S_PUNTOCOMA     reduce using rule 355 (whereCl -> R_WHERE expBool .)
    R_GROUP         reduce using rule 355 (whereCl -> R_WHERE expBool .)
    R_ORDER         reduce using rule 355 (whereCl -> R_WHERE expBool .)
    R_LIMIT         reduce using rule 355 (whereCl -> R_WHERE expBool .)
    R_UNION         reduce using rule 355 (whereCl -> R_WHERE expBool .)
    R_INTERSECT     reduce using rule 355 (whereCl -> R_WHERE expBool .)
    R_EXCEPT        reduce using rule 355 (whereCl -> R_WHERE expBool .)
    S_PARDER        reduce using rule 355 (whereCl -> R_WHERE expBool .)
    R_AND           shift and go to state 196
    R_OR            shift and go to state 197
    R_IS            shift and go to state 199

    optBoolPredicate               shift and go to state 198

state 264

    (336) tableExp -> tableExp S_COMA . fromBody
    (338) fromBody -> . ID optAlias
    (339) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 74
    S_PARIZQ        shift and go to state 75

    fromBody                       shift and go to state 386

state 265

    (315) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl . whereCl groupByCl orderByCl limitCl
    (355) whereCl -> . R_WHERE expBool
    (356) whereCl -> .

    R_WHERE         shift and go to state 166
    R_GROUP         reduce using rule 356 (whereCl -> .)
    R_ORDER         reduce using rule 356 (whereCl -> .)
    R_LIMIT         reduce using rule 356 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 356 (whereCl -> .)
    R_UNION         reduce using rule 356 (whereCl -> .)
    R_INTERSECT     reduce using rule 356 (whereCl -> .)
    R_EXCEPT        reduce using rule 356 (whereCl -> .)
    S_PARDER        reduce using rule 356 (whereCl -> .)

    whereCl                        shift and go to state 387

state 266

    (316) selectStmt -> R_SELECT selectParams fromCl whereCl . groupByCl orderByCl limitCl
    (357) groupByCl -> . R_GROUP R_BY groupList havingCl
    (358) groupByCl -> .

    R_GROUP         shift and go to state 389
    R_ORDER         reduce using rule 358 (groupByCl -> .)
    R_LIMIT         reduce using rule 358 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 358 (groupByCl -> .)
    R_UNION         reduce using rule 358 (groupByCl -> .)
    R_INTERSECT     reduce using rule 358 (groupByCl -> .)
    R_EXCEPT        reduce using rule 358 (groupByCl -> .)
    S_PARDER        reduce using rule 358 (groupByCl -> .)

    groupByCl                      shift and go to state 388

state 267

    (317) selectStmt -> R_SELECT selectParams fromCl joinList . whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> R_SELECT selectParams fromCl joinList . whereCl groupByCl limitCl
    (355) whereCl -> . R_WHERE expBool
    (356) whereCl -> .

    R_WHERE         shift and go to state 166
    R_GROUP         reduce using rule 356 (whereCl -> .)
    R_ORDER         reduce using rule 356 (whereCl -> .)
    R_LIMIT         reduce using rule 356 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 356 (whereCl -> .)
    R_UNION         reduce using rule 356 (whereCl -> .)
    R_INTERSECT     reduce using rule 356 (whereCl -> .)
    R_EXCEPT        reduce using rule 356 (whereCl -> .)
    S_PARDER        reduce using rule 356 (whereCl -> .)

    whereCl                        shift and go to state 390

state 268

    (340) joinList -> joinList2 .
    (341) joinList2 -> joinList2 . joinCl
    (343) joinCl -> . joinOpt R_JOIN columnName optAlias R_ON expBool
    (344) joinCl -> . joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER
    (345) joinCl -> . R_NATURAL joinOpt R_JOIN columnName optAlias
    (348) joinOpt -> . R_INNER
    (349) joinOpt -> . R_LEFT
    (350) joinOpt -> . R_LEFT R_OUTER
    (351) joinOpt -> . R_RIGHT
    (352) joinOpt -> . R_RIGHT R_OUTER
    (353) joinOpt -> . R_FULL
    (354) joinOpt -> . R_FULL R_OUTER

    R_WHERE         reduce using rule 340 (joinList -> joinList2 .)
    R_GROUP         reduce using rule 340 (joinList -> joinList2 .)
    R_ORDER         reduce using rule 340 (joinList -> joinList2 .)
    R_LIMIT         reduce using rule 340 (joinList -> joinList2 .)
    S_PUNTOCOMA     reduce using rule 340 (joinList -> joinList2 .)
    R_UNION         reduce using rule 340 (joinList -> joinList2 .)
    R_INTERSECT     reduce using rule 340 (joinList -> joinList2 .)
    R_EXCEPT        reduce using rule 340 (joinList -> joinList2 .)
    S_PARDER        reduce using rule 340 (joinList -> joinList2 .)
    R_NATURAL       shift and go to state 271
    R_INNER         shift and go to state 272
    R_LEFT          shift and go to state 273
    R_RIGHT         shift and go to state 274
    R_FULL          shift and go to state 275

    joinCl                         shift and go to state 391
    joinOpt                        shift and go to state 270

state 269

    (342) joinList2 -> joinCl .

    R_NATURAL       reduce using rule 342 (joinList2 -> joinCl .)
    R_INNER         reduce using rule 342 (joinList2 -> joinCl .)
    R_LEFT          reduce using rule 342 (joinList2 -> joinCl .)
    R_RIGHT         reduce using rule 342 (joinList2 -> joinCl .)
    R_FULL          reduce using rule 342 (joinList2 -> joinCl .)
    R_WHERE         reduce using rule 342 (joinList2 -> joinCl .)
    R_GROUP         reduce using rule 342 (joinList2 -> joinCl .)
    R_ORDER         reduce using rule 342 (joinList2 -> joinCl .)
    R_LIMIT         reduce using rule 342 (joinList2 -> joinCl .)
    S_PUNTOCOMA     reduce using rule 342 (joinList2 -> joinCl .)
    R_UNION         reduce using rule 342 (joinList2 -> joinCl .)
    R_INTERSECT     reduce using rule 342 (joinList2 -> joinCl .)
    R_EXCEPT        reduce using rule 342 (joinList2 -> joinCl .)
    S_PARDER        reduce using rule 342 (joinList2 -> joinCl .)


state 270

    (343) joinCl -> joinOpt . R_JOIN columnName optAlias R_ON expBool
    (344) joinCl -> joinOpt . R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER

    R_JOIN          shift and go to state 392


state 271

    (345) joinCl -> R_NATURAL . joinOpt R_JOIN columnName optAlias
    (348) joinOpt -> . R_INNER
    (349) joinOpt -> . R_LEFT
    (350) joinOpt -> . R_LEFT R_OUTER
    (351) joinOpt -> . R_RIGHT
    (352) joinOpt -> . R_RIGHT R_OUTER
    (353) joinOpt -> . R_FULL
    (354) joinOpt -> . R_FULL R_OUTER

    R_INNER         shift and go to state 272
    R_LEFT          shift and go to state 273
    R_RIGHT         shift and go to state 274
    R_FULL          shift and go to state 275

    joinOpt                        shift and go to state 393

state 272

    (348) joinOpt -> R_INNER .

    R_JOIN          reduce using rule 348 (joinOpt -> R_INNER .)


state 273

    (349) joinOpt -> R_LEFT .
    (350) joinOpt -> R_LEFT . R_OUTER

    R_JOIN          reduce using rule 349 (joinOpt -> R_LEFT .)
    R_OUTER         shift and go to state 394


state 274

    (351) joinOpt -> R_RIGHT .
    (352) joinOpt -> R_RIGHT . R_OUTER

    R_JOIN          reduce using rule 351 (joinOpt -> R_RIGHT .)
    R_OUTER         shift and go to state 395


state 275

    (353) joinOpt -> R_FULL .
    (354) joinOpt -> R_FULL . R_OUTER

    R_JOIN          reduce using rule 353 (joinOpt -> R_FULL .)
    R_OUTER         shift and go to state 396


state 276

    (329) selectList -> selectList S_COMA selectListParams . optAlias
    (333) optAlias -> . R_AS idOrString
    (334) optAlias -> . idOrString
    (335) optAlias -> .
    (43) idOrString -> . ID
    (44) idOrString -> . STRING
    (45) idOrString -> . CHARACTER

    R_AS            shift and go to state 162
    S_COMA          reduce using rule 335 (optAlias -> .)
    R_FROM          reduce using rule 335 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 335 (optAlias -> .)
    R_UNION         reduce using rule 335 (optAlias -> .)
    R_INTERSECT     reduce using rule 335 (optAlias -> .)
    R_EXCEPT        reduce using rule 335 (optAlias -> .)
    S_PARDER        reduce using rule 335 (optAlias -> .)
    ID              shift and go to state 144
    STRING          shift and go to state 145
    CHARACTER       shift and go to state 146

    optAlias                       shift and go to state 397
    idOrString                     shift and go to state 163

state 277

    (263) columnName -> ID S_PUNTO ID .

    O_SUMA          reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    O_RESTA         reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    O_PRODUCTO      reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    O_DIVISION      reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    O_EXPONENTE     reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    O_MODULAR       reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    OC_CONCATENAR   reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_IN            reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_NOT           reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    OL_MENORQUE     reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    OL_MAYORQUE     reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    OL_MAYORIGUALQUE reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    OL_MENORIGUALQUE reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    S_IGUAL         reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    OL_DISTINTODE   reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_IS            reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_BETWEEN       reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_ISNULL        reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_NOTNULL       reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    OL_ESIGUAL      reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_AS            reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    ID              reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    STRING          reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    CHARACTER       reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    S_COMA          reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_FROM          reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    S_PUNTOCOMA     reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_UNION         reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_INTERSECT     reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_EXCEPT        reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    S_PARDER        reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_LIKE          reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_AND           reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_OR            reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_GROUP         reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_ORDER         reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_LIMIT         reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_THEN          reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_NATURAL       reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_INNER         reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_LEFT          reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_RIGHT         reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_FULL          reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_WHERE         reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_ALL           reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_ANY           reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_SOME          reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_ON            reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_USING         reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_HAVING        reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_ASC           reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_DESC          reduce using rule 263 (columnName -> ID S_PUNTO ID .)
    R_NULL          reduce using rule 263 (columnName -> ID S_PUNTO ID .)


state 278

    (332) selectListParams -> ID S_PUNTO O_PRODUCTO .

    R_AS            reduce using rule 332 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    ID              reduce using rule 332 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    STRING          reduce using rule 332 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    CHARACTER       reduce using rule 332 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    S_COMA          reduce using rule 332 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_FROM          reduce using rule 332 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    S_PUNTOCOMA     reduce using rule 332 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_UNION         reduce using rule 332 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_INTERSECT     reduce using rule 332 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_EXCEPT        reduce using rule 332 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    S_PARDER        reduce using rule 332 (selectListParams -> ID S_PUNTO O_PRODUCTO .)


state 279

    (138) funcCall -> ID S_PARIZQ paramsList . S_PARDER
    (173) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 398
    S_COMA          shift and go to state 399


state 280

    (139) funcCall -> ID S_PARIZQ S_PARDER .

    O_SUMA          reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_RESTA         reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_PRODUCTO      reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_DIVISION      reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_EXPONENTE     reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_MODULAR       reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    OC_CONCATENAR   reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_IN            reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NOT           reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MENORQUE     reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MAYORQUE     reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_IGUAL         reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_DISTINTODE   reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_IS            reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_BETWEEN       reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ISNULL        reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NOTNULL       reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_ESIGUAL      reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_AS            reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    ID              reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    STRING          reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    CHARACTER       reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_COMA          reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_FROM          reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_PUNTOCOMA     reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_UNION         reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_INTERSECT     reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_EXCEPT        reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_PARDER        reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_AND           reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_OR            reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_GROUP         reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ORDER         reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_LIMIT         reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_THEN          reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NATURAL       reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_INNER         reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_LEFT          reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_RIGHT         reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_FULL          reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_WHERE         reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ALL           reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ANY           reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_SOME          reduce using rule 139 (funcCall -> ID S_PARIZQ S_PARDER .)


state 281

    (174) paramsList -> datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        reduce using rule 174 (paramsList -> datatype .)
    S_COMA          reduce using rule 174 (paramsList -> datatype .)
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182


state 282

    (175) datatype -> datatype O_SUMA datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    O_RESTA         reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    OC_CONCATENAR   reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_IN            reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_NOT           reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    OL_MENORQUE     reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    OL_MAYORQUE     reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    OL_MAYORIGUALQUE reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    OL_MENORIGUALQUE reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    S_IGUAL         reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    OL_DISTINTODE   reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_IS            reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_BETWEEN       reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_ISNULL        reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_NOTNULL       reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    OL_ESIGUAL      reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_AS            reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    ID              reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    STRING          reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    CHARACTER       reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    S_COMA          reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_FROM          reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    S_PUNTOCOMA     reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_UNION         reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_INTERSECT     reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_EXCEPT        reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    S_PARDER        reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_AND           reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_OR            reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_GROUP         reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_ORDER         reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_LIMIT         reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_THEN          reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_NATURAL       reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_INNER         reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_LEFT          reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_RIGHT         reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_FULL          reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_WHERE         reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_ALL           reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_ANY           reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    R_SOME          reduce using rule 175 (datatype -> datatype O_SUMA datatype .)
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181

  ! O_PRODUCTO      [ reduce using rule 175 (datatype -> datatype O_SUMA datatype .) ]
  ! O_DIVISION      [ reduce using rule 175 (datatype -> datatype O_SUMA datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 175 (datatype -> datatype O_SUMA datatype .) ]
  ! O_MODULAR       [ reduce using rule 175 (datatype -> datatype O_SUMA datatype .) ]
  ! O_SUMA          [ shift and go to state 176 ]
  ! O_RESTA         [ shift and go to state 177 ]
  ! OC_CONCATENAR   [ shift and go to state 182 ]


state 283

    (176) datatype -> datatype O_RESTA datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    O_RESTA         reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    OC_CONCATENAR   reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_IN            reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_NOT           reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    OL_MENORQUE     reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    OL_MAYORQUE     reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    OL_MAYORIGUALQUE reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    OL_MENORIGUALQUE reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    S_IGUAL         reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    OL_DISTINTODE   reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_IS            reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_BETWEEN       reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_ISNULL        reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_NOTNULL       reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    OL_ESIGUAL      reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_AS            reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    ID              reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    STRING          reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    CHARACTER       reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    S_COMA          reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_FROM          reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    S_PUNTOCOMA     reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_UNION         reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_INTERSECT     reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_EXCEPT        reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    S_PARDER        reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_AND           reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_OR            reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_GROUP         reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_ORDER         reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_LIMIT         reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_THEN          reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_NATURAL       reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_INNER         reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_LEFT          reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_RIGHT         reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_FULL          reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_WHERE         reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_ALL           reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_ANY           reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    R_SOME          reduce using rule 176 (datatype -> datatype O_RESTA datatype .)
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181

  ! O_PRODUCTO      [ reduce using rule 176 (datatype -> datatype O_RESTA datatype .) ]
  ! O_DIVISION      [ reduce using rule 176 (datatype -> datatype O_RESTA datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 176 (datatype -> datatype O_RESTA datatype .) ]
  ! O_MODULAR       [ reduce using rule 176 (datatype -> datatype O_RESTA datatype .) ]
  ! O_SUMA          [ shift and go to state 176 ]
  ! O_RESTA         [ shift and go to state 177 ]
  ! OC_CONCATENAR   [ shift and go to state 182 ]


state 284

    (177) datatype -> datatype O_PRODUCTO datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    O_RESTA         reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    O_PRODUCTO      reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    O_DIVISION      reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    O_MODULAR       reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    OC_CONCATENAR   reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_IN            reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_NOT           reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MENORQUE     reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MAYORQUE     reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MAYORIGUALQUE reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MENORIGUALQUE reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    S_IGUAL         reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    OL_DISTINTODE   reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_IS            reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_BETWEEN       reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_ISNULL        reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_NOTNULL       reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    OL_ESIGUAL      reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_AS            reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    ID              reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    STRING          reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    CHARACTER       reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    S_COMA          reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_FROM          reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    S_PUNTOCOMA     reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_UNION         reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_INTERSECT     reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_EXCEPT        reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    S_PARDER        reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_AND           reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_OR            reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_GROUP         reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_ORDER         reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_LIMIT         reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_THEN          reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_NATURAL       reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_INNER         reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_LEFT          reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_RIGHT         reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_FULL          reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_WHERE         reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_ALL           reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_ANY           reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    R_SOME          reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .)
    O_EXPONENTE     shift and go to state 180

  ! O_EXPONENTE     [ reduce using rule 177 (datatype -> datatype O_PRODUCTO datatype .) ]
  ! O_SUMA          [ shift and go to state 176 ]
  ! O_RESTA         [ shift and go to state 177 ]
  ! O_PRODUCTO      [ shift and go to state 178 ]
  ! O_DIVISION      [ shift and go to state 179 ]
  ! O_MODULAR       [ shift and go to state 181 ]
  ! OC_CONCATENAR   [ shift and go to state 182 ]


state 285

    (178) datatype -> datatype O_DIVISION datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    O_RESTA         reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    O_PRODUCTO      reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    O_DIVISION      reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    O_MODULAR       reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    OC_CONCATENAR   reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_IN            reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_NOT           reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    OL_MENORQUE     reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    OL_MAYORQUE     reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    OL_MAYORIGUALQUE reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    OL_MENORIGUALQUE reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    S_IGUAL         reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    OL_DISTINTODE   reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_IS            reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_BETWEEN       reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_ISNULL        reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_NOTNULL       reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    OL_ESIGUAL      reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_AS            reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    ID              reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    STRING          reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    CHARACTER       reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    S_COMA          reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_FROM          reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    S_PUNTOCOMA     reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_UNION         reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_INTERSECT     reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_EXCEPT        reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    S_PARDER        reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_AND           reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_OR            reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_GROUP         reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_ORDER         reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_LIMIT         reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_THEN          reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_NATURAL       reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_INNER         reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_LEFT          reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_RIGHT         reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_FULL          reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_WHERE         reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_ALL           reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_ANY           reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    R_SOME          reduce using rule 178 (datatype -> datatype O_DIVISION datatype .)
    O_EXPONENTE     shift and go to state 180

  ! O_EXPONENTE     [ reduce using rule 178 (datatype -> datatype O_DIVISION datatype .) ]
  ! O_SUMA          [ shift and go to state 176 ]
  ! O_RESTA         [ shift and go to state 177 ]
  ! O_PRODUCTO      [ shift and go to state 178 ]
  ! O_DIVISION      [ shift and go to state 179 ]
  ! O_MODULAR       [ shift and go to state 181 ]
  ! OC_CONCATENAR   [ shift and go to state 182 ]


state 286

    (179) datatype -> datatype O_EXPONENTE datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    O_RESTA         reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    O_PRODUCTO      reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    O_DIVISION      reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    O_EXPONENTE     reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    O_MODULAR       reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    OC_CONCATENAR   reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_IN            reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_NOT           reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MENORQUE     reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MAYORQUE     reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MAYORIGUALQUE reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MENORIGUALQUE reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    S_IGUAL         reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    OL_DISTINTODE   reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_IS            reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_BETWEEN       reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_ISNULL        reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_NOTNULL       reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    OL_ESIGUAL      reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_AS            reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    ID              reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    STRING          reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    CHARACTER       reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    S_COMA          reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_FROM          reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    S_PUNTOCOMA     reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_UNION         reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_INTERSECT     reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_EXCEPT        reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    S_PARDER        reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_AND           reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_OR            reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_GROUP         reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_ORDER         reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_LIMIT         reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_THEN          reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_NATURAL       reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_INNER         reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_LEFT          reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_RIGHT         reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_FULL          reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_WHERE         reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_ALL           reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_ANY           reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)
    R_SOME          reduce using rule 179 (datatype -> datatype O_EXPONENTE datatype .)

  ! O_SUMA          [ shift and go to state 176 ]
  ! O_RESTA         [ shift and go to state 177 ]
  ! O_PRODUCTO      [ shift and go to state 178 ]
  ! O_DIVISION      [ shift and go to state 179 ]
  ! O_EXPONENTE     [ shift and go to state 180 ]
  ! O_MODULAR       [ shift and go to state 181 ]
  ! OC_CONCATENAR   [ shift and go to state 182 ]


state 287

    (180) datatype -> datatype O_MODULAR datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    O_RESTA         reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    O_PRODUCTO      reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    O_DIVISION      reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    O_MODULAR       reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    OC_CONCATENAR   reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_IN            reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_NOT           reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    OL_MENORQUE     reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    OL_MAYORQUE     reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    OL_MAYORIGUALQUE reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    OL_MENORIGUALQUE reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    S_IGUAL         reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    OL_DISTINTODE   reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_IS            reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_BETWEEN       reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_ISNULL        reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_NOTNULL       reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    OL_ESIGUAL      reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_AS            reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    ID              reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    STRING          reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    CHARACTER       reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    S_COMA          reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_FROM          reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    S_PUNTOCOMA     reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_UNION         reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_INTERSECT     reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_EXCEPT        reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    S_PARDER        reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_AND           reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_OR            reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_GROUP         reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_ORDER         reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_LIMIT         reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_THEN          reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_NATURAL       reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_INNER         reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_LEFT          reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_RIGHT         reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_FULL          reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_WHERE         reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_ALL           reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_ANY           reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    R_SOME          reduce using rule 180 (datatype -> datatype O_MODULAR datatype .)
    O_EXPONENTE     shift and go to state 180

  ! O_EXPONENTE     [ reduce using rule 180 (datatype -> datatype O_MODULAR datatype .) ]
  ! O_SUMA          [ shift and go to state 176 ]
  ! O_RESTA         [ shift and go to state 177 ]
  ! O_PRODUCTO      [ shift and go to state 178 ]
  ! O_DIVISION      [ shift and go to state 179 ]
  ! O_MODULAR       [ shift and go to state 181 ]
  ! OC_CONCATENAR   [ shift and go to state 182 ]


state 288

    (181) datatype -> datatype OC_CONCATENAR datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    OC_CONCATENAR   reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_IN            reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NOT           reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MENORQUE     reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MAYORQUE     reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MAYORIGUALQUE reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MENORIGUALQUE reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    S_IGUAL         reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_DISTINTODE   reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_IS            reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_BETWEEN       reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ISNULL        reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NOTNULL       reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_ESIGUAL      reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_AS            reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    ID              reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    STRING          reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    CHARACTER       reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    S_COMA          reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_FROM          reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    S_PUNTOCOMA     reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_UNION         reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_INTERSECT     reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_EXCEPT        reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    S_PARDER        reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_AND           reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_OR            reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_GROUP         reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ORDER         reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_LIMIT         reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_THEN          reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NATURAL       reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_INNER         reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_LEFT          reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_RIGHT         reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_FULL          reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_WHERE         reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ALL           reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ANY           reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    R_SOME          reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .)
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181

  ! O_SUMA          [ reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_RESTA         [ reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_PRODUCTO      [ reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_DIVISION      [ reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_MODULAR       [ reduce using rule 181 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! OC_CONCATENAR   [ shift and go to state 182 ]


state 289

    (246) boolean -> datatype R_IN S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 400

state 290

    (247) boolean -> datatype R_NOT R_IN . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 401


state 291

    (206) expComp -> datatype R_NOT R_BETWEEN . datatype R_AND datatype
    (225) expSubq -> datatype R_NOT R_BETWEEN . datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 402
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 292

    (197) expComp -> datatype OL_MENORQUE datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    R_OR            reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    R_IS            reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    R_AS            reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    ID              reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    STRING          reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    CHARACTER       reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    S_COMA          reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    R_FROM          reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    S_PUNTOCOMA     reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    R_UNION         reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    R_INTERSECT     reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    R_EXCEPT        reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    S_PARDER        reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    R_GROUP         reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    R_ORDER         reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    R_LIMIT         reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    R_THEN          reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    R_NATURAL       reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    R_INNER         reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    R_LEFT          reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    R_RIGHT         reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    R_FULL          reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    R_WHERE         reduce using rule 197 (expComp -> datatype OL_MENORQUE datatype .)
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182


state 293

    (218) expSubq -> datatype OL_MENORQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 403


state 294

    (242) subqValues -> R_ALL .

    S_PARIZQ        reduce using rule 242 (subqValues -> R_ALL .)


state 295

    (243) subqValues -> R_ANY .

    S_PARIZQ        reduce using rule 243 (subqValues -> R_ANY .)


state 296

    (244) subqValues -> R_SOME .

    S_PARIZQ        reduce using rule 244 (subqValues -> R_SOME .)


state 297

    (198) expComp -> datatype OL_MAYORQUE datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    R_OR            reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    R_IS            reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    R_AS            reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    ID              reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    STRING          reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    CHARACTER       reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    S_COMA          reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    R_FROM          reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    S_PUNTOCOMA     reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    R_UNION         reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    R_INTERSECT     reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    R_EXCEPT        reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    S_PARDER        reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    R_GROUP         reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    R_ORDER         reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    R_LIMIT         reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    R_THEN          reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    R_NATURAL       reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    R_INNER         reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    R_LEFT          reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    R_RIGHT         reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    R_FULL          reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    R_WHERE         reduce using rule 198 (expComp -> datatype OL_MAYORQUE datatype .)
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182


state 298

    (219) expSubq -> datatype OL_MAYORQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 404


state 299

    (199) expComp -> datatype OL_MAYORIGUALQUE datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_OR            reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_IS            reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_AS            reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    ID              reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    STRING          reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    CHARACTER       reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_COMA          reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_FROM          reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_PUNTOCOMA     reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_UNION         reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_INTERSECT     reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_EXCEPT        reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_PARDER        reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_GROUP         reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_ORDER         reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_LIMIT         reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_THEN          reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_NATURAL       reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_INNER         reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_LEFT          reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_RIGHT         reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_FULL          reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_WHERE         reduce using rule 199 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182


state 300

    (220) expSubq -> datatype OL_MAYORIGUALQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 405


state 301

    (200) expComp -> datatype OL_MENORIGUALQUE datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_OR            reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_IS            reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_AS            reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    ID              reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    STRING          reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    CHARACTER       reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_COMA          reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_FROM          reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_PUNTOCOMA     reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_UNION         reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_INTERSECT     reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_EXCEPT        reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_PARDER        reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_GROUP         reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_ORDER         reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_LIMIT         reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_THEN          reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_NATURAL       reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_INNER         reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_LEFT          reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_RIGHT         reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_FULL          reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_WHERE         reduce using rule 200 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182


state 302

    (221) expSubq -> datatype OL_MENORIGUALQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 406


state 303

    (201) expComp -> datatype S_IGUAL datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    R_OR            reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    R_IS            reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    R_AS            reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    ID              reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    STRING          reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    CHARACTER       reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    S_COMA          reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    R_FROM          reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    S_PUNTOCOMA     reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    R_UNION         reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    R_INTERSECT     reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    R_EXCEPT        reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    S_PARDER        reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    R_GROUP         reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    R_ORDER         reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    R_LIMIT         reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    R_THEN          reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    R_NATURAL       reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    R_INNER         reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    R_LEFT          reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    R_RIGHT         reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    R_FULL          reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    R_WHERE         reduce using rule 201 (expComp -> datatype S_IGUAL datatype .)
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182


state 304

    (202) expComp -> datatype OL_DISTINTODE datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    R_OR            reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    R_IS            reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    R_AS            reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    ID              reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    STRING          reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    CHARACTER       reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    S_COMA          reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    R_FROM          reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    S_PUNTOCOMA     reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    R_UNION         reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    R_INTERSECT     reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    R_EXCEPT        reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    S_PARDER        reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    R_GROUP         reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    R_ORDER         reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    R_LIMIT         reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    R_THEN          reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    R_NATURAL       reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    R_INNER         reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    R_LEFT          reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    R_RIGHT         reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    R_FULL          reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    R_WHERE         reduce using rule 202 (expComp -> datatype OL_DISTINTODE datatype .)
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182


state 305

    (223) expSubq -> datatype OL_DISTINTODE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 407


state 306

    (203) expComp -> datatype R_IS R_DISTINCT . R_FROM datatype
    (227) expSubq -> datatype R_IS R_DISTINCT . R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER

    R_FROM          shift and go to state 408


state 307

    (204) expComp -> datatype R_IS R_NOT . R_DISTINCT R_FROM datatype
    (214) expComp -> datatype R_IS R_NOT . R_NULL
    (215) expComp -> datatype R_IS R_NOT . R_TRUE
    (216) expComp -> datatype R_IS R_NOT . R_FALSE
    (217) expComp -> datatype R_IS R_NOT . R_UNKNOWN
    (228) expSubq -> datatype R_IS R_NOT . R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> datatype R_IS R_NOT . R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> datatype R_IS R_NOT . R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> datatype R_IS R_NOT . R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> datatype R_IS R_NOT . R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_DISTINCT      shift and go to state 409
    R_NULL          shift and go to state 410
    R_TRUE          shift and go to state 411
    R_FALSE         shift and go to state 412
    R_UNKNOWN       shift and go to state 413


state 308

    (210) expComp -> datatype R_IS R_NULL .
    (229) expSubq -> datatype R_IS R_NULL . subqValues S_PARIZQ selectStmt S_PARDER
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME

    R_AND           reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    R_OR            reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    R_IS            reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    R_AS            reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    ID              reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    STRING          reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    CHARACTER       reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    S_COMA          reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    R_FROM          reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    S_PUNTOCOMA     reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    R_UNION         reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    R_INTERSECT     reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    R_EXCEPT        reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    S_PARDER        reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    R_GROUP         reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    R_ORDER         reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    R_LIMIT         reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    R_THEN          reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    R_NATURAL       reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    R_INNER         reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    R_LEFT          reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    R_RIGHT         reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    R_FULL          reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    R_WHERE         reduce using rule 210 (expComp -> datatype R_IS R_NULL .)
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296

    subqValues                     shift and go to state 414

state 309

    (211) expComp -> datatype R_IS R_TRUE .
    (233) expSubq -> datatype R_IS R_TRUE . subqValues S_PARIZQ selectStmt S_PARDER
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME

    R_AND           reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    R_OR            reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    R_IS            reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    R_AS            reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    ID              reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    STRING          reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    CHARACTER       reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    S_COMA          reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    R_FROM          reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    S_PUNTOCOMA     reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    R_UNION         reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    R_INTERSECT     reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    R_EXCEPT        reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    S_PARDER        reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    R_GROUP         reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    R_ORDER         reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    R_LIMIT         reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    R_THEN          reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    R_NATURAL       reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    R_INNER         reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    R_LEFT          reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    R_RIGHT         reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    R_FULL          reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    R_WHERE         reduce using rule 211 (expComp -> datatype R_IS R_TRUE .)
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296

    subqValues                     shift and go to state 415

state 310

    (212) expComp -> datatype R_IS R_FALSE .
    (235) expSubq -> datatype R_IS R_FALSE . subqValues S_PARIZQ selectStmt S_PARDER
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME

    R_AND           reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    R_OR            reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    R_IS            reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    R_AS            reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    ID              reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    STRING          reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    CHARACTER       reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    S_COMA          reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    R_FROM          reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    S_PUNTOCOMA     reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    R_UNION         reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    R_INTERSECT     reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    R_EXCEPT        reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    S_PARDER        reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    R_GROUP         reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    R_ORDER         reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    R_LIMIT         reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    R_THEN          reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    R_NATURAL       reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    R_INNER         reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    R_LEFT          reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    R_RIGHT         reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    R_FULL          reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    R_WHERE         reduce using rule 212 (expComp -> datatype R_IS R_FALSE .)
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296

    subqValues                     shift and go to state 416

state 311

    (213) expComp -> datatype R_IS R_UNKNOWN .
    (237) expSubq -> datatype R_IS R_UNKNOWN . subqValues S_PARIZQ selectStmt S_PARDER
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME

    R_AND           reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    R_OR            reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    R_IS            reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    R_AS            reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    ID              reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    STRING          reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    CHARACTER       reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    S_COMA          reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    R_FROM          reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    R_UNION         reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    R_INTERSECT     reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    R_EXCEPT        reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    S_PARDER        reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    R_GROUP         reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    R_ORDER         reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    R_LIMIT         reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    R_THEN          reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    R_NATURAL       reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    R_INNER         reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    R_LEFT          reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    R_RIGHT         reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    R_FULL          reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    R_WHERE         reduce using rule 213 (expComp -> datatype R_IS R_UNKNOWN .)
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296

    subqValues                     shift and go to state 417

state 312

    (205) expComp -> datatype R_BETWEEN datatype . R_AND datatype
    (224) expSubq -> datatype R_BETWEEN datatype . R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 418
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182


state 313

    (207) expComp -> datatype R_BETWEEN R_SYMMETRIC . datatype R_AND datatype
    (226) expSubq -> datatype R_BETWEEN R_SYMMETRIC . datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 419
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 314

    (231) expSubq -> datatype R_ISNULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 420


state 315

    (232) expSubq -> datatype R_NOTNULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 421


state 316

    (222) expSubq -> datatype OL_ESIGUAL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 422


state 317

    (250) expBool -> expBool R_AND expBool .
    (250) expBool -> expBool . R_AND expBool
    (251) expBool -> expBool . R_OR expBool
    (254) expBool -> expBool . optBoolPredicate
    (256) optBoolPredicate -> . R_IS R_TRUE
    (257) optBoolPredicate -> . R_IS R_FALSE
    (258) optBoolPredicate -> . R_IS R_UNKNOWN
    (259) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (260) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (261) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AND           reduce using rule 250 (expBool -> expBool R_AND expBool .)
    R_OR            reduce using rule 250 (expBool -> expBool R_AND expBool .)
    R_AS            reduce using rule 250 (expBool -> expBool R_AND expBool .)
    ID              reduce using rule 250 (expBool -> expBool R_AND expBool .)
    STRING          reduce using rule 250 (expBool -> expBool R_AND expBool .)
    CHARACTER       reduce using rule 250 (expBool -> expBool R_AND expBool .)
    S_COMA          reduce using rule 250 (expBool -> expBool R_AND expBool .)
    R_FROM          reduce using rule 250 (expBool -> expBool R_AND expBool .)
    S_PUNTOCOMA     reduce using rule 250 (expBool -> expBool R_AND expBool .)
    R_UNION         reduce using rule 250 (expBool -> expBool R_AND expBool .)
    R_INTERSECT     reduce using rule 250 (expBool -> expBool R_AND expBool .)
    R_EXCEPT        reduce using rule 250 (expBool -> expBool R_AND expBool .)
    S_PARDER        reduce using rule 250 (expBool -> expBool R_AND expBool .)
    R_GROUP         reduce using rule 250 (expBool -> expBool R_AND expBool .)
    R_ORDER         reduce using rule 250 (expBool -> expBool R_AND expBool .)
    R_LIMIT         reduce using rule 250 (expBool -> expBool R_AND expBool .)
    R_THEN          reduce using rule 250 (expBool -> expBool R_AND expBool .)
    R_NATURAL       reduce using rule 250 (expBool -> expBool R_AND expBool .)
    R_INNER         reduce using rule 250 (expBool -> expBool R_AND expBool .)
    R_LEFT          reduce using rule 250 (expBool -> expBool R_AND expBool .)
    R_RIGHT         reduce using rule 250 (expBool -> expBool R_AND expBool .)
    R_FULL          reduce using rule 250 (expBool -> expBool R_AND expBool .)
    R_WHERE         reduce using rule 250 (expBool -> expBool R_AND expBool .)
    R_IS            shift and go to state 199

  ! R_IS            [ reduce using rule 250 (expBool -> expBool R_AND expBool .) ]
  ! R_AND           [ shift and go to state 196 ]
  ! R_OR            [ shift and go to state 197 ]

    optBoolPredicate               shift and go to state 198

state 318

    (251) expBool -> expBool R_OR expBool .
    (250) expBool -> expBool . R_AND expBool
    (251) expBool -> expBool . R_OR expBool
    (254) expBool -> expBool . optBoolPredicate
    (256) optBoolPredicate -> . R_IS R_TRUE
    (257) optBoolPredicate -> . R_IS R_FALSE
    (258) optBoolPredicate -> . R_IS R_UNKNOWN
    (259) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (260) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (261) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AND           reduce using rule 251 (expBool -> expBool R_OR expBool .)
    R_OR            reduce using rule 251 (expBool -> expBool R_OR expBool .)
    R_AS            reduce using rule 251 (expBool -> expBool R_OR expBool .)
    ID              reduce using rule 251 (expBool -> expBool R_OR expBool .)
    STRING          reduce using rule 251 (expBool -> expBool R_OR expBool .)
    CHARACTER       reduce using rule 251 (expBool -> expBool R_OR expBool .)
    S_COMA          reduce using rule 251 (expBool -> expBool R_OR expBool .)
    R_FROM          reduce using rule 251 (expBool -> expBool R_OR expBool .)
    S_PUNTOCOMA     reduce using rule 251 (expBool -> expBool R_OR expBool .)
    R_UNION         reduce using rule 251 (expBool -> expBool R_OR expBool .)
    R_INTERSECT     reduce using rule 251 (expBool -> expBool R_OR expBool .)
    R_EXCEPT        reduce using rule 251 (expBool -> expBool R_OR expBool .)
    S_PARDER        reduce using rule 251 (expBool -> expBool R_OR expBool .)
    R_GROUP         reduce using rule 251 (expBool -> expBool R_OR expBool .)
    R_ORDER         reduce using rule 251 (expBool -> expBool R_OR expBool .)
    R_LIMIT         reduce using rule 251 (expBool -> expBool R_OR expBool .)
    R_THEN          reduce using rule 251 (expBool -> expBool R_OR expBool .)
    R_NATURAL       reduce using rule 251 (expBool -> expBool R_OR expBool .)
    R_INNER         reduce using rule 251 (expBool -> expBool R_OR expBool .)
    R_LEFT          reduce using rule 251 (expBool -> expBool R_OR expBool .)
    R_RIGHT         reduce using rule 251 (expBool -> expBool R_OR expBool .)
    R_FULL          reduce using rule 251 (expBool -> expBool R_OR expBool .)
    R_WHERE         reduce using rule 251 (expBool -> expBool R_OR expBool .)
    R_IS            shift and go to state 199

  ! R_IS            [ reduce using rule 251 (expBool -> expBool R_OR expBool .) ]
  ! R_AND           [ shift and go to state 196 ]
  ! R_OR            [ shift and go to state 197 ]

    optBoolPredicate               shift and go to state 198

state 319

    (256) optBoolPredicate -> R_IS R_TRUE .

    R_AND           reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    R_OR            reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    R_IS            reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    R_AS            reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    ID              reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    STRING          reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    CHARACTER       reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    S_COMA          reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    R_FROM          reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    S_PUNTOCOMA     reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    R_UNION         reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    R_INTERSECT     reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    R_EXCEPT        reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    S_PARDER        reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    R_GROUP         reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    R_ORDER         reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    R_LIMIT         reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    R_THEN          reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    R_NATURAL       reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    R_INNER         reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    R_LEFT          reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    R_RIGHT         reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    R_FULL          reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)
    R_WHERE         reduce using rule 256 (optBoolPredicate -> R_IS R_TRUE .)


state 320

    (257) optBoolPredicate -> R_IS R_FALSE .

    R_AND           reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    R_OR            reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    R_IS            reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    R_AS            reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    ID              reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    STRING          reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    CHARACTER       reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    S_COMA          reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    R_FROM          reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    S_PUNTOCOMA     reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    R_UNION         reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    R_INTERSECT     reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    R_EXCEPT        reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    S_PARDER        reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    R_GROUP         reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    R_ORDER         reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    R_LIMIT         reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    R_THEN          reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    R_NATURAL       reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    R_INNER         reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    R_LEFT          reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    R_RIGHT         reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    R_FULL          reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)
    R_WHERE         reduce using rule 257 (optBoolPredicate -> R_IS R_FALSE .)


state 321

    (258) optBoolPredicate -> R_IS R_UNKNOWN .

    R_AND           reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_OR            reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_IS            reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_AS            reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    ID              reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    STRING          reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    CHARACTER       reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_COMA          reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_FROM          reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_UNION         reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_INTERSECT     reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_EXCEPT        reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_PARDER        reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_GROUP         reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_ORDER         reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_LIMIT         reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_THEN          reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_NATURAL       reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_INNER         reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_LEFT          reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_RIGHT         reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_FULL          reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_WHERE         reduce using rule 258 (optBoolPredicate -> R_IS R_UNKNOWN .)


state 322

    (259) optBoolPredicate -> R_IS R_NOT . R_TRUE
    (260) optBoolPredicate -> R_IS R_NOT . R_FALSE
    (261) optBoolPredicate -> R_IS R_NOT . R_UNKNOWN

    R_TRUE          shift and go to state 423
    R_FALSE         shift and go to state 424
    R_UNKNOWN       shift and go to state 425


state 323

    (137) expresion -> S_PARIZQ selectStmt S_PARDER .

    R_AS            reduce using rule 137 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 137 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 137 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 137 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 137 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 137 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 137 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 137 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 137 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 137 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 137 (expresion -> S_PARIZQ selectStmt S_PARDER .)


state 324

    (196) datatype -> S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 196 (datatype -> S_PARIZQ datatype S_PARDER .)


state 325

    (253) expBool -> S_PARIZQ expBool S_PARDER .

    R_AND           reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_OR            reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_IS            reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_AS            reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    ID              reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    STRING          reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    CHARACTER       reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_COMA          reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_FROM          reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_PUNTOCOMA     reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_UNION         reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_INTERSECT     reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_EXCEPT        reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_PARDER        reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_GROUP         reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_ORDER         reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_LIMIT         reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_THEN          reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_NATURAL       reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_INNER         reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_LEFT          reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_RIGHT         reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_FULL          reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_WHERE         reduce using rule 253 (expBool -> S_PARIZQ expBool S_PARDER .)


state 326

    (196) datatype -> S_PARIZQ datatype . S_PARDER
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 324
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182


state 327

    (182) datatype -> R_CASE caseList optElse . R_END

    R_END           shift and go to state 426


state 328

    (183) caseList -> caseList caseWhen .

    R_ELSE          reduce using rule 183 (caseList -> caseList caseWhen .)
    R_WHEN          reduce using rule 183 (caseList -> caseList caseWhen .)
    R_END           reduce using rule 183 (caseList -> caseList caseWhen .)


state 329

    (186) optElse -> R_ELSE . literal
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL

    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108

    literal                        shift and go to state 427

state 330

    (185) caseWhen -> R_WHEN expBool . R_THEN literal
    (250) expBool -> expBool . R_AND expBool
    (251) expBool -> expBool . R_OR expBool
    (254) expBool -> expBool . optBoolPredicate
    (256) optBoolPredicate -> . R_IS R_TRUE
    (257) optBoolPredicate -> . R_IS R_FALSE
    (258) optBoolPredicate -> . R_IS R_UNKNOWN
    (259) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (260) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (261) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_THEN          shift and go to state 428
    R_AND           shift and go to state 196
    R_OR            shift and go to state 197
    R_IS            shift and go to state 199

    optBoolPredicate               shift and go to state 198

state 331

    (140) funcCall -> R_NOW S_PARIZQ S_PARDER .

    O_SUMA          reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_RESTA         reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_PRODUCTO      reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_DIVISION      reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_EXPONENTE     reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_MODULAR       reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OC_CONCATENAR   reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_IN            reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NOT           reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MENORQUE     reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MAYORQUE     reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_IGUAL         reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_DISTINTODE   reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_IS            reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_BETWEEN       reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ISNULL        reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NOTNULL       reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_ESIGUAL      reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_AS            reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    ID              reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    STRING          reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    CHARACTER       reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_COMA          reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_FROM          reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_PUNTOCOMA     reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_UNION         reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_INTERSECT     reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_EXCEPT        reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_PARDER        reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_AND           reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_OR            reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_GROUP         reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ORDER         reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_LIMIT         reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_THEN          reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NATURAL       reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_INNER         reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_LEFT          reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_RIGHT         reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_FULL          reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_WHERE         reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ALL           reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ANY           reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_SOME          reduce using rule 140 (funcCall -> R_NOW S_PARIZQ S_PARDER .)


state 332

    (141) funcCall -> R_COUNT S_PARIZQ datatype . S_PARDER
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 429
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182


state 333

    (142) funcCall -> R_COUNT S_PARIZQ O_PRODUCTO . S_PARDER

    S_PARDER        shift and go to state 430


state 334

    (143) funcCall -> R_SUM S_PARIZQ datatype . S_PARDER
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 431
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182


state 335

    (144) funcCall -> R_PROM S_PARIZQ datatype . S_PARDER
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 432
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182


state 336

    (145) extract -> R_EXTRACT S_PARIZQ optsExtract . R_FROM timeStamp S_PARDER
    (146) extract -> R_EXTRACT S_PARIZQ optsExtract . R_FROM columnName S_PARDER

    R_FROM          shift and go to state 433


state 337

    (149) optsExtract -> R_YEAR .

    R_FROM          reduce using rule 149 (optsExtract -> R_YEAR .)


state 338

    (150) optsExtract -> R_MONTH .

    R_FROM          reduce using rule 150 (optsExtract -> R_MONTH .)


state 339

    (151) optsExtract -> R_DAY .

    R_FROM          reduce using rule 151 (optsExtract -> R_DAY .)


state 340

    (152) optsExtract -> R_HOUR .

    R_FROM          reduce using rule 152 (optsExtract -> R_HOUR .)


state 341

    (153) optsExtract -> R_MINUTE .

    R_FROM          reduce using rule 153 (optsExtract -> R_MINUTE .)


state 342

    (154) optsExtract -> R_SECOND .

    R_FROM          reduce using rule 154 (optsExtract -> R_SECOND .)


state 343

    (155) datePart -> R_DATE_PART S_PARIZQ STRING . S_COMA dateSource S_PARDER

    S_COMA          shift and go to state 434


state 344

    (245) boolean -> R_EXISTS S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 435
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 345

    (239) expSubq -> stringExp R_LIKE STRING .

    R_AND           reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    R_OR            reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    R_IS            reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    R_AS            reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    ID              reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    STRING          reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    CHARACTER       reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    S_COMA          reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    R_FROM          reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    S_PUNTOCOMA     reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    R_UNION         reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    R_INTERSECT     reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    R_EXCEPT        reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    S_PARDER        reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    R_GROUP         reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    R_ORDER         reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    R_LIMIT         reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    R_THEN          reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    R_NATURAL       reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    R_INNER         reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    R_LEFT          reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    R_RIGHT         reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    R_FULL          reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)
    R_WHERE         reduce using rule 239 (expSubq -> stringExp R_LIKE STRING .)


state 346

    (19) ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN . List_body else_
    (26) List_body -> . List_body body
    (27) List_body -> . body
    (28) body -> . createStmt S_PUNTOCOMA
    (29) body -> . showStmt S_PUNTOCOMA
    (30) body -> . alterStmt S_PUNTOCOMA
    (31) body -> . dropStmt S_PUNTOCOMA
    (32) body -> . insertStmt S_PUNTOCOMA
    (33) body -> . updateStmt S_PUNTOCOMA
    (34) body -> . deleteStmt S_PUNTOCOMA
    (35) body -> . truncateStmt S_PUNTOCOMA
    (36) body -> . useStmt S_PUNTOCOMA
    (37) body -> . selectStmt S_PUNTOCOMA
    (38) body -> . functionStmt
    (39) body -> . procedureStmt
    (40) body -> . executePL S_PUNTOCOMA
    (41) body -> . ifStmt R_END R_IF S_PUNTOCOMA
    (42) body -> . asignacionStmt S_PUNTOCOMA
    (46) createStmt -> . R_CREATE createBody
    (395) showStmt -> . R_SHOW R_DATABASES likeOpt
    (279) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (280) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (281) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID ID
    (282) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER
    (305) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (306) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (307) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString
    (308) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER
    (309) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (310) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (382) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (385) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (391) deleteStmt -> . R_DELETE fromCl whereCl
    (392) truncateStmt -> . R_TRUNCATE tableOpt ID
    (398) useStmt -> . R_USE ID
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams
    (399) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (400) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (434) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (444) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
    (432) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (433) asignacionStmt -> . ID S_IGUAL expresion

    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 24
    R_INSERT        shift and go to state 26
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18
    ID              shift and go to state 23

    List_body                      shift and go to state 436
    body                           shift and go to state 437
    createStmt                     shift and go to state 438
    showStmt                       shift and go to state 439
    alterStmt                      shift and go to state 440
    dropStmt                       shift and go to state 441
    insertStmt                     shift and go to state 442
    updateStmt                     shift and go to state 443
    deleteStmt                     shift and go to state 444
    truncateStmt                   shift and go to state 445
    useStmt                        shift and go to state 446
    selectStmt                     shift and go to state 447
    functionStmt                   shift and go to state 448
    procedureStmt                  shift and go to state 449
    executePL                      shift and go to state 450
    ifStmt                         shift and go to state 451
    asignacionStmt                 shift and go to state 452

state 347

    (404) param_item -> ID . types
    (93) types -> . ID
    (94) types -> . T_SMALLINT
    (95) types -> . T_INTEGER
    (96) types -> . T_BIGINT
    (97) types -> . T_REAL
    (98) types -> . T_DOUBLE T_PRECISION
    (99) types -> . T_MONEY
    (100) types -> . T_TEXT
    (101) types -> . T_BOOLEAN
    (102) types -> . R_TIMESTAMP
    (103) types -> . T_DATE
    (104) types -> . T_TIME
    (105) types -> . T_DECIMAL optParams
    (106) types -> . T_NUMERIC optParams
    (107) types -> . T_VARCHAR optParams
    (108) types -> . T_CHARACTER optParams
    (109) types -> . T_CHAR optParams
    (110) types -> . T_CHARACTER T_VARYING optParams
    (111) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 453
    T_SMALLINT      shift and go to state 455
    T_INTEGER       shift and go to state 456
    T_BIGINT        shift and go to state 457
    T_REAL          shift and go to state 458
    T_DOUBLE        shift and go to state 459
    T_MONEY         shift and go to state 460
    T_TEXT          shift and go to state 461
    T_BOOLEAN       shift and go to state 462
    R_TIMESTAMP     shift and go to state 463
    T_DATE          shift and go to state 464
    T_TIME          shift and go to state 465
    T_DECIMAL       shift and go to state 466
    T_NUMERIC       shift and go to state 467
    T_VARCHAR       shift and go to state 468
    T_CHARACTER     shift and go to state 469
    T_CHAR          shift and go to state 470
    R_INTERVAL      shift and go to state 471

    types                          shift and go to state 454

state 348

    (399) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list . S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (402) params_list -> params_list . S_COMA param_item

    S_PARDER        shift and go to state 472
    S_COMA          shift and go to state 473


state 349

    (400) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER . returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (405) returnsStmt -> . R_RETURNS types
    (406) returnsStmt -> .

    R_RETURNS       shift and go to state 475
    R_AS            reduce using rule 406 (returnsStmt -> .)

    returnsStmt                    shift and go to state 474

state 350

    (403) params_list -> param_item .

    S_PARDER        reduce using rule 403 (params_list -> param_item .)
    S_COMA          reduce using rule 403 (params_list -> param_item .)


state 351

    (434) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ . params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ . S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (402) params_list -> . params_list S_COMA param_item
    (403) params_list -> . param_item
    (404) param_item -> . ID types

    S_PARDER        shift and go to state 477
    ID              shift and go to state 347

    params_list                    shift and go to state 476
    param_item                     shift and go to state 350

state 352

    (60) createOpts -> orReplace R_DATABASE ifNotExists idOrString . createOwner createMode
    (68) createOwner -> . R_OWNER ID
    (69) createOwner -> . R_OWNER STRING
    (70) createOwner -> . R_OWNER S_IGUAL ID
    (71) createOwner -> . R_OWNER S_IGUAL STRING
    (72) createOwner -> .

    R_OWNER         shift and go to state 479
    R_MODE          reduce using rule 72 (createOwner -> .)
    S_PUNTOCOMA     reduce using rule 72 (createOwner -> .)

    createOwner                    shift and go to state 478

state 353

    (48) createOpts -> unique_index R_INDEX ID R_ON . ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    ID              shift and go to state 480


state 354

    (59) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ . createTableList S_PARDER inheritsOpt
    (76) createTableList -> . createTableList S_COMA createTable
    (77) createTableList -> . createTable
    (78) createTable -> . ID types createColumns
    (79) createTable -> . createConstraint
    (80) createTable -> . createUnique
    (81) createTable -> . createPrimary
    (82) createTable -> . createForeign
    (85) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (86) createUnique -> . R_UNIQUE S_PARIZQ idList S_PARDER
    (87) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (88) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (89) constrName -> . R_CONSTRAINT ID
    (90) constrName -> .

    ID              shift and go to state 483
    R_UNIQUE        shift and go to state 489
    R_PRIMARY       shift and go to state 368
    R_CONSTRAINT    shift and go to state 369
    R_CHECK         reduce using rule 90 (constrName -> .)
    R_FOREIGN       reduce using rule 90 (constrName -> .)

    createTableList                shift and go to state 481
    createTable                    shift and go to state 482
    createConstraint               shift and go to state 484
    createUnique                   shift and go to state 485
    createPrimary                  shift and go to state 486
    createForeign                  shift and go to state 487
    constrName                     shift and go to state 488

state 355

    (64) ifNotExists -> R_IF R_NOT R_EXISTS .

    ID              reduce using rule 64 (ifNotExists -> R_IF R_NOT R_EXISTS .)
    STRING          reduce using rule 64 (ifNotExists -> R_IF R_NOT R_EXISTS .)
    CHARACTER       reduce using rule 64 (ifNotExists -> R_IF R_NOT R_EXISTS .)


state 356

    (63) createOpts -> R_TYPE ifNotExists ID R_AS . R_ENUM S_PARIZQ paramsList S_PARDER

    R_ENUM          shift and go to state 490


state 357

    (283) alterDb -> R_RENAME R_TO . idOrString
    (43) idOrString -> . ID
    (44) idOrString -> . STRING
    (45) idOrString -> . CHARACTER

    ID              shift and go to state 144
    STRING          shift and go to state 145
    CHARACTER       shift and go to state 146

    idOrString                     shift and go to state 491

state 358

    (284) alterDb -> R_OWNER R_TO . ownerOPts
    (285) ownerOPts -> . idOrString
    (286) ownerOPts -> . R_CURRENT_USER
    (287) ownerOPts -> . R_SESSION_USER
    (43) idOrString -> . ID
    (44) idOrString -> . STRING
    (45) idOrString -> . CHARACTER

    R_CURRENT_USER  shift and go to state 494
    R_SESSION_USER  shift and go to state 495
    ID              shift and go to state 144
    STRING          shift and go to state 145
    CHARACTER       shift and go to state 146

    ownerOPts                      shift and go to state 492
    idOrString                     shift and go to state 493

state 359

    (291) alterTable -> R_ALTER alterAlter .

    S_COMA          reduce using rule 291 (alterTable -> R_ALTER alterAlter .)
    S_PUNTOCOMA     reduce using rule 291 (alterTable -> R_ALTER alterAlter .)


state 360

    (299) alterAlter -> R_COLUMN . ID R_SET nullOpt
    (300) alterAlter -> R_COLUMN . ID R_SET defaultVal
    (301) alterAlter -> R_COLUMN . ID R_TYPE types

    ID              shift and go to state 496


state 361

    (288) alterTableList -> alterTableList S_COMA . alterTable
    (290) alterTable -> . R_ADD alterAdd
    (291) alterTable -> . R_ALTER alterAlter
    (292) alterTable -> . R_DROP alterDrop
    (293) alterTable -> . R_RENAME alterRename

    R_ADD           shift and go to state 245
    R_ALTER         shift and go to state 242
    R_DROP          shift and go to state 246
    R_RENAME        shift and go to state 247

    alterTable                     shift and go to state 497

state 362

    (290) alterTable -> R_ADD alterAdd .

    S_COMA          reduce using rule 290 (alterTable -> R_ADD alterAdd .)
    S_PUNTOCOMA     reduce using rule 290 (alterTable -> R_ADD alterAdd .)


state 363

    (294) alterAdd -> R_COLUMN . ID types

    ID              shift and go to state 498


state 364

    (295) alterAdd -> createConstraint .

    S_COMA          reduce using rule 295 (alterAdd -> createConstraint .)
    S_PUNTOCOMA     reduce using rule 295 (alterAdd -> createConstraint .)


state 365

    (296) alterAdd -> createPrimary .

    S_COMA          reduce using rule 296 (alterAdd -> createPrimary .)
    S_PUNTOCOMA     reduce using rule 296 (alterAdd -> createPrimary .)


state 366

    (297) alterAdd -> createForeign .

    S_COMA          reduce using rule 297 (alterAdd -> createForeign .)
    S_PUNTOCOMA     reduce using rule 297 (alterAdd -> createForeign .)


state 367

    (298) alterAdd -> constrName . R_UNIQUE S_PARIZQ ID S_PARDER
    (85) createConstraint -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER
    (88) createForeign -> constrName . R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_UNIQUE        shift and go to state 499
    R_CHECK         shift and go to state 500
    R_FOREIGN       shift and go to state 501


state 368

    (87) createPrimary -> R_PRIMARY . R_KEY S_PARIZQ idList S_PARDER

    R_KEY           shift and go to state 502


state 369

    (89) constrName -> R_CONSTRAINT . ID

    ID              shift and go to state 503


state 370

    (292) alterTable -> R_DROP alterDrop .

    S_COMA          reduce using rule 292 (alterTable -> R_DROP alterDrop .)
    S_PUNTOCOMA     reduce using rule 292 (alterTable -> R_DROP alterDrop .)


state 371

    (302) alterDrop -> R_CONSTRAINT . ID

    ID              shift and go to state 504


state 372

    (303) alterDrop -> R_COLUMN . ID

    ID              shift and go to state 505


state 373

    (293) alterTable -> R_RENAME alterRename .

    S_COMA          reduce using rule 293 (alterTable -> R_RENAME alterRename .)
    S_PUNTOCOMA     reduce using rule 293 (alterTable -> R_RENAME alterRename .)


state 374

    (304) alterRename -> R_COLUMN . ID R_TO ID

    ID              shift and go to state 506


state 375

    (281) alterStmt -> R_ALTER R_INDEX ifExists ID R_ALTER . ID ID
    (282) alterStmt -> R_ALTER R_INDEX ifExists ID R_ALTER . ID INTEGER

    ID              shift and go to state 507


state 376

    (308) dropStmt -> R_DROP R_FUNCTION ifExists idOrString S_PARIZQ . S_PARDER

    S_PARDER        shift and go to state 508


state 377

    (309) dropStmt -> R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ . S_PARDER

    S_PARDER        shift and go to state 509


state 378

    (310) dropStmt -> R_DROP R_INDEX concurrenly ifExists idOrString .

    S_PUNTOCOMA     reduce using rule 310 (dropStmt -> R_DROP R_INDEX concurrenly ifExists idOrString .)


state 379

    (382) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES . S_PARIZQ paramsList S_PARDER

    S_PARIZQ        shift and go to state 510


state 380

    (383) paramsColumn -> S_PARIZQ idList . S_PARDER
    (91) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 511
    S_COMA          shift and go to state 512


state 381

    (92) idList -> ID .

    S_PARDER        reduce using rule 92 (idList -> ID .)
    S_COMA          reduce using rule 92 (idList -> ID .)
    R_DESC          reduce using rule 92 (idList -> ID .)
    R_ASC           reduce using rule 92 (idList -> ID .)
    R_NULLS         reduce using rule 92 (idList -> ID .)


state 382

    (385) updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl .

    S_PUNTOCOMA     reduce using rule 385 (updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl .)


state 383

    (386) updateCols -> updateCols S_COMA . updateVals
    (388) updateVals -> . ID S_IGUAL updateExp

    ID              shift and go to state 260

    updateVals                     shift and go to state 513

state 384

    (388) updateVals -> ID S_IGUAL . updateExp
    (389) updateExp -> . datatype
    (390) updateExp -> . R_DEFAULT
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_DEFAULT       shift and go to state 516
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    updateExp                      shift and go to state 514
    datatype                       shift and go to state 515
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 385

    (339) fromBody -> S_PARIZQ selectStmt S_PARDER R_AS . idOrString
    (43) idOrString -> . ID
    (44) idOrString -> . STRING
    (45) idOrString -> . CHARACTER

    ID              shift and go to state 144
    STRING          shift and go to state 145
    CHARACTER       shift and go to state 146

    idOrString                     shift and go to state 517

state 386

    (336) tableExp -> tableExp S_COMA fromBody .

    S_COMA          reduce using rule 336 (tableExp -> tableExp S_COMA fromBody .)
    R_WHERE         reduce using rule 336 (tableExp -> tableExp S_COMA fromBody .)
    S_PUNTOCOMA     reduce using rule 336 (tableExp -> tableExp S_COMA fromBody .)
    R_NATURAL       reduce using rule 336 (tableExp -> tableExp S_COMA fromBody .)
    R_INNER         reduce using rule 336 (tableExp -> tableExp S_COMA fromBody .)
    R_LEFT          reduce using rule 336 (tableExp -> tableExp S_COMA fromBody .)
    R_RIGHT         reduce using rule 336 (tableExp -> tableExp S_COMA fromBody .)
    R_FULL          reduce using rule 336 (tableExp -> tableExp S_COMA fromBody .)
    R_GROUP         reduce using rule 336 (tableExp -> tableExp S_COMA fromBody .)
    R_ORDER         reduce using rule 336 (tableExp -> tableExp S_COMA fromBody .)
    R_LIMIT         reduce using rule 336 (tableExp -> tableExp S_COMA fromBody .)
    R_UNION         reduce using rule 336 (tableExp -> tableExp S_COMA fromBody .)
    R_INTERSECT     reduce using rule 336 (tableExp -> tableExp S_COMA fromBody .)
    R_EXCEPT        reduce using rule 336 (tableExp -> tableExp S_COMA fromBody .)
    S_PARDER        reduce using rule 336 (tableExp -> tableExp S_COMA fromBody .)


state 387

    (315) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl . groupByCl orderByCl limitCl
    (357) groupByCl -> . R_GROUP R_BY groupList havingCl
    (358) groupByCl -> .

    R_GROUP         shift and go to state 389
    R_ORDER         reduce using rule 358 (groupByCl -> .)
    R_LIMIT         reduce using rule 358 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 358 (groupByCl -> .)
    R_UNION         reduce using rule 358 (groupByCl -> .)
    R_INTERSECT     reduce using rule 358 (groupByCl -> .)
    R_EXCEPT        reduce using rule 358 (groupByCl -> .)
    S_PARDER        reduce using rule 358 (groupByCl -> .)

    groupByCl                      shift and go to state 518

state 388

    (316) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl . orderByCl limitCl
    (365) orderByCl -> . R_ORDER R_BY orderList
    (366) orderByCl -> .

    R_ORDER         shift and go to state 520
    R_LIMIT         reduce using rule 366 (orderByCl -> .)
    S_PUNTOCOMA     reduce using rule 366 (orderByCl -> .)
    R_UNION         reduce using rule 366 (orderByCl -> .)
    R_INTERSECT     reduce using rule 366 (orderByCl -> .)
    R_EXCEPT        reduce using rule 366 (orderByCl -> .)
    S_PARDER        reduce using rule 366 (orderByCl -> .)

    orderByCl                      shift and go to state 519

state 389

    (357) groupByCl -> R_GROUP . R_BY groupList havingCl

    R_BY            shift and go to state 521


state 390

    (317) selectStmt -> R_SELECT selectParams fromCl joinList whereCl . groupByCl orderByCl limitCl
    (318) selectStmt -> R_SELECT selectParams fromCl joinList whereCl . groupByCl limitCl
    (357) groupByCl -> . R_GROUP R_BY groupList havingCl
    (358) groupByCl -> .

    R_GROUP         shift and go to state 389
    R_ORDER         reduce using rule 358 (groupByCl -> .)
    R_LIMIT         reduce using rule 358 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 358 (groupByCl -> .)
    R_UNION         reduce using rule 358 (groupByCl -> .)
    R_INTERSECT     reduce using rule 358 (groupByCl -> .)
    R_EXCEPT        reduce using rule 358 (groupByCl -> .)
    S_PARDER        reduce using rule 358 (groupByCl -> .)

    groupByCl                      shift and go to state 522

state 391

    (341) joinList2 -> joinList2 joinCl .

    R_NATURAL       reduce using rule 341 (joinList2 -> joinList2 joinCl .)
    R_INNER         reduce using rule 341 (joinList2 -> joinList2 joinCl .)
    R_LEFT          reduce using rule 341 (joinList2 -> joinList2 joinCl .)
    R_RIGHT         reduce using rule 341 (joinList2 -> joinList2 joinCl .)
    R_FULL          reduce using rule 341 (joinList2 -> joinList2 joinCl .)
    R_WHERE         reduce using rule 341 (joinList2 -> joinList2 joinCl .)
    R_GROUP         reduce using rule 341 (joinList2 -> joinList2 joinCl .)
    R_ORDER         reduce using rule 341 (joinList2 -> joinList2 joinCl .)
    R_LIMIT         reduce using rule 341 (joinList2 -> joinList2 joinCl .)
    S_PUNTOCOMA     reduce using rule 341 (joinList2 -> joinList2 joinCl .)
    R_UNION         reduce using rule 341 (joinList2 -> joinList2 joinCl .)
    R_INTERSECT     reduce using rule 341 (joinList2 -> joinList2 joinCl .)
    R_EXCEPT        reduce using rule 341 (joinList2 -> joinList2 joinCl .)
    S_PARDER        reduce using rule 341 (joinList2 -> joinList2 joinCl .)


state 392

    (343) joinCl -> joinOpt R_JOIN . columnName optAlias R_ON expBool
    (344) joinCl -> joinOpt R_JOIN . columnName optAlias R_USING S_PARIZQ nameList S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 524

    columnName                     shift and go to state 523

state 393

    (345) joinCl -> R_NATURAL joinOpt . R_JOIN columnName optAlias

    R_JOIN          shift and go to state 525


state 394

    (350) joinOpt -> R_LEFT R_OUTER .

    R_JOIN          reduce using rule 350 (joinOpt -> R_LEFT R_OUTER .)


state 395

    (352) joinOpt -> R_RIGHT R_OUTER .

    R_JOIN          reduce using rule 352 (joinOpt -> R_RIGHT R_OUTER .)


state 396

    (354) joinOpt -> R_FULL R_OUTER .

    R_JOIN          reduce using rule 354 (joinOpt -> R_FULL R_OUTER .)


state 397

    (329) selectList -> selectList S_COMA selectListParams optAlias .

    S_COMA          reduce using rule 329 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_FROM          reduce using rule 329 (selectList -> selectList S_COMA selectListParams optAlias .)
    S_PUNTOCOMA     reduce using rule 329 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_UNION         reduce using rule 329 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_INTERSECT     reduce using rule 329 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_EXCEPT        reduce using rule 329 (selectList -> selectList S_COMA selectListParams optAlias .)
    S_PARDER        reduce using rule 329 (selectList -> selectList S_COMA selectListParams optAlias .)


state 398

    (138) funcCall -> ID S_PARIZQ paramsList S_PARDER .

    O_SUMA          reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_RESTA         reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_PRODUCTO      reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_DIVISION      reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_EXPONENTE     reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_MODULAR       reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OC_CONCATENAR   reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_IN            reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NOT           reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MENORQUE     reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MAYORQUE     reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_IGUAL         reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_DISTINTODE   reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_IS            reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_BETWEEN       reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ISNULL        reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NOTNULL       reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_ESIGUAL      reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_AS            reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    ID              reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    STRING          reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    CHARACTER       reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_COMA          reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_FROM          reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_UNION         reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_INTERSECT     reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_EXCEPT        reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_PARDER        reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_AND           reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_OR            reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_GROUP         reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ORDER         reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_LIMIT         reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_THEN          reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NATURAL       reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_INNER         reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_LEFT          reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_RIGHT         reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_FULL          reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_WHERE         reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ALL           reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ANY           reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_SOME          reduce using rule 138 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)


state 399

    (173) paramsList -> paramsList S_COMA . datatype
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 526
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 400

    (246) boolean -> datatype R_IN S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 527
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 401

    (247) boolean -> datatype R_NOT R_IN S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 528

state 402

    (206) expComp -> datatype R_NOT R_BETWEEN datatype . R_AND datatype
    (225) expSubq -> datatype R_NOT R_BETWEEN datatype . R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 529
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182


state 403

    (218) expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 530

state 404

    (219) expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 531

state 405

    (220) expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 532

state 406

    (221) expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 533

state 407

    (223) expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 534

state 408

    (203) expComp -> datatype R_IS R_DISTINCT R_FROM . datatype
    (227) expSubq -> datatype R_IS R_DISTINCT R_FROM . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 535
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 409

    (204) expComp -> datatype R_IS R_NOT R_DISTINCT . R_FROM datatype
    (228) expSubq -> datatype R_IS R_NOT R_DISTINCT . R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER

    R_FROM          shift and go to state 536


state 410

    (214) expComp -> datatype R_IS R_NOT R_NULL .
    (230) expSubq -> datatype R_IS R_NOT R_NULL . subqValues S_PARIZQ selectStmt S_PARDER
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME

    R_AND           reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_OR            reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_IS            reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_AS            reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    ID              reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    STRING          reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    CHARACTER       reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_COMA          reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_FROM          reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_PUNTOCOMA     reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_UNION         reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_INTERSECT     reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_EXCEPT        reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_PARDER        reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_GROUP         reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_ORDER         reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_LIMIT         reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_THEN          reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_NATURAL       reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_INNER         reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_LEFT          reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_RIGHT         reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_FULL          reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_WHERE         reduce using rule 214 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296

    subqValues                     shift and go to state 537

state 411

    (215) expComp -> datatype R_IS R_NOT R_TRUE .
    (234) expSubq -> datatype R_IS R_NOT R_TRUE . subqValues S_PARIZQ selectStmt S_PARDER
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME

    R_AND           reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_OR            reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_IS            reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_AS            reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    ID              reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    STRING          reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    CHARACTER       reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_COMA          reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_FROM          reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_PUNTOCOMA     reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_UNION         reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_INTERSECT     reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_EXCEPT        reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_PARDER        reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_GROUP         reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_ORDER         reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_LIMIT         reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_THEN          reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_NATURAL       reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_INNER         reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_LEFT          reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_RIGHT         reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_FULL          reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_WHERE         reduce using rule 215 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296

    subqValues                     shift and go to state 538

state 412

    (216) expComp -> datatype R_IS R_NOT R_FALSE .
    (236) expSubq -> datatype R_IS R_NOT R_FALSE . subqValues S_PARIZQ selectStmt S_PARDER
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME

    R_AND           reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_OR            reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_IS            reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_AS            reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    ID              reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    STRING          reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    CHARACTER       reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_COMA          reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_FROM          reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_PUNTOCOMA     reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_UNION         reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_INTERSECT     reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_EXCEPT        reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_PARDER        reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_GROUP         reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_ORDER         reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_LIMIT         reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_THEN          reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_NATURAL       reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_INNER         reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_LEFT          reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_RIGHT         reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_FULL          reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_WHERE         reduce using rule 216 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296

    subqValues                     shift and go to state 539

state 413

    (217) expComp -> datatype R_IS R_NOT R_UNKNOWN .
    (238) expSubq -> datatype R_IS R_NOT R_UNKNOWN . subqValues S_PARIZQ selectStmt S_PARDER
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME

    R_AND           reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_OR            reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_IS            reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_AS            reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    ID              reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    STRING          reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    CHARACTER       reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_COMA          reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_FROM          reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_UNION         reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_INTERSECT     reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_EXCEPT        reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_PARDER        reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_GROUP         reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_ORDER         reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_LIMIT         reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_THEN          reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_NATURAL       reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_INNER         reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_LEFT          reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_RIGHT         reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_FULL          reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_WHERE         reduce using rule 217 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296

    subqValues                     shift and go to state 540

state 414

    (229) expSubq -> datatype R_IS R_NULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 541


state 415

    (233) expSubq -> datatype R_IS R_TRUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 542


state 416

    (235) expSubq -> datatype R_IS R_FALSE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 543


state 417

    (237) expSubq -> datatype R_IS R_UNKNOWN subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 544


state 418

    (205) expComp -> datatype R_BETWEEN datatype R_AND . datatype
    (224) expSubq -> datatype R_BETWEEN datatype R_AND . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 545
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 419

    (207) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype . R_AND datatype
    (226) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype . R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 546
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182


state 420

    (231) expSubq -> datatype R_ISNULL subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 547

state 421

    (232) expSubq -> datatype R_NOTNULL subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 548

state 422

    (222) expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 549

state 423

    (259) optBoolPredicate -> R_IS R_NOT R_TRUE .

    R_AND           reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_OR            reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_IS            reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_AS            reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    ID              reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    STRING          reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    CHARACTER       reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_COMA          reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_FROM          reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_PUNTOCOMA     reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_UNION         reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_INTERSECT     reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_EXCEPT        reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_PARDER        reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_GROUP         reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_ORDER         reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_LIMIT         reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_THEN          reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_NATURAL       reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_INNER         reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_LEFT          reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_RIGHT         reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_FULL          reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_WHERE         reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_TRUE .)


state 424

    (260) optBoolPredicate -> R_IS R_NOT R_FALSE .

    R_AND           reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_OR            reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_IS            reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_AS            reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    ID              reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    STRING          reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    CHARACTER       reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_COMA          reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_FROM          reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_PUNTOCOMA     reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_UNION         reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_INTERSECT     reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_EXCEPT        reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_PARDER        reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_GROUP         reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_ORDER         reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_LIMIT         reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_THEN          reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_NATURAL       reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_INNER         reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_LEFT          reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_RIGHT         reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_FULL          reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_WHERE         reduce using rule 260 (optBoolPredicate -> R_IS R_NOT R_FALSE .)


state 425

    (261) optBoolPredicate -> R_IS R_NOT R_UNKNOWN .

    R_AND           reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_OR            reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_IS            reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_AS            reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    ID              reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    STRING          reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    CHARACTER       reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_COMA          reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_FROM          reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_UNION         reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_INTERSECT     reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_EXCEPT        reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_PARDER        reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_GROUP         reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_ORDER         reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_LIMIT         reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_THEN          reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_NATURAL       reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_INNER         reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_LEFT          reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_RIGHT         reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_FULL          reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_WHERE         reduce using rule 261 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)


state 426

    (182) datatype -> R_CASE caseList optElse R_END .

    O_SUMA          reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    O_RESTA         reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    O_PRODUCTO      reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    O_DIVISION      reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    O_EXPONENTE     reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    O_MODULAR       reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    OC_CONCATENAR   reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_IN            reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_NOT           reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    OL_MENORQUE     reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    OL_MAYORQUE     reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    OL_MAYORIGUALQUE reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    OL_MENORIGUALQUE reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    S_IGUAL         reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    OL_DISTINTODE   reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_IS            reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_BETWEEN       reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_ISNULL        reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_NOTNULL       reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    OL_ESIGUAL      reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_AS            reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    ID              reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    STRING          reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    CHARACTER       reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    S_COMA          reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_FROM          reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    S_PUNTOCOMA     reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_UNION         reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_INTERSECT     reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_EXCEPT        reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    S_PARDER        reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_AND           reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_OR            reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_GROUP         reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_ORDER         reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_LIMIT         reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_THEN          reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_NATURAL       reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_INNER         reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_LEFT          reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_RIGHT         reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_FULL          reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_WHERE         reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_ALL           reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_ANY           reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)
    R_SOME          reduce using rule 182 (datatype -> R_CASE caseList optElse R_END .)


state 427

    (186) optElse -> R_ELSE literal .

    R_END           reduce using rule 186 (optElse -> R_ELSE literal .)


state 428

    (185) caseWhen -> R_WHEN expBool R_THEN . literal
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL

    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108

    literal                        shift and go to state 550

state 429

    (141) funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 141 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)


state 430

    (142) funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .

    O_SUMA          reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_RESTA         reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_PRODUCTO      reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_DIVISION      reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_EXPONENTE     reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_MODULAR       reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OC_CONCATENAR   reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_IN            reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NOT           reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MENORQUE     reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MAYORQUE     reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_IGUAL         reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_DISTINTODE   reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_IS            reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_BETWEEN       reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ISNULL        reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NOTNULL       reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_ESIGUAL      reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_AS            reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    ID              reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    STRING          reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    CHARACTER       reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_COMA          reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_FROM          reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_PUNTOCOMA     reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_UNION         reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_INTERSECT     reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_EXCEPT        reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_PARDER        reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_AND           reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_OR            reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_GROUP         reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ORDER         reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_LIMIT         reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_THEN          reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NATURAL       reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_INNER         reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_LEFT          reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_RIGHT         reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_FULL          reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_WHERE         reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ALL           reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ANY           reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_SOME          reduce using rule 142 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)


state 431

    (143) funcCall -> R_SUM S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 143 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)


state 432

    (144) funcCall -> R_PROM S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 144 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)


state 433

    (145) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM . timeStamp S_PARDER
    (146) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM . columnName S_PARDER
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID

    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122
    ID              shift and go to state 524

    timeStamp                      shift and go to state 551
    columnName                     shift and go to state 552

state 434

    (155) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA . dateSource S_PARDER
    (156) dateSource -> . R_TIMESTAMP STRING
    (157) dateSource -> . T_DATE STRING
    (158) dateSource -> . T_TIME STRING
    (159) dateSource -> . R_INTERVAL STRING
    (160) dateSource -> . R_NOW S_PARIZQ S_PARDER

    R_TIMESTAMP     shift and go to state 554
    T_DATE          shift and go to state 555
    T_TIME          shift and go to state 556
    R_INTERVAL      shift and go to state 557
    R_NOW           shift and go to state 558

    dateSource                     shift and go to state 553

state 435

    (245) boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 245 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)


state 436

    (19) ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN List_body . else_
    (26) List_body -> List_body . body
    (20) else_ -> . R_ELSE List_body
    (21) else_ -> . Lista_elsif_
    (22) else_ -> .
    (28) body -> . createStmt S_PUNTOCOMA
    (29) body -> . showStmt S_PUNTOCOMA
    (30) body -> . alterStmt S_PUNTOCOMA
    (31) body -> . dropStmt S_PUNTOCOMA
    (32) body -> . insertStmt S_PUNTOCOMA
    (33) body -> . updateStmt S_PUNTOCOMA
    (34) body -> . deleteStmt S_PUNTOCOMA
    (35) body -> . truncateStmt S_PUNTOCOMA
    (36) body -> . useStmt S_PUNTOCOMA
    (37) body -> . selectStmt S_PUNTOCOMA
    (38) body -> . functionStmt
    (39) body -> . procedureStmt
    (40) body -> . executePL S_PUNTOCOMA
    (41) body -> . ifStmt R_END R_IF S_PUNTOCOMA
    (42) body -> . asignacionStmt S_PUNTOCOMA
    (23) Lista_elsif_ -> . Lista_elsif_ elsif_
    (24) Lista_elsif_ -> . elsif_
    (46) createStmt -> . R_CREATE createBody
    (395) showStmt -> . R_SHOW R_DATABASES likeOpt
    (279) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (280) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (281) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID ID
    (282) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER
    (305) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (306) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (307) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString
    (308) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER
    (309) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (310) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (382) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (385) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (391) deleteStmt -> . R_DELETE fromCl whereCl
    (392) truncateStmt -> . R_TRUNCATE tableOpt ID
    (398) useStmt -> . R_USE ID
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams
    (399) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (400) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (434) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (444) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
    (432) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (433) asignacionStmt -> . ID S_IGUAL expresion
    (25) elsif_ -> . R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body

    R_ELSE          shift and go to state 561
    R_END           reduce using rule 22 (else_ -> .)
    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 24
    R_INSERT        shift and go to state 26
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18
    ID              shift and go to state 23
    R_ELSIF         shift and go to state 564

    else_                          shift and go to state 559
    body                           shift and go to state 560
    Lista_elsif_                   shift and go to state 562
    createStmt                     shift and go to state 438
    showStmt                       shift and go to state 439
    alterStmt                      shift and go to state 440
    dropStmt                       shift and go to state 441
    insertStmt                     shift and go to state 442
    updateStmt                     shift and go to state 443
    deleteStmt                     shift and go to state 444
    truncateStmt                   shift and go to state 445
    useStmt                        shift and go to state 446
    selectStmt                     shift and go to state 447
    functionStmt                   shift and go to state 448
    procedureStmt                  shift and go to state 449
    executePL                      shift and go to state 450
    ifStmt                         shift and go to state 451
    asignacionStmt                 shift and go to state 452
    elsif_                         shift and go to state 563

state 437

    (27) List_body -> body .

    R_ELSE          reduce using rule 27 (List_body -> body .)
    R_CREATE        reduce using rule 27 (List_body -> body .)
    R_SHOW          reduce using rule 27 (List_body -> body .)
    R_ALTER         reduce using rule 27 (List_body -> body .)
    R_DROP          reduce using rule 27 (List_body -> body .)
    R_INSERT        reduce using rule 27 (List_body -> body .)
    R_UPDATE        reduce using rule 27 (List_body -> body .)
    R_DELETE        reduce using rule 27 (List_body -> body .)
    R_TRUNCATE      reduce using rule 27 (List_body -> body .)
    R_USE           reduce using rule 27 (List_body -> body .)
    R_SELECT        reduce using rule 27 (List_body -> body .)
    S_PARIZQ        reduce using rule 27 (List_body -> body .)
    R_EXECUTE       reduce using rule 27 (List_body -> body .)
    R_IF            reduce using rule 27 (List_body -> body .)
    ID              reduce using rule 27 (List_body -> body .)
    R_ELSIF         reduce using rule 27 (List_body -> body .)
    R_END           reduce using rule 27 (List_body -> body .)


state 438

    (28) body -> createStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 565


state 439

    (29) body -> showStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 566


state 440

    (30) body -> alterStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 567


state 441

    (31) body -> dropStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 568


state 442

    (32) body -> insertStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 569


state 443

    (33) body -> updateStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 570


state 444

    (34) body -> deleteStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 571


state 445

    (35) body -> truncateStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 572


state 446

    (36) body -> useStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 573


state 447

    (37) body -> selectStmt . S_PUNTOCOMA
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     shift and go to state 574
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 448

    (38) body -> functionStmt .

    R_ELSE          reduce using rule 38 (body -> functionStmt .)
    R_CREATE        reduce using rule 38 (body -> functionStmt .)
    R_SHOW          reduce using rule 38 (body -> functionStmt .)
    R_ALTER         reduce using rule 38 (body -> functionStmt .)
    R_DROP          reduce using rule 38 (body -> functionStmt .)
    R_INSERT        reduce using rule 38 (body -> functionStmt .)
    R_UPDATE        reduce using rule 38 (body -> functionStmt .)
    R_DELETE        reduce using rule 38 (body -> functionStmt .)
    R_TRUNCATE      reduce using rule 38 (body -> functionStmt .)
    R_USE           reduce using rule 38 (body -> functionStmt .)
    R_SELECT        reduce using rule 38 (body -> functionStmt .)
    S_PARIZQ        reduce using rule 38 (body -> functionStmt .)
    R_EXECUTE       reduce using rule 38 (body -> functionStmt .)
    R_IF            reduce using rule 38 (body -> functionStmt .)
    ID              reduce using rule 38 (body -> functionStmt .)
    R_ELSIF         reduce using rule 38 (body -> functionStmt .)
    R_END           reduce using rule 38 (body -> functionStmt .)


state 449

    (39) body -> procedureStmt .

    R_ELSE          reduce using rule 39 (body -> procedureStmt .)
    R_CREATE        reduce using rule 39 (body -> procedureStmt .)
    R_SHOW          reduce using rule 39 (body -> procedureStmt .)
    R_ALTER         reduce using rule 39 (body -> procedureStmt .)
    R_DROP          reduce using rule 39 (body -> procedureStmt .)
    R_INSERT        reduce using rule 39 (body -> procedureStmt .)
    R_UPDATE        reduce using rule 39 (body -> procedureStmt .)
    R_DELETE        reduce using rule 39 (body -> procedureStmt .)
    R_TRUNCATE      reduce using rule 39 (body -> procedureStmt .)
    R_USE           reduce using rule 39 (body -> procedureStmt .)
    R_SELECT        reduce using rule 39 (body -> procedureStmt .)
    S_PARIZQ        reduce using rule 39 (body -> procedureStmt .)
    R_EXECUTE       reduce using rule 39 (body -> procedureStmt .)
    R_IF            reduce using rule 39 (body -> procedureStmt .)
    ID              reduce using rule 39 (body -> procedureStmt .)
    R_ELSIF         reduce using rule 39 (body -> procedureStmt .)
    R_END           reduce using rule 39 (body -> procedureStmt .)


state 450

    (40) body -> executePL . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 575


state 451

    (41) body -> ifStmt . R_END R_IF S_PUNTOCOMA

    R_END           shift and go to state 576


state 452

    (42) body -> asignacionStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 577


state 453

    (93) types -> ID .

    S_PARDER        reduce using rule 93 (types -> ID .)
    S_COMA          reduce using rule 93 (types -> ID .)
    R_AS            reduce using rule 93 (types -> ID .)
    R_DEFAULT       reduce using rule 93 (types -> ID .)
    R_NOT           reduce using rule 93 (types -> ID .)
    R_NULL          reduce using rule 93 (types -> ID .)
    R_PRIMARY       reduce using rule 93 (types -> ID .)
    R_REFERENCES    reduce using rule 93 (types -> ID .)
    R_CONSTRAINT    reduce using rule 93 (types -> ID .)
    R_UNIQUE        reduce using rule 93 (types -> ID .)
    R_CHECK         reduce using rule 93 (types -> ID .)
    S_PUNTOCOMA     reduce using rule 93 (types -> ID .)
    S_DOSPUNTOS     reduce using rule 93 (types -> ID .)
    S_IGUAL         reduce using rule 93 (types -> ID .)


state 454

    (404) param_item -> ID types .

    S_PARDER        reduce using rule 404 (param_item -> ID types .)
    S_COMA          reduce using rule 404 (param_item -> ID types .)


state 455

    (94) types -> T_SMALLINT .

    S_PARDER        reduce using rule 94 (types -> T_SMALLINT .)
    S_COMA          reduce using rule 94 (types -> T_SMALLINT .)
    R_AS            reduce using rule 94 (types -> T_SMALLINT .)
    R_DEFAULT       reduce using rule 94 (types -> T_SMALLINT .)
    R_NOT           reduce using rule 94 (types -> T_SMALLINT .)
    R_NULL          reduce using rule 94 (types -> T_SMALLINT .)
    R_PRIMARY       reduce using rule 94 (types -> T_SMALLINT .)
    R_REFERENCES    reduce using rule 94 (types -> T_SMALLINT .)
    R_CONSTRAINT    reduce using rule 94 (types -> T_SMALLINT .)
    R_UNIQUE        reduce using rule 94 (types -> T_SMALLINT .)
    R_CHECK         reduce using rule 94 (types -> T_SMALLINT .)
    S_PUNTOCOMA     reduce using rule 94 (types -> T_SMALLINT .)
    S_DOSPUNTOS     reduce using rule 94 (types -> T_SMALLINT .)
    S_IGUAL         reduce using rule 94 (types -> T_SMALLINT .)


state 456

    (95) types -> T_INTEGER .

    S_PARDER        reduce using rule 95 (types -> T_INTEGER .)
    S_COMA          reduce using rule 95 (types -> T_INTEGER .)
    R_AS            reduce using rule 95 (types -> T_INTEGER .)
    R_DEFAULT       reduce using rule 95 (types -> T_INTEGER .)
    R_NOT           reduce using rule 95 (types -> T_INTEGER .)
    R_NULL          reduce using rule 95 (types -> T_INTEGER .)
    R_PRIMARY       reduce using rule 95 (types -> T_INTEGER .)
    R_REFERENCES    reduce using rule 95 (types -> T_INTEGER .)
    R_CONSTRAINT    reduce using rule 95 (types -> T_INTEGER .)
    R_UNIQUE        reduce using rule 95 (types -> T_INTEGER .)
    R_CHECK         reduce using rule 95 (types -> T_INTEGER .)
    S_PUNTOCOMA     reduce using rule 95 (types -> T_INTEGER .)
    S_DOSPUNTOS     reduce using rule 95 (types -> T_INTEGER .)
    S_IGUAL         reduce using rule 95 (types -> T_INTEGER .)


state 457

    (96) types -> T_BIGINT .

    S_PARDER        reduce using rule 96 (types -> T_BIGINT .)
    S_COMA          reduce using rule 96 (types -> T_BIGINT .)
    R_AS            reduce using rule 96 (types -> T_BIGINT .)
    R_DEFAULT       reduce using rule 96 (types -> T_BIGINT .)
    R_NOT           reduce using rule 96 (types -> T_BIGINT .)
    R_NULL          reduce using rule 96 (types -> T_BIGINT .)
    R_PRIMARY       reduce using rule 96 (types -> T_BIGINT .)
    R_REFERENCES    reduce using rule 96 (types -> T_BIGINT .)
    R_CONSTRAINT    reduce using rule 96 (types -> T_BIGINT .)
    R_UNIQUE        reduce using rule 96 (types -> T_BIGINT .)
    R_CHECK         reduce using rule 96 (types -> T_BIGINT .)
    S_PUNTOCOMA     reduce using rule 96 (types -> T_BIGINT .)
    S_DOSPUNTOS     reduce using rule 96 (types -> T_BIGINT .)
    S_IGUAL         reduce using rule 96 (types -> T_BIGINT .)


state 458

    (97) types -> T_REAL .

    S_PARDER        reduce using rule 97 (types -> T_REAL .)
    S_COMA          reduce using rule 97 (types -> T_REAL .)
    R_AS            reduce using rule 97 (types -> T_REAL .)
    R_DEFAULT       reduce using rule 97 (types -> T_REAL .)
    R_NOT           reduce using rule 97 (types -> T_REAL .)
    R_NULL          reduce using rule 97 (types -> T_REAL .)
    R_PRIMARY       reduce using rule 97 (types -> T_REAL .)
    R_REFERENCES    reduce using rule 97 (types -> T_REAL .)
    R_CONSTRAINT    reduce using rule 97 (types -> T_REAL .)
    R_UNIQUE        reduce using rule 97 (types -> T_REAL .)
    R_CHECK         reduce using rule 97 (types -> T_REAL .)
    S_PUNTOCOMA     reduce using rule 97 (types -> T_REAL .)
    S_DOSPUNTOS     reduce using rule 97 (types -> T_REAL .)
    S_IGUAL         reduce using rule 97 (types -> T_REAL .)


state 459

    (98) types -> T_DOUBLE . T_PRECISION

    T_PRECISION     shift and go to state 578


state 460

    (99) types -> T_MONEY .

    S_PARDER        reduce using rule 99 (types -> T_MONEY .)
    S_COMA          reduce using rule 99 (types -> T_MONEY .)
    R_AS            reduce using rule 99 (types -> T_MONEY .)
    R_DEFAULT       reduce using rule 99 (types -> T_MONEY .)
    R_NOT           reduce using rule 99 (types -> T_MONEY .)
    R_NULL          reduce using rule 99 (types -> T_MONEY .)
    R_PRIMARY       reduce using rule 99 (types -> T_MONEY .)
    R_REFERENCES    reduce using rule 99 (types -> T_MONEY .)
    R_CONSTRAINT    reduce using rule 99 (types -> T_MONEY .)
    R_UNIQUE        reduce using rule 99 (types -> T_MONEY .)
    R_CHECK         reduce using rule 99 (types -> T_MONEY .)
    S_PUNTOCOMA     reduce using rule 99 (types -> T_MONEY .)
    S_DOSPUNTOS     reduce using rule 99 (types -> T_MONEY .)
    S_IGUAL         reduce using rule 99 (types -> T_MONEY .)


state 461

    (100) types -> T_TEXT .

    S_PARDER        reduce using rule 100 (types -> T_TEXT .)
    S_COMA          reduce using rule 100 (types -> T_TEXT .)
    R_AS            reduce using rule 100 (types -> T_TEXT .)
    R_DEFAULT       reduce using rule 100 (types -> T_TEXT .)
    R_NOT           reduce using rule 100 (types -> T_TEXT .)
    R_NULL          reduce using rule 100 (types -> T_TEXT .)
    R_PRIMARY       reduce using rule 100 (types -> T_TEXT .)
    R_REFERENCES    reduce using rule 100 (types -> T_TEXT .)
    R_CONSTRAINT    reduce using rule 100 (types -> T_TEXT .)
    R_UNIQUE        reduce using rule 100 (types -> T_TEXT .)
    R_CHECK         reduce using rule 100 (types -> T_TEXT .)
    S_PUNTOCOMA     reduce using rule 100 (types -> T_TEXT .)
    S_DOSPUNTOS     reduce using rule 100 (types -> T_TEXT .)
    S_IGUAL         reduce using rule 100 (types -> T_TEXT .)


state 462

    (101) types -> T_BOOLEAN .

    S_PARDER        reduce using rule 101 (types -> T_BOOLEAN .)
    S_COMA          reduce using rule 101 (types -> T_BOOLEAN .)
    R_AS            reduce using rule 101 (types -> T_BOOLEAN .)
    R_DEFAULT       reduce using rule 101 (types -> T_BOOLEAN .)
    R_NOT           reduce using rule 101 (types -> T_BOOLEAN .)
    R_NULL          reduce using rule 101 (types -> T_BOOLEAN .)
    R_PRIMARY       reduce using rule 101 (types -> T_BOOLEAN .)
    R_REFERENCES    reduce using rule 101 (types -> T_BOOLEAN .)
    R_CONSTRAINT    reduce using rule 101 (types -> T_BOOLEAN .)
    R_UNIQUE        reduce using rule 101 (types -> T_BOOLEAN .)
    R_CHECK         reduce using rule 101 (types -> T_BOOLEAN .)
    S_PUNTOCOMA     reduce using rule 101 (types -> T_BOOLEAN .)
    S_DOSPUNTOS     reduce using rule 101 (types -> T_BOOLEAN .)
    S_IGUAL         reduce using rule 101 (types -> T_BOOLEAN .)


state 463

    (102) types -> R_TIMESTAMP .

    S_PARDER        reduce using rule 102 (types -> R_TIMESTAMP .)
    S_COMA          reduce using rule 102 (types -> R_TIMESTAMP .)
    R_AS            reduce using rule 102 (types -> R_TIMESTAMP .)
    R_DEFAULT       reduce using rule 102 (types -> R_TIMESTAMP .)
    R_NOT           reduce using rule 102 (types -> R_TIMESTAMP .)
    R_NULL          reduce using rule 102 (types -> R_TIMESTAMP .)
    R_PRIMARY       reduce using rule 102 (types -> R_TIMESTAMP .)
    R_REFERENCES    reduce using rule 102 (types -> R_TIMESTAMP .)
    R_CONSTRAINT    reduce using rule 102 (types -> R_TIMESTAMP .)
    R_UNIQUE        reduce using rule 102 (types -> R_TIMESTAMP .)
    R_CHECK         reduce using rule 102 (types -> R_TIMESTAMP .)
    S_PUNTOCOMA     reduce using rule 102 (types -> R_TIMESTAMP .)
    S_DOSPUNTOS     reduce using rule 102 (types -> R_TIMESTAMP .)
    S_IGUAL         reduce using rule 102 (types -> R_TIMESTAMP .)


state 464

    (103) types -> T_DATE .

    S_PARDER        reduce using rule 103 (types -> T_DATE .)
    S_COMA          reduce using rule 103 (types -> T_DATE .)
    R_AS            reduce using rule 103 (types -> T_DATE .)
    R_DEFAULT       reduce using rule 103 (types -> T_DATE .)
    R_NOT           reduce using rule 103 (types -> T_DATE .)
    R_NULL          reduce using rule 103 (types -> T_DATE .)
    R_PRIMARY       reduce using rule 103 (types -> T_DATE .)
    R_REFERENCES    reduce using rule 103 (types -> T_DATE .)
    R_CONSTRAINT    reduce using rule 103 (types -> T_DATE .)
    R_UNIQUE        reduce using rule 103 (types -> T_DATE .)
    R_CHECK         reduce using rule 103 (types -> T_DATE .)
    S_PUNTOCOMA     reduce using rule 103 (types -> T_DATE .)
    S_DOSPUNTOS     reduce using rule 103 (types -> T_DATE .)
    S_IGUAL         reduce using rule 103 (types -> T_DATE .)


state 465

    (104) types -> T_TIME .

    S_PARDER        reduce using rule 104 (types -> T_TIME .)
    S_COMA          reduce using rule 104 (types -> T_TIME .)
    R_AS            reduce using rule 104 (types -> T_TIME .)
    R_DEFAULT       reduce using rule 104 (types -> T_TIME .)
    R_NOT           reduce using rule 104 (types -> T_TIME .)
    R_NULL          reduce using rule 104 (types -> T_TIME .)
    R_PRIMARY       reduce using rule 104 (types -> T_TIME .)
    R_REFERENCES    reduce using rule 104 (types -> T_TIME .)
    R_CONSTRAINT    reduce using rule 104 (types -> T_TIME .)
    R_UNIQUE        reduce using rule 104 (types -> T_TIME .)
    R_CHECK         reduce using rule 104 (types -> T_TIME .)
    S_PUNTOCOMA     reduce using rule 104 (types -> T_TIME .)
    S_DOSPUNTOS     reduce using rule 104 (types -> T_TIME .)
    S_IGUAL         reduce using rule 104 (types -> T_TIME .)


state 466

    (105) types -> T_DECIMAL . optParams
    (119) optParams -> . S_PARIZQ literalList S_PARDER
    (120) optParams -> .

    S_PARIZQ        shift and go to state 580
    S_PARDER        reduce using rule 120 (optParams -> .)
    S_COMA          reduce using rule 120 (optParams -> .)
    R_AS            reduce using rule 120 (optParams -> .)
    R_DEFAULT       reduce using rule 120 (optParams -> .)
    R_NOT           reduce using rule 120 (optParams -> .)
    R_NULL          reduce using rule 120 (optParams -> .)
    R_PRIMARY       reduce using rule 120 (optParams -> .)
    R_REFERENCES    reduce using rule 120 (optParams -> .)
    R_CONSTRAINT    reduce using rule 120 (optParams -> .)
    R_UNIQUE        reduce using rule 120 (optParams -> .)
    R_CHECK         reduce using rule 120 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 120 (optParams -> .)
    S_DOSPUNTOS     reduce using rule 120 (optParams -> .)
    S_IGUAL         reduce using rule 120 (optParams -> .)

    optParams                      shift and go to state 579

state 467

    (106) types -> T_NUMERIC . optParams
    (119) optParams -> . S_PARIZQ literalList S_PARDER
    (120) optParams -> .

    S_PARIZQ        shift and go to state 580
    S_PARDER        reduce using rule 120 (optParams -> .)
    S_COMA          reduce using rule 120 (optParams -> .)
    R_AS            reduce using rule 120 (optParams -> .)
    R_DEFAULT       reduce using rule 120 (optParams -> .)
    R_NOT           reduce using rule 120 (optParams -> .)
    R_NULL          reduce using rule 120 (optParams -> .)
    R_PRIMARY       reduce using rule 120 (optParams -> .)
    R_REFERENCES    reduce using rule 120 (optParams -> .)
    R_CONSTRAINT    reduce using rule 120 (optParams -> .)
    R_UNIQUE        reduce using rule 120 (optParams -> .)
    R_CHECK         reduce using rule 120 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 120 (optParams -> .)
    S_DOSPUNTOS     reduce using rule 120 (optParams -> .)
    S_IGUAL         reduce using rule 120 (optParams -> .)

    optParams                      shift and go to state 581

state 468

    (107) types -> T_VARCHAR . optParams
    (119) optParams -> . S_PARIZQ literalList S_PARDER
    (120) optParams -> .

    S_PARIZQ        shift and go to state 580
    S_PARDER        reduce using rule 120 (optParams -> .)
    S_COMA          reduce using rule 120 (optParams -> .)
    R_AS            reduce using rule 120 (optParams -> .)
    R_DEFAULT       reduce using rule 120 (optParams -> .)
    R_NOT           reduce using rule 120 (optParams -> .)
    R_NULL          reduce using rule 120 (optParams -> .)
    R_PRIMARY       reduce using rule 120 (optParams -> .)
    R_REFERENCES    reduce using rule 120 (optParams -> .)
    R_CONSTRAINT    reduce using rule 120 (optParams -> .)
    R_UNIQUE        reduce using rule 120 (optParams -> .)
    R_CHECK         reduce using rule 120 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 120 (optParams -> .)
    S_DOSPUNTOS     reduce using rule 120 (optParams -> .)
    S_IGUAL         reduce using rule 120 (optParams -> .)

    optParams                      shift and go to state 582

state 469

    (108) types -> T_CHARACTER . optParams
    (110) types -> T_CHARACTER . T_VARYING optParams
    (119) optParams -> . S_PARIZQ literalList S_PARDER
    (120) optParams -> .

    T_VARYING       shift and go to state 584
    S_PARIZQ        shift and go to state 580
    S_PARDER        reduce using rule 120 (optParams -> .)
    S_COMA          reduce using rule 120 (optParams -> .)
    R_AS            reduce using rule 120 (optParams -> .)
    R_DEFAULT       reduce using rule 120 (optParams -> .)
    R_NOT           reduce using rule 120 (optParams -> .)
    R_NULL          reduce using rule 120 (optParams -> .)
    R_PRIMARY       reduce using rule 120 (optParams -> .)
    R_REFERENCES    reduce using rule 120 (optParams -> .)
    R_CONSTRAINT    reduce using rule 120 (optParams -> .)
    R_UNIQUE        reduce using rule 120 (optParams -> .)
    R_CHECK         reduce using rule 120 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 120 (optParams -> .)
    S_DOSPUNTOS     reduce using rule 120 (optParams -> .)
    S_IGUAL         reduce using rule 120 (optParams -> .)

    optParams                      shift and go to state 583

state 470

    (109) types -> T_CHAR . optParams
    (119) optParams -> . S_PARIZQ literalList S_PARDER
    (120) optParams -> .

    S_PARIZQ        shift and go to state 580
    S_PARDER        reduce using rule 120 (optParams -> .)
    S_COMA          reduce using rule 120 (optParams -> .)
    R_AS            reduce using rule 120 (optParams -> .)
    R_DEFAULT       reduce using rule 120 (optParams -> .)
    R_NOT           reduce using rule 120 (optParams -> .)
    R_NULL          reduce using rule 120 (optParams -> .)
    R_PRIMARY       reduce using rule 120 (optParams -> .)
    R_REFERENCES    reduce using rule 120 (optParams -> .)
    R_CONSTRAINT    reduce using rule 120 (optParams -> .)
    R_UNIQUE        reduce using rule 120 (optParams -> .)
    R_CHECK         reduce using rule 120 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 120 (optParams -> .)
    S_DOSPUNTOS     reduce using rule 120 (optParams -> .)
    S_IGUAL         reduce using rule 120 (optParams -> .)

    optParams                      shift and go to state 585

state 471

    (111) types -> R_INTERVAL . intervalFields
    (112) intervalFields -> . R_YEAR
    (113) intervalFields -> . R_MONTH
    (114) intervalFields -> . R_DAY
    (115) intervalFields -> . R_HOUR
    (116) intervalFields -> . R_MINUTE
    (117) intervalFields -> . R_SECOND
    (118) intervalFields -> .

    R_YEAR          shift and go to state 587
    R_MONTH         shift and go to state 588
    R_DAY           shift and go to state 589
    R_HOUR          shift and go to state 590
    R_MINUTE        shift and go to state 591
    R_SECOND        shift and go to state 592
    S_PARDER        reduce using rule 118 (intervalFields -> .)
    S_COMA          reduce using rule 118 (intervalFields -> .)
    R_AS            reduce using rule 118 (intervalFields -> .)
    R_DEFAULT       reduce using rule 118 (intervalFields -> .)
    R_NOT           reduce using rule 118 (intervalFields -> .)
    R_NULL          reduce using rule 118 (intervalFields -> .)
    R_PRIMARY       reduce using rule 118 (intervalFields -> .)
    R_REFERENCES    reduce using rule 118 (intervalFields -> .)
    R_CONSTRAINT    reduce using rule 118 (intervalFields -> .)
    R_UNIQUE        reduce using rule 118 (intervalFields -> .)
    R_CHECK         reduce using rule 118 (intervalFields -> .)
    S_PUNTOCOMA     reduce using rule 118 (intervalFields -> .)
    S_DOSPUNTOS     reduce using rule 118 (intervalFields -> .)
    S_IGUAL         reduce using rule 118 (intervalFields -> .)

    intervalFields                 shift and go to state 586

state 472

    (399) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER . returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (405) returnsStmt -> . R_RETURNS types
    (406) returnsStmt -> .

    R_RETURNS       shift and go to state 475
    R_AS            reduce using rule 406 (returnsStmt -> .)

    returnsStmt                    shift and go to state 593

state 473

    (402) params_list -> params_list S_COMA . param_item
    (404) param_item -> . ID types

    ID              shift and go to state 347

    param_item                     shift and go to state 594

state 474

    (400) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt . R_AS S_DOLAR S_DOLAR bloqueFunction

    R_AS            shift and go to state 595


state 475

    (405) returnsStmt -> R_RETURNS . types
    (93) types -> . ID
    (94) types -> . T_SMALLINT
    (95) types -> . T_INTEGER
    (96) types -> . T_BIGINT
    (97) types -> . T_REAL
    (98) types -> . T_DOUBLE T_PRECISION
    (99) types -> . T_MONEY
    (100) types -> . T_TEXT
    (101) types -> . T_BOOLEAN
    (102) types -> . R_TIMESTAMP
    (103) types -> . T_DATE
    (104) types -> . T_TIME
    (105) types -> . T_DECIMAL optParams
    (106) types -> . T_NUMERIC optParams
    (107) types -> . T_VARCHAR optParams
    (108) types -> . T_CHARACTER optParams
    (109) types -> . T_CHAR optParams
    (110) types -> . T_CHARACTER T_VARYING optParams
    (111) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 453
    T_SMALLINT      shift and go to state 455
    T_INTEGER       shift and go to state 456
    T_BIGINT        shift and go to state 457
    T_REAL          shift and go to state 458
    T_DOUBLE        shift and go to state 459
    T_MONEY         shift and go to state 460
    T_TEXT          shift and go to state 461
    T_BOOLEAN       shift and go to state 462
    R_TIMESTAMP     shift and go to state 463
    T_DATE          shift and go to state 464
    T_TIME          shift and go to state 465
    T_DECIMAL       shift and go to state 466
    T_NUMERIC       shift and go to state 467
    T_VARCHAR       shift and go to state 468
    T_CHARACTER     shift and go to state 469
    T_CHAR          shift and go to state 470
    R_INTERVAL      shift and go to state 471

    types                          shift and go to state 596

state 476

    (434) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list . S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (402) params_list -> params_list . S_COMA param_item

    S_PARDER        shift and go to state 597
    S_COMA          shift and go to state 473


state 477

    (435) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER . languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (442) languageProcedure -> . R_LANGUAGE ID
    (443) languageProcedure -> .

    R_LANGUAGE      shift and go to state 599
    R_AS            reduce using rule 443 (languageProcedure -> .)

    languageProcedure              shift and go to state 598

state 478

    (60) createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner . createMode
    (73) createMode -> . R_MODE INTEGER
    (74) createMode -> . R_MODE S_IGUAL INTEGER
    (75) createMode -> .

    R_MODE          shift and go to state 601
    S_PUNTOCOMA     reduce using rule 75 (createMode -> .)

    createMode                     shift and go to state 600

state 479

    (68) createOwner -> R_OWNER . ID
    (69) createOwner -> R_OWNER . STRING
    (70) createOwner -> R_OWNER . S_IGUAL ID
    (71) createOwner -> R_OWNER . S_IGUAL STRING

    ID              shift and go to state 602
    STRING          shift and go to state 603
    S_IGUAL         shift and go to state 604


state 480

    (48) createOpts -> unique_index R_INDEX ID R_ON ID . using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl
    (51) using_hash_index -> . R_USING R_HASH
    (52) using_hash_index -> .

    R_USING         shift and go to state 606
    S_PARIZQ        reduce using rule 52 (using_hash_index -> .)

    using_hash_index               shift and go to state 605

state 481

    (59) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList . S_PARDER inheritsOpt
    (76) createTableList -> createTableList . S_COMA createTable

    S_PARDER        shift and go to state 607
    S_COMA          shift and go to state 608


state 482

    (77) createTableList -> createTable .

    S_PARDER        reduce using rule 77 (createTableList -> createTable .)
    S_COMA          reduce using rule 77 (createTableList -> createTable .)


state 483

    (78) createTable -> ID . types createColumns
    (93) types -> . ID
    (94) types -> . T_SMALLINT
    (95) types -> . T_INTEGER
    (96) types -> . T_BIGINT
    (97) types -> . T_REAL
    (98) types -> . T_DOUBLE T_PRECISION
    (99) types -> . T_MONEY
    (100) types -> . T_TEXT
    (101) types -> . T_BOOLEAN
    (102) types -> . R_TIMESTAMP
    (103) types -> . T_DATE
    (104) types -> . T_TIME
    (105) types -> . T_DECIMAL optParams
    (106) types -> . T_NUMERIC optParams
    (107) types -> . T_VARCHAR optParams
    (108) types -> . T_CHARACTER optParams
    (109) types -> . T_CHAR optParams
    (110) types -> . T_CHARACTER T_VARYING optParams
    (111) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 453
    T_SMALLINT      shift and go to state 455
    T_INTEGER       shift and go to state 456
    T_BIGINT        shift and go to state 457
    T_REAL          shift and go to state 458
    T_DOUBLE        shift and go to state 459
    T_MONEY         shift and go to state 460
    T_TEXT          shift and go to state 461
    T_BOOLEAN       shift and go to state 462
    R_TIMESTAMP     shift and go to state 463
    T_DATE          shift and go to state 464
    T_TIME          shift and go to state 465
    T_DECIMAL       shift and go to state 466
    T_NUMERIC       shift and go to state 467
    T_VARCHAR       shift and go to state 468
    T_CHARACTER     shift and go to state 469
    T_CHAR          shift and go to state 470
    R_INTERVAL      shift and go to state 471

    types                          shift and go to state 609

state 484

    (79) createTable -> createConstraint .

    S_PARDER        reduce using rule 79 (createTable -> createConstraint .)
    S_COMA          reduce using rule 79 (createTable -> createConstraint .)


state 485

    (80) createTable -> createUnique .

    S_PARDER        reduce using rule 80 (createTable -> createUnique .)
    S_COMA          reduce using rule 80 (createTable -> createUnique .)


state 486

    (81) createTable -> createPrimary .

    S_PARDER        reduce using rule 81 (createTable -> createPrimary .)
    S_COMA          reduce using rule 81 (createTable -> createPrimary .)


state 487

    (82) createTable -> createForeign .

    S_PARDER        reduce using rule 82 (createTable -> createForeign .)
    S_COMA          reduce using rule 82 (createTable -> createForeign .)


state 488

    (85) createConstraint -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER
    (88) createForeign -> constrName . R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_CHECK         shift and go to state 500
    R_FOREIGN       shift and go to state 501


state 489

    (86) createUnique -> R_UNIQUE . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 610


state 490

    (63) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM . S_PARIZQ paramsList S_PARDER

    S_PARIZQ        shift and go to state 611


state 491

    (283) alterDb -> R_RENAME R_TO idOrString .

    S_PUNTOCOMA     reduce using rule 283 (alterDb -> R_RENAME R_TO idOrString .)


state 492

    (284) alterDb -> R_OWNER R_TO ownerOPts .

    S_PUNTOCOMA     reduce using rule 284 (alterDb -> R_OWNER R_TO ownerOPts .)


state 493

    (285) ownerOPts -> idOrString .

    S_PUNTOCOMA     reduce using rule 285 (ownerOPts -> idOrString .)


state 494

    (286) ownerOPts -> R_CURRENT_USER .

    S_PUNTOCOMA     reduce using rule 286 (ownerOPts -> R_CURRENT_USER .)


state 495

    (287) ownerOPts -> R_SESSION_USER .

    S_PUNTOCOMA     reduce using rule 287 (ownerOPts -> R_SESSION_USER .)


state 496

    (299) alterAlter -> R_COLUMN ID . R_SET nullOpt
    (300) alterAlter -> R_COLUMN ID . R_SET defaultVal
    (301) alterAlter -> R_COLUMN ID . R_TYPE types

    R_SET           shift and go to state 612
    R_TYPE          shift and go to state 613


state 497

    (288) alterTableList -> alterTableList S_COMA alterTable .

    S_COMA          reduce using rule 288 (alterTableList -> alterTableList S_COMA alterTable .)
    S_PUNTOCOMA     reduce using rule 288 (alterTableList -> alterTableList S_COMA alterTable .)


state 498

    (294) alterAdd -> R_COLUMN ID . types
    (93) types -> . ID
    (94) types -> . T_SMALLINT
    (95) types -> . T_INTEGER
    (96) types -> . T_BIGINT
    (97) types -> . T_REAL
    (98) types -> . T_DOUBLE T_PRECISION
    (99) types -> . T_MONEY
    (100) types -> . T_TEXT
    (101) types -> . T_BOOLEAN
    (102) types -> . R_TIMESTAMP
    (103) types -> . T_DATE
    (104) types -> . T_TIME
    (105) types -> . T_DECIMAL optParams
    (106) types -> . T_NUMERIC optParams
    (107) types -> . T_VARCHAR optParams
    (108) types -> . T_CHARACTER optParams
    (109) types -> . T_CHAR optParams
    (110) types -> . T_CHARACTER T_VARYING optParams
    (111) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 453
    T_SMALLINT      shift and go to state 455
    T_INTEGER       shift and go to state 456
    T_BIGINT        shift and go to state 457
    T_REAL          shift and go to state 458
    T_DOUBLE        shift and go to state 459
    T_MONEY         shift and go to state 460
    T_TEXT          shift and go to state 461
    T_BOOLEAN       shift and go to state 462
    R_TIMESTAMP     shift and go to state 463
    T_DATE          shift and go to state 464
    T_TIME          shift and go to state 465
    T_DECIMAL       shift and go to state 466
    T_NUMERIC       shift and go to state 467
    T_VARCHAR       shift and go to state 468
    T_CHARACTER     shift and go to state 469
    T_CHAR          shift and go to state 470
    R_INTERVAL      shift and go to state 471

    types                          shift and go to state 614

state 499

    (298) alterAdd -> constrName R_UNIQUE . S_PARIZQ ID S_PARDER

    S_PARIZQ        shift and go to state 615


state 500

    (85) createConstraint -> constrName R_CHECK . S_PARIZQ booleanCheck S_PARDER

    S_PARIZQ        shift and go to state 616


state 501

    (88) createForeign -> constrName R_FOREIGN . R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_KEY           shift and go to state 617


state 502

    (87) createPrimary -> R_PRIMARY R_KEY . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 618


state 503

    (89) constrName -> R_CONSTRAINT ID .

    R_UNIQUE        reduce using rule 89 (constrName -> R_CONSTRAINT ID .)
    R_CHECK         reduce using rule 89 (constrName -> R_CONSTRAINT ID .)
    R_FOREIGN       reduce using rule 89 (constrName -> R_CONSTRAINT ID .)


state 504

    (302) alterDrop -> R_CONSTRAINT ID .

    S_COMA          reduce using rule 302 (alterDrop -> R_CONSTRAINT ID .)
    S_PUNTOCOMA     reduce using rule 302 (alterDrop -> R_CONSTRAINT ID .)


state 505

    (303) alterDrop -> R_COLUMN ID .

    S_COMA          reduce using rule 303 (alterDrop -> R_COLUMN ID .)
    S_PUNTOCOMA     reduce using rule 303 (alterDrop -> R_COLUMN ID .)


state 506

    (304) alterRename -> R_COLUMN ID . R_TO ID

    R_TO            shift and go to state 619


state 507

    (281) alterStmt -> R_ALTER R_INDEX ifExists ID R_ALTER ID . ID
    (282) alterStmt -> R_ALTER R_INDEX ifExists ID R_ALTER ID . INTEGER

    ID              shift and go to state 620
    INTEGER         shift and go to state 621


state 508

    (308) dropStmt -> R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER .

    S_PUNTOCOMA     reduce using rule 308 (dropStmt -> R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER .)


state 509

    (309) dropStmt -> R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER .

    S_PUNTOCOMA     reduce using rule 309 (dropStmt -> R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER .)


state 510

    (382) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ . paramsList S_PARDER
    (173) paramsList -> . paramsList S_COMA datatype
    (174) paramsList -> . datatype
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    paramsList                     shift and go to state 622
    datatype                       shift and go to state 281
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 511

    (383) paramsColumn -> S_PARIZQ idList S_PARDER .

    R_VALUES        reduce using rule 383 (paramsColumn -> S_PARIZQ idList S_PARDER .)


state 512

    (91) idList -> idList S_COMA . ID

    ID              shift and go to state 623


state 513

    (386) updateCols -> updateCols S_COMA updateVals .

    S_COMA          reduce using rule 386 (updateCols -> updateCols S_COMA updateVals .)
    R_WHERE         reduce using rule 386 (updateCols -> updateCols S_COMA updateVals .)
    S_PUNTOCOMA     reduce using rule 386 (updateCols -> updateCols S_COMA updateVals .)


state 514

    (388) updateVals -> ID S_IGUAL updateExp .

    S_COMA          reduce using rule 388 (updateVals -> ID S_IGUAL updateExp .)
    R_WHERE         reduce using rule 388 (updateVals -> ID S_IGUAL updateExp .)
    S_PUNTOCOMA     reduce using rule 388 (updateVals -> ID S_IGUAL updateExp .)


state 515

    (389) updateExp -> datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    S_COMA          reduce using rule 389 (updateExp -> datatype .)
    R_WHERE         reduce using rule 389 (updateExp -> datatype .)
    S_PUNTOCOMA     reduce using rule 389 (updateExp -> datatype .)
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182


state 516

    (390) updateExp -> R_DEFAULT .

    S_COMA          reduce using rule 390 (updateExp -> R_DEFAULT .)
    R_WHERE         reduce using rule 390 (updateExp -> R_DEFAULT .)
    S_PUNTOCOMA     reduce using rule 390 (updateExp -> R_DEFAULT .)


state 517

    (339) fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .

    R_SET           reduce using rule 339 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_COMA          reduce using rule 339 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_WHERE         reduce using rule 339 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_PUNTOCOMA     reduce using rule 339 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_NATURAL       reduce using rule 339 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_INNER         reduce using rule 339 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_LEFT          reduce using rule 339 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_RIGHT         reduce using rule 339 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_FULL          reduce using rule 339 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_GROUP         reduce using rule 339 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_ORDER         reduce using rule 339 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_LIMIT         reduce using rule 339 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_UNION         reduce using rule 339 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_INTERSECT     reduce using rule 339 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_EXCEPT        reduce using rule 339 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_PARDER        reduce using rule 339 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)


state 518

    (315) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl . orderByCl limitCl
    (365) orderByCl -> . R_ORDER R_BY orderList
    (366) orderByCl -> .

    R_ORDER         shift and go to state 520
    R_LIMIT         reduce using rule 366 (orderByCl -> .)
    S_PUNTOCOMA     reduce using rule 366 (orderByCl -> .)
    R_UNION         reduce using rule 366 (orderByCl -> .)
    R_INTERSECT     reduce using rule 366 (orderByCl -> .)
    R_EXCEPT        reduce using rule 366 (orderByCl -> .)
    S_PARDER        reduce using rule 366 (orderByCl -> .)

    orderByCl                      shift and go to state 624

state 519

    (316) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl . limitCl
    (377) limitCl -> . R_LIMIT INTEGER offsetLimit
    (378) limitCl -> . R_LIMIT R_ALL offsetLimit
    (379) limitCl -> .

    R_LIMIT         shift and go to state 626
    S_PUNTOCOMA     reduce using rule 379 (limitCl -> .)
    R_UNION         reduce using rule 379 (limitCl -> .)
    R_INTERSECT     reduce using rule 379 (limitCl -> .)
    R_EXCEPT        reduce using rule 379 (limitCl -> .)
    S_PARDER        reduce using rule 379 (limitCl -> .)

    limitCl                        shift and go to state 625

state 520

    (365) orderByCl -> R_ORDER . R_BY orderList

    R_BY            shift and go to state 627


state 521

    (357) groupByCl -> R_GROUP R_BY . groupList havingCl
    (359) groupList -> . groupList S_COMA columnName
    (360) groupList -> . groupList S_COMA INTEGER
    (361) groupList -> . columnName
    (362) groupList -> . INTEGER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 630
    ID              shift and go to state 524

    groupList                      shift and go to state 628
    columnName                     shift and go to state 629

state 522

    (317) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl . orderByCl limitCl
    (318) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl . limitCl
    (365) orderByCl -> . R_ORDER R_BY orderList
    (366) orderByCl -> .
    (377) limitCl -> . R_LIMIT INTEGER offsetLimit
    (378) limitCl -> . R_LIMIT R_ALL offsetLimit
    (379) limitCl -> .

  ! shift/reduce conflict for R_LIMIT resolved as shift
  ! reduce/reduce conflict for S_PUNTOCOMA resolved using rule 366 (orderByCl -> .)
  ! reduce/reduce conflict for R_UNION resolved using rule 366 (orderByCl -> .)
  ! reduce/reduce conflict for R_INTERSECT resolved using rule 366 (orderByCl -> .)
  ! reduce/reduce conflict for R_EXCEPT resolved using rule 366 (orderByCl -> .)
  ! reduce/reduce conflict for S_PARDER resolved using rule 366 (orderByCl -> .)
    R_ORDER         shift and go to state 520
    S_PUNTOCOMA     reduce using rule 366 (orderByCl -> .)
    R_UNION         reduce using rule 366 (orderByCl -> .)
    R_INTERSECT     reduce using rule 366 (orderByCl -> .)
    R_EXCEPT        reduce using rule 366 (orderByCl -> .)
    S_PARDER        reduce using rule 366 (orderByCl -> .)
    R_LIMIT         shift and go to state 626

  ! R_LIMIT         [ reduce using rule 366 (orderByCl -> .) ]
  ! S_PUNTOCOMA     [ reduce using rule 379 (limitCl -> .) ]
  ! R_UNION         [ reduce using rule 379 (limitCl -> .) ]
  ! R_INTERSECT     [ reduce using rule 379 (limitCl -> .) ]
  ! R_EXCEPT        [ reduce using rule 379 (limitCl -> .) ]
  ! S_PARDER        [ reduce using rule 379 (limitCl -> .) ]

    orderByCl                      shift and go to state 631
    limitCl                        shift and go to state 632

state 523

    (343) joinCl -> joinOpt R_JOIN columnName . optAlias R_ON expBool
    (344) joinCl -> joinOpt R_JOIN columnName . optAlias R_USING S_PARIZQ nameList S_PARDER
    (333) optAlias -> . R_AS idOrString
    (334) optAlias -> . idOrString
    (335) optAlias -> .
    (43) idOrString -> . ID
    (44) idOrString -> . STRING
    (45) idOrString -> . CHARACTER

    R_AS            shift and go to state 162
    R_ON            reduce using rule 335 (optAlias -> .)
    R_USING         reduce using rule 335 (optAlias -> .)
    ID              shift and go to state 144
    STRING          shift and go to state 145
    CHARACTER       shift and go to state 146

    optAlias                       shift and go to state 633
    idOrString                     shift and go to state 163

state 524

    (262) columnName -> ID .
    (263) columnName -> ID . S_PUNTO ID

    R_AS            reduce using rule 262 (columnName -> ID .)
    ID              reduce using rule 262 (columnName -> ID .)
    STRING          reduce using rule 262 (columnName -> ID .)
    CHARACTER       reduce using rule 262 (columnName -> ID .)
    R_ON            reduce using rule 262 (columnName -> ID .)
    R_USING         reduce using rule 262 (columnName -> ID .)
    S_PARDER        reduce using rule 262 (columnName -> ID .)
    S_COMA          reduce using rule 262 (columnName -> ID .)
    R_HAVING        reduce using rule 262 (columnName -> ID .)
    R_ORDER         reduce using rule 262 (columnName -> ID .)
    R_LIMIT         reduce using rule 262 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 262 (columnName -> ID .)
    R_UNION         reduce using rule 262 (columnName -> ID .)
    R_INTERSECT     reduce using rule 262 (columnName -> ID .)
    R_EXCEPT        reduce using rule 262 (columnName -> ID .)
    R_NATURAL       reduce using rule 262 (columnName -> ID .)
    R_INNER         reduce using rule 262 (columnName -> ID .)
    R_LEFT          reduce using rule 262 (columnName -> ID .)
    R_RIGHT         reduce using rule 262 (columnName -> ID .)
    R_FULL          reduce using rule 262 (columnName -> ID .)
    R_WHERE         reduce using rule 262 (columnName -> ID .)
    R_GROUP         reduce using rule 262 (columnName -> ID .)
    R_ASC           reduce using rule 262 (columnName -> ID .)
    R_DESC          reduce using rule 262 (columnName -> ID .)
    R_NULL          reduce using rule 262 (columnName -> ID .)
    S_PUNTO         shift and go to state 230


state 525

    (345) joinCl -> R_NATURAL joinOpt R_JOIN . columnName optAlias
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 524

    columnName                     shift and go to state 634

state 526

    (173) paramsList -> paramsList S_COMA datatype .
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        reduce using rule 173 (paramsList -> paramsList S_COMA datatype .)
    S_COMA          reduce using rule 173 (paramsList -> paramsList S_COMA datatype .)
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182


state 527

    (246) boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 246 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)


state 528

    (247) boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 635
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 529

    (206) expComp -> datatype R_NOT R_BETWEEN datatype R_AND . datatype
    (225) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 636
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 530

    (218) expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 637
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 531

    (219) expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 638
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 532

    (220) expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 639
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 533

    (221) expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 640
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 534

    (223) expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 641
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 535

    (203) expComp -> datatype R_IS R_DISTINCT R_FROM datatype .
    (227) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME

    R_AND           reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_OR            reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_IS            reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_AS            reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    ID              reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    STRING          reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    CHARACTER       reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_COMA          reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_FROM          reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_PUNTOCOMA     reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_UNION         reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_INTERSECT     reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_EXCEPT        reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_PARDER        reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_GROUP         reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_ORDER         reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_LIMIT         reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_THEN          reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_NATURAL       reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_INNER         reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_LEFT          reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_RIGHT         reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_FULL          reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_WHERE         reduce using rule 203 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296

    subqValues                     shift and go to state 642

state 536

    (204) expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM . datatype
    (228) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 643
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 537

    (230) expSubq -> datatype R_IS R_NOT R_NULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 644


state 538

    (234) expSubq -> datatype R_IS R_NOT R_TRUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 645


state 539

    (236) expSubq -> datatype R_IS R_NOT R_FALSE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 646


state 540

    (238) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 647


state 541

    (229) expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 648

state 542

    (233) expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 649

state 543

    (235) expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 650

state 544

    (237) expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 651

state 545

    (205) expComp -> datatype R_BETWEEN datatype R_AND datatype .
    (224) expSubq -> datatype R_BETWEEN datatype R_AND datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME

    R_AND           reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_OR            reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_IS            reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_AS            reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    ID              reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    STRING          reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    CHARACTER       reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_COMA          reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_FROM          reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_UNION         reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_PARDER        reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_GROUP         reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_ORDER         reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_LIMIT         reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_THEN          reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_NATURAL       reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_INNER         reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_LEFT          reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_RIGHT         reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_FULL          reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_WHERE         reduce using rule 205 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296

    subqValues                     shift and go to state 652

state 546

    (207) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND . datatype
    (226) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    datatype                       shift and go to state 653
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 547

    (231) expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 654
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 548

    (232) expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 655
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 549

    (222) expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 656
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 550

    (185) caseWhen -> R_WHEN expBool R_THEN literal .

    R_ELSE          reduce using rule 185 (caseWhen -> R_WHEN expBool R_THEN literal .)
    R_WHEN          reduce using rule 185 (caseWhen -> R_WHEN expBool R_THEN literal .)
    R_END           reduce using rule 185 (caseWhen -> R_WHEN expBool R_THEN literal .)


state 551

    (145) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp . S_PARDER

    S_PARDER        shift and go to state 657


state 552

    (146) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName . S_PARDER

    S_PARDER        shift and go to state 658


state 553

    (155) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource . S_PARDER

    S_PARDER        shift and go to state 659


state 554

    (156) dateSource -> R_TIMESTAMP . STRING

    STRING          shift and go to state 660


state 555

    (157) dateSource -> T_DATE . STRING

    STRING          shift and go to state 661


state 556

    (158) dateSource -> T_TIME . STRING

    STRING          shift and go to state 662


state 557

    (159) dateSource -> R_INTERVAL . STRING

    STRING          shift and go to state 663


state 558

    (160) dateSource -> R_NOW . S_PARIZQ S_PARDER

    S_PARIZQ        shift and go to state 664


state 559

    (19) ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_ .

    R_END           reduce using rule 19 (ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_ .)


state 560

    (26) List_body -> List_body body .

    R_ELSE          reduce using rule 26 (List_body -> List_body body .)
    R_CREATE        reduce using rule 26 (List_body -> List_body body .)
    R_SHOW          reduce using rule 26 (List_body -> List_body body .)
    R_ALTER         reduce using rule 26 (List_body -> List_body body .)
    R_DROP          reduce using rule 26 (List_body -> List_body body .)
    R_INSERT        reduce using rule 26 (List_body -> List_body body .)
    R_UPDATE        reduce using rule 26 (List_body -> List_body body .)
    R_DELETE        reduce using rule 26 (List_body -> List_body body .)
    R_TRUNCATE      reduce using rule 26 (List_body -> List_body body .)
    R_USE           reduce using rule 26 (List_body -> List_body body .)
    R_SELECT        reduce using rule 26 (List_body -> List_body body .)
    S_PARIZQ        reduce using rule 26 (List_body -> List_body body .)
    R_EXECUTE       reduce using rule 26 (List_body -> List_body body .)
    R_IF            reduce using rule 26 (List_body -> List_body body .)
    ID              reduce using rule 26 (List_body -> List_body body .)
    R_ELSIF         reduce using rule 26 (List_body -> List_body body .)
    R_END           reduce using rule 26 (List_body -> List_body body .)


state 561

    (20) else_ -> R_ELSE . List_body
    (26) List_body -> . List_body body
    (27) List_body -> . body
    (28) body -> . createStmt S_PUNTOCOMA
    (29) body -> . showStmt S_PUNTOCOMA
    (30) body -> . alterStmt S_PUNTOCOMA
    (31) body -> . dropStmt S_PUNTOCOMA
    (32) body -> . insertStmt S_PUNTOCOMA
    (33) body -> . updateStmt S_PUNTOCOMA
    (34) body -> . deleteStmt S_PUNTOCOMA
    (35) body -> . truncateStmt S_PUNTOCOMA
    (36) body -> . useStmt S_PUNTOCOMA
    (37) body -> . selectStmt S_PUNTOCOMA
    (38) body -> . functionStmt
    (39) body -> . procedureStmt
    (40) body -> . executePL S_PUNTOCOMA
    (41) body -> . ifStmt R_END R_IF S_PUNTOCOMA
    (42) body -> . asignacionStmt S_PUNTOCOMA
    (46) createStmt -> . R_CREATE createBody
    (395) showStmt -> . R_SHOW R_DATABASES likeOpt
    (279) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (280) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (281) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID ID
    (282) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER
    (305) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (306) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (307) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString
    (308) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER
    (309) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (310) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (382) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (385) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (391) deleteStmt -> . R_DELETE fromCl whereCl
    (392) truncateStmt -> . R_TRUNCATE tableOpt ID
    (398) useStmt -> . R_USE ID
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams
    (399) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (400) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (434) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (444) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
    (432) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (433) asignacionStmt -> . ID S_IGUAL expresion

    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 24
    R_INSERT        shift and go to state 26
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18
    ID              shift and go to state 23

    List_body                      shift and go to state 665
    body                           shift and go to state 437
    createStmt                     shift and go to state 438
    showStmt                       shift and go to state 439
    alterStmt                      shift and go to state 440
    dropStmt                       shift and go to state 441
    insertStmt                     shift and go to state 442
    updateStmt                     shift and go to state 443
    deleteStmt                     shift and go to state 444
    truncateStmt                   shift and go to state 445
    useStmt                        shift and go to state 446
    selectStmt                     shift and go to state 447
    functionStmt                   shift and go to state 448
    procedureStmt                  shift and go to state 449
    executePL                      shift and go to state 450
    ifStmt                         shift and go to state 451
    asignacionStmt                 shift and go to state 452

state 562

    (21) else_ -> Lista_elsif_ .
    (23) Lista_elsif_ -> Lista_elsif_ . elsif_
    (25) elsif_ -> . R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body

    R_END           reduce using rule 21 (else_ -> Lista_elsif_ .)
    R_ELSIF         shift and go to state 564

    elsif_                         shift and go to state 666

state 563

    (24) Lista_elsif_ -> elsif_ .

    R_ELSIF         reduce using rule 24 (Lista_elsif_ -> elsif_ .)
    R_END           reduce using rule 24 (Lista_elsif_ -> elsif_ .)


state 564

    (25) elsif_ -> R_ELSIF . S_PARIZQ expresion S_PARDER R_THEN List_body

    S_PARIZQ        shift and go to state 667


state 565

    (28) body -> createStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    ID              reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_END           reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)


state 566

    (29) body -> showStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    ID              reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_END           reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)


state 567

    (30) body -> alterStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    ID              reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_END           reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)


state 568

    (31) body -> dropStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    ID              reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_END           reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)


state 569

    (32) body -> insertStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    ID              reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_END           reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)


state 570

    (33) body -> updateStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    ID              reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_END           reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)


state 571

    (34) body -> deleteStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    ID              reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_END           reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)


state 572

    (35) body -> truncateStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    ID              reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_END           reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)


state 573

    (36) body -> useStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    ID              reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_END           reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)


state 574

    (37) body -> selectStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    ID              reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_END           reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)


state 575

    (40) body -> executePL S_PUNTOCOMA .

    R_ELSE          reduce using rule 40 (body -> executePL S_PUNTOCOMA .)
    R_CREATE        reduce using rule 40 (body -> executePL S_PUNTOCOMA .)
    R_SHOW          reduce using rule 40 (body -> executePL S_PUNTOCOMA .)
    R_ALTER         reduce using rule 40 (body -> executePL S_PUNTOCOMA .)
    R_DROP          reduce using rule 40 (body -> executePL S_PUNTOCOMA .)
    R_INSERT        reduce using rule 40 (body -> executePL S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 40 (body -> executePL S_PUNTOCOMA .)
    R_DELETE        reduce using rule 40 (body -> executePL S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 40 (body -> executePL S_PUNTOCOMA .)
    R_USE           reduce using rule 40 (body -> executePL S_PUNTOCOMA .)
    R_SELECT        reduce using rule 40 (body -> executePL S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 40 (body -> executePL S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 40 (body -> executePL S_PUNTOCOMA .)
    R_IF            reduce using rule 40 (body -> executePL S_PUNTOCOMA .)
    ID              reduce using rule 40 (body -> executePL S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 40 (body -> executePL S_PUNTOCOMA .)
    R_END           reduce using rule 40 (body -> executePL S_PUNTOCOMA .)


state 576

    (41) body -> ifStmt R_END . R_IF S_PUNTOCOMA

    R_IF            shift and go to state 668


state 577

    (42) body -> asignacionStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 42 (body -> asignacionStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 42 (body -> asignacionStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 42 (body -> asignacionStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 42 (body -> asignacionStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 42 (body -> asignacionStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 42 (body -> asignacionStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 42 (body -> asignacionStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 42 (body -> asignacionStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 42 (body -> asignacionStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 42 (body -> asignacionStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 42 (body -> asignacionStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 42 (body -> asignacionStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 42 (body -> asignacionStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 42 (body -> asignacionStmt S_PUNTOCOMA .)
    ID              reduce using rule 42 (body -> asignacionStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 42 (body -> asignacionStmt S_PUNTOCOMA .)
    R_END           reduce using rule 42 (body -> asignacionStmt S_PUNTOCOMA .)


state 578

    (98) types -> T_DOUBLE T_PRECISION .

    S_PARDER        reduce using rule 98 (types -> T_DOUBLE T_PRECISION .)
    S_COMA          reduce using rule 98 (types -> T_DOUBLE T_PRECISION .)
    R_AS            reduce using rule 98 (types -> T_DOUBLE T_PRECISION .)
    R_DEFAULT       reduce using rule 98 (types -> T_DOUBLE T_PRECISION .)
    R_NOT           reduce using rule 98 (types -> T_DOUBLE T_PRECISION .)
    R_NULL          reduce using rule 98 (types -> T_DOUBLE T_PRECISION .)
    R_PRIMARY       reduce using rule 98 (types -> T_DOUBLE T_PRECISION .)
    R_REFERENCES    reduce using rule 98 (types -> T_DOUBLE T_PRECISION .)
    R_CONSTRAINT    reduce using rule 98 (types -> T_DOUBLE T_PRECISION .)
    R_UNIQUE        reduce using rule 98 (types -> T_DOUBLE T_PRECISION .)
    R_CHECK         reduce using rule 98 (types -> T_DOUBLE T_PRECISION .)
    S_PUNTOCOMA     reduce using rule 98 (types -> T_DOUBLE T_PRECISION .)
    S_DOSPUNTOS     reduce using rule 98 (types -> T_DOUBLE T_PRECISION .)
    S_IGUAL         reduce using rule 98 (types -> T_DOUBLE T_PRECISION .)


state 579

    (105) types -> T_DECIMAL optParams .

    S_PARDER        reduce using rule 105 (types -> T_DECIMAL optParams .)
    S_COMA          reduce using rule 105 (types -> T_DECIMAL optParams .)
    R_AS            reduce using rule 105 (types -> T_DECIMAL optParams .)
    R_DEFAULT       reduce using rule 105 (types -> T_DECIMAL optParams .)
    R_NOT           reduce using rule 105 (types -> T_DECIMAL optParams .)
    R_NULL          reduce using rule 105 (types -> T_DECIMAL optParams .)
    R_PRIMARY       reduce using rule 105 (types -> T_DECIMAL optParams .)
    R_REFERENCES    reduce using rule 105 (types -> T_DECIMAL optParams .)
    R_CONSTRAINT    reduce using rule 105 (types -> T_DECIMAL optParams .)
    R_UNIQUE        reduce using rule 105 (types -> T_DECIMAL optParams .)
    R_CHECK         reduce using rule 105 (types -> T_DECIMAL optParams .)
    S_PUNTOCOMA     reduce using rule 105 (types -> T_DECIMAL optParams .)
    S_DOSPUNTOS     reduce using rule 105 (types -> T_DECIMAL optParams .)
    S_IGUAL         reduce using rule 105 (types -> T_DECIMAL optParams .)


state 580

    (119) optParams -> S_PARIZQ . literalList S_PARDER
    (164) literalList -> . literalList S_COMA literal
    (165) literalList -> . literal
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL

    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108

    literalList                    shift and go to state 669
    literal                        shift and go to state 670

state 581

    (106) types -> T_NUMERIC optParams .

    S_PARDER        reduce using rule 106 (types -> T_NUMERIC optParams .)
    S_COMA          reduce using rule 106 (types -> T_NUMERIC optParams .)
    R_AS            reduce using rule 106 (types -> T_NUMERIC optParams .)
    R_DEFAULT       reduce using rule 106 (types -> T_NUMERIC optParams .)
    R_NOT           reduce using rule 106 (types -> T_NUMERIC optParams .)
    R_NULL          reduce using rule 106 (types -> T_NUMERIC optParams .)
    R_PRIMARY       reduce using rule 106 (types -> T_NUMERIC optParams .)
    R_REFERENCES    reduce using rule 106 (types -> T_NUMERIC optParams .)
    R_CONSTRAINT    reduce using rule 106 (types -> T_NUMERIC optParams .)
    R_UNIQUE        reduce using rule 106 (types -> T_NUMERIC optParams .)
    R_CHECK         reduce using rule 106 (types -> T_NUMERIC optParams .)
    S_PUNTOCOMA     reduce using rule 106 (types -> T_NUMERIC optParams .)
    S_DOSPUNTOS     reduce using rule 106 (types -> T_NUMERIC optParams .)
    S_IGUAL         reduce using rule 106 (types -> T_NUMERIC optParams .)


state 582

    (107) types -> T_VARCHAR optParams .

    S_PARDER        reduce using rule 107 (types -> T_VARCHAR optParams .)
    S_COMA          reduce using rule 107 (types -> T_VARCHAR optParams .)
    R_AS            reduce using rule 107 (types -> T_VARCHAR optParams .)
    R_DEFAULT       reduce using rule 107 (types -> T_VARCHAR optParams .)
    R_NOT           reduce using rule 107 (types -> T_VARCHAR optParams .)
    R_NULL          reduce using rule 107 (types -> T_VARCHAR optParams .)
    R_PRIMARY       reduce using rule 107 (types -> T_VARCHAR optParams .)
    R_REFERENCES    reduce using rule 107 (types -> T_VARCHAR optParams .)
    R_CONSTRAINT    reduce using rule 107 (types -> T_VARCHAR optParams .)
    R_UNIQUE        reduce using rule 107 (types -> T_VARCHAR optParams .)
    R_CHECK         reduce using rule 107 (types -> T_VARCHAR optParams .)
    S_PUNTOCOMA     reduce using rule 107 (types -> T_VARCHAR optParams .)
    S_DOSPUNTOS     reduce using rule 107 (types -> T_VARCHAR optParams .)
    S_IGUAL         reduce using rule 107 (types -> T_VARCHAR optParams .)


state 583

    (108) types -> T_CHARACTER optParams .

    S_PARDER        reduce using rule 108 (types -> T_CHARACTER optParams .)
    S_COMA          reduce using rule 108 (types -> T_CHARACTER optParams .)
    R_AS            reduce using rule 108 (types -> T_CHARACTER optParams .)
    R_DEFAULT       reduce using rule 108 (types -> T_CHARACTER optParams .)
    R_NOT           reduce using rule 108 (types -> T_CHARACTER optParams .)
    R_NULL          reduce using rule 108 (types -> T_CHARACTER optParams .)
    R_PRIMARY       reduce using rule 108 (types -> T_CHARACTER optParams .)
    R_REFERENCES    reduce using rule 108 (types -> T_CHARACTER optParams .)
    R_CONSTRAINT    reduce using rule 108 (types -> T_CHARACTER optParams .)
    R_UNIQUE        reduce using rule 108 (types -> T_CHARACTER optParams .)
    R_CHECK         reduce using rule 108 (types -> T_CHARACTER optParams .)
    S_PUNTOCOMA     reduce using rule 108 (types -> T_CHARACTER optParams .)
    S_DOSPUNTOS     reduce using rule 108 (types -> T_CHARACTER optParams .)
    S_IGUAL         reduce using rule 108 (types -> T_CHARACTER optParams .)


state 584

    (110) types -> T_CHARACTER T_VARYING . optParams
    (119) optParams -> . S_PARIZQ literalList S_PARDER
    (120) optParams -> .

    S_PARIZQ        shift and go to state 580
    S_PARDER        reduce using rule 120 (optParams -> .)
    S_COMA          reduce using rule 120 (optParams -> .)
    R_AS            reduce using rule 120 (optParams -> .)
    R_DEFAULT       reduce using rule 120 (optParams -> .)
    R_NOT           reduce using rule 120 (optParams -> .)
    R_NULL          reduce using rule 120 (optParams -> .)
    R_PRIMARY       reduce using rule 120 (optParams -> .)
    R_REFERENCES    reduce using rule 120 (optParams -> .)
    R_CONSTRAINT    reduce using rule 120 (optParams -> .)
    R_UNIQUE        reduce using rule 120 (optParams -> .)
    R_CHECK         reduce using rule 120 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 120 (optParams -> .)
    S_DOSPUNTOS     reduce using rule 120 (optParams -> .)
    S_IGUAL         reduce using rule 120 (optParams -> .)

    optParams                      shift and go to state 671

state 585

    (109) types -> T_CHAR optParams .

    S_PARDER        reduce using rule 109 (types -> T_CHAR optParams .)
    S_COMA          reduce using rule 109 (types -> T_CHAR optParams .)
    R_AS            reduce using rule 109 (types -> T_CHAR optParams .)
    R_DEFAULT       reduce using rule 109 (types -> T_CHAR optParams .)
    R_NOT           reduce using rule 109 (types -> T_CHAR optParams .)
    R_NULL          reduce using rule 109 (types -> T_CHAR optParams .)
    R_PRIMARY       reduce using rule 109 (types -> T_CHAR optParams .)
    R_REFERENCES    reduce using rule 109 (types -> T_CHAR optParams .)
    R_CONSTRAINT    reduce using rule 109 (types -> T_CHAR optParams .)
    R_UNIQUE        reduce using rule 109 (types -> T_CHAR optParams .)
    R_CHECK         reduce using rule 109 (types -> T_CHAR optParams .)
    S_PUNTOCOMA     reduce using rule 109 (types -> T_CHAR optParams .)
    S_DOSPUNTOS     reduce using rule 109 (types -> T_CHAR optParams .)
    S_IGUAL         reduce using rule 109 (types -> T_CHAR optParams .)


state 586

    (111) types -> R_INTERVAL intervalFields .

    S_PARDER        reduce using rule 111 (types -> R_INTERVAL intervalFields .)
    S_COMA          reduce using rule 111 (types -> R_INTERVAL intervalFields .)
    R_AS            reduce using rule 111 (types -> R_INTERVAL intervalFields .)
    R_DEFAULT       reduce using rule 111 (types -> R_INTERVAL intervalFields .)
    R_NOT           reduce using rule 111 (types -> R_INTERVAL intervalFields .)
    R_NULL          reduce using rule 111 (types -> R_INTERVAL intervalFields .)
    R_PRIMARY       reduce using rule 111 (types -> R_INTERVAL intervalFields .)
    R_REFERENCES    reduce using rule 111 (types -> R_INTERVAL intervalFields .)
    R_CONSTRAINT    reduce using rule 111 (types -> R_INTERVAL intervalFields .)
    R_UNIQUE        reduce using rule 111 (types -> R_INTERVAL intervalFields .)
    R_CHECK         reduce using rule 111 (types -> R_INTERVAL intervalFields .)
    S_PUNTOCOMA     reduce using rule 111 (types -> R_INTERVAL intervalFields .)
    S_DOSPUNTOS     reduce using rule 111 (types -> R_INTERVAL intervalFields .)
    S_IGUAL         reduce using rule 111 (types -> R_INTERVAL intervalFields .)


state 587

    (112) intervalFields -> R_YEAR .

    S_PARDER        reduce using rule 112 (intervalFields -> R_YEAR .)
    S_COMA          reduce using rule 112 (intervalFields -> R_YEAR .)
    R_AS            reduce using rule 112 (intervalFields -> R_YEAR .)
    R_DEFAULT       reduce using rule 112 (intervalFields -> R_YEAR .)
    R_NOT           reduce using rule 112 (intervalFields -> R_YEAR .)
    R_NULL          reduce using rule 112 (intervalFields -> R_YEAR .)
    R_PRIMARY       reduce using rule 112 (intervalFields -> R_YEAR .)
    R_REFERENCES    reduce using rule 112 (intervalFields -> R_YEAR .)
    R_CONSTRAINT    reduce using rule 112 (intervalFields -> R_YEAR .)
    R_UNIQUE        reduce using rule 112 (intervalFields -> R_YEAR .)
    R_CHECK         reduce using rule 112 (intervalFields -> R_YEAR .)
    S_PUNTOCOMA     reduce using rule 112 (intervalFields -> R_YEAR .)
    S_DOSPUNTOS     reduce using rule 112 (intervalFields -> R_YEAR .)
    S_IGUAL         reduce using rule 112 (intervalFields -> R_YEAR .)


state 588

    (113) intervalFields -> R_MONTH .

    S_PARDER        reduce using rule 113 (intervalFields -> R_MONTH .)
    S_COMA          reduce using rule 113 (intervalFields -> R_MONTH .)
    R_AS            reduce using rule 113 (intervalFields -> R_MONTH .)
    R_DEFAULT       reduce using rule 113 (intervalFields -> R_MONTH .)
    R_NOT           reduce using rule 113 (intervalFields -> R_MONTH .)
    R_NULL          reduce using rule 113 (intervalFields -> R_MONTH .)
    R_PRIMARY       reduce using rule 113 (intervalFields -> R_MONTH .)
    R_REFERENCES    reduce using rule 113 (intervalFields -> R_MONTH .)
    R_CONSTRAINT    reduce using rule 113 (intervalFields -> R_MONTH .)
    R_UNIQUE        reduce using rule 113 (intervalFields -> R_MONTH .)
    R_CHECK         reduce using rule 113 (intervalFields -> R_MONTH .)
    S_PUNTOCOMA     reduce using rule 113 (intervalFields -> R_MONTH .)
    S_DOSPUNTOS     reduce using rule 113 (intervalFields -> R_MONTH .)
    S_IGUAL         reduce using rule 113 (intervalFields -> R_MONTH .)


state 589

    (114) intervalFields -> R_DAY .

    S_PARDER        reduce using rule 114 (intervalFields -> R_DAY .)
    S_COMA          reduce using rule 114 (intervalFields -> R_DAY .)
    R_AS            reduce using rule 114 (intervalFields -> R_DAY .)
    R_DEFAULT       reduce using rule 114 (intervalFields -> R_DAY .)
    R_NOT           reduce using rule 114 (intervalFields -> R_DAY .)
    R_NULL          reduce using rule 114 (intervalFields -> R_DAY .)
    R_PRIMARY       reduce using rule 114 (intervalFields -> R_DAY .)
    R_REFERENCES    reduce using rule 114 (intervalFields -> R_DAY .)
    R_CONSTRAINT    reduce using rule 114 (intervalFields -> R_DAY .)
    R_UNIQUE        reduce using rule 114 (intervalFields -> R_DAY .)
    R_CHECK         reduce using rule 114 (intervalFields -> R_DAY .)
    S_PUNTOCOMA     reduce using rule 114 (intervalFields -> R_DAY .)
    S_DOSPUNTOS     reduce using rule 114 (intervalFields -> R_DAY .)
    S_IGUAL         reduce using rule 114 (intervalFields -> R_DAY .)


state 590

    (115) intervalFields -> R_HOUR .

    S_PARDER        reduce using rule 115 (intervalFields -> R_HOUR .)
    S_COMA          reduce using rule 115 (intervalFields -> R_HOUR .)
    R_AS            reduce using rule 115 (intervalFields -> R_HOUR .)
    R_DEFAULT       reduce using rule 115 (intervalFields -> R_HOUR .)
    R_NOT           reduce using rule 115 (intervalFields -> R_HOUR .)
    R_NULL          reduce using rule 115 (intervalFields -> R_HOUR .)
    R_PRIMARY       reduce using rule 115 (intervalFields -> R_HOUR .)
    R_REFERENCES    reduce using rule 115 (intervalFields -> R_HOUR .)
    R_CONSTRAINT    reduce using rule 115 (intervalFields -> R_HOUR .)
    R_UNIQUE        reduce using rule 115 (intervalFields -> R_HOUR .)
    R_CHECK         reduce using rule 115 (intervalFields -> R_HOUR .)
    S_PUNTOCOMA     reduce using rule 115 (intervalFields -> R_HOUR .)
    S_DOSPUNTOS     reduce using rule 115 (intervalFields -> R_HOUR .)
    S_IGUAL         reduce using rule 115 (intervalFields -> R_HOUR .)


state 591

    (116) intervalFields -> R_MINUTE .

    S_PARDER        reduce using rule 116 (intervalFields -> R_MINUTE .)
    S_COMA          reduce using rule 116 (intervalFields -> R_MINUTE .)
    R_AS            reduce using rule 116 (intervalFields -> R_MINUTE .)
    R_DEFAULT       reduce using rule 116 (intervalFields -> R_MINUTE .)
    R_NOT           reduce using rule 116 (intervalFields -> R_MINUTE .)
    R_NULL          reduce using rule 116 (intervalFields -> R_MINUTE .)
    R_PRIMARY       reduce using rule 116 (intervalFields -> R_MINUTE .)
    R_REFERENCES    reduce using rule 116 (intervalFields -> R_MINUTE .)
    R_CONSTRAINT    reduce using rule 116 (intervalFields -> R_MINUTE .)
    R_UNIQUE        reduce using rule 116 (intervalFields -> R_MINUTE .)
    R_CHECK         reduce using rule 116 (intervalFields -> R_MINUTE .)
    S_PUNTOCOMA     reduce using rule 116 (intervalFields -> R_MINUTE .)
    S_DOSPUNTOS     reduce using rule 116 (intervalFields -> R_MINUTE .)
    S_IGUAL         reduce using rule 116 (intervalFields -> R_MINUTE .)


state 592

    (117) intervalFields -> R_SECOND .

    S_PARDER        reduce using rule 117 (intervalFields -> R_SECOND .)
    S_COMA          reduce using rule 117 (intervalFields -> R_SECOND .)
    R_AS            reduce using rule 117 (intervalFields -> R_SECOND .)
    R_DEFAULT       reduce using rule 117 (intervalFields -> R_SECOND .)
    R_NOT           reduce using rule 117 (intervalFields -> R_SECOND .)
    R_NULL          reduce using rule 117 (intervalFields -> R_SECOND .)
    R_PRIMARY       reduce using rule 117 (intervalFields -> R_SECOND .)
    R_REFERENCES    reduce using rule 117 (intervalFields -> R_SECOND .)
    R_CONSTRAINT    reduce using rule 117 (intervalFields -> R_SECOND .)
    R_UNIQUE        reduce using rule 117 (intervalFields -> R_SECOND .)
    R_CHECK         reduce using rule 117 (intervalFields -> R_SECOND .)
    S_PUNTOCOMA     reduce using rule 117 (intervalFields -> R_SECOND .)
    S_DOSPUNTOS     reduce using rule 117 (intervalFields -> R_SECOND .)
    S_IGUAL         reduce using rule 117 (intervalFields -> R_SECOND .)


state 593

    (399) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt . R_AS S_DOLAR S_DOLAR bloqueFunction

    R_AS            shift and go to state 672


state 594

    (402) params_list -> params_list S_COMA param_item .

    S_PARDER        reduce using rule 402 (params_list -> params_list S_COMA param_item .)
    S_COMA          reduce using rule 402 (params_list -> params_list S_COMA param_item .)


state 595

    (400) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS . S_DOLAR S_DOLAR bloqueFunction

    S_DOLAR         shift and go to state 673


state 596

    (405) returnsStmt -> R_RETURNS types .

    R_AS            reduce using rule 405 (returnsStmt -> R_RETURNS types .)


state 597

    (434) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER . languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (442) languageProcedure -> . R_LANGUAGE ID
    (443) languageProcedure -> .

    R_LANGUAGE      shift and go to state 599
    R_AS            reduce using rule 443 (languageProcedure -> .)

    languageProcedure              shift and go to state 674

state 598

    (435) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure . R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure

    R_AS            shift and go to state 675


state 599

    (442) languageProcedure -> R_LANGUAGE . ID

    ID              shift and go to state 676


state 600

    (60) createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode .

    S_PUNTOCOMA     reduce using rule 60 (createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode .)


state 601

    (73) createMode -> R_MODE . INTEGER
    (74) createMode -> R_MODE . S_IGUAL INTEGER

    INTEGER         shift and go to state 677
    S_IGUAL         shift and go to state 678


state 602

    (68) createOwner -> R_OWNER ID .

    R_MODE          reduce using rule 68 (createOwner -> R_OWNER ID .)
    S_PUNTOCOMA     reduce using rule 68 (createOwner -> R_OWNER ID .)


state 603

    (69) createOwner -> R_OWNER STRING .

    R_MODE          reduce using rule 69 (createOwner -> R_OWNER STRING .)
    S_PUNTOCOMA     reduce using rule 69 (createOwner -> R_OWNER STRING .)


state 604

    (70) createOwner -> R_OWNER S_IGUAL . ID
    (71) createOwner -> R_OWNER S_IGUAL . STRING

    ID              shift and go to state 679
    STRING          shift and go to state 680


state 605

    (48) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index . S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    S_PARIZQ        shift and go to state 681


state 606

    (51) using_hash_index -> R_USING . R_HASH

    R_HASH          shift and go to state 682


state 607

    (59) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER . inheritsOpt
    (66) inheritsOpt -> . R_INHERITS S_PARIZQ ID S_PARDER
    (67) inheritsOpt -> .

    R_INHERITS      shift and go to state 684
    S_PUNTOCOMA     reduce using rule 67 (inheritsOpt -> .)

    inheritsOpt                    shift and go to state 683

state 608

    (76) createTableList -> createTableList S_COMA . createTable
    (78) createTable -> . ID types createColumns
    (79) createTable -> . createConstraint
    (80) createTable -> . createUnique
    (81) createTable -> . createPrimary
    (82) createTable -> . createForeign
    (85) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (86) createUnique -> . R_UNIQUE S_PARIZQ idList S_PARDER
    (87) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (88) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (89) constrName -> . R_CONSTRAINT ID
    (90) constrName -> .

    ID              shift and go to state 483
    R_UNIQUE        shift and go to state 489
    R_PRIMARY       shift and go to state 368
    R_CONSTRAINT    shift and go to state 369
    R_CHECK         reduce using rule 90 (constrName -> .)
    R_FOREIGN       reduce using rule 90 (constrName -> .)

    createTable                    shift and go to state 685
    createConstraint               shift and go to state 484
    createUnique                   shift and go to state 485
    createPrimary                  shift and go to state 486
    createForeign                  shift and go to state 487
    constrName                     shift and go to state 488

state 609

    (78) createTable -> ID types . createColumns
    (83) createColumns -> . colOptionsList
    (84) createColumns -> .
    (121) colOptionsList -> . colOptionsList colOptions
    (122) colOptionsList -> . colOptions
    (123) colOptions -> . defaultVal
    (124) colOptions -> . nullOpt
    (125) colOptions -> . constraintOpt
    (126) colOptions -> . primaryOpt
    (127) colOptions -> . referencesOpt
    (128) defaultVal -> . R_DEFAULT literal
    (129) nullOpt -> . R_NOT R_NULL
    (130) nullOpt -> . R_NULL
    (131) constraintOpt -> . constrName R_UNIQUE
    (132) constraintOpt -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (133) primaryOpt -> . R_PRIMARY R_KEY
    (134) referencesOpt -> . R_REFERENCES ID
    (89) constrName -> . R_CONSTRAINT ID
    (90) constrName -> .

    S_PARDER        reduce using rule 84 (createColumns -> .)
    S_COMA          reduce using rule 84 (createColumns -> .)
    R_DEFAULT       shift and go to state 694
    R_NOT           shift and go to state 695
    R_NULL          shift and go to state 696
    R_PRIMARY       shift and go to state 698
    R_REFERENCES    shift and go to state 699
    R_CONSTRAINT    shift and go to state 369
    R_UNIQUE        reduce using rule 90 (constrName -> .)
    R_CHECK         reduce using rule 90 (constrName -> .)

    createColumns                  shift and go to state 686
    colOptionsList                 shift and go to state 687
    colOptions                     shift and go to state 688
    defaultVal                     shift and go to state 689
    nullOpt                        shift and go to state 690
    constraintOpt                  shift and go to state 691
    primaryOpt                     shift and go to state 692
    referencesOpt                  shift and go to state 693
    constrName                     shift and go to state 697

state 610

    (86) createUnique -> R_UNIQUE S_PARIZQ . idList S_PARDER
    (91) idList -> . idList S_COMA ID
    (92) idList -> . ID

    ID              shift and go to state 381

    idList                         shift and go to state 700

state 611

    (63) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ . paramsList S_PARDER
    (173) paramsList -> . paramsList S_COMA datatype
    (174) paramsList -> . datatype
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    S_PARIZQ        shift and go to state 206
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    paramsList                     shift and go to state 701
    datatype                       shift and go to state 281
    columnName                     shift and go to state 205
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    timeStamp                      shift and go to state 114

state 612

    (299) alterAlter -> R_COLUMN ID R_SET . nullOpt
    (300) alterAlter -> R_COLUMN ID R_SET . defaultVal
    (129) nullOpt -> . R_NOT R_NULL
    (130) nullOpt -> . R_NULL
    (128) defaultVal -> . R_DEFAULT literal

    R_NOT           shift and go to state 695
    R_NULL          shift and go to state 696
    R_DEFAULT       shift and go to state 694

    nullOpt                        shift and go to state 702
    defaultVal                     shift and go to state 703

state 613

    (301) alterAlter -> R_COLUMN ID R_TYPE . types
    (93) types -> . ID
    (94) types -> . T_SMALLINT
    (95) types -> . T_INTEGER
    (96) types -> . T_BIGINT
    (97) types -> . T_REAL
    (98) types -> . T_DOUBLE T_PRECISION
    (99) types -> . T_MONEY
    (100) types -> . T_TEXT
    (101) types -> . T_BOOLEAN
    (102) types -> . R_TIMESTAMP
    (103) types -> . T_DATE
    (104) types -> . T_TIME
    (105) types -> . T_DECIMAL optParams
    (106) types -> . T_NUMERIC optParams
    (107) types -> . T_VARCHAR optParams
    (108) types -> . T_CHARACTER optParams
    (109) types -> . T_CHAR optParams
    (110) types -> . T_CHARACTER T_VARYING optParams
    (111) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 453
    T_SMALLINT      shift and go to state 455
    T_INTEGER       shift and go to state 456
    T_BIGINT        shift and go to state 457
    T_REAL          shift and go to state 458
    T_DOUBLE        shift and go to state 459
    T_MONEY         shift and go to state 460
    T_TEXT          shift and go to state 461
    T_BOOLEAN       shift and go to state 462
    R_TIMESTAMP     shift and go to state 463
    T_DATE          shift and go to state 464
    T_TIME          shift and go to state 465
    T_DECIMAL       shift and go to state 466
    T_NUMERIC       shift and go to state 467
    T_VARCHAR       shift and go to state 468
    T_CHARACTER     shift and go to state 469
    T_CHAR          shift and go to state 470
    R_INTERVAL      shift and go to state 471

    types                          shift and go to state 704

state 614

    (294) alterAdd -> R_COLUMN ID types .

    S_COMA          reduce using rule 294 (alterAdd -> R_COLUMN ID types .)
    S_PUNTOCOMA     reduce using rule 294 (alterAdd -> R_COLUMN ID types .)


state 615

    (298) alterAdd -> constrName R_UNIQUE S_PARIZQ . ID S_PARDER

    ID              shift and go to state 705


state 616

    (85) createConstraint -> constrName R_CHECK S_PARIZQ . booleanCheck S_PARDER
    (264) booleanCheck -> . idOrLiteral OL_MENORQUE idOrLiteral
    (265) booleanCheck -> . idOrLiteral OL_MAYORQUE idOrLiteral
    (266) booleanCheck -> . idOrLiteral OL_MAYORIGUALQUE idOrLiteral
    (267) booleanCheck -> . idOrLiteral OL_MENORIGUALQUE idOrLiteral
    (268) booleanCheck -> . idOrLiteral S_IGUAL idOrLiteral
    (269) booleanCheck -> . idOrLiteral OL_DISTINTODE idOrLiteral
    (270) booleanCheck -> . idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
    (271) booleanCheck -> . idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
    (272) idOrLiteral -> . ID
    (273) idOrLiteral -> . INTEGER
    (274) idOrLiteral -> . STRING
    (275) idOrLiteral -> . DECIMAL
    (276) idOrLiteral -> . CHARACTER
    (277) idOrLiteral -> . R_TRUE
    (278) idOrLiteral -> . R_FALSE

    ID              shift and go to state 708
    INTEGER         shift and go to state 709
    STRING          shift and go to state 710
    DECIMAL         shift and go to state 711
    CHARACTER       shift and go to state 712
    R_TRUE          shift and go to state 713
    R_FALSE         shift and go to state 714

    booleanCheck                   shift and go to state 706
    idOrLiteral                    shift and go to state 707

state 617

    (88) createForeign -> constrName R_FOREIGN R_KEY . S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 715


state 618

    (87) createPrimary -> R_PRIMARY R_KEY S_PARIZQ . idList S_PARDER
    (91) idList -> . idList S_COMA ID
    (92) idList -> . ID

    ID              shift and go to state 381

    idList                         shift and go to state 716

state 619

    (304) alterRename -> R_COLUMN ID R_TO . ID

    ID              shift and go to state 717


state 620

    (281) alterStmt -> R_ALTER R_INDEX ifExists ID R_ALTER ID ID .

    S_PUNTOCOMA     reduce using rule 281 (alterStmt -> R_ALTER R_INDEX ifExists ID R_ALTER ID ID .)


state 621

    (282) alterStmt -> R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER .

    S_PUNTOCOMA     reduce using rule 282 (alterStmt -> R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER .)


state 622

    (382) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList . S_PARDER
    (173) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 718
    S_COMA          shift and go to state 399


state 623

    (91) idList -> idList S_COMA ID .

    S_PARDER        reduce using rule 91 (idList -> idList S_COMA ID .)
    S_COMA          reduce using rule 91 (idList -> idList S_COMA ID .)
    R_DESC          reduce using rule 91 (idList -> idList S_COMA ID .)
    R_ASC           reduce using rule 91 (idList -> idList S_COMA ID .)
    R_NULLS         reduce using rule 91 (idList -> idList S_COMA ID .)


state 624

    (315) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl . limitCl
    (377) limitCl -> . R_LIMIT INTEGER offsetLimit
    (378) limitCl -> . R_LIMIT R_ALL offsetLimit
    (379) limitCl -> .

    R_LIMIT         shift and go to state 626
    S_PUNTOCOMA     reduce using rule 379 (limitCl -> .)
    R_UNION         reduce using rule 379 (limitCl -> .)
    R_INTERSECT     reduce using rule 379 (limitCl -> .)
    R_EXCEPT        reduce using rule 379 (limitCl -> .)
    S_PARDER        reduce using rule 379 (limitCl -> .)

    limitCl                        shift and go to state 719

state 625

    (316) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .

    S_PUNTOCOMA     reduce using rule 316 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_UNION         reduce using rule 316 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_INTERSECT     reduce using rule 316 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_EXCEPT        reduce using rule 316 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    S_PARDER        reduce using rule 316 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)


state 626

    (377) limitCl -> R_LIMIT . INTEGER offsetLimit
    (378) limitCl -> R_LIMIT . R_ALL offsetLimit

    INTEGER         shift and go to state 720
    R_ALL           shift and go to state 721


state 627

    (365) orderByCl -> R_ORDER R_BY . orderList
    (367) orderList -> . orderList S_COMA orderByElem
    (368) orderList -> . orderByElem
    (369) orderByElem -> . columnName orderOpts orderNull
    (370) orderByElem -> . INTEGER orderOpts orderNull
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 725
    ID              shift and go to state 524

    orderList                      shift and go to state 722
    orderByElem                    shift and go to state 723
    columnName                     shift and go to state 724

state 628

    (357) groupByCl -> R_GROUP R_BY groupList . havingCl
    (359) groupList -> groupList . S_COMA columnName
    (360) groupList -> groupList . S_COMA INTEGER
    (363) havingCl -> . R_HAVING expBool
    (364) havingCl -> .

    S_COMA          shift and go to state 727
    R_HAVING        shift and go to state 728
    R_ORDER         reduce using rule 364 (havingCl -> .)
    R_LIMIT         reduce using rule 364 (havingCl -> .)
    S_PUNTOCOMA     reduce using rule 364 (havingCl -> .)
    R_UNION         reduce using rule 364 (havingCl -> .)
    R_INTERSECT     reduce using rule 364 (havingCl -> .)
    R_EXCEPT        reduce using rule 364 (havingCl -> .)
    S_PARDER        reduce using rule 364 (havingCl -> .)

    havingCl                       shift and go to state 726

state 629

    (361) groupList -> columnName .

    S_COMA          reduce using rule 361 (groupList -> columnName .)
    R_HAVING        reduce using rule 361 (groupList -> columnName .)
    R_ORDER         reduce using rule 361 (groupList -> columnName .)
    R_LIMIT         reduce using rule 361 (groupList -> columnName .)
    S_PUNTOCOMA     reduce using rule 361 (groupList -> columnName .)
    R_UNION         reduce using rule 361 (groupList -> columnName .)
    R_INTERSECT     reduce using rule 361 (groupList -> columnName .)
    R_EXCEPT        reduce using rule 361 (groupList -> columnName .)
    S_PARDER        reduce using rule 361 (groupList -> columnName .)


state 630

    (362) groupList -> INTEGER .

    S_COMA          reduce using rule 362 (groupList -> INTEGER .)
    R_HAVING        reduce using rule 362 (groupList -> INTEGER .)
    R_ORDER         reduce using rule 362 (groupList -> INTEGER .)
    R_LIMIT         reduce using rule 362 (groupList -> INTEGER .)
    S_PUNTOCOMA     reduce using rule 362 (groupList -> INTEGER .)
    R_UNION         reduce using rule 362 (groupList -> INTEGER .)
    R_INTERSECT     reduce using rule 362 (groupList -> INTEGER .)
    R_EXCEPT        reduce using rule 362 (groupList -> INTEGER .)
    S_PARDER        reduce using rule 362 (groupList -> INTEGER .)


state 631

    (317) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl . limitCl
    (377) limitCl -> . R_LIMIT INTEGER offsetLimit
    (378) limitCl -> . R_LIMIT R_ALL offsetLimit
    (379) limitCl -> .

    R_LIMIT         shift and go to state 626
    S_PUNTOCOMA     reduce using rule 379 (limitCl -> .)
    R_UNION         reduce using rule 379 (limitCl -> .)
    R_INTERSECT     reduce using rule 379 (limitCl -> .)
    R_EXCEPT        reduce using rule 379 (limitCl -> .)
    S_PARDER        reduce using rule 379 (limitCl -> .)

    limitCl                        shift and go to state 729

state 632

    (318) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .

    S_PUNTOCOMA     reduce using rule 318 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    R_UNION         reduce using rule 318 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    R_INTERSECT     reduce using rule 318 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    R_EXCEPT        reduce using rule 318 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    S_PARDER        reduce using rule 318 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)


state 633

    (343) joinCl -> joinOpt R_JOIN columnName optAlias . R_ON expBool
    (344) joinCl -> joinOpt R_JOIN columnName optAlias . R_USING S_PARIZQ nameList S_PARDER

    R_ON            shift and go to state 730
    R_USING         shift and go to state 731


state 634

    (345) joinCl -> R_NATURAL joinOpt R_JOIN columnName . optAlias
    (333) optAlias -> . R_AS idOrString
    (334) optAlias -> . idOrString
    (335) optAlias -> .
    (43) idOrString -> . ID
    (44) idOrString -> . STRING
    (45) idOrString -> . CHARACTER

    R_AS            shift and go to state 162
    R_NATURAL       reduce using rule 335 (optAlias -> .)
    R_INNER         reduce using rule 335 (optAlias -> .)
    R_LEFT          reduce using rule 335 (optAlias -> .)
    R_RIGHT         reduce using rule 335 (optAlias -> .)
    R_FULL          reduce using rule 335 (optAlias -> .)
    R_WHERE         reduce using rule 335 (optAlias -> .)
    R_GROUP         reduce using rule 335 (optAlias -> .)
    R_ORDER         reduce using rule 335 (optAlias -> .)
    R_LIMIT         reduce using rule 335 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 335 (optAlias -> .)
    R_UNION         reduce using rule 335 (optAlias -> .)
    R_INTERSECT     reduce using rule 335 (optAlias -> .)
    R_EXCEPT        reduce using rule 335 (optAlias -> .)
    S_PARDER        reduce using rule 335 (optAlias -> .)
    ID              shift and go to state 144
    STRING          shift and go to state 145
    CHARACTER       shift and go to state 146

    optAlias                       shift and go to state 732
    idOrString                     shift and go to state 163

state 635

    (247) boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 247 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)


state 636

    (206) expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .
    (225) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME

    R_AND           reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_OR            reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_IS            reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_AS            reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    ID              reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    STRING          reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    CHARACTER       reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_COMA          reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_FROM          reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_UNION         reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_PARDER        reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_GROUP         reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_ORDER         reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_LIMIT         reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_THEN          reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_NATURAL       reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_INNER         reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_LEFT          reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_RIGHT         reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_FULL          reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_WHERE         reduce using rule 206 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296

    subqValues                     shift and go to state 733

state 637

    (218) expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 218 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 638

    (219) expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 219 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 639

    (220) expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 220 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 640

    (221) expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 221 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 641

    (223) expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 223 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)


state 642

    (227) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 734


state 643

    (204) expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .
    (228) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME

    R_AND           reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_OR            reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_IS            reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_AS            reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    ID              reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    STRING          reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    CHARACTER       reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_COMA          reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_FROM          reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_PUNTOCOMA     reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_UNION         reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_INTERSECT     reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_EXCEPT        reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_PARDER        reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_GROUP         reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_ORDER         reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_LIMIT         reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_THEN          reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_NATURAL       reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_INNER         reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_LEFT          reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_RIGHT         reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_FULL          reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_WHERE         reduce using rule 204 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296

    subqValues                     shift and go to state 735

state 644

    (230) expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 736

state 645

    (234) expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 737

state 646

    (236) expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 738

state 647

    (238) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 739

state 648

    (229) expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 740
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 649

    (233) expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 741
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 650

    (235) expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 742
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 651

    (237) expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 743
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 652

    (224) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 744


state 653

    (207) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .
    (226) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (175) datatype -> datatype . O_SUMA datatype
    (176) datatype -> datatype . O_RESTA datatype
    (177) datatype -> datatype . O_PRODUCTO datatype
    (178) datatype -> datatype . O_DIVISION datatype
    (179) datatype -> datatype . O_EXPONENTE datatype
    (180) datatype -> datatype . O_MODULAR datatype
    (181) datatype -> datatype . OC_CONCATENAR datatype
    (242) subqValues -> . R_ALL
    (243) subqValues -> . R_ANY
    (244) subqValues -> . R_SOME

    R_AND           reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_OR            reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_IS            reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_AS            reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    ID              reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    STRING          reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    CHARACTER       reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_COMA          reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_FROM          reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_UNION         reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_PARDER        reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_GROUP         reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_ORDER         reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_LIMIT         reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_THEN          reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_NATURAL       reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_INNER         reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_LEFT          reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_RIGHT         reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_FULL          reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_WHERE         reduce using rule 207 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    O_SUMA          shift and go to state 176
    O_RESTA         shift and go to state 177
    O_PRODUCTO      shift and go to state 178
    O_DIVISION      shift and go to state 179
    O_EXPONENTE     shift and go to state 180
    O_MODULAR       shift and go to state 181
    OC_CONCATENAR   shift and go to state 182
    R_ALL           shift and go to state 294
    R_ANY           shift and go to state 295
    R_SOME          shift and go to state 296

    subqValues                     shift and go to state 745

state 654

    (231) expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 231 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)


state 655

    (232) expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 232 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)


state 656

    (222) expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 222 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)


state 657

    (145) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .

    O_SUMA          reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_RESTA         reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_PRODUCTO      reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_DIVISION      reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_EXPONENTE     reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_MODULAR       reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OC_CONCATENAR   reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_IN            reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NOT           reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MENORQUE     reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MAYORQUE     reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_IGUAL         reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_DISTINTODE   reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_IS            reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_BETWEEN       reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ISNULL        reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NOTNULL       reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_ESIGUAL      reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_AS            reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    ID              reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    STRING          reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    CHARACTER       reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_COMA          reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_FROM          reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_PUNTOCOMA     reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_UNION         reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_INTERSECT     reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_EXCEPT        reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_PARDER        reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_AND           reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_OR            reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_GROUP         reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ORDER         reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_LIMIT         reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_THEN          reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NATURAL       reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_INNER         reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_LEFT          reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_RIGHT         reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_FULL          reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_WHERE         reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ALL           reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ANY           reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_SOME          reduce using rule 145 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)


state 658

    (146) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .

    O_SUMA          reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_RESTA         reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_PRODUCTO      reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_DIVISION      reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_EXPONENTE     reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_MODULAR       reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OC_CONCATENAR   reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_IN            reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NOT           reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MENORQUE     reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MAYORQUE     reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_IGUAL         reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_DISTINTODE   reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_IS            reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_BETWEEN       reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ISNULL        reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NOTNULL       reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_ESIGUAL      reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_AS            reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    ID              reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    STRING          reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    CHARACTER       reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_COMA          reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_FROM          reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_PUNTOCOMA     reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_UNION         reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_INTERSECT     reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_EXCEPT        reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_PARDER        reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_AND           reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_OR            reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_GROUP         reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ORDER         reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_LIMIT         reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_THEN          reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NATURAL       reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_INNER         reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_LEFT          reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_RIGHT         reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_FULL          reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_WHERE         reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ALL           reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ANY           reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_SOME          reduce using rule 146 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)


state 659

    (155) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .

    O_SUMA          reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_RESTA         reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_PRODUCTO      reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_DIVISION      reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_EXPONENTE     reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_MODULAR       reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OC_CONCATENAR   reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_IN            reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NOT           reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MENORQUE     reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MAYORQUE     reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_IGUAL         reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_DISTINTODE   reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_IS            reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_BETWEEN       reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ISNULL        reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NOTNULL       reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_ESIGUAL      reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_AS            reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    ID              reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    STRING          reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    CHARACTER       reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_COMA          reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_FROM          reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_PUNTOCOMA     reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_UNION         reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_INTERSECT     reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_EXCEPT        reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_PARDER        reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_AND           reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_OR            reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_GROUP         reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ORDER         reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_LIMIT         reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_THEN          reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NATURAL       reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_INNER         reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_LEFT          reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_RIGHT         reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_FULL          reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_WHERE         reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ALL           reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ANY           reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_SOME          reduce using rule 155 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)


state 660

    (156) dateSource -> R_TIMESTAMP STRING .

    S_PARDER        reduce using rule 156 (dateSource -> R_TIMESTAMP STRING .)


state 661

    (157) dateSource -> T_DATE STRING .

    S_PARDER        reduce using rule 157 (dateSource -> T_DATE STRING .)


state 662

    (158) dateSource -> T_TIME STRING .

    S_PARDER        reduce using rule 158 (dateSource -> T_TIME STRING .)


state 663

    (159) dateSource -> R_INTERVAL STRING .

    S_PARDER        reduce using rule 159 (dateSource -> R_INTERVAL STRING .)


state 664

    (160) dateSource -> R_NOW S_PARIZQ . S_PARDER

    S_PARDER        shift and go to state 746


state 665

    (20) else_ -> R_ELSE List_body .
    (26) List_body -> List_body . body
    (28) body -> . createStmt S_PUNTOCOMA
    (29) body -> . showStmt S_PUNTOCOMA
    (30) body -> . alterStmt S_PUNTOCOMA
    (31) body -> . dropStmt S_PUNTOCOMA
    (32) body -> . insertStmt S_PUNTOCOMA
    (33) body -> . updateStmt S_PUNTOCOMA
    (34) body -> . deleteStmt S_PUNTOCOMA
    (35) body -> . truncateStmt S_PUNTOCOMA
    (36) body -> . useStmt S_PUNTOCOMA
    (37) body -> . selectStmt S_PUNTOCOMA
    (38) body -> . functionStmt
    (39) body -> . procedureStmt
    (40) body -> . executePL S_PUNTOCOMA
    (41) body -> . ifStmt R_END R_IF S_PUNTOCOMA
    (42) body -> . asignacionStmt S_PUNTOCOMA
    (46) createStmt -> . R_CREATE createBody
    (395) showStmt -> . R_SHOW R_DATABASES likeOpt
    (279) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (280) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (281) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID ID
    (282) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER
    (305) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (306) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (307) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString
    (308) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER
    (309) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (310) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (382) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (385) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (391) deleteStmt -> . R_DELETE fromCl whereCl
    (392) truncateStmt -> . R_TRUNCATE tableOpt ID
    (398) useStmt -> . R_USE ID
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams
    (399) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (400) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (434) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (444) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
    (432) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (433) asignacionStmt -> . ID S_IGUAL expresion

    R_END           reduce using rule 20 (else_ -> R_ELSE List_body .)
    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 24
    R_INSERT        shift and go to state 26
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18
    ID              shift and go to state 23

    body                           shift and go to state 560
    createStmt                     shift and go to state 438
    showStmt                       shift and go to state 439
    alterStmt                      shift and go to state 440
    dropStmt                       shift and go to state 441
    insertStmt                     shift and go to state 442
    updateStmt                     shift and go to state 443
    deleteStmt                     shift and go to state 444
    truncateStmt                   shift and go to state 445
    useStmt                        shift and go to state 446
    selectStmt                     shift and go to state 447
    functionStmt                   shift and go to state 448
    procedureStmt                  shift and go to state 449
    executePL                      shift and go to state 450
    ifStmt                         shift and go to state 451
    asignacionStmt                 shift and go to state 452

state 666

    (23) Lista_elsif_ -> Lista_elsif_ elsif_ .

    R_ELSIF         reduce using rule 23 (Lista_elsif_ -> Lista_elsif_ elsif_ .)
    R_END           reduce using rule 23 (Lista_elsif_ -> Lista_elsif_ elsif_ .)


state 667

    (25) elsif_ -> R_ELSIF S_PARIZQ . expresion S_PARDER R_THEN List_body
    (135) expresion -> . datatype
    (136) expresion -> . expBool
    (137) expresion -> . S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName

    S_PARIZQ        shift and go to state 90
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    R_NOT           shift and go to state 100
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_EXISTS        shift and go to state 118
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    expresion                      shift and go to state 747
    datatype                       shift and go to state 88
    expBool                        shift and go to state 89
    columnName                     shift and go to state 94
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    boolean                        shift and go to state 101
    timeStamp                      shift and go to state 114
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    stringExp                      shift and go to state 123

state 668

    (41) body -> ifStmt R_END R_IF . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 748


state 669

    (119) optParams -> S_PARIZQ literalList . S_PARDER
    (164) literalList -> literalList . S_COMA literal

    S_PARDER        shift and go to state 749
    S_COMA          shift and go to state 750


state 670

    (165) literalList -> literal .

    S_PARDER        reduce using rule 165 (literalList -> literal .)
    S_COMA          reduce using rule 165 (literalList -> literal .)


state 671

    (110) types -> T_CHARACTER T_VARYING optParams .

    S_PARDER        reduce using rule 110 (types -> T_CHARACTER T_VARYING optParams .)
    S_COMA          reduce using rule 110 (types -> T_CHARACTER T_VARYING optParams .)
    R_AS            reduce using rule 110 (types -> T_CHARACTER T_VARYING optParams .)
    R_DEFAULT       reduce using rule 110 (types -> T_CHARACTER T_VARYING optParams .)
    R_NOT           reduce using rule 110 (types -> T_CHARACTER T_VARYING optParams .)
    R_NULL          reduce using rule 110 (types -> T_CHARACTER T_VARYING optParams .)
    R_PRIMARY       reduce using rule 110 (types -> T_CHARACTER T_VARYING optParams .)
    R_REFERENCES    reduce using rule 110 (types -> T_CHARACTER T_VARYING optParams .)
    R_CONSTRAINT    reduce using rule 110 (types -> T_CHARACTER T_VARYING optParams .)
    R_UNIQUE        reduce using rule 110 (types -> T_CHARACTER T_VARYING optParams .)
    R_CHECK         reduce using rule 110 (types -> T_CHARACTER T_VARYING optParams .)
    S_PUNTOCOMA     reduce using rule 110 (types -> T_CHARACTER T_VARYING optParams .)
    S_DOSPUNTOS     reduce using rule 110 (types -> T_CHARACTER T_VARYING optParams .)
    S_IGUAL         reduce using rule 110 (types -> T_CHARACTER T_VARYING optParams .)


state 672

    (399) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS . S_DOLAR S_DOLAR bloqueFunction

    S_DOLAR         shift and go to state 751


state 673

    (400) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR . S_DOLAR bloqueFunction

    S_DOLAR         shift and go to state 752


state 674

    (434) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure . R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure

    R_AS            shift and go to state 753


state 675

    (435) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS . S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure

    S_DOLAR         shift and go to state 754


state 676

    (442) languageProcedure -> R_LANGUAGE ID .

    R_AS            reduce using rule 442 (languageProcedure -> R_LANGUAGE ID .)


state 677

    (73) createMode -> R_MODE INTEGER .

    S_PUNTOCOMA     reduce using rule 73 (createMode -> R_MODE INTEGER .)


state 678

    (74) createMode -> R_MODE S_IGUAL . INTEGER

    INTEGER         shift and go to state 755


state 679

    (70) createOwner -> R_OWNER S_IGUAL ID .

    R_MODE          reduce using rule 70 (createOwner -> R_OWNER S_IGUAL ID .)
    S_PUNTOCOMA     reduce using rule 70 (createOwner -> R_OWNER S_IGUAL ID .)


state 680

    (71) createOwner -> R_OWNER S_IGUAL STRING .

    R_MODE          reduce using rule 71 (createOwner -> R_OWNER S_IGUAL STRING .)
    S_PUNTOCOMA     reduce using rule 71 (createOwner -> R_OWNER S_IGUAL STRING .)


state 681

    (48) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ . idList indexasc_desc indexNullS S_PARDER whereCl
    (91) idList -> . idList S_COMA ID
    (92) idList -> . ID

    ID              shift and go to state 381

    idList                         shift and go to state 756

state 682

    (51) using_hash_index -> R_USING R_HASH .

    S_PARIZQ        reduce using rule 51 (using_hash_index -> R_USING R_HASH .)


state 683

    (59) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt .

    S_PUNTOCOMA     reduce using rule 59 (createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt .)


state 684

    (66) inheritsOpt -> R_INHERITS . S_PARIZQ ID S_PARDER

    S_PARIZQ        shift and go to state 757


state 685

    (76) createTableList -> createTableList S_COMA createTable .

    S_PARDER        reduce using rule 76 (createTableList -> createTableList S_COMA createTable .)
    S_COMA          reduce using rule 76 (createTableList -> createTableList S_COMA createTable .)


state 686

    (78) createTable -> ID types createColumns .

    S_PARDER        reduce using rule 78 (createTable -> ID types createColumns .)
    S_COMA          reduce using rule 78 (createTable -> ID types createColumns .)


state 687

    (83) createColumns -> colOptionsList .
    (121) colOptionsList -> colOptionsList . colOptions
    (123) colOptions -> . defaultVal
    (124) colOptions -> . nullOpt
    (125) colOptions -> . constraintOpt
    (126) colOptions -> . primaryOpt
    (127) colOptions -> . referencesOpt
    (128) defaultVal -> . R_DEFAULT literal
    (129) nullOpt -> . R_NOT R_NULL
    (130) nullOpt -> . R_NULL
    (131) constraintOpt -> . constrName R_UNIQUE
    (132) constraintOpt -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (133) primaryOpt -> . R_PRIMARY R_KEY
    (134) referencesOpt -> . R_REFERENCES ID
    (89) constrName -> . R_CONSTRAINT ID
    (90) constrName -> .

    S_PARDER        reduce using rule 83 (createColumns -> colOptionsList .)
    S_COMA          reduce using rule 83 (createColumns -> colOptionsList .)
    R_DEFAULT       shift and go to state 694
    R_NOT           shift and go to state 695
    R_NULL          shift and go to state 696
    R_PRIMARY       shift and go to state 698
    R_REFERENCES    shift and go to state 699
    R_CONSTRAINT    shift and go to state 369
    R_UNIQUE        reduce using rule 90 (constrName -> .)
    R_CHECK         reduce using rule 90 (constrName -> .)

    colOptions                     shift and go to state 758
    defaultVal                     shift and go to state 689
    nullOpt                        shift and go to state 690
    constraintOpt                  shift and go to state 691
    primaryOpt                     shift and go to state 692
    referencesOpt                  shift and go to state 693
    constrName                     shift and go to state 697

state 688

    (122) colOptionsList -> colOptions .

    R_DEFAULT       reduce using rule 122 (colOptionsList -> colOptions .)
    R_NOT           reduce using rule 122 (colOptionsList -> colOptions .)
    R_NULL          reduce using rule 122 (colOptionsList -> colOptions .)
    R_PRIMARY       reduce using rule 122 (colOptionsList -> colOptions .)
    R_REFERENCES    reduce using rule 122 (colOptionsList -> colOptions .)
    R_CONSTRAINT    reduce using rule 122 (colOptionsList -> colOptions .)
    R_UNIQUE        reduce using rule 122 (colOptionsList -> colOptions .)
    R_CHECK         reduce using rule 122 (colOptionsList -> colOptions .)
    S_PARDER        reduce using rule 122 (colOptionsList -> colOptions .)
    S_COMA          reduce using rule 122 (colOptionsList -> colOptions .)


state 689

    (123) colOptions -> defaultVal .

    R_DEFAULT       reduce using rule 123 (colOptions -> defaultVal .)
    R_NOT           reduce using rule 123 (colOptions -> defaultVal .)
    R_NULL          reduce using rule 123 (colOptions -> defaultVal .)
    R_PRIMARY       reduce using rule 123 (colOptions -> defaultVal .)
    R_REFERENCES    reduce using rule 123 (colOptions -> defaultVal .)
    R_CONSTRAINT    reduce using rule 123 (colOptions -> defaultVal .)
    R_UNIQUE        reduce using rule 123 (colOptions -> defaultVal .)
    R_CHECK         reduce using rule 123 (colOptions -> defaultVal .)
    S_PARDER        reduce using rule 123 (colOptions -> defaultVal .)
    S_COMA          reduce using rule 123 (colOptions -> defaultVal .)


state 690

    (124) colOptions -> nullOpt .

    R_DEFAULT       reduce using rule 124 (colOptions -> nullOpt .)
    R_NOT           reduce using rule 124 (colOptions -> nullOpt .)
    R_NULL          reduce using rule 124 (colOptions -> nullOpt .)
    R_PRIMARY       reduce using rule 124 (colOptions -> nullOpt .)
    R_REFERENCES    reduce using rule 124 (colOptions -> nullOpt .)
    R_CONSTRAINT    reduce using rule 124 (colOptions -> nullOpt .)
    R_UNIQUE        reduce using rule 124 (colOptions -> nullOpt .)
    R_CHECK         reduce using rule 124 (colOptions -> nullOpt .)
    S_PARDER        reduce using rule 124 (colOptions -> nullOpt .)
    S_COMA          reduce using rule 124 (colOptions -> nullOpt .)


state 691

    (125) colOptions -> constraintOpt .

    R_DEFAULT       reduce using rule 125 (colOptions -> constraintOpt .)
    R_NOT           reduce using rule 125 (colOptions -> constraintOpt .)
    R_NULL          reduce using rule 125 (colOptions -> constraintOpt .)
    R_PRIMARY       reduce using rule 125 (colOptions -> constraintOpt .)
    R_REFERENCES    reduce using rule 125 (colOptions -> constraintOpt .)
    R_CONSTRAINT    reduce using rule 125 (colOptions -> constraintOpt .)
    R_UNIQUE        reduce using rule 125 (colOptions -> constraintOpt .)
    R_CHECK         reduce using rule 125 (colOptions -> constraintOpt .)
    S_PARDER        reduce using rule 125 (colOptions -> constraintOpt .)
    S_COMA          reduce using rule 125 (colOptions -> constraintOpt .)


state 692

    (126) colOptions -> primaryOpt .

    R_DEFAULT       reduce using rule 126 (colOptions -> primaryOpt .)
    R_NOT           reduce using rule 126 (colOptions -> primaryOpt .)
    R_NULL          reduce using rule 126 (colOptions -> primaryOpt .)
    R_PRIMARY       reduce using rule 126 (colOptions -> primaryOpt .)
    R_REFERENCES    reduce using rule 126 (colOptions -> primaryOpt .)
    R_CONSTRAINT    reduce using rule 126 (colOptions -> primaryOpt .)
    R_UNIQUE        reduce using rule 126 (colOptions -> primaryOpt .)
    R_CHECK         reduce using rule 126 (colOptions -> primaryOpt .)
    S_PARDER        reduce using rule 126 (colOptions -> primaryOpt .)
    S_COMA          reduce using rule 126 (colOptions -> primaryOpt .)


state 693

    (127) colOptions -> referencesOpt .

    R_DEFAULT       reduce using rule 127 (colOptions -> referencesOpt .)
    R_NOT           reduce using rule 127 (colOptions -> referencesOpt .)
    R_NULL          reduce using rule 127 (colOptions -> referencesOpt .)
    R_PRIMARY       reduce using rule 127 (colOptions -> referencesOpt .)
    R_REFERENCES    reduce using rule 127 (colOptions -> referencesOpt .)
    R_CONSTRAINT    reduce using rule 127 (colOptions -> referencesOpt .)
    R_UNIQUE        reduce using rule 127 (colOptions -> referencesOpt .)
    R_CHECK         reduce using rule 127 (colOptions -> referencesOpt .)
    S_PARDER        reduce using rule 127 (colOptions -> referencesOpt .)
    S_COMA          reduce using rule 127 (colOptions -> referencesOpt .)


state 694

    (128) defaultVal -> R_DEFAULT . literal
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL

    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108

    literal                        shift and go to state 759

state 695

    (129) nullOpt -> R_NOT . R_NULL

    R_NULL          shift and go to state 760


state 696

    (130) nullOpt -> R_NULL .

    R_DEFAULT       reduce using rule 130 (nullOpt -> R_NULL .)
    R_NOT           reduce using rule 130 (nullOpt -> R_NULL .)
    R_NULL          reduce using rule 130 (nullOpt -> R_NULL .)
    R_PRIMARY       reduce using rule 130 (nullOpt -> R_NULL .)
    R_REFERENCES    reduce using rule 130 (nullOpt -> R_NULL .)
    R_CONSTRAINT    reduce using rule 130 (nullOpt -> R_NULL .)
    R_UNIQUE        reduce using rule 130 (nullOpt -> R_NULL .)
    R_CHECK         reduce using rule 130 (nullOpt -> R_NULL .)
    S_PARDER        reduce using rule 130 (nullOpt -> R_NULL .)
    S_COMA          reduce using rule 130 (nullOpt -> R_NULL .)
    S_PUNTOCOMA     reduce using rule 130 (nullOpt -> R_NULL .)


state 697

    (131) constraintOpt -> constrName . R_UNIQUE
    (132) constraintOpt -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER

    R_UNIQUE        shift and go to state 761
    R_CHECK         shift and go to state 762


state 698

    (133) primaryOpt -> R_PRIMARY . R_KEY

    R_KEY           shift and go to state 763


state 699

    (134) referencesOpt -> R_REFERENCES . ID

    ID              shift and go to state 764


state 700

    (86) createUnique -> R_UNIQUE S_PARIZQ idList . S_PARDER
    (91) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 765
    S_COMA          shift and go to state 512


state 701

    (63) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList . S_PARDER
    (173) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 766
    S_COMA          shift and go to state 399


state 702

    (299) alterAlter -> R_COLUMN ID R_SET nullOpt .

    S_COMA          reduce using rule 299 (alterAlter -> R_COLUMN ID R_SET nullOpt .)
    S_PUNTOCOMA     reduce using rule 299 (alterAlter -> R_COLUMN ID R_SET nullOpt .)


state 703

    (300) alterAlter -> R_COLUMN ID R_SET defaultVal .

    S_COMA          reduce using rule 300 (alterAlter -> R_COLUMN ID R_SET defaultVal .)
    S_PUNTOCOMA     reduce using rule 300 (alterAlter -> R_COLUMN ID R_SET defaultVal .)


state 704

    (301) alterAlter -> R_COLUMN ID R_TYPE types .

    S_COMA          reduce using rule 301 (alterAlter -> R_COLUMN ID R_TYPE types .)
    S_PUNTOCOMA     reduce using rule 301 (alterAlter -> R_COLUMN ID R_TYPE types .)


state 705

    (298) alterAdd -> constrName R_UNIQUE S_PARIZQ ID . S_PARDER

    S_PARDER        shift and go to state 767


state 706

    (85) createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck . S_PARDER

    S_PARDER        shift and go to state 768


state 707

    (264) booleanCheck -> idOrLiteral . OL_MENORQUE idOrLiteral
    (265) booleanCheck -> idOrLiteral . OL_MAYORQUE idOrLiteral
    (266) booleanCheck -> idOrLiteral . OL_MAYORIGUALQUE idOrLiteral
    (267) booleanCheck -> idOrLiteral . OL_MENORIGUALQUE idOrLiteral
    (268) booleanCheck -> idOrLiteral . S_IGUAL idOrLiteral
    (269) booleanCheck -> idOrLiteral . OL_DISTINTODE idOrLiteral
    (270) booleanCheck -> idOrLiteral . R_IS R_DISTINCT R_FROM idOrLiteral
    (271) booleanCheck -> idOrLiteral . R_IS R_NOT R_DISTINCT R_FROM idOrLiteral

    OL_MENORQUE     shift and go to state 769
    OL_MAYORQUE     shift and go to state 770
    OL_MAYORIGUALQUE shift and go to state 771
    OL_MENORIGUALQUE shift and go to state 772
    S_IGUAL         shift and go to state 773
    OL_DISTINTODE   shift and go to state 774
    R_IS            shift and go to state 775


state 708

    (272) idOrLiteral -> ID .

    OL_MENORQUE     reduce using rule 272 (idOrLiteral -> ID .)
    OL_MAYORQUE     reduce using rule 272 (idOrLiteral -> ID .)
    OL_MAYORIGUALQUE reduce using rule 272 (idOrLiteral -> ID .)
    OL_MENORIGUALQUE reduce using rule 272 (idOrLiteral -> ID .)
    S_IGUAL         reduce using rule 272 (idOrLiteral -> ID .)
    OL_DISTINTODE   reduce using rule 272 (idOrLiteral -> ID .)
    R_IS            reduce using rule 272 (idOrLiteral -> ID .)
    S_PARDER        reduce using rule 272 (idOrLiteral -> ID .)


state 709

    (273) idOrLiteral -> INTEGER .

    OL_MENORQUE     reduce using rule 273 (idOrLiteral -> INTEGER .)
    OL_MAYORQUE     reduce using rule 273 (idOrLiteral -> INTEGER .)
    OL_MAYORIGUALQUE reduce using rule 273 (idOrLiteral -> INTEGER .)
    OL_MENORIGUALQUE reduce using rule 273 (idOrLiteral -> INTEGER .)
    S_IGUAL         reduce using rule 273 (idOrLiteral -> INTEGER .)
    OL_DISTINTODE   reduce using rule 273 (idOrLiteral -> INTEGER .)
    R_IS            reduce using rule 273 (idOrLiteral -> INTEGER .)
    S_PARDER        reduce using rule 273 (idOrLiteral -> INTEGER .)


state 710

    (274) idOrLiteral -> STRING .

    OL_MENORQUE     reduce using rule 274 (idOrLiteral -> STRING .)
    OL_MAYORQUE     reduce using rule 274 (idOrLiteral -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 274 (idOrLiteral -> STRING .)
    OL_MENORIGUALQUE reduce using rule 274 (idOrLiteral -> STRING .)
    S_IGUAL         reduce using rule 274 (idOrLiteral -> STRING .)
    OL_DISTINTODE   reduce using rule 274 (idOrLiteral -> STRING .)
    R_IS            reduce using rule 274 (idOrLiteral -> STRING .)
    S_PARDER        reduce using rule 274 (idOrLiteral -> STRING .)


state 711

    (275) idOrLiteral -> DECIMAL .

    OL_MENORQUE     reduce using rule 275 (idOrLiteral -> DECIMAL .)
    OL_MAYORQUE     reduce using rule 275 (idOrLiteral -> DECIMAL .)
    OL_MAYORIGUALQUE reduce using rule 275 (idOrLiteral -> DECIMAL .)
    OL_MENORIGUALQUE reduce using rule 275 (idOrLiteral -> DECIMAL .)
    S_IGUAL         reduce using rule 275 (idOrLiteral -> DECIMAL .)
    OL_DISTINTODE   reduce using rule 275 (idOrLiteral -> DECIMAL .)
    R_IS            reduce using rule 275 (idOrLiteral -> DECIMAL .)
    S_PARDER        reduce using rule 275 (idOrLiteral -> DECIMAL .)


state 712

    (276) idOrLiteral -> CHARACTER .

    OL_MENORQUE     reduce using rule 276 (idOrLiteral -> CHARACTER .)
    OL_MAYORQUE     reduce using rule 276 (idOrLiteral -> CHARACTER .)
    OL_MAYORIGUALQUE reduce using rule 276 (idOrLiteral -> CHARACTER .)
    OL_MENORIGUALQUE reduce using rule 276 (idOrLiteral -> CHARACTER .)
    S_IGUAL         reduce using rule 276 (idOrLiteral -> CHARACTER .)
    OL_DISTINTODE   reduce using rule 276 (idOrLiteral -> CHARACTER .)
    R_IS            reduce using rule 276 (idOrLiteral -> CHARACTER .)
    S_PARDER        reduce using rule 276 (idOrLiteral -> CHARACTER .)


state 713

    (277) idOrLiteral -> R_TRUE .

    OL_MENORQUE     reduce using rule 277 (idOrLiteral -> R_TRUE .)
    OL_MAYORQUE     reduce using rule 277 (idOrLiteral -> R_TRUE .)
    OL_MAYORIGUALQUE reduce using rule 277 (idOrLiteral -> R_TRUE .)
    OL_MENORIGUALQUE reduce using rule 277 (idOrLiteral -> R_TRUE .)
    S_IGUAL         reduce using rule 277 (idOrLiteral -> R_TRUE .)
    OL_DISTINTODE   reduce using rule 277 (idOrLiteral -> R_TRUE .)
    R_IS            reduce using rule 277 (idOrLiteral -> R_TRUE .)
    S_PARDER        reduce using rule 277 (idOrLiteral -> R_TRUE .)


state 714

    (278) idOrLiteral -> R_FALSE .

    OL_MENORQUE     reduce using rule 278 (idOrLiteral -> R_FALSE .)
    OL_MAYORQUE     reduce using rule 278 (idOrLiteral -> R_FALSE .)
    OL_MAYORIGUALQUE reduce using rule 278 (idOrLiteral -> R_FALSE .)
    OL_MENORIGUALQUE reduce using rule 278 (idOrLiteral -> R_FALSE .)
    S_IGUAL         reduce using rule 278 (idOrLiteral -> R_FALSE .)
    OL_DISTINTODE   reduce using rule 278 (idOrLiteral -> R_FALSE .)
    R_IS            reduce using rule 278 (idOrLiteral -> R_FALSE .)
    S_PARDER        reduce using rule 278 (idOrLiteral -> R_FALSE .)


state 715

    (88) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ . idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (91) idList -> . idList S_COMA ID
    (92) idList -> . ID

    ID              shift and go to state 381

    idList                         shift and go to state 776

state 716

    (87) createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList . S_PARDER
    (91) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 777
    S_COMA          shift and go to state 512


state 717

    (304) alterRename -> R_COLUMN ID R_TO ID .

    S_COMA          reduce using rule 304 (alterRename -> R_COLUMN ID R_TO ID .)
    S_PUNTOCOMA     reduce using rule 304 (alterRename -> R_COLUMN ID R_TO ID .)


state 718

    (382) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER .

    S_PUNTOCOMA     reduce using rule 382 (insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER .)


state 719

    (315) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .

    S_PUNTOCOMA     reduce using rule 315 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_UNION         reduce using rule 315 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_INTERSECT     reduce using rule 315 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_EXCEPT        reduce using rule 315 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    S_PARDER        reduce using rule 315 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)


state 720

    (377) limitCl -> R_LIMIT INTEGER . offsetLimit
    (380) offsetLimit -> . R_OFFSET INTEGER
    (381) offsetLimit -> .

    R_OFFSET        shift and go to state 779
    S_PUNTOCOMA     reduce using rule 381 (offsetLimit -> .)
    R_UNION         reduce using rule 381 (offsetLimit -> .)
    R_INTERSECT     reduce using rule 381 (offsetLimit -> .)
    R_EXCEPT        reduce using rule 381 (offsetLimit -> .)
    S_PARDER        reduce using rule 381 (offsetLimit -> .)

    offsetLimit                    shift and go to state 778

state 721

    (378) limitCl -> R_LIMIT R_ALL . offsetLimit
    (380) offsetLimit -> . R_OFFSET INTEGER
    (381) offsetLimit -> .

    R_OFFSET        shift and go to state 779
    S_PUNTOCOMA     reduce using rule 381 (offsetLimit -> .)
    R_UNION         reduce using rule 381 (offsetLimit -> .)
    R_INTERSECT     reduce using rule 381 (offsetLimit -> .)
    R_EXCEPT        reduce using rule 381 (offsetLimit -> .)
    S_PARDER        reduce using rule 381 (offsetLimit -> .)

    offsetLimit                    shift and go to state 780

state 722

    (365) orderByCl -> R_ORDER R_BY orderList .
    (367) orderList -> orderList . S_COMA orderByElem

    R_LIMIT         reduce using rule 365 (orderByCl -> R_ORDER R_BY orderList .)
    S_PUNTOCOMA     reduce using rule 365 (orderByCl -> R_ORDER R_BY orderList .)
    R_UNION         reduce using rule 365 (orderByCl -> R_ORDER R_BY orderList .)
    R_INTERSECT     reduce using rule 365 (orderByCl -> R_ORDER R_BY orderList .)
    R_EXCEPT        reduce using rule 365 (orderByCl -> R_ORDER R_BY orderList .)
    S_PARDER        reduce using rule 365 (orderByCl -> R_ORDER R_BY orderList .)
    S_COMA          shift and go to state 781


state 723

    (368) orderList -> orderByElem .

    S_COMA          reduce using rule 368 (orderList -> orderByElem .)
    R_LIMIT         reduce using rule 368 (orderList -> orderByElem .)
    S_PUNTOCOMA     reduce using rule 368 (orderList -> orderByElem .)
    R_UNION         reduce using rule 368 (orderList -> orderByElem .)
    R_INTERSECT     reduce using rule 368 (orderList -> orderByElem .)
    R_EXCEPT        reduce using rule 368 (orderList -> orderByElem .)
    S_PARDER        reduce using rule 368 (orderList -> orderByElem .)


state 724

    (369) orderByElem -> columnName . orderOpts orderNull
    (371) orderOpts -> . R_ASC
    (372) orderOpts -> . R_DESC
    (373) orderOpts -> .

    R_ASC           shift and go to state 783
    R_DESC          shift and go to state 784
    R_NULL          reduce using rule 373 (orderOpts -> .)
    S_COMA          reduce using rule 373 (orderOpts -> .)
    R_LIMIT         reduce using rule 373 (orderOpts -> .)
    S_PUNTOCOMA     reduce using rule 373 (orderOpts -> .)
    R_UNION         reduce using rule 373 (orderOpts -> .)
    R_INTERSECT     reduce using rule 373 (orderOpts -> .)
    R_EXCEPT        reduce using rule 373 (orderOpts -> .)
    S_PARDER        reduce using rule 373 (orderOpts -> .)

    orderOpts                      shift and go to state 782

state 725

    (370) orderByElem -> INTEGER . orderOpts orderNull
    (371) orderOpts -> . R_ASC
    (372) orderOpts -> . R_DESC
    (373) orderOpts -> .

    R_ASC           shift and go to state 783
    R_DESC          shift and go to state 784
    R_NULL          reduce using rule 373 (orderOpts -> .)
    S_COMA          reduce using rule 373 (orderOpts -> .)
    R_LIMIT         reduce using rule 373 (orderOpts -> .)
    S_PUNTOCOMA     reduce using rule 373 (orderOpts -> .)
    R_UNION         reduce using rule 373 (orderOpts -> .)
    R_INTERSECT     reduce using rule 373 (orderOpts -> .)
    R_EXCEPT        reduce using rule 373 (orderOpts -> .)
    S_PARDER        reduce using rule 373 (orderOpts -> .)

    orderOpts                      shift and go to state 785

state 726

    (357) groupByCl -> R_GROUP R_BY groupList havingCl .

    R_ORDER         reduce using rule 357 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_LIMIT         reduce using rule 357 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    S_PUNTOCOMA     reduce using rule 357 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_UNION         reduce using rule 357 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_INTERSECT     reduce using rule 357 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_EXCEPT        reduce using rule 357 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    S_PARDER        reduce using rule 357 (groupByCl -> R_GROUP R_BY groupList havingCl .)


state 727

    (359) groupList -> groupList S_COMA . columnName
    (360) groupList -> groupList S_COMA . INTEGER
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 787
    ID              shift and go to state 524

    columnName                     shift and go to state 786

state 728

    (363) havingCl -> R_HAVING . expBool
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 100
    S_PARIZQ        shift and go to state 213
    R_EXISTS        shift and go to state 118
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    expBool                        shift and go to state 788
    boolean                        shift and go to state 101
    datatype                       shift and go to state 214
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    columnName                     shift and go to state 94
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    stringExp                      shift and go to state 123
    timeStamp                      shift and go to state 114

state 729

    (317) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .

    S_PUNTOCOMA     reduce using rule 317 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    R_UNION         reduce using rule 317 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    R_INTERSECT     reduce using rule 317 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    R_EXCEPT        reduce using rule 317 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    S_PARDER        reduce using rule 317 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)


state 730

    (343) joinCl -> joinOpt R_JOIN columnName optAlias R_ON . expBool
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 100
    S_PARIZQ        shift and go to state 213
    R_EXISTS        shift and go to state 118
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    columnName                     shift and go to state 94
    expBool                        shift and go to state 789
    boolean                        shift and go to state 101
    datatype                       shift and go to state 214
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    stringExp                      shift and go to state 123
    timeStamp                      shift and go to state 114

state 731

    (344) joinCl -> joinOpt R_JOIN columnName optAlias R_USING . S_PARIZQ nameList S_PARDER

    S_PARIZQ        shift and go to state 790


state 732

    (345) joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .

    R_NATURAL       reduce using rule 345 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_INNER         reduce using rule 345 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_LEFT          reduce using rule 345 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_RIGHT         reduce using rule 345 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_FULL          reduce using rule 345 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_WHERE         reduce using rule 345 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_GROUP         reduce using rule 345 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_ORDER         reduce using rule 345 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_LIMIT         reduce using rule 345 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    S_PUNTOCOMA     reduce using rule 345 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_UNION         reduce using rule 345 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_INTERSECT     reduce using rule 345 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_EXCEPT        reduce using rule 345 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    S_PARDER        reduce using rule 345 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)


state 733

    (225) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 791


state 734

    (227) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 792

state 735

    (228) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 793


state 736

    (230) expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 794
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 737

    (234) expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 795
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 738

    (236) expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 796
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 739

    (238) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 797
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 740

    (229) expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 229 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)


state 741

    (233) expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 233 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 742

    (235) expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 235 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)


state 743

    (237) expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 237 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)


state 744

    (224) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 798

state 745

    (226) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 799


state 746

    (160) dateSource -> R_NOW S_PARIZQ S_PARDER .

    S_PARDER        reduce using rule 160 (dateSource -> R_NOW S_PARIZQ S_PARDER .)


state 747

    (25) elsif_ -> R_ELSIF S_PARIZQ expresion . S_PARDER R_THEN List_body

    S_PARDER        shift and go to state 800


state 748

    (41) body -> ifStmt R_END R_IF S_PUNTOCOMA .

    R_ELSE          reduce using rule 41 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_CREATE        reduce using rule 41 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_SHOW          reduce using rule 41 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_ALTER         reduce using rule 41 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_DROP          reduce using rule 41 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_INSERT        reduce using rule 41 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 41 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_DELETE        reduce using rule 41 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 41 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_USE           reduce using rule 41 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_SELECT        reduce using rule 41 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 41 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 41 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_IF            reduce using rule 41 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    ID              reduce using rule 41 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 41 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_END           reduce using rule 41 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)


state 749

    (119) optParams -> S_PARIZQ literalList S_PARDER .

    S_PARDER        reduce using rule 119 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_COMA          reduce using rule 119 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_AS            reduce using rule 119 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_DEFAULT       reduce using rule 119 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_NOT           reduce using rule 119 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_NULL          reduce using rule 119 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_PRIMARY       reduce using rule 119 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_REFERENCES    reduce using rule 119 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_CONSTRAINT    reduce using rule 119 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_UNIQUE        reduce using rule 119 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_CHECK         reduce using rule 119 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 119 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_DOSPUNTOS     reduce using rule 119 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_IGUAL         reduce using rule 119 (optParams -> S_PARIZQ literalList S_PARDER .)


state 750

    (164) literalList -> literalList S_COMA . literal
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL

    INTEGER         shift and go to state 102
    STRING          shift and go to state 207
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108

    literal                        shift and go to state 801

state 751

    (399) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR . S_DOLAR bloqueFunction

    S_DOLAR         shift and go to state 802


state 752

    (400) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR . bloqueFunction
    (401) bloqueFunction -> . declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd
    (407) declareStmt -> . R_DECLARE declaracion_list
    (408) declareStmt -> .

    R_DECLARE       shift and go to state 805
    R_BEGIN         reduce using rule 408 (declareStmt -> .)

    bloqueFunction                 shift and go to state 803
    declareStmt                    shift and go to state 804

state 753

    (434) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS . S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure

    S_DOLAR         shift and go to state 806


state 754

    (435) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR . S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure

    S_DOLAR         shift and go to state 807


state 755

    (74) createMode -> R_MODE S_IGUAL INTEGER .

    S_PUNTOCOMA     reduce using rule 74 (createMode -> R_MODE S_IGUAL INTEGER .)


state 756

    (48) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList . indexasc_desc indexNullS S_PARDER whereCl
    (91) idList -> idList . S_COMA ID
    (56) indexasc_desc -> . R_DESC
    (57) indexasc_desc -> . R_ASC
    (58) indexasc_desc -> .

    S_COMA          shift and go to state 512
    R_DESC          shift and go to state 809
    R_ASC           shift and go to state 810
    R_NULLS         reduce using rule 58 (indexasc_desc -> .)
    S_PARDER        reduce using rule 58 (indexasc_desc -> .)

    indexasc_desc                  shift and go to state 808

state 757

    (66) inheritsOpt -> R_INHERITS S_PARIZQ . ID S_PARDER

    ID              shift and go to state 811


state 758

    (121) colOptionsList -> colOptionsList colOptions .

    R_DEFAULT       reduce using rule 121 (colOptionsList -> colOptionsList colOptions .)
    R_NOT           reduce using rule 121 (colOptionsList -> colOptionsList colOptions .)
    R_NULL          reduce using rule 121 (colOptionsList -> colOptionsList colOptions .)
    R_PRIMARY       reduce using rule 121 (colOptionsList -> colOptionsList colOptions .)
    R_REFERENCES    reduce using rule 121 (colOptionsList -> colOptionsList colOptions .)
    R_CONSTRAINT    reduce using rule 121 (colOptionsList -> colOptionsList colOptions .)
    R_UNIQUE        reduce using rule 121 (colOptionsList -> colOptionsList colOptions .)
    R_CHECK         reduce using rule 121 (colOptionsList -> colOptionsList colOptions .)
    S_PARDER        reduce using rule 121 (colOptionsList -> colOptionsList colOptions .)
    S_COMA          reduce using rule 121 (colOptionsList -> colOptionsList colOptions .)


state 759

    (128) defaultVal -> R_DEFAULT literal .

    R_DEFAULT       reduce using rule 128 (defaultVal -> R_DEFAULT literal .)
    R_NOT           reduce using rule 128 (defaultVal -> R_DEFAULT literal .)
    R_NULL          reduce using rule 128 (defaultVal -> R_DEFAULT literal .)
    R_PRIMARY       reduce using rule 128 (defaultVal -> R_DEFAULT literal .)
    R_REFERENCES    reduce using rule 128 (defaultVal -> R_DEFAULT literal .)
    R_CONSTRAINT    reduce using rule 128 (defaultVal -> R_DEFAULT literal .)
    R_UNIQUE        reduce using rule 128 (defaultVal -> R_DEFAULT literal .)
    R_CHECK         reduce using rule 128 (defaultVal -> R_DEFAULT literal .)
    S_PARDER        reduce using rule 128 (defaultVal -> R_DEFAULT literal .)
    S_COMA          reduce using rule 128 (defaultVal -> R_DEFAULT literal .)
    S_PUNTOCOMA     reduce using rule 128 (defaultVal -> R_DEFAULT literal .)


state 760

    (129) nullOpt -> R_NOT R_NULL .

    R_DEFAULT       reduce using rule 129 (nullOpt -> R_NOT R_NULL .)
    R_NOT           reduce using rule 129 (nullOpt -> R_NOT R_NULL .)
    R_NULL          reduce using rule 129 (nullOpt -> R_NOT R_NULL .)
    R_PRIMARY       reduce using rule 129 (nullOpt -> R_NOT R_NULL .)
    R_REFERENCES    reduce using rule 129 (nullOpt -> R_NOT R_NULL .)
    R_CONSTRAINT    reduce using rule 129 (nullOpt -> R_NOT R_NULL .)
    R_UNIQUE        reduce using rule 129 (nullOpt -> R_NOT R_NULL .)
    R_CHECK         reduce using rule 129 (nullOpt -> R_NOT R_NULL .)
    S_PARDER        reduce using rule 129 (nullOpt -> R_NOT R_NULL .)
    S_COMA          reduce using rule 129 (nullOpt -> R_NOT R_NULL .)
    S_PUNTOCOMA     reduce using rule 129 (nullOpt -> R_NOT R_NULL .)


state 761

    (131) constraintOpt -> constrName R_UNIQUE .

    R_DEFAULT       reduce using rule 131 (constraintOpt -> constrName R_UNIQUE .)
    R_NOT           reduce using rule 131 (constraintOpt -> constrName R_UNIQUE .)
    R_NULL          reduce using rule 131 (constraintOpt -> constrName R_UNIQUE .)
    R_PRIMARY       reduce using rule 131 (constraintOpt -> constrName R_UNIQUE .)
    R_REFERENCES    reduce using rule 131 (constraintOpt -> constrName R_UNIQUE .)
    R_CONSTRAINT    reduce using rule 131 (constraintOpt -> constrName R_UNIQUE .)
    R_UNIQUE        reduce using rule 131 (constraintOpt -> constrName R_UNIQUE .)
    R_CHECK         reduce using rule 131 (constraintOpt -> constrName R_UNIQUE .)
    S_PARDER        reduce using rule 131 (constraintOpt -> constrName R_UNIQUE .)
    S_COMA          reduce using rule 131 (constraintOpt -> constrName R_UNIQUE .)


state 762

    (132) constraintOpt -> constrName R_CHECK . S_PARIZQ booleanCheck S_PARDER

    S_PARIZQ        shift and go to state 812


state 763

    (133) primaryOpt -> R_PRIMARY R_KEY .

    R_DEFAULT       reduce using rule 133 (primaryOpt -> R_PRIMARY R_KEY .)
    R_NOT           reduce using rule 133 (primaryOpt -> R_PRIMARY R_KEY .)
    R_NULL          reduce using rule 133 (primaryOpt -> R_PRIMARY R_KEY .)
    R_PRIMARY       reduce using rule 133 (primaryOpt -> R_PRIMARY R_KEY .)
    R_REFERENCES    reduce using rule 133 (primaryOpt -> R_PRIMARY R_KEY .)
    R_CONSTRAINT    reduce using rule 133 (primaryOpt -> R_PRIMARY R_KEY .)
    R_UNIQUE        reduce using rule 133 (primaryOpt -> R_PRIMARY R_KEY .)
    R_CHECK         reduce using rule 133 (primaryOpt -> R_PRIMARY R_KEY .)
    S_PARDER        reduce using rule 133 (primaryOpt -> R_PRIMARY R_KEY .)
    S_COMA          reduce using rule 133 (primaryOpt -> R_PRIMARY R_KEY .)


state 764

    (134) referencesOpt -> R_REFERENCES ID .

    R_DEFAULT       reduce using rule 134 (referencesOpt -> R_REFERENCES ID .)
    R_NOT           reduce using rule 134 (referencesOpt -> R_REFERENCES ID .)
    R_NULL          reduce using rule 134 (referencesOpt -> R_REFERENCES ID .)
    R_PRIMARY       reduce using rule 134 (referencesOpt -> R_REFERENCES ID .)
    R_REFERENCES    reduce using rule 134 (referencesOpt -> R_REFERENCES ID .)
    R_CONSTRAINT    reduce using rule 134 (referencesOpt -> R_REFERENCES ID .)
    R_UNIQUE        reduce using rule 134 (referencesOpt -> R_REFERENCES ID .)
    R_CHECK         reduce using rule 134 (referencesOpt -> R_REFERENCES ID .)
    S_PARDER        reduce using rule 134 (referencesOpt -> R_REFERENCES ID .)
    S_COMA          reduce using rule 134 (referencesOpt -> R_REFERENCES ID .)


state 765

    (86) createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .

    S_PARDER        reduce using rule 86 (createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .)
    S_COMA          reduce using rule 86 (createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .)


state 766

    (63) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER .

    S_PUNTOCOMA     reduce using rule 63 (createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER .)


state 767

    (298) alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .

    S_COMA          reduce using rule 298 (alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .)
    S_PUNTOCOMA     reduce using rule 298 (alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .)


state 768

    (85) createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .

    S_COMA          reduce using rule 85 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PUNTOCOMA     reduce using rule 85 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PARDER        reduce using rule 85 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)


state 769

    (264) booleanCheck -> idOrLiteral OL_MENORQUE . idOrLiteral
    (272) idOrLiteral -> . ID
    (273) idOrLiteral -> . INTEGER
    (274) idOrLiteral -> . STRING
    (275) idOrLiteral -> . DECIMAL
    (276) idOrLiteral -> . CHARACTER
    (277) idOrLiteral -> . R_TRUE
    (278) idOrLiteral -> . R_FALSE

    ID              shift and go to state 708
    INTEGER         shift and go to state 709
    STRING          shift and go to state 710
    DECIMAL         shift and go to state 711
    CHARACTER       shift and go to state 712
    R_TRUE          shift and go to state 713
    R_FALSE         shift and go to state 714

    idOrLiteral                    shift and go to state 813

state 770

    (265) booleanCheck -> idOrLiteral OL_MAYORQUE . idOrLiteral
    (272) idOrLiteral -> . ID
    (273) idOrLiteral -> . INTEGER
    (274) idOrLiteral -> . STRING
    (275) idOrLiteral -> . DECIMAL
    (276) idOrLiteral -> . CHARACTER
    (277) idOrLiteral -> . R_TRUE
    (278) idOrLiteral -> . R_FALSE

    ID              shift and go to state 708
    INTEGER         shift and go to state 709
    STRING          shift and go to state 710
    DECIMAL         shift and go to state 711
    CHARACTER       shift and go to state 712
    R_TRUE          shift and go to state 713
    R_FALSE         shift and go to state 714

    idOrLiteral                    shift and go to state 814

state 771

    (266) booleanCheck -> idOrLiteral OL_MAYORIGUALQUE . idOrLiteral
    (272) idOrLiteral -> . ID
    (273) idOrLiteral -> . INTEGER
    (274) idOrLiteral -> . STRING
    (275) idOrLiteral -> . DECIMAL
    (276) idOrLiteral -> . CHARACTER
    (277) idOrLiteral -> . R_TRUE
    (278) idOrLiteral -> . R_FALSE

    ID              shift and go to state 708
    INTEGER         shift and go to state 709
    STRING          shift and go to state 710
    DECIMAL         shift and go to state 711
    CHARACTER       shift and go to state 712
    R_TRUE          shift and go to state 713
    R_FALSE         shift and go to state 714

    idOrLiteral                    shift and go to state 815

state 772

    (267) booleanCheck -> idOrLiteral OL_MENORIGUALQUE . idOrLiteral
    (272) idOrLiteral -> . ID
    (273) idOrLiteral -> . INTEGER
    (274) idOrLiteral -> . STRING
    (275) idOrLiteral -> . DECIMAL
    (276) idOrLiteral -> . CHARACTER
    (277) idOrLiteral -> . R_TRUE
    (278) idOrLiteral -> . R_FALSE

    ID              shift and go to state 708
    INTEGER         shift and go to state 709
    STRING          shift and go to state 710
    DECIMAL         shift and go to state 711
    CHARACTER       shift and go to state 712
    R_TRUE          shift and go to state 713
    R_FALSE         shift and go to state 714

    idOrLiteral                    shift and go to state 816

state 773

    (268) booleanCheck -> idOrLiteral S_IGUAL . idOrLiteral
    (272) idOrLiteral -> . ID
    (273) idOrLiteral -> . INTEGER
    (274) idOrLiteral -> . STRING
    (275) idOrLiteral -> . DECIMAL
    (276) idOrLiteral -> . CHARACTER
    (277) idOrLiteral -> . R_TRUE
    (278) idOrLiteral -> . R_FALSE

    ID              shift and go to state 708
    INTEGER         shift and go to state 709
    STRING          shift and go to state 710
    DECIMAL         shift and go to state 711
    CHARACTER       shift and go to state 712
    R_TRUE          shift and go to state 713
    R_FALSE         shift and go to state 714

    idOrLiteral                    shift and go to state 817

state 774

    (269) booleanCheck -> idOrLiteral OL_DISTINTODE . idOrLiteral
    (272) idOrLiteral -> . ID
    (273) idOrLiteral -> . INTEGER
    (274) idOrLiteral -> . STRING
    (275) idOrLiteral -> . DECIMAL
    (276) idOrLiteral -> . CHARACTER
    (277) idOrLiteral -> . R_TRUE
    (278) idOrLiteral -> . R_FALSE

    ID              shift and go to state 708
    INTEGER         shift and go to state 709
    STRING          shift and go to state 710
    DECIMAL         shift and go to state 711
    CHARACTER       shift and go to state 712
    R_TRUE          shift and go to state 713
    R_FALSE         shift and go to state 714

    idOrLiteral                    shift and go to state 818

state 775

    (270) booleanCheck -> idOrLiteral R_IS . R_DISTINCT R_FROM idOrLiteral
    (271) booleanCheck -> idOrLiteral R_IS . R_NOT R_DISTINCT R_FROM idOrLiteral

    R_DISTINCT      shift and go to state 819
    R_NOT           shift and go to state 820


state 776

    (88) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList . S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (91) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 821
    S_COMA          shift and go to state 512


state 777

    (87) createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .

    S_COMA          reduce using rule 87 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 87 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)
    S_PARDER        reduce using rule 87 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)


state 778

    (377) limitCl -> R_LIMIT INTEGER offsetLimit .

    S_PUNTOCOMA     reduce using rule 377 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_UNION         reduce using rule 377 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_INTERSECT     reduce using rule 377 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_EXCEPT        reduce using rule 377 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    S_PARDER        reduce using rule 377 (limitCl -> R_LIMIT INTEGER offsetLimit .)


state 779

    (380) offsetLimit -> R_OFFSET . INTEGER

    INTEGER         shift and go to state 822


state 780

    (378) limitCl -> R_LIMIT R_ALL offsetLimit .

    S_PUNTOCOMA     reduce using rule 378 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_UNION         reduce using rule 378 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_INTERSECT     reduce using rule 378 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_EXCEPT        reduce using rule 378 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    S_PARDER        reduce using rule 378 (limitCl -> R_LIMIT R_ALL offsetLimit .)


state 781

    (367) orderList -> orderList S_COMA . orderByElem
    (369) orderByElem -> . columnName orderOpts orderNull
    (370) orderByElem -> . INTEGER orderOpts orderNull
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 725
    ID              shift and go to state 524

    orderByElem                    shift and go to state 823
    columnName                     shift and go to state 724

state 782

    (369) orderByElem -> columnName orderOpts . orderNull
    (374) orderNull -> . R_NULL R_FIRST
    (375) orderNull -> . R_NULL R_LAST
    (376) orderNull -> .

    R_NULL          shift and go to state 825
    S_COMA          reduce using rule 376 (orderNull -> .)
    R_LIMIT         reduce using rule 376 (orderNull -> .)
    S_PUNTOCOMA     reduce using rule 376 (orderNull -> .)
    R_UNION         reduce using rule 376 (orderNull -> .)
    R_INTERSECT     reduce using rule 376 (orderNull -> .)
    R_EXCEPT        reduce using rule 376 (orderNull -> .)
    S_PARDER        reduce using rule 376 (orderNull -> .)

    orderNull                      shift and go to state 824

state 783

    (371) orderOpts -> R_ASC .

    R_NULL          reduce using rule 371 (orderOpts -> R_ASC .)
    S_COMA          reduce using rule 371 (orderOpts -> R_ASC .)
    R_LIMIT         reduce using rule 371 (orderOpts -> R_ASC .)
    S_PUNTOCOMA     reduce using rule 371 (orderOpts -> R_ASC .)
    R_UNION         reduce using rule 371 (orderOpts -> R_ASC .)
    R_INTERSECT     reduce using rule 371 (orderOpts -> R_ASC .)
    R_EXCEPT        reduce using rule 371 (orderOpts -> R_ASC .)
    S_PARDER        reduce using rule 371 (orderOpts -> R_ASC .)


state 784

    (372) orderOpts -> R_DESC .

    R_NULL          reduce using rule 372 (orderOpts -> R_DESC .)
    S_COMA          reduce using rule 372 (orderOpts -> R_DESC .)
    R_LIMIT         reduce using rule 372 (orderOpts -> R_DESC .)
    S_PUNTOCOMA     reduce using rule 372 (orderOpts -> R_DESC .)
    R_UNION         reduce using rule 372 (orderOpts -> R_DESC .)
    R_INTERSECT     reduce using rule 372 (orderOpts -> R_DESC .)
    R_EXCEPT        reduce using rule 372 (orderOpts -> R_DESC .)
    S_PARDER        reduce using rule 372 (orderOpts -> R_DESC .)


state 785

    (370) orderByElem -> INTEGER orderOpts . orderNull
    (374) orderNull -> . R_NULL R_FIRST
    (375) orderNull -> . R_NULL R_LAST
    (376) orderNull -> .

    R_NULL          shift and go to state 825
    S_COMA          reduce using rule 376 (orderNull -> .)
    R_LIMIT         reduce using rule 376 (orderNull -> .)
    S_PUNTOCOMA     reduce using rule 376 (orderNull -> .)
    R_UNION         reduce using rule 376 (orderNull -> .)
    R_INTERSECT     reduce using rule 376 (orderNull -> .)
    R_EXCEPT        reduce using rule 376 (orderNull -> .)
    S_PARDER        reduce using rule 376 (orderNull -> .)

    orderNull                      shift and go to state 826

state 786

    (359) groupList -> groupList S_COMA columnName .

    S_COMA          reduce using rule 359 (groupList -> groupList S_COMA columnName .)
    R_HAVING        reduce using rule 359 (groupList -> groupList S_COMA columnName .)
    R_ORDER         reduce using rule 359 (groupList -> groupList S_COMA columnName .)
    R_LIMIT         reduce using rule 359 (groupList -> groupList S_COMA columnName .)
    S_PUNTOCOMA     reduce using rule 359 (groupList -> groupList S_COMA columnName .)
    R_UNION         reduce using rule 359 (groupList -> groupList S_COMA columnName .)
    R_INTERSECT     reduce using rule 359 (groupList -> groupList S_COMA columnName .)
    R_EXCEPT        reduce using rule 359 (groupList -> groupList S_COMA columnName .)
    S_PARDER        reduce using rule 359 (groupList -> groupList S_COMA columnName .)


state 787

    (360) groupList -> groupList S_COMA INTEGER .

    S_COMA          reduce using rule 360 (groupList -> groupList S_COMA INTEGER .)
    R_HAVING        reduce using rule 360 (groupList -> groupList S_COMA INTEGER .)
    R_ORDER         reduce using rule 360 (groupList -> groupList S_COMA INTEGER .)
    R_LIMIT         reduce using rule 360 (groupList -> groupList S_COMA INTEGER .)
    S_PUNTOCOMA     reduce using rule 360 (groupList -> groupList S_COMA INTEGER .)
    R_UNION         reduce using rule 360 (groupList -> groupList S_COMA INTEGER .)
    R_INTERSECT     reduce using rule 360 (groupList -> groupList S_COMA INTEGER .)
    R_EXCEPT        reduce using rule 360 (groupList -> groupList S_COMA INTEGER .)
    S_PARDER        reduce using rule 360 (groupList -> groupList S_COMA INTEGER .)


state 788

    (363) havingCl -> R_HAVING expBool .
    (250) expBool -> expBool . R_AND expBool
    (251) expBool -> expBool . R_OR expBool
    (254) expBool -> expBool . optBoolPredicate
    (256) optBoolPredicate -> . R_IS R_TRUE
    (257) optBoolPredicate -> . R_IS R_FALSE
    (258) optBoolPredicate -> . R_IS R_UNKNOWN
    (259) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (260) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (261) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_ORDER         reduce using rule 363 (havingCl -> R_HAVING expBool .)
    R_LIMIT         reduce using rule 363 (havingCl -> R_HAVING expBool .)
    S_PUNTOCOMA     reduce using rule 363 (havingCl -> R_HAVING expBool .)
    R_UNION         reduce using rule 363 (havingCl -> R_HAVING expBool .)
    R_INTERSECT     reduce using rule 363 (havingCl -> R_HAVING expBool .)
    R_EXCEPT        reduce using rule 363 (havingCl -> R_HAVING expBool .)
    S_PARDER        reduce using rule 363 (havingCl -> R_HAVING expBool .)
    R_AND           shift and go to state 196
    R_OR            shift and go to state 197
    R_IS            shift and go to state 199

    optBoolPredicate               shift and go to state 198

state 789

    (343) joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .
    (250) expBool -> expBool . R_AND expBool
    (251) expBool -> expBool . R_OR expBool
    (254) expBool -> expBool . optBoolPredicate
    (256) optBoolPredicate -> . R_IS R_TRUE
    (257) optBoolPredicate -> . R_IS R_FALSE
    (258) optBoolPredicate -> . R_IS R_UNKNOWN
    (259) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (260) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (261) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_NATURAL       reduce using rule 343 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_INNER         reduce using rule 343 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_LEFT          reduce using rule 343 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_RIGHT         reduce using rule 343 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_FULL          reduce using rule 343 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_WHERE         reduce using rule 343 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_GROUP         reduce using rule 343 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_ORDER         reduce using rule 343 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_LIMIT         reduce using rule 343 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    S_PUNTOCOMA     reduce using rule 343 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_UNION         reduce using rule 343 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_INTERSECT     reduce using rule 343 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_EXCEPT        reduce using rule 343 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    S_PARDER        reduce using rule 343 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_AND           shift and go to state 196
    R_OR            shift and go to state 197
    R_IS            shift and go to state 199

    optBoolPredicate               shift and go to state 198

state 790

    (344) joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ . nameList S_PARDER
    (346) nameList -> . nameList S_COMA columnName
    (347) nameList -> . columnName
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 524

    columnName                     shift and go to state 827
    nameList                       shift and go to state 828

state 791

    (225) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 829

state 792

    (227) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 830
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 793

    (228) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 831

state 794

    (230) expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)


state 795

    (234) expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 796

    (236) expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)


state 797

    (238) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 238 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)


state 798

    (224) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 832
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 799

    (226) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25

    selectStmt                     shift and go to state 833

state 800

    (25) elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER . R_THEN List_body

    R_THEN          shift and go to state 834


state 801

    (164) literalList -> literalList S_COMA literal .

    S_PARDER        reduce using rule 164 (literalList -> literalList S_COMA literal .)
    S_COMA          reduce using rule 164 (literalList -> literalList S_COMA literal .)


state 802

    (399) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR . bloqueFunction
    (401) bloqueFunction -> . declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd
    (407) declareStmt -> . R_DECLARE declaracion_list
    (408) declareStmt -> .

    R_DECLARE       shift and go to state 805
    R_BEGIN         reduce using rule 408 (declareStmt -> .)

    bloqueFunction                 shift and go to state 835
    declareStmt                    shift and go to state 804

state 803

    (400) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .

    R_CREATE        reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_SHOW          reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_ALTER         reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_DROP          reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_INSERT        reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_UPDATE        reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_DELETE        reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_TRUNCATE      reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_USE           reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_SELECT        reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    S_PARIZQ        reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_EXECUTE       reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_IF            reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    ID              reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    $end            reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_ELSE          reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_ELSIF         reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_END           reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_RETURN        reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    S_DOLAR         reduce using rule 400 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)


state 804

    (401) bloqueFunction -> declareStmt . R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd

    R_BEGIN         shift and go to state 836


state 805

    (407) declareStmt -> R_DECLARE . declaracion_list
    (409) declaracion_list -> . declaracion_list declaracion_item
    (410) declaracion_list -> . declaracion_item
    (411) declaracion_item -> . ID constant_opt types null_opt default_item S_PUNTOCOMA
    (412) declaracion_item -> . ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA

    ID              shift and go to state 839

    declaracion_list               shift and go to state 837
    declaracion_item               shift and go to state 838

state 806

    (434) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR . S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure

    S_DOLAR         shift and go to state 840


state 807

    (435) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR . beginWord beginStmt endProcedure dolarEndProcedure
    (440) beginWord -> .
    (441) beginWord -> . R_BEGIN

    R_RETURN        reduce using rule 440 (beginWord -> .)
    ID              reduce using rule 440 (beginWord -> .)
    R_CREATE        reduce using rule 440 (beginWord -> .)
    R_SHOW          reduce using rule 440 (beginWord -> .)
    R_ALTER         reduce using rule 440 (beginWord -> .)
    R_DROP          reduce using rule 440 (beginWord -> .)
    R_INSERT        reduce using rule 440 (beginWord -> .)
    R_UPDATE        reduce using rule 440 (beginWord -> .)
    R_DELETE        reduce using rule 440 (beginWord -> .)
    R_TRUNCATE      reduce using rule 440 (beginWord -> .)
    R_USE           reduce using rule 440 (beginWord -> .)
    R_SELECT        reduce using rule 440 (beginWord -> .)
    S_PARIZQ        reduce using rule 440 (beginWord -> .)
    R_EXECUTE       reduce using rule 440 (beginWord -> .)
    R_IF            reduce using rule 440 (beginWord -> .)
    R_BEGIN         shift and go to state 842

    beginWord                      shift and go to state 841

state 808

    (48) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc . indexNullS S_PARDER whereCl
    (53) indexNullS -> . R_NULLS R_FIRST
    (54) indexNullS -> . R_NULLS R_LAST
    (55) indexNullS -> .

    R_NULLS         shift and go to state 844
    S_PARDER        reduce using rule 55 (indexNullS -> .)

    indexNullS                     shift and go to state 843

state 809

    (56) indexasc_desc -> R_DESC .

    R_NULLS         reduce using rule 56 (indexasc_desc -> R_DESC .)
    S_PARDER        reduce using rule 56 (indexasc_desc -> R_DESC .)


state 810

    (57) indexasc_desc -> R_ASC .

    R_NULLS         reduce using rule 57 (indexasc_desc -> R_ASC .)
    S_PARDER        reduce using rule 57 (indexasc_desc -> R_ASC .)


state 811

    (66) inheritsOpt -> R_INHERITS S_PARIZQ ID . S_PARDER

    S_PARDER        shift and go to state 845


state 812

    (132) constraintOpt -> constrName R_CHECK S_PARIZQ . booleanCheck S_PARDER
    (264) booleanCheck -> . idOrLiteral OL_MENORQUE idOrLiteral
    (265) booleanCheck -> . idOrLiteral OL_MAYORQUE idOrLiteral
    (266) booleanCheck -> . idOrLiteral OL_MAYORIGUALQUE idOrLiteral
    (267) booleanCheck -> . idOrLiteral OL_MENORIGUALQUE idOrLiteral
    (268) booleanCheck -> . idOrLiteral S_IGUAL idOrLiteral
    (269) booleanCheck -> . idOrLiteral OL_DISTINTODE idOrLiteral
    (270) booleanCheck -> . idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
    (271) booleanCheck -> . idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
    (272) idOrLiteral -> . ID
    (273) idOrLiteral -> . INTEGER
    (274) idOrLiteral -> . STRING
    (275) idOrLiteral -> . DECIMAL
    (276) idOrLiteral -> . CHARACTER
    (277) idOrLiteral -> . R_TRUE
    (278) idOrLiteral -> . R_FALSE

    ID              shift and go to state 708
    INTEGER         shift and go to state 709
    STRING          shift and go to state 710
    DECIMAL         shift and go to state 711
    CHARACTER       shift and go to state 712
    R_TRUE          shift and go to state 713
    R_FALSE         shift and go to state 714

    booleanCheck                   shift and go to state 846
    idOrLiteral                    shift and go to state 707

state 813

    (264) booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral .

    S_PARDER        reduce using rule 264 (booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral .)


state 814

    (265) booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral .

    S_PARDER        reduce using rule 265 (booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral .)


state 815

    (266) booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral .

    S_PARDER        reduce using rule 266 (booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral .)


state 816

    (267) booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral .

    S_PARDER        reduce using rule 267 (booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral .)


state 817

    (268) booleanCheck -> idOrLiteral S_IGUAL idOrLiteral .

    S_PARDER        reduce using rule 268 (booleanCheck -> idOrLiteral S_IGUAL idOrLiteral .)


state 818

    (269) booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral .

    S_PARDER        reduce using rule 269 (booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral .)


state 819

    (270) booleanCheck -> idOrLiteral R_IS R_DISTINCT . R_FROM idOrLiteral

    R_FROM          shift and go to state 847


state 820

    (271) booleanCheck -> idOrLiteral R_IS R_NOT . R_DISTINCT R_FROM idOrLiteral

    R_DISTINCT      shift and go to state 848


state 821

    (88) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER . R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_REFERENCES    shift and go to state 849


state 822

    (380) offsetLimit -> R_OFFSET INTEGER .

    S_PUNTOCOMA     reduce using rule 380 (offsetLimit -> R_OFFSET INTEGER .)
    R_UNION         reduce using rule 380 (offsetLimit -> R_OFFSET INTEGER .)
    R_INTERSECT     reduce using rule 380 (offsetLimit -> R_OFFSET INTEGER .)
    R_EXCEPT        reduce using rule 380 (offsetLimit -> R_OFFSET INTEGER .)
    S_PARDER        reduce using rule 380 (offsetLimit -> R_OFFSET INTEGER .)


state 823

    (367) orderList -> orderList S_COMA orderByElem .

    S_COMA          reduce using rule 367 (orderList -> orderList S_COMA orderByElem .)
    R_LIMIT         reduce using rule 367 (orderList -> orderList S_COMA orderByElem .)
    S_PUNTOCOMA     reduce using rule 367 (orderList -> orderList S_COMA orderByElem .)
    R_UNION         reduce using rule 367 (orderList -> orderList S_COMA orderByElem .)
    R_INTERSECT     reduce using rule 367 (orderList -> orderList S_COMA orderByElem .)
    R_EXCEPT        reduce using rule 367 (orderList -> orderList S_COMA orderByElem .)
    S_PARDER        reduce using rule 367 (orderList -> orderList S_COMA orderByElem .)


state 824

    (369) orderByElem -> columnName orderOpts orderNull .

    S_COMA          reduce using rule 369 (orderByElem -> columnName orderOpts orderNull .)
    R_LIMIT         reduce using rule 369 (orderByElem -> columnName orderOpts orderNull .)
    S_PUNTOCOMA     reduce using rule 369 (orderByElem -> columnName orderOpts orderNull .)
    R_UNION         reduce using rule 369 (orderByElem -> columnName orderOpts orderNull .)
    R_INTERSECT     reduce using rule 369 (orderByElem -> columnName orderOpts orderNull .)
    R_EXCEPT        reduce using rule 369 (orderByElem -> columnName orderOpts orderNull .)
    S_PARDER        reduce using rule 369 (orderByElem -> columnName orderOpts orderNull .)


state 825

    (374) orderNull -> R_NULL . R_FIRST
    (375) orderNull -> R_NULL . R_LAST

    R_FIRST         shift and go to state 850
    R_LAST          shift and go to state 851


state 826

    (370) orderByElem -> INTEGER orderOpts orderNull .

    S_COMA          reduce using rule 370 (orderByElem -> INTEGER orderOpts orderNull .)
    R_LIMIT         reduce using rule 370 (orderByElem -> INTEGER orderOpts orderNull .)
    S_PUNTOCOMA     reduce using rule 370 (orderByElem -> INTEGER orderOpts orderNull .)
    R_UNION         reduce using rule 370 (orderByElem -> INTEGER orderOpts orderNull .)
    R_INTERSECT     reduce using rule 370 (orderByElem -> INTEGER orderOpts orderNull .)
    R_EXCEPT        reduce using rule 370 (orderByElem -> INTEGER orderOpts orderNull .)
    S_PARDER        reduce using rule 370 (orderByElem -> INTEGER orderOpts orderNull .)


state 827

    (347) nameList -> columnName .

    S_PARDER        reduce using rule 347 (nameList -> columnName .)
    S_COMA          reduce using rule 347 (nameList -> columnName .)


state 828

    (344) joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList . S_PARDER
    (346) nameList -> nameList . S_COMA columnName

    S_PARDER        shift and go to state 852
    S_COMA          shift and go to state 853


state 829

    (225) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 854
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 830

    (227) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 227 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 831

    (228) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 855
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 832

    (224) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 224 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 833

    (226) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (319) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (320) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (321) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 856
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 834

    (25) elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN . List_body
    (26) List_body -> . List_body body
    (27) List_body -> . body
    (28) body -> . createStmt S_PUNTOCOMA
    (29) body -> . showStmt S_PUNTOCOMA
    (30) body -> . alterStmt S_PUNTOCOMA
    (31) body -> . dropStmt S_PUNTOCOMA
    (32) body -> . insertStmt S_PUNTOCOMA
    (33) body -> . updateStmt S_PUNTOCOMA
    (34) body -> . deleteStmt S_PUNTOCOMA
    (35) body -> . truncateStmt S_PUNTOCOMA
    (36) body -> . useStmt S_PUNTOCOMA
    (37) body -> . selectStmt S_PUNTOCOMA
    (38) body -> . functionStmt
    (39) body -> . procedureStmt
    (40) body -> . executePL S_PUNTOCOMA
    (41) body -> . ifStmt R_END R_IF S_PUNTOCOMA
    (42) body -> . asignacionStmt S_PUNTOCOMA
    (46) createStmt -> . R_CREATE createBody
    (395) showStmt -> . R_SHOW R_DATABASES likeOpt
    (279) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (280) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (281) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID ID
    (282) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER
    (305) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (306) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (307) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString
    (308) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER
    (309) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (310) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (382) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (385) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (391) deleteStmt -> . R_DELETE fromCl whereCl
    (392) truncateStmt -> . R_TRUNCATE tableOpt ID
    (398) useStmt -> . R_USE ID
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams
    (399) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (400) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (434) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (444) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
    (432) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (433) asignacionStmt -> . ID S_IGUAL expresion

    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 24
    R_INSERT        shift and go to state 26
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18
    ID              shift and go to state 23

    List_body                      shift and go to state 857
    body                           shift and go to state 437
    createStmt                     shift and go to state 438
    showStmt                       shift and go to state 439
    alterStmt                      shift and go to state 440
    dropStmt                       shift and go to state 441
    insertStmt                     shift and go to state 442
    updateStmt                     shift and go to state 443
    deleteStmt                     shift and go to state 444
    truncateStmt                   shift and go to state 445
    useStmt                        shift and go to state 446
    selectStmt                     shift and go to state 447
    functionStmt                   shift and go to state 448
    procedureStmt                  shift and go to state 449
    executePL                      shift and go to state 450
    ifStmt                         shift and go to state 451
    asignacionStmt                 shift and go to state 452

state 835

    (399) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .

    R_CREATE        reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_SHOW          reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_ALTER         reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_DROP          reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_INSERT        reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_UPDATE        reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_DELETE        reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_TRUNCATE      reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_USE           reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_SELECT        reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    S_PARIZQ        reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_EXECUTE       reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_IF            reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    ID              reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    $end            reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_ELSE          reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_ELSIF         reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_END           reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_RETURN        reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    S_DOLAR         reduce using rule 399 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)


state 836

    (401) bloqueFunction -> declareStmt R_BEGIN . beginStmt R_END S_PUNTOCOMA labelEnd
    (424) beginStmt -> . beginStmt beginItem
    (425) beginStmt -> . beginItem
    (426) beginItem -> . stmt
    (427) beginItem -> . returnStmt S_PUNTOCOMA
    (428) beginItem -> . asignacionStmt S_PUNTOCOMA
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . procedureStmt
    (16) stmt -> . executePL S_PUNTOCOMA
    (17) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (18) stmt -> . asignacionStmt S_PUNTOCOMA
    (429) returnStmt -> . R_RETURN expresion
    (432) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (433) asignacionStmt -> . ID S_IGUAL expresion
    (46) createStmt -> . R_CREATE createBody
    (395) showStmt -> . R_SHOW R_DATABASES likeOpt
    (279) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (280) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (281) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID ID
    (282) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER
    (305) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (306) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (307) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString
    (308) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER
    (309) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (310) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (382) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (385) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (391) deleteStmt -> . R_DELETE fromCl whereCl
    (392) truncateStmt -> . R_TRUNCATE tableOpt ID
    (398) useStmt -> . R_USE ID
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams
    (399) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (400) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (434) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (444) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

    R_RETURN        shift and go to state 863
    ID              shift and go to state 23
    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 24
    R_INSERT        shift and go to state 26
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18

    beginStmt                      shift and go to state 858
    beginItem                      shift and go to state 859
    stmt                           shift and go to state 860
    returnStmt                     shift and go to state 861
    asignacionStmt                 shift and go to state 862
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    procedureStmt                  shift and go to state 15
    executePL                      shift and go to state 16
    ifStmt                         shift and go to state 17

state 837

    (407) declareStmt -> R_DECLARE declaracion_list .
    (409) declaracion_list -> declaracion_list . declaracion_item
    (411) declaracion_item -> . ID constant_opt types null_opt default_item S_PUNTOCOMA
    (412) declaracion_item -> . ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA

    R_BEGIN         reduce using rule 407 (declareStmt -> R_DECLARE declaracion_list .)
    ID              shift and go to state 839

    declaracion_item               shift and go to state 864

state 838

    (410) declaracion_list -> declaracion_item .

    ID              reduce using rule 410 (declaracion_list -> declaracion_item .)
    R_BEGIN         reduce using rule 410 (declaracion_list -> declaracion_item .)


state 839

    (411) declaracion_item -> ID . constant_opt types null_opt default_item S_PUNTOCOMA
    (412) declaracion_item -> ID . R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA
    (413) constant_opt -> . R_CONSTANT
    (414) constant_opt -> .

    R_ALIAS         shift and go to state 866
    R_CONSTANT      shift and go to state 867
    ID              reduce using rule 414 (constant_opt -> .)
    T_SMALLINT      reduce using rule 414 (constant_opt -> .)
    T_INTEGER       reduce using rule 414 (constant_opt -> .)
    T_BIGINT        reduce using rule 414 (constant_opt -> .)
    T_REAL          reduce using rule 414 (constant_opt -> .)
    T_DOUBLE        reduce using rule 414 (constant_opt -> .)
    T_MONEY         reduce using rule 414 (constant_opt -> .)
    T_TEXT          reduce using rule 414 (constant_opt -> .)
    T_BOOLEAN       reduce using rule 414 (constant_opt -> .)
    R_TIMESTAMP     reduce using rule 414 (constant_opt -> .)
    T_DATE          reduce using rule 414 (constant_opt -> .)
    T_TIME          reduce using rule 414 (constant_opt -> .)
    T_DECIMAL       reduce using rule 414 (constant_opt -> .)
    T_NUMERIC       reduce using rule 414 (constant_opt -> .)
    T_VARCHAR       reduce using rule 414 (constant_opt -> .)
    T_CHARACTER     reduce using rule 414 (constant_opt -> .)
    T_CHAR          reduce using rule 414 (constant_opt -> .)
    R_INTERVAL      reduce using rule 414 (constant_opt -> .)

    constant_opt                   shift and go to state 865

state 840

    (434) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR . beginWord beginStmt endProcedure dolarEndProcedure
    (440) beginWord -> .
    (441) beginWord -> . R_BEGIN

    R_RETURN        reduce using rule 440 (beginWord -> .)
    ID              reduce using rule 440 (beginWord -> .)
    R_CREATE        reduce using rule 440 (beginWord -> .)
    R_SHOW          reduce using rule 440 (beginWord -> .)
    R_ALTER         reduce using rule 440 (beginWord -> .)
    R_DROP          reduce using rule 440 (beginWord -> .)
    R_INSERT        reduce using rule 440 (beginWord -> .)
    R_UPDATE        reduce using rule 440 (beginWord -> .)
    R_DELETE        reduce using rule 440 (beginWord -> .)
    R_TRUNCATE      reduce using rule 440 (beginWord -> .)
    R_USE           reduce using rule 440 (beginWord -> .)
    R_SELECT        reduce using rule 440 (beginWord -> .)
    S_PARIZQ        reduce using rule 440 (beginWord -> .)
    R_EXECUTE       reduce using rule 440 (beginWord -> .)
    R_IF            reduce using rule 440 (beginWord -> .)
    R_BEGIN         shift and go to state 842

    beginWord                      shift and go to state 868

state 841

    (435) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord . beginStmt endProcedure dolarEndProcedure
    (424) beginStmt -> . beginStmt beginItem
    (425) beginStmt -> . beginItem
    (426) beginItem -> . stmt
    (427) beginItem -> . returnStmt S_PUNTOCOMA
    (428) beginItem -> . asignacionStmt S_PUNTOCOMA
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . procedureStmt
    (16) stmt -> . executePL S_PUNTOCOMA
    (17) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (18) stmt -> . asignacionStmt S_PUNTOCOMA
    (429) returnStmt -> . R_RETURN expresion
    (432) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (433) asignacionStmt -> . ID S_IGUAL expresion
    (46) createStmt -> . R_CREATE createBody
    (395) showStmt -> . R_SHOW R_DATABASES likeOpt
    (279) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (280) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (281) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID ID
    (282) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER
    (305) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (306) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (307) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString
    (308) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER
    (309) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (310) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (382) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (385) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (391) deleteStmt -> . R_DELETE fromCl whereCl
    (392) truncateStmt -> . R_TRUNCATE tableOpt ID
    (398) useStmt -> . R_USE ID
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams
    (399) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (400) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (434) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (444) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

    R_RETURN        shift and go to state 863
    ID              shift and go to state 23
    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 24
    R_INSERT        shift and go to state 26
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18

    beginStmt                      shift and go to state 869
    beginItem                      shift and go to state 859
    stmt                           shift and go to state 860
    returnStmt                     shift and go to state 861
    asignacionStmt                 shift and go to state 862
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    procedureStmt                  shift and go to state 15
    executePL                      shift and go to state 16
    ifStmt                         shift and go to state 17

state 842

    (441) beginWord -> R_BEGIN .

    R_RETURN        reduce using rule 441 (beginWord -> R_BEGIN .)
    ID              reduce using rule 441 (beginWord -> R_BEGIN .)
    R_CREATE        reduce using rule 441 (beginWord -> R_BEGIN .)
    R_SHOW          reduce using rule 441 (beginWord -> R_BEGIN .)
    R_ALTER         reduce using rule 441 (beginWord -> R_BEGIN .)
    R_DROP          reduce using rule 441 (beginWord -> R_BEGIN .)
    R_INSERT        reduce using rule 441 (beginWord -> R_BEGIN .)
    R_UPDATE        reduce using rule 441 (beginWord -> R_BEGIN .)
    R_DELETE        reduce using rule 441 (beginWord -> R_BEGIN .)
    R_TRUNCATE      reduce using rule 441 (beginWord -> R_BEGIN .)
    R_USE           reduce using rule 441 (beginWord -> R_BEGIN .)
    R_SELECT        reduce using rule 441 (beginWord -> R_BEGIN .)
    S_PARIZQ        reduce using rule 441 (beginWord -> R_BEGIN .)
    R_EXECUTE       reduce using rule 441 (beginWord -> R_BEGIN .)
    R_IF            reduce using rule 441 (beginWord -> R_BEGIN .)


state 843

    (48) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS . S_PARDER whereCl

    S_PARDER        shift and go to state 870


state 844

    (53) indexNullS -> R_NULLS . R_FIRST
    (54) indexNullS -> R_NULLS . R_LAST

    R_FIRST         shift and go to state 871
    R_LAST          shift and go to state 872


state 845

    (66) inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER .

    S_PUNTOCOMA     reduce using rule 66 (inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER .)


state 846

    (132) constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck . S_PARDER

    S_PARDER        shift and go to state 873


state 847

    (270) booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM . idOrLiteral
    (272) idOrLiteral -> . ID
    (273) idOrLiteral -> . INTEGER
    (274) idOrLiteral -> . STRING
    (275) idOrLiteral -> . DECIMAL
    (276) idOrLiteral -> . CHARACTER
    (277) idOrLiteral -> . R_TRUE
    (278) idOrLiteral -> . R_FALSE

    ID              shift and go to state 708
    INTEGER         shift and go to state 709
    STRING          shift and go to state 710
    DECIMAL         shift and go to state 711
    CHARACTER       shift and go to state 712
    R_TRUE          shift and go to state 713
    R_FALSE         shift and go to state 714

    idOrLiteral                    shift and go to state 874

state 848

    (271) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT . R_FROM idOrLiteral

    R_FROM          shift and go to state 875


state 849

    (88) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES . ID S_PARIZQ idList S_PARDER

    ID              shift and go to state 876


state 850

    (374) orderNull -> R_NULL R_FIRST .

    S_COMA          reduce using rule 374 (orderNull -> R_NULL R_FIRST .)
    R_LIMIT         reduce using rule 374 (orderNull -> R_NULL R_FIRST .)
    S_PUNTOCOMA     reduce using rule 374 (orderNull -> R_NULL R_FIRST .)
    R_UNION         reduce using rule 374 (orderNull -> R_NULL R_FIRST .)
    R_INTERSECT     reduce using rule 374 (orderNull -> R_NULL R_FIRST .)
    R_EXCEPT        reduce using rule 374 (orderNull -> R_NULL R_FIRST .)
    S_PARDER        reduce using rule 374 (orderNull -> R_NULL R_FIRST .)


state 851

    (375) orderNull -> R_NULL R_LAST .

    S_COMA          reduce using rule 375 (orderNull -> R_NULL R_LAST .)
    R_LIMIT         reduce using rule 375 (orderNull -> R_NULL R_LAST .)
    S_PUNTOCOMA     reduce using rule 375 (orderNull -> R_NULL R_LAST .)
    R_UNION         reduce using rule 375 (orderNull -> R_NULL R_LAST .)
    R_INTERSECT     reduce using rule 375 (orderNull -> R_NULL R_LAST .)
    R_EXCEPT        reduce using rule 375 (orderNull -> R_NULL R_LAST .)
    S_PARDER        reduce using rule 375 (orderNull -> R_NULL R_LAST .)


state 852

    (344) joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .

    R_NATURAL       reduce using rule 344 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_INNER         reduce using rule 344 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_LEFT          reduce using rule 344 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_RIGHT         reduce using rule 344 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_FULL          reduce using rule 344 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_WHERE         reduce using rule 344 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_GROUP         reduce using rule 344 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_ORDER         reduce using rule 344 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_LIMIT         reduce using rule 344 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 344 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_UNION         reduce using rule 344 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_INTERSECT     reduce using rule 344 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_EXCEPT        reduce using rule 344 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    S_PARDER        reduce using rule 344 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)


state 853

    (346) nameList -> nameList S_COMA . columnName
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 524

    columnName                     shift and go to state 877

state 854

    (225) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 225 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 855

    (228) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 856

    (226) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 226 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 857

    (25) elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body .
    (26) List_body -> List_body . body
    (28) body -> . createStmt S_PUNTOCOMA
    (29) body -> . showStmt S_PUNTOCOMA
    (30) body -> . alterStmt S_PUNTOCOMA
    (31) body -> . dropStmt S_PUNTOCOMA
    (32) body -> . insertStmt S_PUNTOCOMA
    (33) body -> . updateStmt S_PUNTOCOMA
    (34) body -> . deleteStmt S_PUNTOCOMA
    (35) body -> . truncateStmt S_PUNTOCOMA
    (36) body -> . useStmt S_PUNTOCOMA
    (37) body -> . selectStmt S_PUNTOCOMA
    (38) body -> . functionStmt
    (39) body -> . procedureStmt
    (40) body -> . executePL S_PUNTOCOMA
    (41) body -> . ifStmt R_END R_IF S_PUNTOCOMA
    (42) body -> . asignacionStmt S_PUNTOCOMA
    (46) createStmt -> . R_CREATE createBody
    (395) showStmt -> . R_SHOW R_DATABASES likeOpt
    (279) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (280) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (281) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID ID
    (282) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER
    (305) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (306) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (307) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString
    (308) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER
    (309) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (310) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (382) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (385) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (391) deleteStmt -> . R_DELETE fromCl whereCl
    (392) truncateStmt -> . R_TRUNCATE tableOpt ID
    (398) useStmt -> . R_USE ID
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams
    (399) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (400) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (434) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (444) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
    (432) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (433) asignacionStmt -> . ID S_IGUAL expresion

    R_ELSIF         reduce using rule 25 (elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body .)
    R_END           reduce using rule 25 (elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body .)
    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 24
    R_INSERT        shift and go to state 26
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18
    ID              shift and go to state 23

    body                           shift and go to state 560
    createStmt                     shift and go to state 438
    showStmt                       shift and go to state 439
    alterStmt                      shift and go to state 440
    dropStmt                       shift and go to state 441
    insertStmt                     shift and go to state 442
    updateStmt                     shift and go to state 443
    deleteStmt                     shift and go to state 444
    truncateStmt                   shift and go to state 445
    useStmt                        shift and go to state 446
    selectStmt                     shift and go to state 447
    functionStmt                   shift and go to state 448
    procedureStmt                  shift and go to state 449
    executePL                      shift and go to state 450
    ifStmt                         shift and go to state 451
    asignacionStmt                 shift and go to state 452

state 858

    (401) bloqueFunction -> declareStmt R_BEGIN beginStmt . R_END S_PUNTOCOMA labelEnd
    (424) beginStmt -> beginStmt . beginItem
    (426) beginItem -> . stmt
    (427) beginItem -> . returnStmt S_PUNTOCOMA
    (428) beginItem -> . asignacionStmt S_PUNTOCOMA
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . procedureStmt
    (16) stmt -> . executePL S_PUNTOCOMA
    (17) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (18) stmt -> . asignacionStmt S_PUNTOCOMA
    (429) returnStmt -> . R_RETURN expresion
    (432) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (433) asignacionStmt -> . ID S_IGUAL expresion
    (46) createStmt -> . R_CREATE createBody
    (395) showStmt -> . R_SHOW R_DATABASES likeOpt
    (279) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (280) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (281) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID ID
    (282) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER
    (305) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (306) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (307) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString
    (308) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER
    (309) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (310) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (382) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (385) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (391) deleteStmt -> . R_DELETE fromCl whereCl
    (392) truncateStmt -> . R_TRUNCATE tableOpt ID
    (398) useStmt -> . R_USE ID
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams
    (399) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (400) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (434) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (444) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

    R_END           shift and go to state 878
    R_RETURN        shift and go to state 863
    ID              shift and go to state 23
    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 24
    R_INSERT        shift and go to state 26
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18

    beginItem                      shift and go to state 879
    stmt                           shift and go to state 860
    returnStmt                     shift and go to state 861
    asignacionStmt                 shift and go to state 862
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    procedureStmt                  shift and go to state 15
    executePL                      shift and go to state 16
    ifStmt                         shift and go to state 17

state 859

    (425) beginStmt -> beginItem .

    R_END           reduce using rule 425 (beginStmt -> beginItem .)
    R_RETURN        reduce using rule 425 (beginStmt -> beginItem .)
    ID              reduce using rule 425 (beginStmt -> beginItem .)
    R_CREATE        reduce using rule 425 (beginStmt -> beginItem .)
    R_SHOW          reduce using rule 425 (beginStmt -> beginItem .)
    R_ALTER         reduce using rule 425 (beginStmt -> beginItem .)
    R_DROP          reduce using rule 425 (beginStmt -> beginItem .)
    R_INSERT        reduce using rule 425 (beginStmt -> beginItem .)
    R_UPDATE        reduce using rule 425 (beginStmt -> beginItem .)
    R_DELETE        reduce using rule 425 (beginStmt -> beginItem .)
    R_TRUNCATE      reduce using rule 425 (beginStmt -> beginItem .)
    R_USE           reduce using rule 425 (beginStmt -> beginItem .)
    R_SELECT        reduce using rule 425 (beginStmt -> beginItem .)
    S_PARIZQ        reduce using rule 425 (beginStmt -> beginItem .)
    R_EXECUTE       reduce using rule 425 (beginStmt -> beginItem .)
    R_IF            reduce using rule 425 (beginStmt -> beginItem .)
    S_DOLAR         reduce using rule 425 (beginStmt -> beginItem .)
    $end            reduce using rule 425 (beginStmt -> beginItem .)
    R_ELSE          reduce using rule 425 (beginStmt -> beginItem .)
    R_ELSIF         reduce using rule 425 (beginStmt -> beginItem .)


state 860

    (426) beginItem -> stmt .

    R_END           reduce using rule 426 (beginItem -> stmt .)
    R_RETURN        reduce using rule 426 (beginItem -> stmt .)
    ID              reduce using rule 426 (beginItem -> stmt .)
    R_CREATE        reduce using rule 426 (beginItem -> stmt .)
    R_SHOW          reduce using rule 426 (beginItem -> stmt .)
    R_ALTER         reduce using rule 426 (beginItem -> stmt .)
    R_DROP          reduce using rule 426 (beginItem -> stmt .)
    R_INSERT        reduce using rule 426 (beginItem -> stmt .)
    R_UPDATE        reduce using rule 426 (beginItem -> stmt .)
    R_DELETE        reduce using rule 426 (beginItem -> stmt .)
    R_TRUNCATE      reduce using rule 426 (beginItem -> stmt .)
    R_USE           reduce using rule 426 (beginItem -> stmt .)
    R_SELECT        reduce using rule 426 (beginItem -> stmt .)
    S_PARIZQ        reduce using rule 426 (beginItem -> stmt .)
    R_EXECUTE       reduce using rule 426 (beginItem -> stmt .)
    R_IF            reduce using rule 426 (beginItem -> stmt .)
    S_DOLAR         reduce using rule 426 (beginItem -> stmt .)
    $end            reduce using rule 426 (beginItem -> stmt .)
    R_ELSE          reduce using rule 426 (beginItem -> stmt .)
    R_ELSIF         reduce using rule 426 (beginItem -> stmt .)


state 861

    (427) beginItem -> returnStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 880


state 862

    (428) beginItem -> asignacionStmt . S_PUNTOCOMA
    (18) stmt -> asignacionStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 881


state 863

    (429) returnStmt -> R_RETURN . expresion
    (135) expresion -> . datatype
    (136) expresion -> . expBool
    (137) expresion -> . S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName

    S_PARIZQ        shift and go to state 90
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    R_NOT           shift and go to state 100
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_EXISTS        shift and go to state 118
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    expresion                      shift and go to state 882
    datatype                       shift and go to state 88
    expBool                        shift and go to state 89
    columnName                     shift and go to state 94
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    boolean                        shift and go to state 101
    timeStamp                      shift and go to state 114
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    stringExp                      shift and go to state 123

state 864

    (409) declaracion_list -> declaracion_list declaracion_item .

    ID              reduce using rule 409 (declaracion_list -> declaracion_list declaracion_item .)
    R_BEGIN         reduce using rule 409 (declaracion_list -> declaracion_list declaracion_item .)


state 865

    (411) declaracion_item -> ID constant_opt . types null_opt default_item S_PUNTOCOMA
    (93) types -> . ID
    (94) types -> . T_SMALLINT
    (95) types -> . T_INTEGER
    (96) types -> . T_BIGINT
    (97) types -> . T_REAL
    (98) types -> . T_DOUBLE T_PRECISION
    (99) types -> . T_MONEY
    (100) types -> . T_TEXT
    (101) types -> . T_BOOLEAN
    (102) types -> . R_TIMESTAMP
    (103) types -> . T_DATE
    (104) types -> . T_TIME
    (105) types -> . T_DECIMAL optParams
    (106) types -> . T_NUMERIC optParams
    (107) types -> . T_VARCHAR optParams
    (108) types -> . T_CHARACTER optParams
    (109) types -> . T_CHAR optParams
    (110) types -> . T_CHARACTER T_VARYING optParams
    (111) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 453
    T_SMALLINT      shift and go to state 455
    T_INTEGER       shift and go to state 456
    T_BIGINT        shift and go to state 457
    T_REAL          shift and go to state 458
    T_DOUBLE        shift and go to state 459
    T_MONEY         shift and go to state 460
    T_TEXT          shift and go to state 461
    T_BOOLEAN       shift and go to state 462
    R_TIMESTAMP     shift and go to state 463
    T_DATE          shift and go to state 464
    T_TIME          shift and go to state 465
    T_DECIMAL       shift and go to state 466
    T_NUMERIC       shift and go to state 467
    T_VARCHAR       shift and go to state 468
    T_CHARACTER     shift and go to state 469
    T_CHAR          shift and go to state 470
    R_INTERVAL      shift and go to state 471

    types                          shift and go to state 883

state 866

    (412) declaracion_item -> ID R_ALIAS . R_FOR alias_declaracion S_PUNTOCOMA

    R_FOR           shift and go to state 884


state 867

    (413) constant_opt -> R_CONSTANT .

    ID              reduce using rule 413 (constant_opt -> R_CONSTANT .)
    T_SMALLINT      reduce using rule 413 (constant_opt -> R_CONSTANT .)
    T_INTEGER       reduce using rule 413 (constant_opt -> R_CONSTANT .)
    T_BIGINT        reduce using rule 413 (constant_opt -> R_CONSTANT .)
    T_REAL          reduce using rule 413 (constant_opt -> R_CONSTANT .)
    T_DOUBLE        reduce using rule 413 (constant_opt -> R_CONSTANT .)
    T_MONEY         reduce using rule 413 (constant_opt -> R_CONSTANT .)
    T_TEXT          reduce using rule 413 (constant_opt -> R_CONSTANT .)
    T_BOOLEAN       reduce using rule 413 (constant_opt -> R_CONSTANT .)
    R_TIMESTAMP     reduce using rule 413 (constant_opt -> R_CONSTANT .)
    T_DATE          reduce using rule 413 (constant_opt -> R_CONSTANT .)
    T_TIME          reduce using rule 413 (constant_opt -> R_CONSTANT .)
    T_DECIMAL       reduce using rule 413 (constant_opt -> R_CONSTANT .)
    T_NUMERIC       reduce using rule 413 (constant_opt -> R_CONSTANT .)
    T_VARCHAR       reduce using rule 413 (constant_opt -> R_CONSTANT .)
    T_CHARACTER     reduce using rule 413 (constant_opt -> R_CONSTANT .)
    T_CHAR          reduce using rule 413 (constant_opt -> R_CONSTANT .)
    R_INTERVAL      reduce using rule 413 (constant_opt -> R_CONSTANT .)


state 868

    (434) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord . beginStmt endProcedure dolarEndProcedure
    (424) beginStmt -> . beginStmt beginItem
    (425) beginStmt -> . beginItem
    (426) beginItem -> . stmt
    (427) beginItem -> . returnStmt S_PUNTOCOMA
    (428) beginItem -> . asignacionStmt S_PUNTOCOMA
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . procedureStmt
    (16) stmt -> . executePL S_PUNTOCOMA
    (17) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (18) stmt -> . asignacionStmt S_PUNTOCOMA
    (429) returnStmt -> . R_RETURN expresion
    (432) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (433) asignacionStmt -> . ID S_IGUAL expresion
    (46) createStmt -> . R_CREATE createBody
    (395) showStmt -> . R_SHOW R_DATABASES likeOpt
    (279) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (280) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (281) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID ID
    (282) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER
    (305) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (306) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (307) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString
    (308) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER
    (309) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (310) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (382) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (385) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (391) deleteStmt -> . R_DELETE fromCl whereCl
    (392) truncateStmt -> . R_TRUNCATE tableOpt ID
    (398) useStmt -> . R_USE ID
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams
    (399) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (400) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (434) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (444) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

    R_RETURN        shift and go to state 863
    ID              shift and go to state 23
    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 24
    R_INSERT        shift and go to state 26
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18

    beginStmt                      shift and go to state 885
    beginItem                      shift and go to state 859
    stmt                           shift and go to state 860
    returnStmt                     shift and go to state 861
    asignacionStmt                 shift and go to state 862
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    procedureStmt                  shift and go to state 15
    executePL                      shift and go to state 16
    ifStmt                         shift and go to state 17

state 869

    (435) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt . endProcedure dolarEndProcedure
    (424) beginStmt -> beginStmt . beginItem
    (436) endProcedure -> .
    (437) endProcedure -> . R_END S_PUNTOCOMA
    (426) beginItem -> . stmt
    (427) beginItem -> . returnStmt S_PUNTOCOMA
    (428) beginItem -> . asignacionStmt S_PUNTOCOMA
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . procedureStmt
    (16) stmt -> . executePL S_PUNTOCOMA
    (17) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (18) stmt -> . asignacionStmt S_PUNTOCOMA
    (429) returnStmt -> . R_RETURN expresion
    (432) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (433) asignacionStmt -> . ID S_IGUAL expresion
    (46) createStmt -> . R_CREATE createBody
    (395) showStmt -> . R_SHOW R_DATABASES likeOpt
    (279) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (280) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (281) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID ID
    (282) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER
    (305) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (306) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (307) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString
    (308) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER
    (309) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (310) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (382) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (385) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (391) deleteStmt -> . R_DELETE fromCl whereCl
    (392) truncateStmt -> . R_TRUNCATE tableOpt ID
    (398) useStmt -> . R_USE ID
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams
    (399) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (400) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (434) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (444) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

  ! shift/reduce conflict for R_END resolved as shift
  ! shift/reduce conflict for R_RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for R_CREATE resolved as shift
  ! shift/reduce conflict for R_SHOW resolved as shift
  ! shift/reduce conflict for R_ALTER resolved as shift
  ! shift/reduce conflict for R_DROP resolved as shift
  ! shift/reduce conflict for R_INSERT resolved as shift
  ! shift/reduce conflict for R_UPDATE resolved as shift
  ! shift/reduce conflict for R_DELETE resolved as shift
  ! shift/reduce conflict for R_TRUNCATE resolved as shift
  ! shift/reduce conflict for R_USE resolved as shift
  ! shift/reduce conflict for R_SELECT resolved as shift
  ! shift/reduce conflict for S_PARIZQ resolved as shift
  ! shift/reduce conflict for R_EXECUTE resolved as shift
  ! shift/reduce conflict for R_IF resolved as shift
    S_DOLAR         reduce using rule 436 (endProcedure -> .)
    $end            reduce using rule 436 (endProcedure -> .)
    R_ELSE          reduce using rule 436 (endProcedure -> .)
    R_ELSIF         reduce using rule 436 (endProcedure -> .)
    R_END           shift and go to state 887
    R_RETURN        shift and go to state 863
    ID              shift and go to state 23
    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 24
    R_INSERT        shift and go to state 26
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18

  ! R_CREATE        [ reduce using rule 436 (endProcedure -> .) ]
  ! R_SHOW          [ reduce using rule 436 (endProcedure -> .) ]
  ! R_ALTER         [ reduce using rule 436 (endProcedure -> .) ]
  ! R_DROP          [ reduce using rule 436 (endProcedure -> .) ]
  ! R_INSERT        [ reduce using rule 436 (endProcedure -> .) ]
  ! R_UPDATE        [ reduce using rule 436 (endProcedure -> .) ]
  ! R_DELETE        [ reduce using rule 436 (endProcedure -> .) ]
  ! R_TRUNCATE      [ reduce using rule 436 (endProcedure -> .) ]
  ! R_USE           [ reduce using rule 436 (endProcedure -> .) ]
  ! R_SELECT        [ reduce using rule 436 (endProcedure -> .) ]
  ! S_PARIZQ        [ reduce using rule 436 (endProcedure -> .) ]
  ! R_EXECUTE       [ reduce using rule 436 (endProcedure -> .) ]
  ! R_IF            [ reduce using rule 436 (endProcedure -> .) ]
  ! ID              [ reduce using rule 436 (endProcedure -> .) ]
  ! R_END           [ reduce using rule 436 (endProcedure -> .) ]
  ! R_RETURN        [ reduce using rule 436 (endProcedure -> .) ]

    endProcedure                   shift and go to state 886
    beginItem                      shift and go to state 879
    stmt                           shift and go to state 860
    returnStmt                     shift and go to state 861
    asignacionStmt                 shift and go to state 862
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    procedureStmt                  shift and go to state 15
    executePL                      shift and go to state 16
    ifStmt                         shift and go to state 17

state 870

    (48) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER . whereCl
    (355) whereCl -> . R_WHERE expBool
    (356) whereCl -> .

    R_WHERE         shift and go to state 166
    S_PUNTOCOMA     reduce using rule 356 (whereCl -> .)

    whereCl                        shift and go to state 888

state 871

    (53) indexNullS -> R_NULLS R_FIRST .

    S_PARDER        reduce using rule 53 (indexNullS -> R_NULLS R_FIRST .)


state 872

    (54) indexNullS -> R_NULLS R_LAST .

    S_PARDER        reduce using rule 54 (indexNullS -> R_NULLS R_LAST .)


state 873

    (132) constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .

    R_DEFAULT       reduce using rule 132 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_NOT           reduce using rule 132 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_NULL          reduce using rule 132 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_PRIMARY       reduce using rule 132 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_REFERENCES    reduce using rule 132 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_CONSTRAINT    reduce using rule 132 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_UNIQUE        reduce using rule 132 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_CHECK         reduce using rule 132 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PARDER        reduce using rule 132 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_COMA          reduce using rule 132 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)


state 874

    (270) booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral .

    S_PARDER        reduce using rule 270 (booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral .)


state 875

    (271) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM . idOrLiteral
    (272) idOrLiteral -> . ID
    (273) idOrLiteral -> . INTEGER
    (274) idOrLiteral -> . STRING
    (275) idOrLiteral -> . DECIMAL
    (276) idOrLiteral -> . CHARACTER
    (277) idOrLiteral -> . R_TRUE
    (278) idOrLiteral -> . R_FALSE

    ID              shift and go to state 708
    INTEGER         shift and go to state 709
    STRING          shift and go to state 710
    DECIMAL         shift and go to state 711
    CHARACTER       shift and go to state 712
    R_TRUE          shift and go to state 713
    R_FALSE         shift and go to state 714

    idOrLiteral                    shift and go to state 889

state 876

    (88) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 890


state 877

    (346) nameList -> nameList S_COMA columnName .

    S_PARDER        reduce using rule 346 (nameList -> nameList S_COMA columnName .)
    S_COMA          reduce using rule 346 (nameList -> nameList S_COMA columnName .)


state 878

    (401) bloqueFunction -> declareStmt R_BEGIN beginStmt R_END . S_PUNTOCOMA labelEnd

    S_PUNTOCOMA     shift and go to state 891


state 879

    (424) beginStmt -> beginStmt beginItem .

    R_END           reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    R_RETURN        reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    ID              reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    R_CREATE        reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    R_SHOW          reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    R_ALTER         reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    R_DROP          reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    R_INSERT        reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    R_UPDATE        reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    R_DELETE        reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    R_TRUNCATE      reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    R_USE           reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    R_SELECT        reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    S_PARIZQ        reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    R_EXECUTE       reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    R_IF            reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    S_DOLAR         reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    $end            reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    R_ELSE          reduce using rule 424 (beginStmt -> beginStmt beginItem .)
    R_ELSIF         reduce using rule 424 (beginStmt -> beginStmt beginItem .)


state 880

    (427) beginItem -> returnStmt S_PUNTOCOMA .

    R_END           reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    ID              reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    $end            reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_ELSE          reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 427 (beginItem -> returnStmt S_PUNTOCOMA .)


state 881

    (428) beginItem -> asignacionStmt S_PUNTOCOMA .
    (18) stmt -> asignacionStmt S_PUNTOCOMA .

  ! reduce/reduce conflict for R_END resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_RETURN resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for ID resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_CREATE resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_SHOW resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_ALTER resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_DROP resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_INSERT resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_UPDATE resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_DELETE resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_TRUNCATE resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_USE resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_SELECT resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for S_PARIZQ resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_EXECUTE resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_IF resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for S_DOLAR resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for $end resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_ELSE resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_ELSIF resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_END           reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    ID              reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    $end            reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_ELSE          reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)

  ! R_END           [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_RETURN        [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! ID              [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_CREATE        [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_SHOW          [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_ALTER         [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_DROP          [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_INSERT        [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_UPDATE        [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_DELETE        [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_TRUNCATE      [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_USE           [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_SELECT        [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! S_PARIZQ        [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_EXECUTE       [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_IF            [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! S_DOLAR         [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! $end            [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_ELSE          [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_ELSIF         [ reduce using rule 428 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]


state 882

    (429) returnStmt -> R_RETURN expresion .

    S_PUNTOCOMA     reduce using rule 429 (returnStmt -> R_RETURN expresion .)


state 883

    (411) declaracion_item -> ID constant_opt types . null_opt default_item S_PUNTOCOMA
    (415) null_opt -> . R_NOT R_NULL
    (416) null_opt -> .

    R_NOT           shift and go to state 893
    R_DEFAULT       reduce using rule 416 (null_opt -> .)
    S_DOSPUNTOS     reduce using rule 416 (null_opt -> .)
    S_IGUAL         reduce using rule 416 (null_opt -> .)
    S_PUNTOCOMA     reduce using rule 416 (null_opt -> .)

    null_opt                       shift and go to state 892

state 884

    (412) declaracion_item -> ID R_ALIAS R_FOR . alias_declaracion S_PUNTOCOMA
    (422) alias_declaracion -> . ID
    (423) alias_declaracion -> . IDEspecial

    ID              shift and go to state 894
    IDEspecial      shift and go to state 896

    alias_declaracion              shift and go to state 895

state 885

    (434) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt . endProcedure dolarEndProcedure
    (424) beginStmt -> beginStmt . beginItem
    (436) endProcedure -> .
    (437) endProcedure -> . R_END S_PUNTOCOMA
    (426) beginItem -> . stmt
    (427) beginItem -> . returnStmt S_PUNTOCOMA
    (428) beginItem -> . asignacionStmt S_PUNTOCOMA
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . procedureStmt
    (16) stmt -> . executePL S_PUNTOCOMA
    (17) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (18) stmt -> . asignacionStmt S_PUNTOCOMA
    (429) returnStmt -> . R_RETURN expresion
    (432) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (433) asignacionStmt -> . ID S_IGUAL expresion
    (46) createStmt -> . R_CREATE createBody
    (395) showStmt -> . R_SHOW R_DATABASES likeOpt
    (279) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (280) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (281) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID ID
    (282) alterStmt -> . R_ALTER R_INDEX ifExists ID R_ALTER ID INTEGER
    (305) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (306) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (307) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString
    (308) dropStmt -> . R_DROP R_FUNCTION ifExists idOrString S_PARIZQ S_PARDER
    (309) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (310) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (382) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (385) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (391) deleteStmt -> . R_DELETE fromCl whereCl
    (392) truncateStmt -> . R_TRUNCATE tableOpt ID
    (398) useStmt -> . R_USE ID
    (315) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (316) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (317) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (318) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (319) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (320) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (321) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (322) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (324) selectStmt -> . R_SELECT selectParams
    (399) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (400) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (434) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (435) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (444) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

  ! shift/reduce conflict for R_END resolved as shift
  ! shift/reduce conflict for R_RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for R_CREATE resolved as shift
  ! shift/reduce conflict for R_SHOW resolved as shift
  ! shift/reduce conflict for R_ALTER resolved as shift
  ! shift/reduce conflict for R_DROP resolved as shift
  ! shift/reduce conflict for R_INSERT resolved as shift
  ! shift/reduce conflict for R_UPDATE resolved as shift
  ! shift/reduce conflict for R_DELETE resolved as shift
  ! shift/reduce conflict for R_TRUNCATE resolved as shift
  ! shift/reduce conflict for R_USE resolved as shift
  ! shift/reduce conflict for R_SELECT resolved as shift
  ! shift/reduce conflict for S_PARIZQ resolved as shift
  ! shift/reduce conflict for R_EXECUTE resolved as shift
  ! shift/reduce conflict for R_IF resolved as shift
    S_DOLAR         reduce using rule 436 (endProcedure -> .)
    $end            reduce using rule 436 (endProcedure -> .)
    R_ELSE          reduce using rule 436 (endProcedure -> .)
    R_ELSIF         reduce using rule 436 (endProcedure -> .)
    R_END           shift and go to state 887
    R_RETURN        shift and go to state 863
    ID              shift and go to state 23
    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 24
    R_INSERT        shift and go to state 26
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 25
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18

  ! R_CREATE        [ reduce using rule 436 (endProcedure -> .) ]
  ! R_SHOW          [ reduce using rule 436 (endProcedure -> .) ]
  ! R_ALTER         [ reduce using rule 436 (endProcedure -> .) ]
  ! R_DROP          [ reduce using rule 436 (endProcedure -> .) ]
  ! R_INSERT        [ reduce using rule 436 (endProcedure -> .) ]
  ! R_UPDATE        [ reduce using rule 436 (endProcedure -> .) ]
  ! R_DELETE        [ reduce using rule 436 (endProcedure -> .) ]
  ! R_TRUNCATE      [ reduce using rule 436 (endProcedure -> .) ]
  ! R_USE           [ reduce using rule 436 (endProcedure -> .) ]
  ! R_SELECT        [ reduce using rule 436 (endProcedure -> .) ]
  ! S_PARIZQ        [ reduce using rule 436 (endProcedure -> .) ]
  ! R_EXECUTE       [ reduce using rule 436 (endProcedure -> .) ]
  ! R_IF            [ reduce using rule 436 (endProcedure -> .) ]
  ! ID              [ reduce using rule 436 (endProcedure -> .) ]
  ! R_END           [ reduce using rule 436 (endProcedure -> .) ]
  ! R_RETURN        [ reduce using rule 436 (endProcedure -> .) ]

    endProcedure                   shift and go to state 897
    beginItem                      shift and go to state 879
    stmt                           shift and go to state 860
    returnStmt                     shift and go to state 861
    asignacionStmt                 shift and go to state 862
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    procedureStmt                  shift and go to state 15
    executePL                      shift and go to state 16
    ifStmt                         shift and go to state 17

state 886

    (435) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure . dolarEndProcedure
    (438) dolarEndProcedure -> .
    (439) dolarEndProcedure -> . S_DOLAR S_DOLAR

  ! shift/reduce conflict for S_DOLAR resolved as shift
    R_CREATE        reduce using rule 438 (dolarEndProcedure -> .)
    R_SHOW          reduce using rule 438 (dolarEndProcedure -> .)
    R_ALTER         reduce using rule 438 (dolarEndProcedure -> .)
    R_DROP          reduce using rule 438 (dolarEndProcedure -> .)
    R_INSERT        reduce using rule 438 (dolarEndProcedure -> .)
    R_UPDATE        reduce using rule 438 (dolarEndProcedure -> .)
    R_DELETE        reduce using rule 438 (dolarEndProcedure -> .)
    R_TRUNCATE      reduce using rule 438 (dolarEndProcedure -> .)
    R_USE           reduce using rule 438 (dolarEndProcedure -> .)
    R_SELECT        reduce using rule 438 (dolarEndProcedure -> .)
    S_PARIZQ        reduce using rule 438 (dolarEndProcedure -> .)
    R_EXECUTE       reduce using rule 438 (dolarEndProcedure -> .)
    R_IF            reduce using rule 438 (dolarEndProcedure -> .)
    ID              reduce using rule 438 (dolarEndProcedure -> .)
    $end            reduce using rule 438 (dolarEndProcedure -> .)
    R_ELSE          reduce using rule 438 (dolarEndProcedure -> .)
    R_ELSIF         reduce using rule 438 (dolarEndProcedure -> .)
    R_END           reduce using rule 438 (dolarEndProcedure -> .)
    R_RETURN        reduce using rule 438 (dolarEndProcedure -> .)
    S_DOLAR         shift and go to state 898

  ! S_DOLAR         [ reduce using rule 438 (dolarEndProcedure -> .) ]

    dolarEndProcedure              shift and go to state 899

state 887

    (437) endProcedure -> R_END . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 900


state 888

    (48) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl .

    S_PUNTOCOMA     reduce using rule 48 (createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl .)


state 889

    (271) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral .

    S_PARDER        reduce using rule 271 (booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral .)


state 890

    (88) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ . idList S_PARDER
    (91) idList -> . idList S_COMA ID
    (92) idList -> . ID

    ID              shift and go to state 381

    idList                         shift and go to state 901

state 891

    (401) bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA . labelEnd
    (430) labelEnd -> .
    (431) labelEnd -> . S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA

  ! shift/reduce conflict for S_DOLAR resolved as shift
    R_CREATE        reduce using rule 430 (labelEnd -> .)
    R_SHOW          reduce using rule 430 (labelEnd -> .)
    R_ALTER         reduce using rule 430 (labelEnd -> .)
    R_DROP          reduce using rule 430 (labelEnd -> .)
    R_INSERT        reduce using rule 430 (labelEnd -> .)
    R_UPDATE        reduce using rule 430 (labelEnd -> .)
    R_DELETE        reduce using rule 430 (labelEnd -> .)
    R_TRUNCATE      reduce using rule 430 (labelEnd -> .)
    R_USE           reduce using rule 430 (labelEnd -> .)
    R_SELECT        reduce using rule 430 (labelEnd -> .)
    S_PARIZQ        reduce using rule 430 (labelEnd -> .)
    R_EXECUTE       reduce using rule 430 (labelEnd -> .)
    R_IF            reduce using rule 430 (labelEnd -> .)
    ID              reduce using rule 430 (labelEnd -> .)
    $end            reduce using rule 430 (labelEnd -> .)
    R_ELSE          reduce using rule 430 (labelEnd -> .)
    R_ELSIF         reduce using rule 430 (labelEnd -> .)
    R_END           reduce using rule 430 (labelEnd -> .)
    R_RETURN        reduce using rule 430 (labelEnd -> .)
    S_DOLAR         shift and go to state 903

  ! S_DOLAR         [ reduce using rule 430 (labelEnd -> .) ]

    labelEnd                       shift and go to state 902

state 892

    (411) declaracion_item -> ID constant_opt types null_opt . default_item S_PUNTOCOMA
    (420) default_item -> . default_opt expresion
    (421) default_item -> .
    (417) default_opt -> . R_DEFAULT
    (418) default_opt -> . S_DOSPUNTOS S_IGUAL
    (419) default_opt -> . S_IGUAL

    S_PUNTOCOMA     reduce using rule 421 (default_item -> .)
    R_DEFAULT       shift and go to state 906
    S_DOSPUNTOS     shift and go to state 907
    S_IGUAL         shift and go to state 908

    default_item                   shift and go to state 904
    default_opt                    shift and go to state 905

state 893

    (415) null_opt -> R_NOT . R_NULL

    R_NULL          shift and go to state 909


state 894

    (422) alias_declaracion -> ID .

    S_PUNTOCOMA     reduce using rule 422 (alias_declaracion -> ID .)


state 895

    (412) declaracion_item -> ID R_ALIAS R_FOR alias_declaracion . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 910


state 896

    (423) alias_declaracion -> IDEspecial .

    S_PUNTOCOMA     reduce using rule 423 (alias_declaracion -> IDEspecial .)


state 897

    (434) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure . dolarEndProcedure
    (438) dolarEndProcedure -> .
    (439) dolarEndProcedure -> . S_DOLAR S_DOLAR

  ! shift/reduce conflict for S_DOLAR resolved as shift
    R_CREATE        reduce using rule 438 (dolarEndProcedure -> .)
    R_SHOW          reduce using rule 438 (dolarEndProcedure -> .)
    R_ALTER         reduce using rule 438 (dolarEndProcedure -> .)
    R_DROP          reduce using rule 438 (dolarEndProcedure -> .)
    R_INSERT        reduce using rule 438 (dolarEndProcedure -> .)
    R_UPDATE        reduce using rule 438 (dolarEndProcedure -> .)
    R_DELETE        reduce using rule 438 (dolarEndProcedure -> .)
    R_TRUNCATE      reduce using rule 438 (dolarEndProcedure -> .)
    R_USE           reduce using rule 438 (dolarEndProcedure -> .)
    R_SELECT        reduce using rule 438 (dolarEndProcedure -> .)
    S_PARIZQ        reduce using rule 438 (dolarEndProcedure -> .)
    R_EXECUTE       reduce using rule 438 (dolarEndProcedure -> .)
    R_IF            reduce using rule 438 (dolarEndProcedure -> .)
    ID              reduce using rule 438 (dolarEndProcedure -> .)
    $end            reduce using rule 438 (dolarEndProcedure -> .)
    R_ELSE          reduce using rule 438 (dolarEndProcedure -> .)
    R_ELSIF         reduce using rule 438 (dolarEndProcedure -> .)
    R_END           reduce using rule 438 (dolarEndProcedure -> .)
    R_RETURN        reduce using rule 438 (dolarEndProcedure -> .)
    S_DOLAR         shift and go to state 898

  ! S_DOLAR         [ reduce using rule 438 (dolarEndProcedure -> .) ]

    dolarEndProcedure              shift and go to state 911

state 898

    (439) dolarEndProcedure -> S_DOLAR . S_DOLAR

    S_DOLAR         shift and go to state 912


state 899

    (435) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .

    R_CREATE        reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_SHOW          reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_ALTER         reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_DROP          reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_INSERT        reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_UPDATE        reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_DELETE        reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_TRUNCATE      reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_USE           reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_SELECT        reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    S_PARIZQ        reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_EXECUTE       reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_IF            reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    ID              reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    $end            reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_ELSE          reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_ELSIF         reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_END           reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_RETURN        reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    S_DOLAR         reduce using rule 435 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)


state 900

    (437) endProcedure -> R_END S_PUNTOCOMA .

    S_DOLAR         reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    R_CREATE        reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    R_SHOW          reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    R_ALTER         reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    R_DROP          reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    R_INSERT        reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    R_DELETE        reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    R_USE           reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    R_SELECT        reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    R_IF            reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    ID              reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    $end            reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    R_ELSE          reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    R_END           reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)
    R_RETURN        reduce using rule 437 (endProcedure -> R_END S_PUNTOCOMA .)


state 901

    (88) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList . S_PARDER
    (91) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 913
    S_COMA          shift and go to state 512


state 902

    (401) bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .

    R_CREATE        reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_SHOW          reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_ALTER         reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_DROP          reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_INSERT        reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_UPDATE        reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_DELETE        reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_TRUNCATE      reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_USE           reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_SELECT        reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    S_PARIZQ        reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_EXECUTE       reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_IF            reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    ID              reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    $end            reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_ELSE          reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_ELSIF         reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_END           reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_RETURN        reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    S_DOLAR         reduce using rule 401 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)


state 903

    (431) labelEnd -> S_DOLAR . S_DOLAR R_LANGUAGE ID S_PUNTOCOMA

    S_DOLAR         shift and go to state 914


state 904

    (411) declaracion_item -> ID constant_opt types null_opt default_item . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 915


state 905

    (420) default_item -> default_opt . expresion
    (135) expresion -> . datatype
    (136) expresion -> . expBool
    (137) expresion -> . S_PARIZQ selectStmt S_PARDER
    (175) datatype -> . datatype O_SUMA datatype
    (176) datatype -> . datatype O_RESTA datatype
    (177) datatype -> . datatype O_PRODUCTO datatype
    (178) datatype -> . datatype O_DIVISION datatype
    (179) datatype -> . datatype O_EXPONENTE datatype
    (180) datatype -> . datatype O_MODULAR datatype
    (181) datatype -> . datatype OC_CONCATENAR datatype
    (182) datatype -> . R_CASE caseList optElse R_END
    (188) datatype -> . O_RESTA datatype
    (189) datatype -> . O_SUMA datatype
    (190) datatype -> . columnName
    (191) datatype -> . literal
    (192) datatype -> . funcCall
    (193) datatype -> . extract
    (194) datatype -> . datePart
    (195) datatype -> . current
    (196) datatype -> . S_PARIZQ datatype S_PARDER
    (250) expBool -> . expBool R_AND expBool
    (251) expBool -> . expBool R_OR expBool
    (252) expBool -> . R_NOT expBool
    (253) expBool -> . S_PARIZQ expBool S_PARDER
    (254) expBool -> . expBool optBoolPredicate
    (255) expBool -> . boolean
    (262) columnName -> . ID
    (263) columnName -> . ID S_PUNTO ID
    (166) literal -> . INTEGER
    (167) literal -> . STRING
    (168) literal -> . DECIMAL
    (169) literal -> . CHARACTER
    (170) literal -> . R_TRUE
    (171) literal -> . R_FALSE
    (172) literal -> . R_NULL
    (138) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (139) funcCall -> . ID S_PARIZQ S_PARDER
    (140) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (141) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (143) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (144) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (145) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (146) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (155) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (161) current -> . R_CURRENT_DATE
    (162) current -> . R_CURRENT_TIME
    (163) current -> . timeStamp
    (245) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (247) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (248) boolean -> . expComp
    (249) boolean -> . expSubq
    (147) timeStamp -> . R_TIMESTAMP STRING
    (148) timeStamp -> . R_INTERVAL STRING
    (197) expComp -> . datatype OL_MENORQUE datatype
    (198) expComp -> . datatype OL_MAYORQUE datatype
    (199) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (200) expComp -> . datatype OL_MENORIGUALQUE datatype
    (201) expComp -> . datatype S_IGUAL datatype
    (202) expComp -> . datatype OL_DISTINTODE datatype
    (203) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (204) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (205) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (206) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (207) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (208) expComp -> . datatype R_ISNULL
    (209) expComp -> . datatype R_NOTNULL
    (210) expComp -> . datatype R_IS R_NULL
    (211) expComp -> . datatype R_IS R_TRUE
    (212) expComp -> . datatype R_IS R_FALSE
    (213) expComp -> . datatype R_IS R_UNKNOWN
    (214) expComp -> . datatype R_IS R_NOT R_NULL
    (215) expComp -> . datatype R_IS R_NOT R_TRUE
    (216) expComp -> . datatype R_IS R_NOT R_FALSE
    (217) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (218) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (238) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (239) expSubq -> . stringExp R_LIKE STRING
    (240) stringExp -> . STRING
    (241) stringExp -> . columnName

    S_PARIZQ        shift and go to state 90
    R_CASE          shift and go to state 93
    O_RESTA         shift and go to state 92
    O_SUMA          shift and go to state 91
    R_NOT           shift and go to state 100
    ID              shift and go to state 132
    INTEGER         shift and go to state 102
    STRING          shift and go to state 103
    DECIMAL         shift and go to state 104
    CHARACTER       shift and go to state 105
    R_TRUE          shift and go to state 106
    R_FALSE         shift and go to state 107
    R_NULL          shift and go to state 108
    R_NOW           shift and go to state 109
    R_COUNT         shift and go to state 110
    R_SUM           shift and go to state 111
    R_PROM          shift and go to state 112
    R_EXTRACT       shift and go to state 113
    R_DATE_PART     shift and go to state 115
    R_CURRENT_DATE  shift and go to state 116
    R_CURRENT_TIME  shift and go to state 117
    R_EXISTS        shift and go to state 118
    R_TIMESTAMP     shift and go to state 121
    R_INTERVAL      shift and go to state 122

    expresion                      shift and go to state 916
    datatype                       shift and go to state 88
    expBool                        shift and go to state 89
    columnName                     shift and go to state 94
    literal                        shift and go to state 95
    funcCall                       shift and go to state 96
    extract                        shift and go to state 97
    datePart                       shift and go to state 98
    current                        shift and go to state 99
    boolean                        shift and go to state 101
    timeStamp                      shift and go to state 114
    expComp                        shift and go to state 119
    expSubq                        shift and go to state 120
    stringExp                      shift and go to state 123

state 906

    (417) default_opt -> R_DEFAULT .

    S_PARIZQ        reduce using rule 417 (default_opt -> R_DEFAULT .)
    R_CASE          reduce using rule 417 (default_opt -> R_DEFAULT .)
    O_RESTA         reduce using rule 417 (default_opt -> R_DEFAULT .)
    O_SUMA          reduce using rule 417 (default_opt -> R_DEFAULT .)
    R_NOT           reduce using rule 417 (default_opt -> R_DEFAULT .)
    ID              reduce using rule 417 (default_opt -> R_DEFAULT .)
    INTEGER         reduce using rule 417 (default_opt -> R_DEFAULT .)
    STRING          reduce using rule 417 (default_opt -> R_DEFAULT .)
    DECIMAL         reduce using rule 417 (default_opt -> R_DEFAULT .)
    CHARACTER       reduce using rule 417 (default_opt -> R_DEFAULT .)
    R_TRUE          reduce using rule 417 (default_opt -> R_DEFAULT .)
    R_FALSE         reduce using rule 417 (default_opt -> R_DEFAULT .)
    R_NULL          reduce using rule 417 (default_opt -> R_DEFAULT .)
    R_NOW           reduce using rule 417 (default_opt -> R_DEFAULT .)
    R_COUNT         reduce using rule 417 (default_opt -> R_DEFAULT .)
    R_SUM           reduce using rule 417 (default_opt -> R_DEFAULT .)
    R_PROM          reduce using rule 417 (default_opt -> R_DEFAULT .)
    R_EXTRACT       reduce using rule 417 (default_opt -> R_DEFAULT .)
    R_DATE_PART     reduce using rule 417 (default_opt -> R_DEFAULT .)
    R_CURRENT_DATE  reduce using rule 417 (default_opt -> R_DEFAULT .)
    R_CURRENT_TIME  reduce using rule 417 (default_opt -> R_DEFAULT .)
    R_EXISTS        reduce using rule 417 (default_opt -> R_DEFAULT .)
    R_TIMESTAMP     reduce using rule 417 (default_opt -> R_DEFAULT .)
    R_INTERVAL      reduce using rule 417 (default_opt -> R_DEFAULT .)


state 907

    (418) default_opt -> S_DOSPUNTOS . S_IGUAL

    S_IGUAL         shift and go to state 917


state 908

    (419) default_opt -> S_IGUAL .

    S_PARIZQ        reduce using rule 419 (default_opt -> S_IGUAL .)
    R_CASE          reduce using rule 419 (default_opt -> S_IGUAL .)
    O_RESTA         reduce using rule 419 (default_opt -> S_IGUAL .)
    O_SUMA          reduce using rule 419 (default_opt -> S_IGUAL .)
    R_NOT           reduce using rule 419 (default_opt -> S_IGUAL .)
    ID              reduce using rule 419 (default_opt -> S_IGUAL .)
    INTEGER         reduce using rule 419 (default_opt -> S_IGUAL .)
    STRING          reduce using rule 419 (default_opt -> S_IGUAL .)
    DECIMAL         reduce using rule 419 (default_opt -> S_IGUAL .)
    CHARACTER       reduce using rule 419 (default_opt -> S_IGUAL .)
    R_TRUE          reduce using rule 419 (default_opt -> S_IGUAL .)
    R_FALSE         reduce using rule 419 (default_opt -> S_IGUAL .)
    R_NULL          reduce using rule 419 (default_opt -> S_IGUAL .)
    R_NOW           reduce using rule 419 (default_opt -> S_IGUAL .)
    R_COUNT         reduce using rule 419 (default_opt -> S_IGUAL .)
    R_SUM           reduce using rule 419 (default_opt -> S_IGUAL .)
    R_PROM          reduce using rule 419 (default_opt -> S_IGUAL .)
    R_EXTRACT       reduce using rule 419 (default_opt -> S_IGUAL .)
    R_DATE_PART     reduce using rule 419 (default_opt -> S_IGUAL .)
    R_CURRENT_DATE  reduce using rule 419 (default_opt -> S_IGUAL .)
    R_CURRENT_TIME  reduce using rule 419 (default_opt -> S_IGUAL .)
    R_EXISTS        reduce using rule 419 (default_opt -> S_IGUAL .)
    R_TIMESTAMP     reduce using rule 419 (default_opt -> S_IGUAL .)
    R_INTERVAL      reduce using rule 419 (default_opt -> S_IGUAL .)


state 909

    (415) null_opt -> R_NOT R_NULL .

    R_DEFAULT       reduce using rule 415 (null_opt -> R_NOT R_NULL .)
    S_DOSPUNTOS     reduce using rule 415 (null_opt -> R_NOT R_NULL .)
    S_IGUAL         reduce using rule 415 (null_opt -> R_NOT R_NULL .)
    S_PUNTOCOMA     reduce using rule 415 (null_opt -> R_NOT R_NULL .)


state 910

    (412) declaracion_item -> ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA .

    ID              reduce using rule 412 (declaracion_item -> ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA .)
    R_BEGIN         reduce using rule 412 (declaracion_item -> ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA .)


state 911

    (434) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .

    R_CREATE        reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_SHOW          reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_ALTER         reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_DROP          reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_INSERT        reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_UPDATE        reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_DELETE        reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_TRUNCATE      reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_USE           reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_SELECT        reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    S_PARIZQ        reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_EXECUTE       reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_IF            reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    ID              reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    $end            reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_ELSE          reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_ELSIF         reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_END           reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_RETURN        reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    S_DOLAR         reduce using rule 434 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)


state 912

    (439) dolarEndProcedure -> S_DOLAR S_DOLAR .

    R_CREATE        reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_SHOW          reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_ALTER         reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_DROP          reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_INSERT        reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_UPDATE        reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_DELETE        reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_TRUNCATE      reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_USE           reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_SELECT        reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    S_PARIZQ        reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_EXECUTE       reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_IF            reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    ID              reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    $end            reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_ELSE          reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_ELSIF         reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_END           reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_RETURN        reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    S_DOLAR         reduce using rule 439 (dolarEndProcedure -> S_DOLAR S_DOLAR .)


state 913

    (88) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .

    S_COMA          reduce using rule 88 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 88 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)
    S_PARDER        reduce using rule 88 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)


state 914

    (431) labelEnd -> S_DOLAR S_DOLAR . R_LANGUAGE ID S_PUNTOCOMA

    R_LANGUAGE      shift and go to state 918


state 915

    (411) declaracion_item -> ID constant_opt types null_opt default_item S_PUNTOCOMA .

    ID              reduce using rule 411 (declaracion_item -> ID constant_opt types null_opt default_item S_PUNTOCOMA .)
    R_BEGIN         reduce using rule 411 (declaracion_item -> ID constant_opt types null_opt default_item S_PUNTOCOMA .)


state 916

    (420) default_item -> default_opt expresion .

    S_PUNTOCOMA     reduce using rule 420 (default_item -> default_opt expresion .)


state 917

    (418) default_opt -> S_DOSPUNTOS S_IGUAL .

    S_PARIZQ        reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_CASE          reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    O_RESTA         reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    O_SUMA          reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_NOT           reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    ID              reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    INTEGER         reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    STRING          reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    DECIMAL         reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    CHARACTER       reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_TRUE          reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_FALSE         reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_NULL          reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_NOW           reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_COUNT         reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_SUM           reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_PROM          reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_EXTRACT       reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_DATE_PART     reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_CURRENT_DATE  reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_CURRENT_TIME  reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_EXISTS        reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_TIMESTAMP     reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_INTERVAL      reduce using rule 418 (default_opt -> S_DOSPUNTOS S_IGUAL .)


state 918

    (431) labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE . ID S_PUNTOCOMA

    ID              shift and go to state 919


state 919

    (431) labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 920


state 920

    (431) labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .

    R_CREATE        reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_SHOW          reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_ALTER         reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_DROP          reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_INSERT        reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_DELETE        reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_USE           reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_SELECT        reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_IF            reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    ID              reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    $end            reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_ELSE          reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_END           reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_RETURN        reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 431 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for R_LIMIT in state 522 resolved as shift
WARNING: shift/reduce conflict for R_END in state 869 resolved as shift
WARNING: shift/reduce conflict for R_RETURN in state 869 resolved as shift
WARNING: shift/reduce conflict for ID in state 869 resolved as shift
WARNING: shift/reduce conflict for R_CREATE in state 869 resolved as shift
WARNING: shift/reduce conflict for R_SHOW in state 869 resolved as shift
WARNING: shift/reduce conflict for R_ALTER in state 869 resolved as shift
WARNING: shift/reduce conflict for R_DROP in state 869 resolved as shift
WARNING: shift/reduce conflict for R_INSERT in state 869 resolved as shift
WARNING: shift/reduce conflict for R_UPDATE in state 869 resolved as shift
WARNING: shift/reduce conflict for R_DELETE in state 869 resolved as shift
WARNING: shift/reduce conflict for R_TRUNCATE in state 869 resolved as shift
WARNING: shift/reduce conflict for R_USE in state 869 resolved as shift
WARNING: shift/reduce conflict for R_SELECT in state 869 resolved as shift
WARNING: shift/reduce conflict for S_PARIZQ in state 869 resolved as shift
WARNING: shift/reduce conflict for R_EXECUTE in state 869 resolved as shift
WARNING: shift/reduce conflict for R_IF in state 869 resolved as shift
WARNING: shift/reduce conflict for R_END in state 885 resolved as shift
WARNING: shift/reduce conflict for R_RETURN in state 885 resolved as shift
WARNING: shift/reduce conflict for ID in state 885 resolved as shift
WARNING: shift/reduce conflict for R_CREATE in state 885 resolved as shift
WARNING: shift/reduce conflict for R_SHOW in state 885 resolved as shift
WARNING: shift/reduce conflict for R_ALTER in state 885 resolved as shift
WARNING: shift/reduce conflict for R_DROP in state 885 resolved as shift
WARNING: shift/reduce conflict for R_INSERT in state 885 resolved as shift
WARNING: shift/reduce conflict for R_UPDATE in state 885 resolved as shift
WARNING: shift/reduce conflict for R_DELETE in state 885 resolved as shift
WARNING: shift/reduce conflict for R_TRUNCATE in state 885 resolved as shift
WARNING: shift/reduce conflict for R_USE in state 885 resolved as shift
WARNING: shift/reduce conflict for R_SELECT in state 885 resolved as shift
WARNING: shift/reduce conflict for S_PARIZQ in state 885 resolved as shift
WARNING: shift/reduce conflict for R_EXECUTE in state 885 resolved as shift
WARNING: shift/reduce conflict for R_IF in state 885 resolved as shift
WARNING: shift/reduce conflict for S_DOLAR in state 886 resolved as shift
WARNING: shift/reduce conflict for S_DOLAR in state 891 resolved as shift
WARNING: shift/reduce conflict for S_DOLAR in state 897 resolved as shift
WARNING: reduce/reduce conflict in state 522 resolved using rule (orderByCl -> <empty>)
WARNING: rejected rule (limitCl -> <empty>) in state 522
WARNING: reduce/reduce conflict in state 881 resolved using rule (stmt -> asignacionStmt S_PUNTOCOMA)
WARNING: rejected rule (beginItem -> asignacionStmt S_PUNTOCOMA) in state 881
WARNING: Rule (beginItem -> asignacionStmt S_PUNTOCOMA) is never reduced
